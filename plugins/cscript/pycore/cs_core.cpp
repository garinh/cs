/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<typename T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */

    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifdef _MSC_VER
    #include <io.h>
    #include <stdarg.h>
    #if defined(_DEBUG) && !defined(DEBUG_PYTHON)
    #undef _DEBUG
    #define RESTORE__DEBUG
    #endif
    #endif
    #include <Python.h>
    #ifdef RESTORE__DEBUG
    #define _DEBUG
    #undef RESTORE__DEBUG
    #endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_AllocatorType swig_types[0]
#define SWIGTYPE_p_CS__Memory__AllocatorMalloc swig_types[1]
#define SWIGTYPE_p_CS__Memory__CustomAllocated swig_types[2]
#define SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t swig_types[3]
#define SWIGTYPE_p_CS__Threading__Condition swig_types[4]
#define SWIGTYPE_p_CS__Threading__Mutex swig_types[5]
#define SWIGTYPE_p_CS__Utility__InternalRefCount swig_types[6]
#define SWIGTYPE_p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t swig_types[7]
#define SWIGTYPE_p_CapacityHandlerType swig_types[8]
#define SWIGTYPE_p_ElementHandlerType swig_types[9]
#define SWIGTYPE_p_FILE swig_types[10]
#define SWIGTYPE_p_FrameBegin3DDraw swig_types[11]
#define SWIGTYPE_p_FramePrinter swig_types[12]
#define SWIGTYPE_p_FrameSignpost_2DConsole swig_types[13]
#define SWIGTYPE_p_FrameSignpost_3D2D swig_types[14]
#define SWIGTYPE_p_FrameSignpost_ConsoleDebug swig_types[15]
#define SWIGTYPE_p_FrameSignpost_DebugFrame swig_types[16]
#define SWIGTYPE_p_FrameSignpost_Logic3D swig_types[17]
#define SWIGTYPE_p_HashType swig_types[18]
#define SWIGTYPE_p_TagType swig_types[19]
#define SWIGTYPE_p_ThisType swig_types[20]
#define SWIGTYPE_p_ValueType swig_types[21]
#define SWIGTYPE_p__1_basetype swig_types[22]
#define SWIGTYPE_p__csKeyCharType swig_types[23]
#define SWIGTYPE_p__csKeyEventType swig_types[24]
#define SWIGTYPE_p__csKeyModifierNumType swig_types[25]
#define SWIGTYPE_p__csKeyModifierType swig_types[26]
#define SWIGTYPE_p__csKeyModifiers swig_types[27]
#define SWIGTYPE_p__csMouseEventType swig_types[28]
#define SWIGTYPE_p__csPyEventHandler swig_types[29]
#define SWIGTYPE_p_bool swig_types[30]
#define SWIGTYPE_p_char swig_types[31]
#define SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t swig_types[32]
#define SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t swig_types[33]
#define SWIGTYPE_p_csArrayCapacityVariableGrow swig_types[34]
#define SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[35]
#define SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[36]
#define SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[37]
#define SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[38]
#define SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[39]
#define SWIGTYPE_p_csArrayThresholdVariable swig_types[40]
#define SWIGTYPE_p_csBox2 swig_types[41]
#define SWIGTYPE_p_csColor swig_types[42]
#define SWIGTYPE_p_csColor4 swig_types[43]
#define SWIGTYPE_p_csCommandEventData swig_types[44]
#define SWIGTYPE_p_csCommandEventHelper swig_types[45]
#define SWIGTYPE_p_csCommandLineHelper swig_types[46]
#define SWIGTYPE_p_csConfigFile swig_types[47]
#define SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[48]
#define SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[49]
#define SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[50]
#define SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[51]
#define SWIGTYPE_p_csEvent swig_types[52]
#define SWIGTYPE_p_csEventHandlerRegistry swig_types[53]
#define SWIGTYPE_p_csEventNameRegistry swig_types[54]
#define SWIGTYPE_p_csFileTime swig_types[55]
#define SWIGTYPE_p_csFlags swig_types[56]
#define SWIGTYPE_p_csHandlerID swig_types[57]
#define SWIGTYPE_p_csInitializer swig_types[58]
#define SWIGTYPE_p_csInputEventHelper swig_types[59]
#define SWIGTYPE_p_csJoystickEventData swig_types[60]
#define SWIGTYPE_p_csJoystickEventHelper swig_types[61]
#define SWIGTYPE_p_csKeyEventData swig_types[62]
#define SWIGTYPE_p_csKeyEventHelper swig_types[63]
#define SWIGTYPE_p_csMouseEventData swig_types[64]
#define SWIGTYPE_p_csMouseEventHelper swig_types[65]
#define SWIGTYPE_p_csObject swig_types[66]
#define SWIGTYPE_p_csPluginRequest swig_types[67]
#define SWIGTYPE_p_csPtrT_iBase_t swig_types[68]
#define SWIGTYPE_p_csPtrT_iKeyComposer_t swig_types[69]
#define SWIGTYPE_p_csPtrT_iObjectRegistryIterator_t swig_types[70]
#define SWIGTYPE_p_csPyEventPlug swig_types[71]
#define SWIGTYPE_p_csRadixSorter swig_types[72]
#define SWIGTYPE_p_csRefArrayT_iObject_t swig_types[73]
#define SWIGTYPE_p_csRefArrayT_iThreadReturn_t swig_types[74]
#define SWIGTYPE_p_csRefCount swig_types[75]
#define SWIGTYPE_p_csRefT_iBase_t swig_types[76]
#define SWIGTYPE_p_csRefT_iDocumentAttribute_t swig_types[77]
#define SWIGTYPE_p_csRefT_iDocumentNodeIterator_t swig_types[78]
#define SWIGTYPE_p_csRefT_iDocumentNode_t swig_types[79]
#define SWIGTYPE_p_csRefT_iEventHandlerRegistry_t swig_types[80]
#define SWIGTYPE_p_csRefT_iEventHandler_t swig_types[81]
#define SWIGTYPE_p_csRefT_iEventNameRegistry_t swig_types[82]
#define SWIGTYPE_p_csRefT_iEvent_t swig_types[83]
#define SWIGTYPE_p_csRefT_iThreadReturn_t swig_types[84]
#define SWIGTYPE_p_csRefT_iView_t swig_types[85]
#define SWIGTYPE_p_csReporterHelper swig_types[86]
#define SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t swig_types[87]
#define SWIGTYPE_p_csString swig_types[88]
#define SWIGTYPE_p_csStringArray swig_types[89]
#define SWIGTYPE_p_csStringBase swig_types[90]
#define SWIGTYPE_p_csStringFastT_36_t swig_types[91]
#define SWIGTYPE_p_csTinyDocumentSystem swig_types[92]
#define SWIGTYPE_p_csTriangle swig_types[93]
#define SWIGTYPE_p_csVector2 swig_types[94]
#define SWIGTYPE_p_csVector3 swig_types[95]
#define SWIGTYPE_p_csVector4 swig_types[96]
#define SWIGTYPE_p_csVertexStatus swig_types[97]
#define SWIGTYPE_p_csWrapPtr swig_types[98]
#define SWIGTYPE_p_double swig_types[99]
#define SWIGTYPE_p_f_p_iBase__p__csPyEventHandler swig_types[100]
#define SWIGTYPE_p_f_p_iBase__p_csConfigFile swig_types[101]
#define SWIGTYPE_p_f_p_iBase__p_csObject swig_types[102]
#define SWIGTYPE_p_f_p_iBase__p_csPyEventPlug swig_types[103]
#define SWIGTYPE_p_f_p_iBase__p_iBase swig_types[104]
#define SWIGTYPE_p_f_p_iBase__p_iCacheManager swig_types[105]
#define SWIGTYPE_p_f_p_iBase__p_iClipper2D swig_types[106]
#define SWIGTYPE_p_f_p_iBase__p_iCommandLineParser swig_types[107]
#define SWIGTYPE_p_f_p_iBase__p_iComponent swig_types[108]
#define SWIGTYPE_p_f_p_iBase__p_iConfigFile swig_types[109]
#define SWIGTYPE_p_f_p_iBase__p_iConfigIterator swig_types[110]
#define SWIGTYPE_p_f_p_iBase__p_iConfigManager swig_types[111]
#define SWIGTYPE_p_f_p_iBase__p_iDataBuffer swig_types[112]
#define SWIGTYPE_p_f_p_iBase__p_iDebugHelper swig_types[113]
#define SWIGTYPE_p_f_p_iBase__p_iDocument swig_types[114]
#define SWIGTYPE_p_f_p_iBase__p_iDocumentAttribute swig_types[115]
#define SWIGTYPE_p_f_p_iBase__p_iDocumentAttributeIterator swig_types[116]
#define SWIGTYPE_p_f_p_iBase__p_iDocumentNode swig_types[117]
#define SWIGTYPE_p_f_p_iBase__p_iDocumentNodeIterator swig_types[118]
#define SWIGTYPE_p_f_p_iBase__p_iDocumentSystem swig_types[119]
#define SWIGTYPE_p_f_p_iBase__p_iEvent swig_types[120]
#define SWIGTYPE_p_f_p_iBase__p_iEventAttributeIterator swig_types[121]
#define SWIGTYPE_p_f_p_iBase__p_iEventCord swig_types[122]
#define SWIGTYPE_p_f_p_iBase__p_iEventHandler swig_types[123]
#define SWIGTYPE_p_f_p_iBase__p_iEventNameRegistry swig_types[124]
#define SWIGTYPE_p_f_p_iBase__p_iEventOutlet swig_types[125]
#define SWIGTYPE_p_f_p_iBase__p_iEventPlug swig_types[126]
#define SWIGTYPE_p_f_p_iBase__p_iEventQueue swig_types[127]
#define SWIGTYPE_p_f_p_iBase__p_iFactory swig_types[128]
#define SWIGTYPE_p_f_p_iBase__p_iFile swig_types[129]
#define SWIGTYPE_p_f_p_iBase__p_iFrameEventSignpost swig_types[130]
#define SWIGTYPE_p_f_p_iBase__p_iJoystickDriver swig_types[131]
#define SWIGTYPE_p_f_p_iBase__p_iKeyComposer swig_types[132]
#define SWIGTYPE_p_f_p_iBase__p_iKeyboardDriver swig_types[133]
#define SWIGTYPE_p_f_p_iBase__p_iMouseDriver swig_types[134]
#define SWIGTYPE_p_f_p_iBase__p_iObject swig_types[135]
#define SWIGTYPE_p_f_p_iBase__p_iObjectIterator swig_types[136]
#define SWIGTYPE_p_f_p_iBase__p_iObjectNameChangeListener swig_types[137]
#define SWIGTYPE_p_f_p_iBase__p_iObjectRegistry swig_types[138]
#define SWIGTYPE_p_f_p_iBase__p_iObjectRegistryIterator swig_types[139]
#define SWIGTYPE_p_f_p_iBase__p_iPath swig_types[140]
#define SWIGTYPE_p_f_p_iBase__p_iPluginIterator swig_types[141]
#define SWIGTYPE_p_f_p_iBase__p_iPluginManager swig_types[142]
#define SWIGTYPE_p_f_p_iBase__p_iReporter swig_types[143]
#define SWIGTYPE_p_f_p_iBase__p_iReporterIterator swig_types[144]
#define SWIGTYPE_p_f_p_iBase__p_iReporterListener swig_types[145]
#define SWIGTYPE_p_f_p_iBase__p_iSCF swig_types[146]
#define SWIGTYPE_p_f_p_iBase__p_iString swig_types[147]
#define SWIGTYPE_p_f_p_iBase__p_iStringArray swig_types[148]
#define SWIGTYPE_p_f_p_iBase__p_iStringSet swig_types[149]
#define SWIGTYPE_p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t swig_types[150]
#define SWIGTYPE_p_f_p_iBase__p_iThreadManager swig_types[151]
#define SWIGTYPE_p_f_p_iBase__p_iThreadReturn swig_types[152]
#define SWIGTYPE_p_f_p_iBase__p_iTriangleMesh swig_types[153]
#define SWIGTYPE_p_f_p_iBase__p_iVFS swig_types[154]
#define SWIGTYPE_p_f_p_iBase__p_iVirtualClock swig_types[155]
#define SWIGTYPE_p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t swig_types[156]
#define SWIGTYPE_p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t swig_types[157]
#define SWIGTYPE_p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t swig_types[158]
#define SWIGTYPE_p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t swig_types[159]
#define SWIGTYPE_p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t swig_types[160]
#define SWIGTYPE_p_float swig_types[161]
#define SWIGTYPE_p_iBase swig_types[162]
#define SWIGTYPE_p_iCacheManager swig_types[163]
#define SWIGTYPE_p_iClipper2D swig_types[164]
#define SWIGTYPE_p_iCommandLineParser swig_types[165]
#define SWIGTYPE_p_iComponent swig_types[166]
#define SWIGTYPE_p_iConfigFile swig_types[167]
#define SWIGTYPE_p_iConfigIterator swig_types[168]
#define SWIGTYPE_p_iConfigManager swig_types[169]
#define SWIGTYPE_p_iDataBuffer swig_types[170]
#define SWIGTYPE_p_iDebugHelper swig_types[171]
#define SWIGTYPE_p_iDocument swig_types[172]
#define SWIGTYPE_p_iDocumentAttribute swig_types[173]
#define SWIGTYPE_p_iDocumentAttributeIterator swig_types[174]
#define SWIGTYPE_p_iDocumentNode swig_types[175]
#define SWIGTYPE_p_iDocumentNodeIterator swig_types[176]
#define SWIGTYPE_p_iDocumentSystem swig_types[177]
#define SWIGTYPE_p_iEvent swig_types[178]
#define SWIGTYPE_p_iEventAttributeIterator swig_types[179]
#define SWIGTYPE_p_iEventCord swig_types[180]
#define SWIGTYPE_p_iEventHandler swig_types[181]
#define SWIGTYPE_p_iEventNameRegistry swig_types[182]
#define SWIGTYPE_p_iEventOutlet swig_types[183]
#define SWIGTYPE_p_iEventPlug swig_types[184]
#define SWIGTYPE_p_iEventQueue swig_types[185]
#define SWIGTYPE_p_iFactory swig_types[186]
#define SWIGTYPE_p_iFile swig_types[187]
#define SWIGTYPE_p_iFrameEventSignpost swig_types[188]
#define SWIGTYPE_p_iGraphics2D swig_types[189]
#define SWIGTYPE_p_iGraphics3D swig_types[190]
#define SWIGTYPE_p_iJob swig_types[191]
#define SWIGTYPE_p_iJoystickDriver swig_types[192]
#define SWIGTYPE_p_iKeyComposer swig_types[193]
#define SWIGTYPE_p_iKeyboardDriver swig_types[194]
#define SWIGTYPE_p_iMouseDriver swig_types[195]
#define SWIGTYPE_p_iObject swig_types[196]
#define SWIGTYPE_p_iObjectIterator swig_types[197]
#define SWIGTYPE_p_iObjectNameChangeListener swig_types[198]
#define SWIGTYPE_p_iObjectRegistry swig_types[199]
#define SWIGTYPE_p_iObjectRegistryIterator swig_types[200]
#define SWIGTYPE_p_iPath swig_types[201]
#define SWIGTYPE_p_iPluginIterator swig_types[202]
#define SWIGTYPE_p_iPluginManager swig_types[203]
#define SWIGTYPE_p_iReporter swig_types[204]
#define SWIGTYPE_p_iReporterIterator swig_types[205]
#define SWIGTYPE_p_iReporterListener swig_types[206]
#define SWIGTYPE_p_iSCF swig_types[207]
#define SWIGTYPE_p_iString swig_types[208]
#define SWIGTYPE_p_iStringArray swig_types[209]
#define SWIGTYPE_p_iStringSet swig_types[210]
#define SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t swig_types[211]
#define SWIGTYPE_p_iSystemOpenManager swig_types[212]
#define SWIGTYPE_p_iThreadManager swig_types[213]
#define SWIGTYPE_p_iThreadReturn swig_types[214]
#define SWIGTYPE_p_iTriangleMesh swig_types[215]
#define SWIGTYPE_p_iVFS swig_types[216]
#define SWIGTYPE_p_iVerbosityManager swig_types[217]
#define SWIGTYPE_p_iVirtualClock swig_types[218]
#define SWIGTYPE_p_int swig_types[219]
#define SWIGTYPE_p_int16_t swig_types[220]
#define SWIGTYPE_p_int64_t swig_types[221]
#define SWIGTYPE_p_int8_t swig_types[222]
#define SWIGTYPE_p_intptr_t swig_types[223]
#define SWIGTYPE_p_long_long swig_types[224]
#define SWIGTYPE_p_p_char swig_types[225]
#define SWIGTYPE_p_p_void swig_types[226]
#define SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t swig_types[227]
#define SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t swig_types[228]
#define SWIGTYPE_p_scfImplementation1T_csObject_iObject_t swig_types[229]
#define SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t swig_types[230]
#define SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t swig_types[231]
#define SWIGTYPE_p_scfInterfaceMetadata swig_types[232]
#define SWIGTYPE_p_scfInterfaceMetadataList swig_types[233]
#define SWIGTYPE_p_size_t swig_types[234]
#define SWIGTYPE_p_uint16_t swig_types[235]
#define SWIGTYPE_p_uint32_t swig_types[236]
#define SWIGTYPE_p_uint64_t swig_types[237]
#define SWIGTYPE_p_uint8_t swig_types[238]
#define SWIGTYPE_p_unsigned_int swig_types[239]
#define SWIGTYPE_p_unsigned_long swig_types[240]
#define SWIGTYPE_p_unsigned_long_long swig_types[241]
#define SWIGTYPE_p_utf32_char swig_types[242]
#define SWIGTYPE_p_void swig_types[243]
static swig_type_info *swig_types[245];
static swig_module_info swig_module = {swig_types, 244, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _core.so
  ------------------------------------------------*/
#define SWIG_init SWIG_init_core

#define SWIG_name    "_core"

#define SWIGVERSION 0x010336 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


#include "csgeom.h"
#include "cstool/initapp.h"
#include "csutil.h"



  // This pointer wrapper can be used to prevent code-bloat by macros
  // acting as template functions.  Examples are SCF_QUERY_INTERFACE()
  // and CS_QUERY_REGISTRY().  Also note that CS should never need to
  // use virtual inheritance as long as it has SCF.
  //
  // Ref - A managed reference to the iBase pointer of the wrapped
  //    interface.
  // Type
  //    The SCF interface name which this pointer represents (for
  //    instance, "iEngine").
  // Version - The version of the interface this pointer represents.

  struct csWrapPtr
  {
    csRef<iBase> Ref;
    const char *Type;
    scfInterfaceVersion Version;
    csWrapPtr (const char *t, scfInterfaceVersion v, csPtr<iBase> r)
    : Ref (r), Type (t), Version(v) {}
    csWrapPtr (const char *t, scfInterfaceVersion v, csRef<iBase> r)
    : Ref (r), Type (t), Version(v) {}
    csWrapPtr (const csWrapPtr &p)
    : Ref (p.Ref), Type (p.Type), Version(p.Version) {}
  };



#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
  if (PyString_Check(obj)) {
    char *cstr; Py_ssize_t len;
    PyString_AsStringAndSize(obj, &cstr, &len);
    if (cptr)  {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
	*cptr = PyString_AsString(obj);
      }
    }
    if (psize) *psize = len + 1;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





CS_EXPORT_SYM PyObject *
_csRef_to_Python (const csRef<iBase> & ref, void * ptr, swig_type_info *name)
{
  if (!ref.IsValid())
  {
    Py_INCREF(Py_None);
    return Py_None;
  }
  ref->IncRef();
  return SWIG_NewPointerObj((void *)ptr, name, 1);
}


PyObject *
_csWrapPtr_to_Python (const csWrapPtr & wp)
{
  if (!wp.Ref.IsValid())
  {
    Py_INCREF(Py_None);
    return Py_None;
  }
  iBase * ibase = (iBase *)wp.Ref;
  void * ptr = ibase->QueryInterface(iSCF::SCF->GetInterfaceID(wp.Type), wp.Version);
  // ibase->DecRef(); // Undo IncRef from QueryInterface

  // This is a bit tricky: We want the generated Python 'result' object
  // to own one reference to the wrapped object, so we want to call
  // Python's iBase.IncRef() to gain that reference. In order to do this,
  // we create a second Python object (an iBase) and invoke its IncRef()
  // method. This IncRef() is done on the Python side so that Python code
  // can override IncRef() if needed. Note carefully that this means we
  // are actually creating _two_ Python objects, and each Python object
  // will invoke DecRef() on the wrapped pointer at destruction time. (We
  // destroy the iBase object manually below; and the 'result' object
  // gets destroyed when it goes out of scope in the Python program.)
  // Because DecRef() is being invoked twice (once for each Python
  // object), we must ensure that IncRef() is invoked twice, hence the
  // extra C++ `ibase->IncRef()'. (We don't bother doing this on the
  // Python side because this reference count manipulation is for our own
  // internal correctness.)

  CS_ALLOC_STACK_ARRAY(char, type_name, strlen(wp.Type) + 3);
  strcat(strcpy(type_name, wp.Type), " *");
  PyObject *result = SWIG_NewPointerObj(ptr, SWIG_TypeQuery(type_name), 1);
//  PyObject * ibase_obj = SWIG_NewPointerObj (
//    ptr, SWIG_TypeQuery(type_name), 1);
//  PyObject * res_obj = PyObject_CallMethod(ibase_obj, "IncRef", "()");
//  if (!res_obj)
//  {
//    // Calling Python IncRef() failed; something wrong here.
//    Py_XDECREF(result);
//    result = 0;
//  }
//  Py_XDECREF(ibase_obj);
//  Py_XDECREF(res_obj);
  return result;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


void SetCoreSCFPointer(iSCF *scf_pointer)
{
  iSCF::SCF = scf_pointer;
}

SWIGINTERN size_t scfInterfaceMetadataList___len__(scfInterfaceMetadataList *self){ return self->metadataCount; }
SWIGINTERN scfInterfaceMetadata scfInterfaceMetadataList___getitem__(scfInterfaceMetadataList const *self,size_t i){ return self->metadata[i]; }
SWIGINTERN csWrapPtr iBase_QueryInterface(iBase *self,char const *iface,int iface_ver){
    if (self->QueryInterface(iSCF::SCF->GetInterfaceID(iface), iface_ver))
      return csWrapPtr (iface, iface_ver, csPtr<iBase> (self));
    else
      return csWrapPtr (iface, iface_ver, csPtr<iBase> (0));
  }
SWIGINTERN int iBase_scfGetVersion(){ return scfInterfaceTraits<iBase>::GetVersion(); }

SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}

SWIGINTERN int iSCF_scfGetVersion(){ return scfInterfaceTraits<iSCF>::GetVersion(); }
SWIGINTERN void delete_iSCF(iSCF *self){ if (self) self->DecRef (); }
SWIGINTERN int iFactory_scfGetVersion(){ return scfInterfaceTraits<iFactory>::GetVersion(); }
SWIGINTERN void delete_iFactory(iFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int iDebugHelper_scfGetVersion(){ return scfInterfaceTraits<iDebugHelper>::GetVersion(); }
SWIGINTERN void delete_iDebugHelper(iDebugHelper *self){ if (self) self->DecRef (); }
SWIGINTERN int iCommandLineParser_scfGetVersion(){ return scfInterfaceTraits<iCommandLineParser>::GetVersion(); }
SWIGINTERN void delete_iCommandLineParser(iCommandLineParser *self){ if (self) self->DecRef (); }

SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}

SWIGINTERN csColor csColor_operator_Sa_(csColor const *self,csColor const &c){ return *self + c; }
SWIGINTERN csColor csColor_operator_Ss_(csColor const *self,csColor const &c){ return *self - c; }
SWIGINTERN csColor csColor___rmul__(csColor const *self,float f){ return f * *self; }
SWIGINTERN int iStringSet_scfGetVersion(){ return scfInterfaceTraits<iStringSet>::GetVersion(); }
SWIGINTERN void delete_iStringSet(iStringSet *self){ if (self) self->DecRef (); }
SWIGINTERN int csSet_Sl_csStringID_Sg____len__(csSet< csStringID > *self){return self->GetSize();}
SWIGINTERN bool csSet_Sl_csStringID_Sg____contains__(csSet< csStringID > *self,csStringID o){return self->Contains(o);}
SWIGINTERN void csSet_Sl_csStringID_Sg__append(csSet< csStringID > *self,csStringID o){return self->Add(o);}
SWIGINTERN bool csSet_Sl_csStringID_Sg____delitem__(csSet< csStringID > *self,csStringID o){ return self->Delete(o);}
SWIGINTERN int iReporterListener_scfGetVersion(){ return scfInterfaceTraits<iReporterListener>::GetVersion(); }
SWIGINTERN void delete_iReporterListener(iReporterListener *self){ if (self) self->DecRef (); }
SWIGINTERN int iReporterIterator_scfGetVersion(){ return scfInterfaceTraits<iReporterIterator>::GetVersion(); }
SWIGINTERN void delete_iReporterIterator(iReporterIterator *self){ if (self) self->DecRef (); }
SWIGINTERN int iReporter_scfGetVersion(){ return scfInterfaceTraits<iReporter>::GetVersion(); }
SWIGINTERN void delete_iReporter(iReporter *self){ if (self) self->DecRef (); }
SWIGINTERN int iComponent_scfGetVersion(){ return scfInterfaceTraits<iComponent>::GetVersion(); }
SWIGINTERN void delete_iComponent(iComponent *self){ if (self) self->DecRef (); }
SWIGINTERN int iCacheManager_scfGetVersion(){ return scfInterfaceTraits<iCacheManager>::GetVersion(); }
SWIGINTERN void delete_iCacheManager(iCacheManager *self){ if (self) self->DecRef (); }

SWIGINTERNINLINE PyObject *
SWIG_From_char  (char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}

SWIGINTERN int iFile_scfGetVersion(){ return scfInterfaceTraits<iFile>::GetVersion(); }
SWIGINTERN void delete_iFile(iFile *self){ if (self) self->DecRef (); }
SWIGINTERN int iVFS_scfGetVersion(){ return scfInterfaceTraits<iVFS>::GetVersion(); }
SWIGINTERN void delete_iVFS(iVFS *self){ if (self) self->DecRef (); }
SWIGINTERN csWrapPtr iObject_GetChild__SWIG_0(iObject *self,char const *iface,int iface_ver,char const *name=0){
    return csWrapPtr (iface, iface_ver, csRef<iBase> (
      self->GetChild(iSCF::SCF->GetInterfaceID (iface), iface_ver, name)));
  }
SWIGINTERN int iObject_scfGetVersion(){ return scfInterfaceTraits<iObject>::GetVersion(); }
SWIGINTERN void delete_iObject(iObject *self){ if (self) self->DecRef (); }
SWIGINTERN int iObjectIterator_scfGetVersion(){ return scfInterfaceTraits<iObjectIterator>::GetVersion(); }
SWIGINTERN void delete_iObjectIterator(iObjectIterator *self){ if (self) self->DecRef (); }
SWIGINTERN csWrapPtr iObjectRegistry_Get__SWIG_1(iObjectRegistry *self,char const *iface,int iface_ver){
    csPtr<iBase> b (self->Get(iface, iSCF::SCF->GetInterfaceID(iface), 
                                iface_ver));
    return csWrapPtr (iface, iface_ver, b);
  }
SWIGINTERN csWrapPtr iObjectRegistry_Get__SWIG_2(iObjectRegistry *self,char const *tag,char const *iface,int iface_ver){
    csPtr<iBase> b (self->Get(tag, iSCF::SCF->GetInterfaceID(iface),
                                iface_ver));
    return csWrapPtr (iface, iface_ver, b);
  }
SWIGINTERN int iObjectRegistry_scfGetVersion(){ return scfInterfaceTraits<iObjectRegistry>::GetVersion(); }
SWIGINTERN void delete_iObjectRegistry(iObjectRegistry *self){ if (self) self->DecRef (); }
SWIGINTERN int iVirtualClock_scfGetVersion(){ return scfInterfaceTraits<iVirtualClock>::GetVersion(); }
SWIGINTERN void delete_iVirtualClock(iVirtualClock *self){ if (self) self->DecRef (); }
SWIGINTERN int iEventAttributeIterator_scfGetVersion(){ return scfInterfaceTraits<iEventAttributeIterator>::GetVersion(); }
SWIGINTERN void delete_iEventAttributeIterator(iEventAttributeIterator *self){ if (self) self->DecRef (); }
SWIGINTERN csEventError iEvent_RetrieveString(iEvent *self,char const *name,char *&v){
		return self->Retrieve(name,(const char *&)v);
	}
SWIGINTERN int iEvent_scfGetVersion(){ return scfInterfaceTraits<iEvent>::GetVersion(); }
SWIGINTERN void delete_iEvent(iEvent *self){ if (self) self->DecRef (); }
SWIGINTERN int iEventPlug_scfGetVersion(){ return scfInterfaceTraits<iEventPlug>::GetVersion(); }
SWIGINTERN void delete_iEventPlug(iEventPlug *self){ if (self) self->DecRef (); }
SWIGINTERN int iEventOutlet_scfGetVersion(){ return scfInterfaceTraits<iEventOutlet>::GetVersion(); }
SWIGINTERN void delete_iEventOutlet(iEventOutlet *self){ if (self) self->DecRef (); }
SWIGINTERN unsigned int csKeyModifiers___getitem__(csKeyModifiers const *self,size_t i){
      if (i<csKeyModifierTypeLast)
          return self->modifiers[i];
      return 0;
  }
SWIGINTERN int iEventQueue_scfGetVersion(){ return scfInterfaceTraits<iEventQueue>::GetVersion(); }
SWIGINTERN void delete_iEventQueue(iEventQueue *self){ if (self) self->DecRef (); }
SWIGINTERN int iEventNameRegistry_scfGetVersion(){ return scfInterfaceTraits<iEventNameRegistry>::GetVersion(); }
SWIGINTERN void delete_iEventNameRegistry(iEventNameRegistry *self){ if (self) self->DecRef (); }
SWIGINTERN int iEventHandler_scfGetVersion(){ return scfInterfaceTraits<iEventHandler>::GetVersion(); }
SWIGINTERN void delete_iEventHandler(iEventHandler *self){ if (self) self->DecRef (); }
SWIGINTERN int iPluginIterator_scfGetVersion(){ return scfInterfaceTraits<iPluginIterator>::GetVersion(); }
SWIGINTERN void delete_iPluginIterator(iPluginIterator *self){ if (self) self->DecRef (); }
SWIGINTERN csWrapPtr iPluginManager_LoadPlugin__SWIG_0(iPluginManager *self,char const *id,char const *iface,int iface_ver,bool init=true,bool report=true){
    return csWrapPtr (iface, iface_ver, csPtr<iBase> (self->LoadPlugin (id,
                                init,report)));
  }
SWIGINTERN int iPluginManager_scfGetVersion(){ return scfInterfaceTraits<iPluginManager>::GetVersion(); }
SWIGINTERN void delete_iPluginManager(iPluginManager *self){ if (self) self->DecRef (); }

SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}

SWIGINTERN int iPath_scfGetVersion(){ return scfInterfaceTraits<iPath>::GetVersion(); }
SWIGINTERN void delete_iPath(iPath *self){ if (self) self->DecRef (); }
SWIGINTERN csVector3 *iTriangleMesh_GetVertexByIndex(iTriangleMesh *self,int index){ return &(self->GetVertices()[index]); }
SWIGINTERN csTriangle *iTriangleMesh_GetTriangleByIndex(iTriangleMesh *self,int index){ return &(self->GetTriangles()[index]); }
SWIGINTERN int iTriangleMesh_scfGetVersion(){ return scfInterfaceTraits<iTriangleMesh>::GetVersion(); }
SWIGINTERN void delete_iTriangleMesh(iTriangleMesh *self){ if (self) self->DecRef (); }
SWIGINTERN bool iKeyboardDriver_GetKeyState__SWIG_1(iKeyboardDriver *self,char const *key){ return self->GetKeyState ((int) key[0]); }
SWIGINTERN int iKeyboardDriver_scfGetVersion(){ return scfInterfaceTraits<iKeyboardDriver>::GetVersion(); }
SWIGINTERN void delete_iKeyboardDriver(iKeyboardDriver *self){ if (self) self->DecRef (); }
SWIGINTERN int iMouseDriver_scfGetVersion(){ return scfInterfaceTraits<iMouseDriver>::GetVersion(); }
SWIGINTERN void delete_iMouseDriver(iMouseDriver *self){ if (self) self->DecRef (); }
SWIGINTERN int iJoystickDriver_scfGetVersion(){ return scfInterfaceTraits<iJoystickDriver>::GetVersion(); }
SWIGINTERN void delete_iJoystickDriver(iJoystickDriver *self){ if (self) self->DecRef (); }
SWIGINTERN int iConfigFile_scfGetVersion(){ return scfInterfaceTraits<iConfigFile>::GetVersion(); }
SWIGINTERN void delete_iConfigFile(iConfigFile *self){ if (self) self->DecRef (); }
SWIGINTERN int iConfigIterator_scfGetVersion(){ return scfInterfaceTraits<iConfigIterator>::GetVersion(); }
SWIGINTERN void delete_iConfigIterator(iConfigIterator *self){ if (self) self->DecRef (); }
SWIGINTERN int iConfigManager_scfGetVersion(){ return scfInterfaceTraits<iConfigManager>::GetVersion(); }
SWIGINTERN void delete_iConfigManager(iConfigManager *self){ if (self) self->DecRef (); }
SWIGINTERN char const *iStringArray___getitem__(iStringArray *self,size_t n){return self->Get(n);}
SWIGINTERN bool iStringArray___contains__(iStringArray *self,char const *obj){
		if (self->Find(obj) == 
				(size_t)csArrayItemNotFound)
			return false;
		return true;
	}
SWIGINTERN bool iStringArray___delitem__(iStringArray *self,size_t n){ return self->DeleteIndex(n); }
SWIGINTERN int iStringArray___len__(iStringArray *self){ return self->GetSize(); }
SWIGINTERN void iStringArray_append(iStringArray *self,char const *e){ self->Push(e); }
SWIGINTERN int iStringArray_scfGetVersion(){ return scfInterfaceTraits<iStringArray>::GetVersion(); }
SWIGINTERN void delete_iStringArray(iStringArray *self){ if (self) self->DecRef (); }
SWIGINTERN int iDocumentAttributeIterator_scfGetVersion(){ return scfInterfaceTraits<iDocumentAttributeIterator>::GetVersion(); }
SWIGINTERN void delete_iDocumentAttributeIterator(iDocumentAttributeIterator *self){ if (self) self->DecRef (); }
SWIGINTERN int iDocumentAttribute_scfGetVersion(){ return scfInterfaceTraits<iDocumentAttribute>::GetVersion(); }
SWIGINTERN void delete_iDocumentAttribute(iDocumentAttribute *self){ if (self) self->DecRef (); }
SWIGINTERN int iDocumentNodeIterator_scfGetVersion(){ return scfInterfaceTraits<iDocumentNodeIterator>::GetVersion(); }
SWIGINTERN void delete_iDocumentNodeIterator(iDocumentNodeIterator *self){ if (self) self->DecRef (); }
SWIGINTERN int iDocumentNode_scfGetVersion(){ return scfInterfaceTraits<iDocumentNode>::GetVersion(); }
SWIGINTERN void delete_iDocumentNode(iDocumentNode *self){ if (self) self->DecRef (); }
SWIGINTERN scfString *iDocument_Write__SWIG_3(iDocument *self){
     scfString *dest_str = new scfString();
     self->Write(dest_str);
     return dest_str;
  }
SWIGINTERN int iDocument_scfGetVersion(){ return scfInterfaceTraits<iDocument>::GetVersion(); }
SWIGINTERN void delete_iDocument(iDocument *self){ if (self) self->DecRef (); }
SWIGINTERN int iDocumentSystem_scfGetVersion(){ return scfInterfaceTraits<iDocumentSystem>::GetVersion(); }
SWIGINTERN void delete_iDocumentSystem(iDocumentSystem *self){ if (self) self->DecRef (); }
SWIGINTERN PyObject *iDataBuffer_AsBuffer(iDataBuffer *self){
        return PyBuffer_FromReadWriteMemory(self->GetData(),self->GetSize()*sizeof( char ));
    }
SWIGINTERN int iDataBuffer_scfGetVersion(){ return scfInterfaceTraits<iDataBuffer>::GetVersion(); }
SWIGINTERN void delete_iDataBuffer(iDataBuffer *self){ if (self) self->DecRef (); }

  /// note that these values are only valid until the next call.
  csMouseEventData * iEvent_Mouse_get (iEvent * event)
  { 
    static csMouseEventData p; 
    if(!csMouseEventHelper::GetEventData(event, p)) return 0;
    return &p; 
  }
  csJoystickEventData * iEvent_Joystick_get (iEvent * event)
  { 
    static csJoystickEventData p; 
    if(!csJoystickEventHelper::GetEventData(event, p)) return 0;
    return &p; 
  }
  csCommandEventData * iEvent_Command_get (iEvent * event)
  { 
    static csCommandEventData p; 
    if(!csCommandEventHelper::GetEventData(event, p)) return 0;
    return &p; 
  }


  csPtr<iBase> CS_LOAD_PLUGIN_ALWAYS (iPluginManager *p, const char *i)
  {
    printf("CS_LOAD_PLUGIN_ALWAYS is deprecated, use \
csLoadPluginAlways instead\n");
    csRef<iComponent> c (csLoadPluginAlways(p,i));
    csRef<iBase> b ((iBase*)c);
    return csPtr<iBase> (b);
  }


#undef SCF_QUERY_INTERFACE
#undef SCF_QUERY_INTERFACE_SAFE
#undef CS_QUERY_REGISTRY
#undef CS_QUERY_REGISTRY_TAG_INTERFACE
#undef CS_QUERY_PLUGIN_CLASS
#undef CS_LOAD_PLUGIN
#undef CS_GET_CHILD_OBJECT
#undef CS_GET_NAMED_CHILD_OBJECT
#undef CS_GET_FIRST_NAMED_CHILD_OBJECT

csWrapPtr CS_QUERY_REGISTRY (iObjectRegistry *reg, const char *iface,
  int iface_ver)
{
  printf("CS_QUERY_REGISTRY is deprecated, use \
iObjectRegistry->Get instead\n");
  csPtr<iBase> b (reg->Get(iface, iSCF::SCF->GetInterfaceID(iface), iface_ver));
  return csWrapPtr (iface, iface_ver, b);
}


csWrapPtr CS_QUERY_REGISTRY_TAG_INTERFACE (iObjectRegistry *reg,
  const char *tag, const char *iface, int iface_ver)
{
  printf("CS_QUERY_REGISTRY_TAG_INTERFACE is deprecated, use \
iObjectRegistry->Get instead\n");
  csPtr<iBase> b (reg->Get(tag, iSCF::SCF->GetInterfaceID(iface), iface_ver));
  return csWrapPtr (iface, iface_ver, b);
}

csWrapPtr SCF_QUERY_INTERFACE (iBase *obj, const char *iface, int iface_ver)
{
  // This call to QueryInterface ensures that IncRef is called and that
  // the object supports the interface.  However, for type safety and
  // object layout reasons the void pointer returned by QueryInterface
  // can't be wrapped inside the csWrapPtr so obj must be wrapped.
  printf("SCF_QUERY_INTERFACE is deprecated, use \
object->QueryInterface instead\n");
  if (obj->QueryInterface(iSCF::SCF->GetInterfaceID(iface), iface_ver))
    return csWrapPtr (iface, iface_ver, csPtr<iBase> (obj));
  else
    return csWrapPtr (iface, iface_ver, csPtr<iBase> (0));
}

csWrapPtr SCF_QUERY_INTERFACE_SAFE (iBase *obj, const char *iface,
  int iface_ver)
{
  printf("SCF_QUERY_INTERFACE_SAFE is deprecated, use \
object->QueryInterface instead\n");
  if (!obj)
    return csWrapPtr (iface, iface_ver, csPtr<iBase> (0));

  // This call to QueryInterface ensures that IncRef is called and that
  // the object supports the interface.  However, for type safety and
  // object layout reasons the void pointer returned by QueryInterface
  // can't be wrapped inside the csWrapPtr so obj must be wrapped.
  if (obj->QueryInterface(iSCF::SCF->GetInterfaceID(iface), iface_ver))
    return csWrapPtr (iface, iface_ver, csPtr<iBase> (obj));
  else
    return csWrapPtr (iface, iface_ver, csPtr<iBase> (0));
}

csWrapPtr CS_QUERY_PLUGIN_CLASS (iPluginManager *obj, const char *id,
  const char *iface, int iface_ver)
{
  printf("CS_QUERY_PLUGIN_CLASS is deprecated, use \
iPluginManager->QueryPlugin instead\n");
  return csWrapPtr (iface, iface_ver,
    csPtr<iBase> (obj->QueryPlugin (id, iface, iface_ver)));
}

csWrapPtr CS_LOAD_PLUGIN (iPluginManager *obj, const char *id,
  const char *iface, int iface_ver)
{
  printf("CS_LOAD_PLUGIN is deprecated, use \
iPluginManager->LoadPlugin instead\n");
  return csWrapPtr (iface, iface_ver, csPtr<iBase> (obj->LoadPlugin (id)));
}

csWrapPtr CS_GET_CHILD_OBJECT (iObject *obj, const char *iface, int iface_ver)
{
  printf("CS_GET_CHILD_OBJECT is deprecated, use \
object->GetChild instead\n");
  return csWrapPtr (iface, iface_ver, csRef<iBase> (
    obj->GetChild(iSCF::SCF->GetInterfaceID (iface), iface_ver)));
}

csWrapPtr CS_GET_NAMED_CHILD_OBJECT (iObject *obj, const char *iface,
  int iface_ver, const char *name)
{
  printf("CS_GET_NAMED_CHILD_OBJECT is deprecated, use \
object->GetChild instead\n");
  return csWrapPtr (iface, iface_ver, csRef<iBase> (
    obj->GetChild(iSCF::SCF->GetInterfaceID (iface), iface_ver, name)));
}

csWrapPtr CS_GET_FIRST_NAMED_CHILD_OBJECT (iObject *obj, const char *iface,
  int iface_ver, const char *name)
{
  printf("CS_GET_FIRST_NAMED_CHILD_OBJECT is deprecated, use \
object->GetChild instead\n");
  return csWrapPtr (iface, iface_ver, csRef<iBase> (
    obj->GetChild(iSCF::SCF->GetInterfaceID (iface), iface_ver, name, true)));
}


  struct csPyEventPlug : public scfImplementation1<csPyEventPlug,iEventPlug>
  {
    csPyEventPlug () : scfImplementationType(this) { }
    virtual ~csPyEventPlug () { }
    virtual unsigned GetPotentiallyConflictingEvents () { return CSEVTYPE_Joystick|CSEVTYPE_Mouse|CSEVTYPE_Keyboard; }
    virtual unsigned QueryEventPriority (unsigned) { return 110; }
  };




  struct _csPyEventHandler : public scfImplementation1<_csPyEventHandler, iEventHandler>
  {
    _csPyEventHandler (PyObject * obj) : scfImplementationType(this), _pySelf(obj)
    { }
    virtual ~_csPyEventHandler ()
    { }
    virtual bool HandleEvent (iEvent & event)
    {
      PyObject * event_obj = SWIG_NewPointerObj(
        (void *) &event, SWIG_TypeQuery("iEvent *"), 0
      );
      PyObject * result = PyObject_CallMethod(_pySelf, "HandleEvent", "(O)",
        event_obj
      );
      Py_DECREF(event_obj);
      if (!result)
      {
        if (PyErr_Occurred ())
                PyErr_Print ();
        return false;
      }
      bool res = PyInt_AsLong(result);
      Py_DECREF(result);
      return res;
    }

  static const char * StaticHandlerName() {return "crystalspace.cspython";};
  static const csHandlerID StaticID(csRef<iEventHandlerRegistry> &reg) 
  { return reg->GetGenericID(StaticHandlerName()); }			;
  virtual const char * GenericName() const		
  { return StaticHandlerName(); }					;
  virtual csHandlerID GenericID(csRef<iEventHandlerRegistry> &reg) const 
  { return StaticID(reg); };


  virtual const csHandlerID * GenericPrec (		
    csRef<iEventHandlerRegistry> &, csRef<iEventNameRegistry> &, 	
    csEventID) const { return 0; }	
  virtual const csHandlerID * GenericSucc (		
    csRef<iEventHandlerRegistry> &, csRef<iEventNameRegistry> &, 	
    csEventID) const { return 0; }

  virtual const csHandlerID * InstancePrec (		
      csRef<iEventHandlerRegistry> &r1, csRef<iEventNameRegistry> &r2, 	
    csEventID e) const { return GenericPrec(r1, r2, e); } 
  virtual const csHandlerID * InstanceSucc (		
    csRef<iEventHandlerRegistry> &r1, csRef<iEventNameRegistry> &r2, 	
    csEventID e) const { return GenericSucc(r1, r2, e); }

  private:
    PyObject * _pySelf;
  };




#ifdef __cplusplus
extern "C" {
#endif

// Not `static' because it is published for use by other clients in same DLL.
CS_EXPORT_SYM PyObject* csWrapTypedObject(void* objectptr, const char *typetag,
  int own)
{
  swig_type_info *ti = SWIG_TypeQuery (typetag);
  PyObject *obj = SWIG_NewPointerObj (objectptr, ti, own);
  return obj;
}
#ifdef __cplusplus
}
#endif


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_csWrapPtr_Ref_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csWrapPtr *arg1 = (csWrapPtr *) 0 ;
  csRef< iBase > *arg2 = (csRef< iBase > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csWrapPtr_Ref_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csWrapPtr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csWrapPtr_Ref_set" "', argument " "1"" of type '" "csWrapPtr *""'"); 
  }
  arg1 = reinterpret_cast< csWrapPtr * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csRefT_iBase_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csWrapPtr_Ref_set" "', argument " "2"" of type '" "csRef< iBase > *""'"); 
  }
  arg2 = reinterpret_cast< csRef< iBase > * >(argp2);
  if (arg1) (arg1)->Ref = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csWrapPtr_Ref_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csWrapPtr *arg1 = (csWrapPtr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csRef< iBase > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csWrapPtr_Ref_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csWrapPtr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csWrapPtr_Ref_get" "', argument " "1"" of type '" "csWrapPtr *""'"); 
  }
  arg1 = reinterpret_cast< csWrapPtr * >(argp1);
  result = (csRef< iBase > *)& ((arg1)->Ref);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRefT_iBase_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csWrapPtr_Type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csWrapPtr *arg1 = (csWrapPtr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csWrapPtr_Type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csWrapPtr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csWrapPtr_Type_get" "', argument " "1"" of type '" "csWrapPtr *""'"); 
  }
  arg1 = reinterpret_cast< csWrapPtr * >(argp1);
  result = (char *) ((arg1)->Type);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csWrapPtr_Version_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csWrapPtr *arg1 = (csWrapPtr *) 0 ;
  scfInterfaceVersion arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csWrapPtr_Version_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csWrapPtr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csWrapPtr_Version_set" "', argument " "1"" of type '" "csWrapPtr *""'"); 
  }
  arg1 = reinterpret_cast< csWrapPtr * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csWrapPtr_Version_set" "', argument " "2"" of type '" "scfInterfaceVersion""'");
  } 
  arg2 = static_cast< scfInterfaceVersion >(val2);
  if (arg1) (arg1)->Version = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csWrapPtr_Version_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csWrapPtr *arg1 = (csWrapPtr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceVersion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csWrapPtr_Version_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csWrapPtr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csWrapPtr_Version_get" "', argument " "1"" of type '" "csWrapPtr *""'"); 
  }
  arg1 = reinterpret_cast< csWrapPtr * >(argp1);
  result = (scfInterfaceVersion) ((arg1)->Version);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csWrapPtr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  scfInterfaceVersion arg2 ;
  SwigValueWrapper< csPtr< iBase > > arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csWrapPtr *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csWrapPtr",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csWrapPtr" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csWrapPtr" "', argument " "2"" of type '" "scfInterfaceVersion""'");
  } 
  arg2 = static_cast< scfInterfaceVersion >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPtrT_iBase_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csWrapPtr" "', argument " "3"" of type '" "csPtr< iBase >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csWrapPtr" "', argument " "3"" of type '" "csPtr< iBase >""'");
    } else {
      csPtr< iBase > * temp = reinterpret_cast< csPtr< iBase > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (csWrapPtr *)new csWrapPtr((char const *)arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csWrapPtr, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csWrapPtr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  scfInterfaceVersion arg2 ;
  SwigValueWrapper< csRef< iBase > > arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csWrapPtr *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csWrapPtr",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csWrapPtr" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csWrapPtr" "', argument " "2"" of type '" "scfInterfaceVersion""'");
  } 
  arg2 = static_cast< scfInterfaceVersion >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iBase_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csWrapPtr" "', argument " "3"" of type '" "csRef< iBase >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csWrapPtr" "', argument " "3"" of type '" "csRef< iBase >""'");
    } else {
      csRef< iBase > * temp = reinterpret_cast< csRef< iBase > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (csWrapPtr *)new csWrapPtr((char const *)arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csWrapPtr, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csWrapPtr__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csWrapPtr *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csWrapPtr *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csWrapPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csWrapPtr,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csWrapPtr" "', argument " "1"" of type '" "csWrapPtr const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csWrapPtr" "', argument " "1"" of type '" "csWrapPtr const &""'"); 
  }
  arg1 = reinterpret_cast< csWrapPtr * >(argp1);
  result = (csWrapPtr *)new csWrapPtr((csWrapPtr const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csWrapPtr, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csWrapPtr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csWrapPtr, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csWrapPtr__SWIG_2(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csRefT_iBase_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_csWrapPtr__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csPtrT_iBase_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_csWrapPtr__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csWrapPtr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csWrapPtr(char const *,scfInterfaceVersion,csPtr< iBase >)\n"
    "    csWrapPtr(char const *,scfInterfaceVersion,csRef< iBase >)\n"
    "    csWrapPtr(csWrapPtr const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csWrapPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csWrapPtr *arg1 = (csWrapPtr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csWrapPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csWrapPtr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csWrapPtr" "', argument " "1"" of type '" "csWrapPtr *""'"); 
  }
  arg1 = reinterpret_cast< csWrapPtr * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csWrapPtr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csWrapPtr, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CustomAllocated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Memory::CustomAllocated *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_CustomAllocated",0,0)) SWIG_fail;
  result = (CS::Memory::CustomAllocated *)new CS::Memory::CustomAllocated();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__CustomAllocated, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CustomAllocated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Memory::CustomAllocated *arg1 = (CS::Memory::CustomAllocated *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_CustomAllocated",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Memory__CustomAllocated, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CustomAllocated" "', argument " "1"" of type '" "CS::Memory::CustomAllocated *""'"); 
  }
  arg1 = reinterpret_cast< CS::Memory::CustomAllocated * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CustomAllocated_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Memory__CustomAllocated, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csArrayThresholdVariable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArrayThresholdVariable *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayThresholdVariable",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csArrayThresholdVariable" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArrayThresholdVariable *)new csArrayThresholdVariable(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayThresholdVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayThresholdVariable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayThresholdVariable *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayThresholdVariable",0,0)) SWIG_fail;
  result = (csArrayThresholdVariable *)new csArrayThresholdVariable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayThresholdVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayThresholdVariable(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csArrayThresholdVariable__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csArrayThresholdVariable__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csArrayThresholdVariable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArrayThresholdVariable(size_t)\n"
    "    csArrayThresholdVariable()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csArrayThresholdVariable_GetThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayThresholdVariable *arg1 = (csArrayThresholdVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csArrayThresholdVariable_GetThreshold",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayThresholdVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csArrayThresholdVariable_GetThreshold" "', argument " "1"" of type '" "csArrayThresholdVariable const *""'"); 
  }
  arg1 = reinterpret_cast< csArrayThresholdVariable * >(argp1);
  result = ((csArrayThresholdVariable const *)arg1)->GetThreshold();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csArrayThresholdVariable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayThresholdVariable *arg1 = (csArrayThresholdVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csArrayThresholdVariable",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayThresholdVariable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csArrayThresholdVariable" "', argument " "1"" of type '" "csArrayThresholdVariable *""'"); 
  }
  arg1 = reinterpret_cast< csArrayThresholdVariable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csArrayThresholdVariable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayThresholdVariable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csArrayThresholdVariableCapacityLinear__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayCapacityLinear< csArrayThresholdVariable > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayThresholdVariableCapacityLinear",0,0)) SWIG_fail;
  result = (csArrayCapacityLinear< csArrayThresholdVariable > *)new csArrayCapacityLinear< csArrayThresholdVariable >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayThresholdVariableCapacityLinear__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayThresholdVariable *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArrayCapacityLinear< csArrayThresholdVariable > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayThresholdVariableCapacityLinear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayThresholdVariable,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csArrayThresholdVariableCapacityLinear" "', argument " "1"" of type '" "csArrayThresholdVariable const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csArrayThresholdVariableCapacityLinear" "', argument " "1"" of type '" "csArrayThresholdVariable const &""'"); 
  }
  arg1 = reinterpret_cast< csArrayThresholdVariable * >(argp1);
  result = (csArrayCapacityLinear< csArrayThresholdVariable > *)new csArrayCapacityLinear< csArrayThresholdVariable >((csArrayThresholdVariable const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayThresholdVariableCapacityLinear__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArrayCapacityLinear< csArrayThresholdVariable > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayThresholdVariableCapacityLinear",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csArrayThresholdVariableCapacityLinear" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArrayCapacityLinear< csArrayThresholdVariable > *)new csArrayCapacityLinear< csArrayThresholdVariable >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayThresholdVariableCapacityLinear(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csArrayThresholdVariableCapacityLinear__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayThresholdVariable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csArrayThresholdVariableCapacityLinear__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csArrayThresholdVariableCapacityLinear__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csArrayThresholdVariableCapacityLinear'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArrayCapacityLinear< csArrayThresholdVariable >()\n"
    "    csArrayCapacityLinear< csArrayThresholdVariable >(csArrayThresholdVariable const &)\n"
    "    csArrayCapacityLinear< csArrayThresholdVariable >(size_t const)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csArrayThresholdVariableCapacityLinear_IsCapacityExcessive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayCapacityLinear< csArrayThresholdVariable > *arg1 = (csArrayCapacityLinear< csArrayThresholdVariable > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csArrayThresholdVariableCapacityLinear_IsCapacityExcessive",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csArrayThresholdVariableCapacityLinear_IsCapacityExcessive" "', argument " "1"" of type '" "csArrayCapacityLinear< csArrayThresholdVariable > const *""'"); 
  }
  arg1 = reinterpret_cast< csArrayCapacityLinear< csArrayThresholdVariable > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csArrayThresholdVariableCapacityLinear_IsCapacityExcessive" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csArrayThresholdVariableCapacityLinear_IsCapacityExcessive" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)((csArrayCapacityLinear< csArrayThresholdVariable > const *)arg1)->IsCapacityExcessive(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csArrayThresholdVariableCapacityLinear_GetCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayCapacityLinear< csArrayThresholdVariable > *arg1 = (csArrayCapacityLinear< csArrayThresholdVariable > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csArrayThresholdVariableCapacityLinear_GetCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csArrayThresholdVariableCapacityLinear_GetCapacity" "', argument " "1"" of type '" "csArrayCapacityLinear< csArrayThresholdVariable > const *""'"); 
  }
  arg1 = reinterpret_cast< csArrayCapacityLinear< csArrayThresholdVariable > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csArrayThresholdVariableCapacityLinear_GetCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = ((csArrayCapacityLinear< csArrayThresholdVariable > const *)arg1)->GetCapacity(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csArrayThresholdVariableCapacityLinear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayCapacityLinear< csArrayThresholdVariable > *arg1 = (csArrayCapacityLinear< csArrayThresholdVariable > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csArrayThresholdVariableCapacityLinear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csArrayThresholdVariableCapacityLinear" "', argument " "1"" of type '" "csArrayCapacityLinear< csArrayThresholdVariable > *""'"); 
  }
  arg1 = reinterpret_cast< csArrayCapacityLinear< csArrayThresholdVariable > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csArrayThresholdVariableCapacityLinear_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csArrayCapacityVariableGrow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayCapacityVariableGrow *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayCapacityVariableGrow",0,0)) SWIG_fail;
  result = (csArrayCapacityVariableGrow *)new csArrayCapacityVariableGrow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayCapacityVariableGrow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayCapacityVariableGrow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayThresholdVariable *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArrayCapacityVariableGrow *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayCapacityVariableGrow",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayThresholdVariable,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csArrayCapacityVariableGrow" "', argument " "1"" of type '" "csArrayThresholdVariable const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csArrayCapacityVariableGrow" "', argument " "1"" of type '" "csArrayThresholdVariable const &""'"); 
  }
  arg1 = reinterpret_cast< csArrayThresholdVariable * >(argp1);
  result = (csArrayCapacityVariableGrow *)new csArrayCapacityVariableGrow((csArrayThresholdVariable const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayCapacityVariableGrow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayCapacityVariableGrow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArrayCapacityVariableGrow *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csArrayCapacityVariableGrow",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csArrayCapacityVariableGrow" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArrayCapacityVariableGrow *)new csArrayCapacityVariableGrow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayCapacityVariableGrow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csArrayCapacityVariableGrow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csArrayCapacityVariableGrow__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayThresholdVariable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csArrayCapacityVariableGrow__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csArrayCapacityVariableGrow__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csArrayCapacityVariableGrow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArrayCapacityVariableGrow()\n"
    "    csArrayCapacityVariableGrow(csArrayThresholdVariable const &)\n"
    "    csArrayCapacityVariableGrow(size_t const)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csArrayCapacityVariableGrow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArrayCapacityVariableGrow *arg1 = (csArrayCapacityVariableGrow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csArrayCapacityVariableGrow",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayCapacityVariableGrow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csArrayCapacityVariableGrow" "', argument " "1"" of type '" "csArrayCapacityVariableGrow *""'"); 
  }
  arg1 = reinterpret_cast< csArrayCapacityVariableGrow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csArrayCapacityVariableGrow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayCapacityVariableGrow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_csArrayItemNotFound_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable csArrayItemNotFound is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_csArrayItemNotFound_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_size_t(static_cast< size_t >(csArrayItemNotFound));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_Vector2Array__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2Array",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector2Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector2Array" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector2Array" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csArray< csVector2 > *)new csArray< csVector2 >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2Array__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2Array",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector2Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArray< csVector2 > *)new csArray< csVector2 >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2Array__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2Array",0,0)) SWIG_fail;
  result = (csArray< csVector2 > *)new csArray< csVector2 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2Array__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  CS::Memory::AllocatorMalloc *arg2 = 0 ;
  csArrayCapacityFixedGrow< 16 > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2Array",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector2Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Memory__AllocatorMalloc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector2Array" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector2Array" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Memory::AllocatorMalloc * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Vector2Array" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector2Array" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg3 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp3);
  result = (csArray< csVector2 > *)new csArray< csVector2 >(arg1,(CS::Memory::AllocatorMalloc const &)*arg2,(csArrayCapacityFixedGrow< 16 > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector2Array(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Vector2Array",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector2Array" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2Array__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2Array",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Vector2Array" "', argument " "1"" of type '" "csArray< csVector2 > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector2Array" "', argument " "1"" of type '" "csArray< csVector2 > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  result = (csArray< csVector2 > *)new csArray< csVector2 >((csArray< csVector2 > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2Array(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vector2Array__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Vector2Array__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector2Array__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Vector2Array__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Vector2Array__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Vector2Array'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArray< csVector2 >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csVector2 >(size_t)\n"
    "    csArray< csVector2 >()\n"
    "    csArray< csVector2 >(size_t,CS::Memory::AllocatorMalloc const &,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csVector2 >(csArray< csVector2 > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_GetSize" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  result = ((csArray< csVector2 > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Get" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector2 &_result_ref = (arg1)->Get(arg2);
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Get" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector2 const &_result_ref = ((csArray< csVector2 > const *)arg1)->Get(arg2);
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vector2Array_Get__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vector2Array_Get__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector2Array_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(csArray< csVector2 > *,size_t)\n"
    "    Get(csArray< csVector2 > const *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Put",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Put" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_Put" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Vector2Array_Put" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array_Put" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  (arg1)->Put(arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Push" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector2Array_Push" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array_Push" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (arg1)->Push((csVector2 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Merge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  csArray< csVector2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Merge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Merge" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector2Array_Merge" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array_Merge" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector2 > * >(argp2);
  (arg1)->Merge((csArray< csVector2 > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_MergeSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  csArray< csVector2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_MergeSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_MergeSmart" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector2Array_MergeSmart" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array_MergeSmart" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector2 > * >(argp2);
  (arg1)->MergeSmart((csArray< csVector2 > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Pop" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  result = (arg1)->Pop();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Top__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Top" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  {
    csVector2 const &_result_ref = ((csArray< csVector2 > const *)arg1)->Top();
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Top__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Top" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  {
    csVector2 &_result_ref = (arg1)->Top();
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Top(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector2Array_Top__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector2Array_Top__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector2Array_Top'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Top(csArray< csVector2 > const *)\n"
    "    Top(csArray< csVector2 > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Insert" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Vector2Array_Insert" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array_Insert" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (bool)(arg1)->Insert(arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Contains" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector2Array_Contains" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array_Contains" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = ((csArray< csVector2 > const *)arg1)->Contains((csVector2 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_DeleteAll" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Truncate" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_Empty" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_IsEmpty" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  result = (bool)((csArray< csVector2 > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_SetMinimalCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_SetMinimalCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_SetMinimalCapacity" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_SetMinimalCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMinimalCapacity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_DeleteIndex" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_DeleteIndexFast" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_DeleteRange" "', argument " "1"" of type '" "csArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector2Array_DeleteRange" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Vector2Array_DeleteRange" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->DeleteRange(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  csArray< csVector2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array___eq__" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector2Array___eq__" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array___eq__" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector2 > * >(argp2);
  result = (bool)((csArray< csVector2 > const *)arg1)->operator ==((csArray< csVector2 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  csArray< csVector2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array___ne__" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector2Array___ne__" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector2Array___ne__" "', argument " "2"" of type '" "csArray< csVector2 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector2 > * >(argp2);
  result = (bool)((csArray< csVector2 > const *)arg1)->operator !=((csArray< csVector2 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2Array_GetAllocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector2 > *arg1 = (csArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Memory::AllocatorMalloc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2Array_GetAllocator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2Array_GetAllocator" "', argument " "1"" of type '" "csArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector2 > * >(argp1);
  {
    CS::Memory::AllocatorMalloc const &_result_ref = ((csArray< csVector2 > const *)arg1)->GetAllocator();
    result = (CS::Memory::AllocatorMalloc *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector2Array_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Vector2DirtyAccessArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csDirtyAccessArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2DirtyAccessArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector2DirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector2DirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector2DirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csDirtyAccessArray< csVector2 > *)new csDirtyAccessArray< csVector2 >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2DirtyAccessArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csDirtyAccessArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2DirtyAccessArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector2DirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csDirtyAccessArray< csVector2 > *)new csDirtyAccessArray< csVector2 >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2DirtyAccessArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector2 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector2DirtyAccessArray",0,0)) SWIG_fail;
  result = (csDirtyAccessArray< csVector2 > *)new csDirtyAccessArray< csVector2 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector2DirtyAccessArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vector2DirtyAccessArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector2DirtyAccessArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Vector2DirtyAccessArray__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Vector2DirtyAccessArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csDirtyAccessArray< csVector2 >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csDirtyAccessArray< csVector2 >(size_t)\n"
    "    csDirtyAccessArray< csVector2 >()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2DirtyAccessArray_GetArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector2 > *arg1 = (csDirtyAccessArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2DirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2DirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector2 > * >(argp1);
  result = (csVector2 *)(arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2DirtyAccessArray_GetArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector2 > *arg1 = (csDirtyAccessArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2DirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2DirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector2 > const *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector2 > * >(argp1);
  result = (csVector2 *)((csDirtyAccessArray< csVector2 > const *)arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2DirtyAccessArray_GetArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector2DirtyAccessArray_GetArray__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector2DirtyAccessArray_GetArray__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector2DirtyAccessArray_GetArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetArray(csDirtyAccessArray< csVector2 > *)\n"
    "    GetArray(csDirtyAccessArray< csVector2 > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector2DirtyAccessArray_GetArrayCopy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector2 > *arg1 = (csDirtyAccessArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector2DirtyAccessArray_GetArrayCopy",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector2DirtyAccessArray_GetArrayCopy" "', argument " "1"" of type '" "csDirtyAccessArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector2 > * >(argp1);
  result = (csVector2 *)(arg1)->GetArrayCopy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector2DirtyAccessArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector2 > *arg1 = (csDirtyAccessArray< csVector2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Vector2DirtyAccessArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector2DirtyAccessArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector2 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector2 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector2DirtyAccessArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Vector3Array__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3Array",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector3Array" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector3Array" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csArray< csVector3 > *)new csArray< csVector3 >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3Array__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3Array",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArray< csVector3 > *)new csArray< csVector3 >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3Array__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3Array",0,0)) SWIG_fail;
  result = (csArray< csVector3 > *)new csArray< csVector3 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3Array__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  CS::Memory::AllocatorMalloc *arg2 = 0 ;
  csArrayCapacityFixedGrow< 16 > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3Array",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Memory__AllocatorMalloc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector3Array" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector3Array" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Memory::AllocatorMalloc * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Vector3Array" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector3Array" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg3 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp3);
  result = (csArray< csVector3 > *)new csArray< csVector3 >(arg1,(CS::Memory::AllocatorMalloc const &)*arg2,(csArrayCapacityFixedGrow< 16 > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector3Array(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Vector3Array",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector3Array" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3Array__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3Array",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Vector3Array" "', argument " "1"" of type '" "csArray< csVector3 > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector3Array" "', argument " "1"" of type '" "csArray< csVector3 > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  result = (csArray< csVector3 > *)new csArray< csVector3 >((csArray< csVector3 > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3Array(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vector3Array__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Vector3Array__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector3Array__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Vector3Array__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Vector3Array__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Vector3Array'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArray< csVector3 >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csVector3 >(size_t)\n"
    "    csArray< csVector3 >()\n"
    "    csArray< csVector3 >(size_t,CS::Memory::AllocatorMalloc const &,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csVector3 >(csArray< csVector3 > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_GetSize" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  result = ((csArray< csVector3 > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Get" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 &_result_ref = (arg1)->Get(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Get" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 const &_result_ref = ((csArray< csVector3 > const *)arg1)->Get(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vector3Array_Get__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vector3Array_Get__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector3Array_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(csArray< csVector3 > *,size_t)\n"
    "    Get(csArray< csVector3 > const *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Put",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Put" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_Put" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Vector3Array_Put" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array_Put" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->Put(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Push" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3Array_Push" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array_Push" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (arg1)->Push((csVector3 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Merge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  csArray< csVector3 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Merge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Merge" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3Array_Merge" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array_Merge" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector3 > * >(argp2);
  (arg1)->Merge((csArray< csVector3 > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_MergeSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  csArray< csVector3 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_MergeSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_MergeSmart" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3Array_MergeSmart" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array_MergeSmart" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector3 > * >(argp2);
  (arg1)->MergeSmart((csArray< csVector3 > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Pop" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  result = (arg1)->Pop();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Top__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Top" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  {
    csVector3 const &_result_ref = ((csArray< csVector3 > const *)arg1)->Top();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Top__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Top" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  {
    csVector3 &_result_ref = (arg1)->Top();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Top(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector3Array_Top__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector3Array_Top__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector3Array_Top'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Top(csArray< csVector3 > const *)\n"
    "    Top(csArray< csVector3 > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Insert" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Vector3Array_Insert" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array_Insert" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (bool)(arg1)->Insert(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Contains" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3Array_Contains" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array_Contains" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((csArray< csVector3 > const *)arg1)->Contains((csVector3 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_DeleteAll" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Truncate" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_Empty" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_IsEmpty" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  result = (bool)((csArray< csVector3 > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_SetMinimalCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_SetMinimalCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_SetMinimalCapacity" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_SetMinimalCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMinimalCapacity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_DeleteIndex" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_DeleteIndexFast" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_DeleteRange" "', argument " "1"" of type '" "csArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3Array_DeleteRange" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Vector3Array_DeleteRange" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->DeleteRange(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  csArray< csVector3 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array___eq__" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3Array___eq__" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array___eq__" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector3 > * >(argp2);
  result = (bool)((csArray< csVector3 > const *)arg1)->operator ==((csArray< csVector3 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  csArray< csVector3 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array___ne__" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3Array___ne__" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3Array___ne__" "', argument " "2"" of type '" "csArray< csVector3 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector3 > * >(argp2);
  result = (bool)((csArray< csVector3 > const *)arg1)->operator !=((csArray< csVector3 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3Array_GetAllocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = (csArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Memory::AllocatorMalloc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3Array_GetAllocator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3Array_GetAllocator" "', argument " "1"" of type '" "csArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  {
    CS::Memory::AllocatorMalloc const &_result_ref = ((csArray< csVector3 > const *)arg1)->GetAllocator();
    result = (CS::Memory::AllocatorMalloc *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector3Array_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Vector3DirtyAccessArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csDirtyAccessArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3DirtyAccessArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3DirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector3DirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector3DirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csDirtyAccessArray< csVector3 > *)new csDirtyAccessArray< csVector3 >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3DirtyAccessArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csDirtyAccessArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3DirtyAccessArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3DirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csDirtyAccessArray< csVector3 > *)new csDirtyAccessArray< csVector3 >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3DirtyAccessArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector3 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3DirtyAccessArray",0,0)) SWIG_fail;
  result = (csDirtyAccessArray< csVector3 > *)new csDirtyAccessArray< csVector3 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3DirtyAccessArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vector3DirtyAccessArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector3DirtyAccessArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Vector3DirtyAccessArray__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Vector3DirtyAccessArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csDirtyAccessArray< csVector3 >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csDirtyAccessArray< csVector3 >(size_t)\n"
    "    csDirtyAccessArray< csVector3 >()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3DirtyAccessArray_GetArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector3 > *arg1 = (csDirtyAccessArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3DirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3DirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector3 > * >(argp1);
  result = (csVector3 *)(arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3DirtyAccessArray_GetArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector3 > *arg1 = (csDirtyAccessArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3DirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3DirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector3 > * >(argp1);
  result = (csVector3 *)((csDirtyAccessArray< csVector3 > const *)arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3DirtyAccessArray_GetArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector3DirtyAccessArray_GetArray__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector3DirtyAccessArray_GetArray__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector3DirtyAccessArray_GetArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetArray(csDirtyAccessArray< csVector3 > *)\n"
    "    GetArray(csDirtyAccessArray< csVector3 > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3DirtyAccessArray_GetArrayCopy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector3 > *arg1 = (csDirtyAccessArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3DirtyAccessArray_GetArrayCopy",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3DirtyAccessArray_GetArrayCopy" "', argument " "1"" of type '" "csDirtyAccessArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector3 > * >(argp1);
  result = (csVector3 *)(arg1)->GetArrayCopy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector3DirtyAccessArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector3 > *arg1 = (csDirtyAccessArray< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Vector3DirtyAccessArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector3DirtyAccessArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector3 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector3DirtyAccessArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Vector4Array__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4Array",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector4Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector4Array" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector4Array" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csArray< csVector4 > *)new csArray< csVector4 >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4Array__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4Array",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector4Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArray< csVector4 > *)new csArray< csVector4 >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4Array__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4Array",0,0)) SWIG_fail;
  result = (csArray< csVector4 > *)new csArray< csVector4 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4Array__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  CS::Memory::AllocatorMalloc *arg2 = 0 ;
  csArrayCapacityFixedGrow< 16 > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4Array",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector4Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Memory__AllocatorMalloc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector4Array" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector4Array" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Memory::AllocatorMalloc * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Vector4Array" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector4Array" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg3 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp3);
  result = (csArray< csVector4 > *)new csArray< csVector4 >(arg1,(CS::Memory::AllocatorMalloc const &)*arg2,(csArrayCapacityFixedGrow< 16 > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector4Array(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Vector4Array",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector4Array" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4Array__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4Array",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Vector4Array" "', argument " "1"" of type '" "csArray< csVector4 > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector4Array" "', argument " "1"" of type '" "csArray< csVector4 > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  result = (csArray< csVector4 > *)new csArray< csVector4 >((csArray< csVector4 > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4Array(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vector4Array__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Vector4Array__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector4Array__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Vector4Array__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Vector4Array__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Vector4Array'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArray< csVector4 >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csVector4 >(size_t)\n"
    "    csArray< csVector4 >()\n"
    "    csArray< csVector4 >(size_t,CS::Memory::AllocatorMalloc const &,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csVector4 >(csArray< csVector4 > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_GetSize" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  result = ((csArray< csVector4 > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Get" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector4 &_result_ref = (arg1)->Get(arg2);
    result = (csVector4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Get" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector4 const &_result_ref = ((csArray< csVector4 > const *)arg1)->Get(arg2);
    result = (csVector4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vector4Array_Get__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vector4Array_Get__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector4Array_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(csArray< csVector4 > *,size_t)\n"
    "    Get(csArray< csVector4 > const *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  csVector4 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Put",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Put" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_Put" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Vector4Array_Put" "', argument " "3"" of type '" "csVector4 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array_Put" "', argument " "3"" of type '" "csVector4 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector4 * >(argp3);
  (arg1)->Put(arg2,(csVector4 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  csVector4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Push" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector4Array_Push" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array_Push" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4 * >(argp2);
  result = (arg1)->Push((csVector4 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Merge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  csArray< csVector4 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Merge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Merge" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector4Array_Merge" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array_Merge" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector4 > * >(argp2);
  (arg1)->Merge((csArray< csVector4 > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_MergeSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  csArray< csVector4 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_MergeSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_MergeSmart" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector4Array_MergeSmart" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array_MergeSmart" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector4 > * >(argp2);
  (arg1)->MergeSmart((csArray< csVector4 > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Pop" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  result = (arg1)->Pop();
  resultobj = SWIG_NewPointerObj((new csVector4(static_cast< const csVector4& >(result))), SWIGTYPE_p_csVector4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Top__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Top" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  {
    csVector4 const &_result_ref = ((csArray< csVector4 > const *)arg1)->Top();
    result = (csVector4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Top__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Top" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  {
    csVector4 &_result_ref = (arg1)->Top();
    result = (csVector4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Top(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector4Array_Top__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector4Array_Top__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector4Array_Top'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Top(csArray< csVector4 > const *)\n"
    "    Top(csArray< csVector4 > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  csVector4 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Insert" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Vector4Array_Insert" "', argument " "3"" of type '" "csVector4 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array_Insert" "', argument " "3"" of type '" "csVector4 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector4 * >(argp3);
  result = (bool)(arg1)->Insert(arg2,(csVector4 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  csVector4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Contains" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector4Array_Contains" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array_Contains" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4 * >(argp2);
  result = ((csArray< csVector4 > const *)arg1)->Contains((csVector4 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_DeleteAll" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Truncate" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_Empty" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_IsEmpty" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  result = (bool)((csArray< csVector4 > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_SetMinimalCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_SetMinimalCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_SetMinimalCapacity" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_SetMinimalCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMinimalCapacity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_DeleteIndex" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_DeleteIndexFast" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_DeleteRange" "', argument " "1"" of type '" "csArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector4Array_DeleteRange" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Vector4Array_DeleteRange" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->DeleteRange(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  csArray< csVector4 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array___eq__" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector4Array___eq__" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array___eq__" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector4 > * >(argp2);
  result = (bool)((csArray< csVector4 > const *)arg1)->operator ==((csArray< csVector4 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  csArray< csVector4 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array___ne__" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector4Array___ne__" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector4Array___ne__" "', argument " "2"" of type '" "csArray< csVector4 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csVector4 > * >(argp2);
  result = (bool)((csArray< csVector4 > const *)arg1)->operator !=((csArray< csVector4 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4Array_GetAllocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector4 > *arg1 = (csArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Memory::AllocatorMalloc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4Array_GetAllocator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4Array_GetAllocator" "', argument " "1"" of type '" "csArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector4 > * >(argp1);
  {
    CS::Memory::AllocatorMalloc const &_result_ref = ((csArray< csVector4 > const *)arg1)->GetAllocator();
    result = (CS::Memory::AllocatorMalloc *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector4Array_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Vector4DirtyAccessArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csDirtyAccessArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4DirtyAccessArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector4DirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Vector4DirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector4DirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csDirtyAccessArray< csVector4 > *)new csDirtyAccessArray< csVector4 >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4DirtyAccessArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csDirtyAccessArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4DirtyAccessArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector4DirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csDirtyAccessArray< csVector4 > *)new csDirtyAccessArray< csVector4 >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4DirtyAccessArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector4 > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector4DirtyAccessArray",0,0)) SWIG_fail;
  result = (csDirtyAccessArray< csVector4 > *)new csDirtyAccessArray< csVector4 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector4DirtyAccessArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vector4DirtyAccessArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector4DirtyAccessArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Vector4DirtyAccessArray__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Vector4DirtyAccessArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csDirtyAccessArray< csVector4 >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csDirtyAccessArray< csVector4 >(size_t)\n"
    "    csDirtyAccessArray< csVector4 >()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4DirtyAccessArray_GetArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector4 > *arg1 = (csDirtyAccessArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4DirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4DirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector4 > * >(argp1);
  result = (csVector4 *)(arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4DirtyAccessArray_GetArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector4 > *arg1 = (csDirtyAccessArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4DirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4DirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector4 > const *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector4 > * >(argp1);
  result = (csVector4 *)((csDirtyAccessArray< csVector4 > const *)arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4DirtyAccessArray_GetArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector4DirtyAccessArray_GetArray__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vector4DirtyAccessArray_GetArray__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vector4DirtyAccessArray_GetArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetArray(csDirtyAccessArray< csVector4 > *)\n"
    "    GetArray(csDirtyAccessArray< csVector4 > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector4DirtyAccessArray_GetArrayCopy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector4 > *arg1 = (csDirtyAccessArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector4DirtyAccessArray_GetArrayCopy",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector4DirtyAccessArray_GetArrayCopy" "', argument " "1"" of type '" "csDirtyAccessArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector4 > * >(argp1);
  result = (csVector4 *)(arg1)->GetArrayCopy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector4DirtyAccessArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< csVector4 > *arg1 = (csDirtyAccessArray< csVector4 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Vector4DirtyAccessArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector4DirtyAccessArray" "', argument " "1"" of type '" "csDirtyAccessArray< csVector4 > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< csVector4 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector4DirtyAccessArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_UIntArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UIntArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UIntArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UIntArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csArray< unsigned int > *)new csArray< unsigned int >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UIntArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArray< unsigned int > *)new csArray< unsigned int >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntArray",0,0)) SWIG_fail;
  result = (csArray< unsigned int > *)new csArray< unsigned int >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntArray__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  CS::Memory::AllocatorMalloc *arg2 = 0 ;
  csArrayCapacityFixedGrow< 16 > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntArray",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UIntArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Memory__AllocatorMalloc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UIntArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UIntArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Memory::AllocatorMalloc * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_UIntArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UIntArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg3 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp3);
  result = (csArray< unsigned int > *)new csArray< unsigned int >(arg1,(CS::Memory::AllocatorMalloc const &)*arg2,(csArrayCapacityFixedGrow< 16 > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UIntArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_UIntArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UIntArray" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntArray__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UIntArray" "', argument " "1"" of type '" "csArray< unsigned int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UIntArray" "', argument " "1"" of type '" "csArray< unsigned int > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  result = (csArray< unsigned int > *)new csArray< unsigned int >((csArray< unsigned int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_UIntArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_UIntArray__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_UIntArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_UIntArray__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_UIntArray__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_UIntArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArray< unsigned int >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< unsigned int >(size_t)\n"
    "    csArray< unsigned int >()\n"
    "    csArray< unsigned int >(size_t,CS::Memory::AllocatorMalloc const &,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< unsigned int >(csArray< unsigned int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_GetSize" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  result = ((csArray< unsigned int > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Get" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    unsigned int &_result_ref = (arg1)->Get(arg2);
    result = (unsigned int *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Get" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    unsigned int const &_result_ref = ((csArray< unsigned int > const *)arg1)->Get(arg2);
    result = (unsigned int *) &_result_ref;
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_UIntArray_Get__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_UIntArray_Get__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'UIntArray_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(csArray< unsigned int > *,size_t)\n"
    "    Get(csArray< unsigned int > const *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  unsigned int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Put",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Put" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_Put" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UIntArray_Put" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  (arg1)->Put(arg2,(unsigned int const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Push" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_Push" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (arg1)->Push((unsigned int const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Merge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  csArray< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Merge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Merge" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UIntArray_Merge" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UIntArray_Merge" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< unsigned int > * >(argp2);
  (arg1)->Merge((csArray< unsigned int > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_MergeSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  csArray< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_MergeSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_MergeSmart" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UIntArray_MergeSmart" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UIntArray_MergeSmart" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< unsigned int > * >(argp2);
  (arg1)->MergeSmart((csArray< unsigned int > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Pop" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  result = (unsigned int)(arg1)->Pop();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Top__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Top" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  {
    unsigned int const &_result_ref = ((csArray< unsigned int > const *)arg1)->Top();
    result = (unsigned int *) &_result_ref;
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Top__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Top" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  {
    unsigned int &_result_ref = (arg1)->Top();
    result = (unsigned int *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Top(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_UIntArray_Top__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_UIntArray_Top__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'UIntArray_Top'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Top(csArray< unsigned int > const *)\n"
    "    Top(csArray< unsigned int > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  unsigned int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Insert" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UIntArray_Insert" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  result = (bool)(arg1)->Insert(arg2,(unsigned int const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Contains" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_Contains" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = ((csArray< unsigned int > const *)arg1)->Contains((unsigned int const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_DeleteAll" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Truncate" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_Empty" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_IsEmpty" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  result = (bool)((csArray< unsigned int > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_SetMinimalCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_SetMinimalCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_SetMinimalCapacity" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_SetMinimalCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMinimalCapacity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_DeleteIndex" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_DeleteIndexFast" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_DeleteRange" "', argument " "1"" of type '" "csArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UIntArray_DeleteRange" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UIntArray_DeleteRange" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->DeleteRange(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  csArray< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray___eq__" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UIntArray___eq__" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UIntArray___eq__" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< unsigned int > * >(argp2);
  result = (bool)((csArray< unsigned int > const *)arg1)->operator ==((csArray< unsigned int > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  csArray< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray___ne__" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UIntArray___ne__" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UIntArray___ne__" "', argument " "2"" of type '" "csArray< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< unsigned int > * >(argp2);
  result = (bool)((csArray< unsigned int > const *)arg1)->operator !=((csArray< unsigned int > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntArray_GetAllocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< unsigned int > *arg1 = (csArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Memory::AllocatorMalloc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntArray_GetAllocator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntArray_GetAllocator" "', argument " "1"" of type '" "csArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< unsigned int > * >(argp1);
  {
    CS::Memory::AllocatorMalloc const &_result_ref = ((csArray< unsigned int > const *)arg1)->GetAllocator();
    result = (CS::Memory::AllocatorMalloc *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UIntArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_UIntDirtyAccessArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csDirtyAccessArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntDirtyAccessArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UIntDirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UIntDirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UIntDirtyAccessArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csDirtyAccessArray< unsigned int > *)new csDirtyAccessArray< unsigned int >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntDirtyAccessArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csDirtyAccessArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntDirtyAccessArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UIntDirtyAccessArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csDirtyAccessArray< unsigned int > *)new csDirtyAccessArray< unsigned int >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntDirtyAccessArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< unsigned int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_UIntDirtyAccessArray",0,0)) SWIG_fail;
  result = (csDirtyAccessArray< unsigned int > *)new csDirtyAccessArray< unsigned int >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntDirtyAccessArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_UIntDirtyAccessArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_UIntDirtyAccessArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_UIntDirtyAccessArray__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_UIntDirtyAccessArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csDirtyAccessArray< unsigned int >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csDirtyAccessArray< unsigned int >(size_t)\n"
    "    csDirtyAccessArray< unsigned int >()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntDirtyAccessArray_GetArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< unsigned int > *arg1 = (csDirtyAccessArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntDirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntDirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< unsigned int > * >(argp1);
  result = (unsigned int *)(arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntDirtyAccessArray_GetArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< unsigned int > *arg1 = (csDirtyAccessArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntDirtyAccessArray_GetArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntDirtyAccessArray_GetArray" "', argument " "1"" of type '" "csDirtyAccessArray< unsigned int > const *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< unsigned int > * >(argp1);
  result = (unsigned int *)((csDirtyAccessArray< unsigned int > const *)arg1)->GetArray();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntDirtyAccessArray_GetArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_UIntDirtyAccessArray_GetArray__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_UIntDirtyAccessArray_GetArray__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'UIntDirtyAccessArray_GetArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetArray(csDirtyAccessArray< unsigned int > *)\n"
    "    GetArray(csDirtyAccessArray< unsigned int > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_UIntDirtyAccessArray_GetArrayCopy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< unsigned int > *arg1 = (csDirtyAccessArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"UIntDirtyAccessArray_GetArrayCopy",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UIntDirtyAccessArray_GetArrayCopy" "', argument " "1"" of type '" "csDirtyAccessArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< unsigned int > * >(argp1);
  result = (unsigned int *)(arg1)->GetArrayCopy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UIntDirtyAccessArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDirtyAccessArray< unsigned int > *arg1 = (csDirtyAccessArray< unsigned int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_UIntDirtyAccessArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UIntDirtyAccessArray" "', argument " "1"" of type '" "csDirtyAccessArray< unsigned int > *""'"); 
  }
  arg1 = reinterpret_cast< csDirtyAccessArray< unsigned int > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UIntDirtyAccessArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SetCoreSCFPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SetCoreSCFPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SetCoreSCFPointer" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  SetCoreSCFPointer(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfCompatibleVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceVersion arg1 ;
  scfInterfaceVersion arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfCompatibleVersion",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "scfCompatibleVersion" "', argument " "1"" of type '" "scfInterfaceVersion""'");
  } 
  arg1 = static_cast< scfInterfaceVersion >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfCompatibleVersion" "', argument " "2"" of type '" "scfInterfaceVersion""'");
  } 
  arg2 = static_cast< scfInterfaceVersion >(val2);
  result = (bool)scfCompatibleVersion(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadata_interfaceName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadata *arg1 = (scfInterfaceMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadata_interfaceName_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadata_interfaceName_get" "', argument " "1"" of type '" "scfInterfaceMetadata *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadata * >(argp1);
  result = (char *) ((arg1)->interfaceName);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadata_interfaceID_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadata *arg1 = (scfInterfaceMetadata *) 0 ;
  scfInterfaceID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadata_interfaceID_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadata_interfaceID_set" "', argument " "1"" of type '" "scfInterfaceMetadata *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadata * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfInterfaceMetadata_interfaceID_set" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  if (arg1) (arg1)->interfaceID = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadata_interfaceID_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadata *arg1 = (scfInterfaceMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadata_interfaceID_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadata_interfaceID_get" "', argument " "1"" of type '" "scfInterfaceMetadata *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadata * >(argp1);
  result = (scfInterfaceID) ((arg1)->interfaceID);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadata_interfaceVersion_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadata *arg1 = (scfInterfaceMetadata *) 0 ;
  scfInterfaceVersion arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadata_interfaceVersion_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadata_interfaceVersion_set" "', argument " "1"" of type '" "scfInterfaceMetadata *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadata * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfInterfaceMetadata_interfaceVersion_set" "', argument " "2"" of type '" "scfInterfaceVersion""'");
  } 
  arg2 = static_cast< scfInterfaceVersion >(val2);
  if (arg1) (arg1)->interfaceVersion = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadata_interfaceVersion_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadata *arg1 = (scfInterfaceMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceVersion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadata_interfaceVersion_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadata_interfaceVersion_get" "', argument " "1"" of type '" "scfInterfaceMetadata *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadata * >(argp1);
  result = (scfInterfaceVersion) ((arg1)->interfaceVersion);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_scfInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadata *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_scfInterfaceMetadata",0,0)) SWIG_fail;
  result = (scfInterfaceMetadata *)new scfInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadata, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_scfInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadata *arg1 = (scfInterfaceMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_scfInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadata, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_scfInterfaceMetadata" "', argument " "1"" of type '" "scfInterfaceMetadata *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadata * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *scfInterfaceMetadata_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfInterfaceMetadata, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_scfInterfaceMetadataList_metadata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *arg1 = (scfInterfaceMetadataList *) 0 ;
  scfInterfaceMetadata *arg2 = (scfInterfaceMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadataList_metadata_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadataList_metadata_set" "', argument " "1"" of type '" "scfInterfaceMetadataList *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadataList * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_scfInterfaceMetadata, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfInterfaceMetadataList_metadata_set" "', argument " "2"" of type '" "scfInterfaceMetadata *""'"); 
  }
  arg2 = reinterpret_cast< scfInterfaceMetadata * >(argp2);
  if (arg1) (arg1)->metadata = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadataList_metadata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *arg1 = (scfInterfaceMetadataList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadata *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadataList_metadata_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadataList_metadata_get" "', argument " "1"" of type '" "scfInterfaceMetadataList *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadataList * >(argp1);
  result = (scfInterfaceMetadata *) ((arg1)->metadata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadata, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadataList_metadataCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *arg1 = (scfInterfaceMetadataList *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadataList_metadataCount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadataList_metadataCount_set" "', argument " "1"" of type '" "scfInterfaceMetadataList *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadataList * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfInterfaceMetadataList_metadataCount_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->metadataCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadataList_metadataCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *arg1 = (scfInterfaceMetadataList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadataList_metadataCount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadataList_metadataCount_get" "', argument " "1"" of type '" "scfInterfaceMetadataList *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadataList * >(argp1);
  result =  ((arg1)->metadataCount);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadataList___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *arg1 = (scfInterfaceMetadataList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadataList___len__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadataList___len__" "', argument " "1"" of type '" "scfInterfaceMetadataList *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadataList * >(argp1);
  result = scfInterfaceMetadataList___len__(arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfInterfaceMetadataList___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *arg1 = (scfInterfaceMetadataList *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  scfInterfaceMetadata result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfInterfaceMetadataList___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfInterfaceMetadataList___getitem__" "', argument " "1"" of type '" "scfInterfaceMetadataList const *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadataList * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfInterfaceMetadataList___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = scfInterfaceMetadataList___getitem__((scfInterfaceMetadataList const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new scfInterfaceMetadata(static_cast< const scfInterfaceMetadata& >(result))), SWIGTYPE_p_scfInterfaceMetadata, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_scfInterfaceMetadataList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_scfInterfaceMetadataList",0,0)) SWIG_fail;
  result = (scfInterfaceMetadataList *)new scfInterfaceMetadataList();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_scfInterfaceMetadataList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfInterfaceMetadataList *arg1 = (scfInterfaceMetadataList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_scfInterfaceMetadataList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfInterfaceMetadataList, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_scfInterfaceMetadataList" "', argument " "1"" of type '" "scfInterfaceMetadataList *""'"); 
  }
  arg1 = reinterpret_cast< scfInterfaceMetadataList * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *scfInterfaceMetadataList_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfInterfaceMetadataList, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBase_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBase_IncRef" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBase_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBase_DecRef" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBase_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBase_GetRefCount" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBase_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBase_AddRefOwner" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBase_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBase_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBase_RemoveRefOwner" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBase_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBase_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBase_GetInterfaceMetadata" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBase_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_QueryInterface",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBase_QueryInterface" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = iBase_QueryInterface(arg1,(char const *)arg2,arg3);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBase_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBase_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iBase_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_iSCF_SCF_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable iSCF_SCF is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_iSCF_SCF_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(iSCF::SCF), SWIGTYPE_p_iSCF,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_iSCF_SCF_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_iSCF_SCF_get();
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClasses__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  iDocument *arg2 = (iDocument *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClasses",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClasses" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClasses" "', argument " "2"" of type '" "iDocument *""'"); 
  }
  arg2 = reinterpret_cast< iDocument * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClasses" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->RegisterClasses(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClasses__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  iDocument *arg2 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClasses",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClasses" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClasses" "', argument " "2"" of type '" "iDocument *""'"); 
  }
  arg2 = reinterpret_cast< iDocument * >(argp2);
  (arg1)->RegisterClasses(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClasses__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClasses",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClasses" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClasses" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClasses" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->RegisterClasses((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClasses__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClasses",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClasses" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClasses" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->RegisterClasses((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClasses__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  iDocument *arg3 = (iDocument *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClasses",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClasses" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClasses" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClasses" "', argument " "3"" of type '" "iDocument *""'"); 
  }
  arg3 = reinterpret_cast< iDocument * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_RegisterClasses" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  (arg1)->RegisterClasses((char const *)arg2,arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClasses__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  iDocument *arg3 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClasses",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClasses" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClasses" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClasses" "', argument " "3"" of type '" "iDocument *""'"); 
  }
  arg3 = reinterpret_cast< iDocument * >(argp3);
  (arg1)->RegisterClasses((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClasses(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iSCF_RegisterClasses__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iSCF_RegisterClasses__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iSCF_RegisterClasses__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iSCF_RegisterClasses__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iSCF_RegisterClasses__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iSCF_RegisterClasses__SWIG_4(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSCF_RegisterClasses'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RegisterClasses(iSCF *,iDocument *,char const *)\n"
    "    RegisterClasses(iSCF *,iDocument *)\n"
    "    RegisterClasses(iSCF *,char const *,char const *)\n"
    "    RegisterClasses(iSCF *,char const *)\n"
    "    RegisterClasses(iSCF *,char const *,iDocument *,char const *)\n"
    "    RegisterClasses(iSCF *,char const *,iDocument *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_ClassRegistered(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_ClassRegistered",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_ClassRegistered" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_ClassRegistered" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->ClassRegistered((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_CreateInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iBase *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_CreateInstance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_CreateInstance" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_CreateInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (iBase *)(arg1)->CreateInstance((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iBase, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_GetClassDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_GetClassDescription",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_GetClassDescription" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_GetClassDescription" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->GetClassDescription((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_GetClassDependencies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_GetClassDependencies",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_GetClassDependencies" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_GetClassDependencies" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->GetClassDependencies((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_GetPluginMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iDocument > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_GetPluginMetadata",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_GetPluginMetadata" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_GetPluginMetadata" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetPluginMetadata((char const *)arg2);
  {
    csRef<iDocument> ref((csRef<iDocument>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocument *)ref, SWIGTYPE_p_iDocument, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_UnloadUnusedModules(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_UnloadUnusedModules",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_UnloadUnusedModules" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  (arg1)->UnloadUnusedModules();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClass__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClass",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClass" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClass" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_RegisterClass" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSCF_RegisterClass" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "iSCF_RegisterClass" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "iSCF_RegisterClass" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  result = (bool)(arg1)->RegisterClass((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClass__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClass",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClass" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClass" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_RegisterClass" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSCF_RegisterClass" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "iSCF_RegisterClass" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (bool)(arg1)->RegisterClass((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClass__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClass",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClass" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterClass" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_RegisterClass" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSCF_RegisterClass" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (bool)(arg1)->RegisterClass((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClass__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  scfFactoryFunc arg2 = (scfFactoryFunc) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClass",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClass" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_iBase__p_iBase);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "iSCF_RegisterClass" "', argument " "2"" of type '" "scfFactoryFunc""'"); 
    }
  }
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_RegisterClass" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSCF_RegisterClass" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "iSCF_RegisterClass" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  result = (bool)(arg1)->RegisterClass(arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClass__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  scfFactoryFunc arg2 = (scfFactoryFunc) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClass",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClass" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_iBase__p_iBase);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "iSCF_RegisterClass" "', argument " "2"" of type '" "scfFactoryFunc""'"); 
    }
  }
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_RegisterClass" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSCF_RegisterClass" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (bool)(arg1)->RegisterClass(arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClass__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  scfFactoryFunc arg2 = (scfFactoryFunc) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterClass",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterClass" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_iBase__p_iBase);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "iSCF_RegisterClass" "', argument " "2"" of type '" "scfFactoryFunc""'"); 
    }
  }
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_RegisterClass" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)(arg1)->RegisterClass(arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterClass(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 7); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_p_iBase__p_iBase);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iSCF_RegisterClass__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_p_iBase__p_iBase);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_iSCF_RegisterClass__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_iSCF_RegisterClass__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_p_iBase__p_iBase);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_iSCF_RegisterClass__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_iSCF_RegisterClass__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_iSCF_RegisterClass__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSCF_RegisterClass'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RegisterClass(iSCF *,char const *,char const *,char const *,char const *,char const *,char const *)\n"
    "    RegisterClass(iSCF *,char const *,char const *,char const *,char const *,char const *)\n"
    "    RegisterClass(iSCF *,char const *,char const *,char const *,char const *)\n"
    "    RegisterClass(iSCF *,scfFactoryFunc,char const *,char const *,char const *,char const *)\n"
    "    RegisterClass(iSCF *,scfFactoryFunc,char const *,char const *,char const *)\n"
    "    RegisterClass(iSCF *,scfFactoryFunc,char const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterFactoryFunc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  scfFactoryFunc arg2 = (scfFactoryFunc) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterFactoryFunc",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterFactoryFunc" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_iBase__p_iBase);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "iSCF_RegisterFactoryFunc" "', argument " "2"" of type '" "scfFactoryFunc""'"); 
    }
  }
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSCF_RegisterFactoryFunc" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->RegisterFactoryFunc(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_UnregisterClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_UnregisterClass",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_UnregisterClass" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_UnregisterClass" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->UnregisterClass((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_GetInterfaceName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  scfInterfaceID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_GetInterfaceName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_GetInterfaceName" "', argument " "1"" of type '" "iSCF const *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSCF_GetInterfaceName" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  result = (char *)((iSCF const *)arg1)->GetInterfaceName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_GetInterfaceID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  scfInterfaceID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_GetInterfaceID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_GetInterfaceID" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_GetInterfaceID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (scfInterfaceID)(arg1)->GetInterfaceID((char const *)arg2);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_Finish(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_Finish",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_Finish" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  (arg1)->Finish();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_QueryClassList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_QueryClassList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_QueryClassList" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_QueryClassList" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->QueryClassList((char const *)arg2);
  {
    csRef<iStringArray> ref((csRef<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_ScanPluginsPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_ScanPluginsPath",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_ScanPluginsPath" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_ScanPluginsPath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSCF_ScanPluginsPath" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSCF_ScanPluginsPath" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  (arg1)->ScanPluginsPath((char const *)arg2,arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_ScanPluginsPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_ScanPluginsPath",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_ScanPluginsPath" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_ScanPluginsPath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSCF_ScanPluginsPath" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->ScanPluginsPath((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_ScanPluginsPath__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_ScanPluginsPath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_ScanPluginsPath" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_ScanPluginsPath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->ScanPluginsPath((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_ScanPluginsPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iSCF_ScanPluginsPath__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iSCF_ScanPluginsPath__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iSCF, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iSCF_ScanPluginsPath__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSCF_ScanPluginsPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ScanPluginsPath(iSCF *,char const *,bool,char const *)\n"
    "    ScanPluginsPath(iSCF *,char const *,bool)\n"
    "    ScanPluginsPath(iSCF *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_RegisterPlugin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_RegisterPlugin",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSCF_RegisterPlugin" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSCF_RegisterPlugin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->RegisterPlugin((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSCF_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSCF_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iSCF_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSCF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSCF",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSCF" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  delete_iSCF(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSCF_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iSCF, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iFactory_CreateInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFactory *arg1 = (iFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iBase *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFactory_CreateInstance",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFactory_CreateInstance" "', argument " "1"" of type '" "iFactory *""'"); 
  }
  arg1 = reinterpret_cast< iFactory * >(argp1);
  result = (iBase *)(arg1)->CreateInstance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFactory_TryUnload(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFactory *arg1 = (iFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFactory_TryUnload",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFactory_TryUnload" "', argument " "1"" of type '" "iFactory *""'"); 
  }
  arg1 = reinterpret_cast< iFactory * >(argp1);
  (arg1)->TryUnload();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFactory_QueryDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFactory *arg1 = (iFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFactory_QueryDescription",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFactory_QueryDescription" "', argument " "1"" of type '" "iFactory *""'"); 
  }
  arg1 = reinterpret_cast< iFactory * >(argp1);
  result = (char *)(arg1)->QueryDescription();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFactory_QueryDependencies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFactory *arg1 = (iFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFactory_QueryDependencies",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFactory_QueryDependencies" "', argument " "1"" of type '" "iFactory *""'"); 
  }
  arg1 = reinterpret_cast< iFactory * >(argp1);
  result = (char *)(arg1)->QueryDependencies();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFactory_QueryClassID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFactory *arg1 = (iFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFactory_QueryClassID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFactory_QueryClassID" "', argument " "1"" of type '" "iFactory *""'"); 
  }
  arg1 = reinterpret_cast< iFactory * >(argp1);
  result = (char *)(arg1)->QueryClassID();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFactory_QueryModuleName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFactory *arg1 = (iFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFactory_QueryModuleName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFactory_QueryModuleName" "', argument " "1"" of type '" "iFactory *""'"); 
  }
  arg1 = reinterpret_cast< iFactory * >(argp1);
  result = (char *)(arg1)->QueryModuleName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFactory *arg1 = (iFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iFactory" "', argument " "1"" of type '" "iFactory *""'"); 
  }
  arg1 = reinterpret_cast< iFactory * >(argp1);
  delete_iFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_scfRegisterStaticClass__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfFactoryFunc arg1 = (scfFactoryFunc) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfRegisterStaticClass",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    int res = SWIG_ConvertFunctionPtr(obj0, (void**)(&arg1), SWIGTYPE_p_f_p_iBase__p_iBase);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "scfRegisterStaticClass" "', argument " "1"" of type '" "scfFactoryFunc""'"); 
    }
  }
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfRegisterStaticClass" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "scfRegisterStaticClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "scfRegisterStaticClass" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  scfRegisterStaticClass(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfRegisterStaticClass__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfFactoryFunc arg1 = (scfFactoryFunc) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfRegisterStaticClass",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    int res = SWIG_ConvertFunctionPtr(obj0, (void**)(&arg1), SWIGTYPE_p_f_p_iBase__p_iBase);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "scfRegisterStaticClass" "', argument " "1"" of type '" "scfFactoryFunc""'"); 
    }
  }
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfRegisterStaticClass" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "scfRegisterStaticClass" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  scfRegisterStaticClass(arg1,(char const *)arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfRegisterStaticClass(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertFunctionPtr(argv[0], &ptr, SWIGTYPE_p_f_p_iBase__p_iBase);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_scfRegisterStaticClass__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *ptr = 0;
    int res = SWIG_ConvertFunctionPtr(argv[0], &ptr, SWIGTYPE_p_f_p_iBase__p_iBase);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_scfRegisterStaticClass__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'scfRegisterStaticClass'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    scfRegisterStaticClass(scfFactoryFunc,char const *,char const *,char const *)\n"
    "    scfRegisterStaticClass(scfFactoryFunc,char const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfRegisterStaticClasses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfRegisterStaticClasses",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfRegisterStaticClasses" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  scfRegisterStaticClasses((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfRegisterStaticFactoryFunc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfFactoryFunc arg1 = (scfFactoryFunc) 0 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfRegisterStaticFactoryFunc",2,2,&obj0,&obj1)) SWIG_fail;
  {
    int res = SWIG_ConvertFunctionPtr(obj0, (void**)(&arg1), SWIGTYPE_p_f_p_iBase__p_iBase);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "scfRegisterStaticFactoryFunc" "', argument " "1"" of type '" "scfFactoryFunc""'"); 
    }
  }
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfRegisterStaticFactoryFunc" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  scfRegisterStaticFactoryFunc(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_IsFinished(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_IsFinished",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_IsFinished" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  result = (bool)(arg1)->IsFinished();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_WasSuccessful(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_WasSuccessful",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_WasSuccessful" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  result = (bool)(arg1)->WasSuccessful();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_GetResultPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_GetResultPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_GetResultPtr" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  result = (void *)(arg1)->GetResultPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_GetResultRefPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iBase > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_GetResultRefPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_GetResultRefPtr" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  result = (arg1)->GetResultRefPtr();
  {
    csRef<iBase> ref((csRef<iBase>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iBase *)ref, SWIGTYPE_p_iBase, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_MarkFinished(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_MarkFinished",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_MarkFinished" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  (arg1)->MarkFinished();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_MarkSuccessful(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_MarkSuccessful",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_MarkSuccessful" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  (arg1)->MarkSuccessful();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_SetResult__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_SetResult",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_SetResult" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadReturn_SetResult" "', argument " "2"" of type '" "void *""'"); 
  }
  (arg1)->SetResult(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_SetResult__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  SwigValueWrapper< csRef< iBase > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_SetResult",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_SetResult" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iBase_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadReturn_SetResult" "', argument " "2"" of type '" "csRef< iBase >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iThreadReturn_SetResult" "', argument " "2"" of type '" "csRef< iBase >""'");
    } else {
      csRef< iBase > * temp = reinterpret_cast< csRef< iBase > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SetResult(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_SetResult(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadReturn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csRefT_iBase_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iThreadReturn_SetResult__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadReturn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iThreadReturn_SetResult__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iThreadReturn_SetResult'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetResult(iThreadReturn *,void *)\n"
    "    SetResult(iThreadReturn *,csRef< iBase >)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  iThreadReturn *arg2 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_Copy",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_Copy" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadReturn_Copy" "', argument " "2"" of type '" "iThreadReturn *""'"); 
  }
  arg2 = reinterpret_cast< iThreadReturn * >(argp2);
  (arg1)->Copy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_Wait__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_Wait",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_Wait" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iThreadReturn_Wait" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Wait(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_Wait__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_Wait",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_Wait" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  (arg1)->Wait();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_Wait(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadReturn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iThreadReturn_Wait__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadReturn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iThreadReturn_Wait__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iThreadReturn_Wait'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Wait(iThreadReturn *,bool)\n"
    "    Wait(iThreadReturn *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_SetWaitPtrs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  CS::Threading::Condition *arg2 = (CS::Threading::Condition *) 0 ;
  CS::Threading::Mutex *arg3 = (CS::Threading::Mutex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_SetWaitPtrs",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_SetWaitPtrs" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Threading__Condition, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadReturn_SetWaitPtrs" "', argument " "2"" of type '" "CS::Threading::Condition *""'"); 
  }
  arg2 = reinterpret_cast< CS::Threading::Condition * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Threading__Mutex, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iThreadReturn_SetWaitPtrs" "', argument " "3"" of type '" "CS::Threading::Mutex *""'"); 
  }
  arg3 = reinterpret_cast< CS::Threading::Mutex * >(argp3);
  (arg1)->SetWaitPtrs(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_SetJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  iJob *arg2 = (iJob *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_SetJob",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_SetJob" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iJob, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadReturn_SetJob" "', argument " "2"" of type '" "iJob *""'"); 
  }
  arg2 = reinterpret_cast< iJob * >(argp2);
  (arg1)->SetJob(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadReturn_GetJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iJob *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadReturn_GetJob",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadReturn_GetJob" "', argument " "1"" of type '" "iThreadReturn const *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  result = (iJob *)((iThreadReturn const *)arg1)->GetJob();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iJob, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iThreadReturn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadReturn *arg1 = (iThreadReturn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iThreadReturn",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadReturn, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iThreadReturn" "', argument " "1"" of type '" "iThreadReturn *""'"); 
  }
  arg1 = reinterpret_cast< iThreadReturn * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iThreadReturn_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iThreadReturn, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iThreadManager_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  iConfigManager *arg2 = (iConfigManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_Init",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_Init" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadManager_Init" "', argument " "2"" of type '" "iConfigManager *""'"); 
  }
  arg2 = reinterpret_cast< iConfigManager * >(argp2);
  (arg1)->Init(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_Process__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_Process",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_Process" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iThreadManager_Process" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  (arg1)->Process(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_Process__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_Process",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_Process" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  (arg1)->Process();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_Process(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iThreadManager_Process__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iThreadManager_Process__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iThreadManager_Process'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Process(iThreadManager *,uint)\n"
    "    Process(iThreadManager *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_PushToQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  QueueType arg2 ;
  iJob *arg3 = (iJob *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_PushToQueue",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_PushToQueue" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iThreadManager_PushToQueue" "', argument " "2"" of type '" "QueueType""'");
  } 
  arg2 = static_cast< QueueType >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iJob, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iThreadManager_PushToQueue" "', argument " "3"" of type '" "iJob *""'"); 
  }
  arg3 = reinterpret_cast< iJob * >(argp3);
  (arg1)->PushToQueue(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_Wait__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  csRefArray< iThreadReturn > *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_Wait",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_Wait" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefArrayT_iThreadReturn_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadManager_Wait" "', argument " "2"" of type '" "csRefArray< iThreadReturn > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iThreadManager_Wait" "', argument " "2"" of type '" "csRefArray< iThreadReturn > &""'"); 
  }
  arg2 = reinterpret_cast< csRefArray< iThreadReturn > * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iThreadManager_Wait" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->Wait(*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_Wait__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  csRefArray< iThreadReturn > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_Wait",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_Wait" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefArrayT_iThreadReturn_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iThreadManager_Wait" "', argument " "2"" of type '" "csRefArray< iThreadReturn > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iThreadManager_Wait" "', argument " "2"" of type '" "csRefArray< iThreadReturn > &""'"); 
  }
  arg2 = reinterpret_cast< csRefArray< iThreadReturn > * >(argp2);
  result = (bool)(arg1)->Wait(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_Wait(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csRefArrayT_iThreadReturn_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iThreadManager_Wait__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iThreadManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csRefArrayT_iThreadReturn_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iThreadManager_Wait__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iThreadManager_Wait'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Wait(iThreadManager *,csRefArray< iThreadReturn > &,bool)\n"
    "    Wait(iThreadManager *,csRefArray< iThreadReturn > &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_RunNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  QueueType arg2 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_RunNow",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_RunNow" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iThreadManager_RunNow" "', argument " "2"" of type '" "QueueType""'");
  } 
  arg2 = static_cast< QueueType >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iThreadManager_RunNow" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iThreadManager_RunNow" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->RunNow(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_GetThreadCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_GetThreadCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_GetThreadCount" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  result = (int32)(arg1)->GetThreadCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_SetAlwaysRunNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_SetAlwaysRunNow",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_SetAlwaysRunNow" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iThreadManager_SetAlwaysRunNow" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAlwaysRunNow(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_GetAlwaysRunNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_GetAlwaysRunNow",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_GetAlwaysRunNow" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  result = (bool)(arg1)->GetAlwaysRunNow();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iThreadManager_Exiting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iThreadManager_Exiting",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iThreadManager_Exiting" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  result = (bool)(arg1)->Exiting();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iThreadManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iThreadManager *arg1 = (iThreadManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iThreadManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iThreadManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iThreadManager" "', argument " "1"" of type '" "iThreadManager *""'"); 
  }
  arg1 = reinterpret_cast< iThreadManager * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iThreadManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iThreadManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDebugHelper_GetSupportedTests(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDebugHelper *arg1 = (iDebugHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDebugHelper_GetSupportedTests",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDebugHelper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDebugHelper_GetSupportedTests" "', argument " "1"" of type '" "iDebugHelper const *""'"); 
  }
  arg1 = reinterpret_cast< iDebugHelper * >(argp1);
  result = (int)((iDebugHelper const *)arg1)->GetSupportedTests();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDebugHelper_StateTest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDebugHelper *arg1 = (iDebugHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iString > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDebugHelper_StateTest",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDebugHelper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDebugHelper_StateTest" "', argument " "1"" of type '" "iDebugHelper *""'"); 
  }
  arg1 = reinterpret_cast< iDebugHelper * >(argp1);
  result = (arg1)->StateTest();
  {
    csRef<iString> ref((csPtr<iString>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iString *)ref, SWIGTYPE_p_iString, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDebugHelper_Benchmark(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDebugHelper *arg1 = (iDebugHelper *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTicks result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDebugHelper_Benchmark",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDebugHelper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDebugHelper_Benchmark" "', argument " "1"" of type '" "iDebugHelper *""'"); 
  }
  arg1 = reinterpret_cast< iDebugHelper * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iDebugHelper_Benchmark" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csTicks)(arg1)->Benchmark(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDebugHelper_Dump__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDebugHelper *arg1 = (iDebugHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iString > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDebugHelper_Dump",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDebugHelper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDebugHelper_Dump" "', argument " "1"" of type '" "iDebugHelper *""'"); 
  }
  arg1 = reinterpret_cast< iDebugHelper * >(argp1);
  result = (arg1)->Dump();
  {
    csRef<iString> ref((csPtr<iString>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iString *)ref, SWIGTYPE_p_iString, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDebugHelper_Dump__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDebugHelper *arg1 = (iDebugHelper *) 0 ;
  iGraphics3D *arg2 = (iGraphics3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDebugHelper_Dump",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDebugHelper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDebugHelper_Dump" "', argument " "1"" of type '" "iDebugHelper *""'"); 
  }
  arg1 = reinterpret_cast< iDebugHelper * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iGraphics3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDebugHelper_Dump" "', argument " "2"" of type '" "iGraphics3D *""'"); 
  }
  arg2 = reinterpret_cast< iGraphics3D * >(argp2);
  (arg1)->Dump(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDebugHelper_Dump(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDebugHelper, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iDebugHelper_Dump__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDebugHelper, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iGraphics3D, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDebugHelper_Dump__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iDebugHelper_Dump'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Dump(iDebugHelper *)\n"
    "    Dump(iDebugHelper *,iGraphics3D *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDebugHelper_DebugCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDebugHelper *arg1 = (iDebugHelper *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDebugHelper_DebugCommand",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDebugHelper, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDebugHelper_DebugCommand" "', argument " "1"" of type '" "iDebugHelper *""'"); 
  }
  arg1 = reinterpret_cast< iDebugHelper * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDebugHelper_DebugCommand" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->DebugCommand((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDebugHelper_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDebugHelper_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDebugHelper_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDebugHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDebugHelper *arg1 = (iDebugHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDebugHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDebugHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDebugHelper" "', argument " "1"" of type '" "iDebugHelper *""'"); 
  }
  arg1 = reinterpret_cast< iDebugHelper * >(argp1);
  delete_iDebugHelper(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDebugHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDebugHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iCommandLineParser_Initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  int arg2 ;
  char **arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_Initialize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_Initialize" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  {
    if (!PyList_Check(obj1))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    arg2 = PyList_Size(obj1);
    typedef char * Char_Ptr;
    arg3 = new Char_Ptr[arg2 + 1];
    for (int i = 0; i < arg2; ++i)
    {
      PyObject * o = PyList_GetItem(obj1, i);
      if (!PyString_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain strings");
        delete [] arg3;
        return 0;
      }
      arg3[i] = PyString_AsString(o);
    }
    arg3[arg2] = 0;
  }
  (arg1)->Initialize(arg2,(char const *const (*))arg3);
  resultobj = SWIG_Py_Void();
  {
    delete [] arg3;
  }
  return resultobj;
fail:
  {
    delete [] arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_Reset" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetOption__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetOption",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetOption" "', argument " "1"" of type '" "iCommandLineParser const *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_GetOption" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iCommandLineParser_GetOption" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (char *)((iCommandLineParser const *)arg1)->GetOption((char const *)arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetOption__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetOption",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetOption" "', argument " "1"" of type '" "iCommandLineParser const *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_GetOption" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)((iCommandLineParser const *)arg1)->GetOption((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetName" "', argument " "1"" of type '" "iCommandLineParser const *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iCommandLineParser_GetName" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (char *)((iCommandLineParser const *)arg1)->GetName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetName" "', argument " "1"" of type '" "iCommandLineParser const *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  result = (char *)((iCommandLineParser const *)arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iCommandLineParser_GetName__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iCommandLineParser_GetName__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iCommandLineParser_GetName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetName(iCommandLineParser const *,size_t)\n"
    "    GetName(iCommandLineParser const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_AddOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_AddOption",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_AddOption" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_AddOption" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iCommandLineParser_AddOption" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->AddOption((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_AddName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_AddName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_AddName" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_AddName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->AddName((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_ReplaceOption__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_ReplaceOption",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_ReplaceOption" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_ReplaceOption" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iCommandLineParser_ReplaceOption" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iCommandLineParser_ReplaceOption" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  result = (bool)(arg1)->ReplaceOption((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_ReplaceOption__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_ReplaceOption",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_ReplaceOption" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_ReplaceOption" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iCommandLineParser_ReplaceOption" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->ReplaceOption((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_ReplaceOption(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iCommandLineParser_ReplaceOption__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_size_t(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iCommandLineParser_ReplaceOption__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iCommandLineParser_ReplaceOption'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ReplaceOption(iCommandLineParser *,char const *,char const *,size_t)\n"
    "    ReplaceOption(iCommandLineParser *,char const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_ReplaceName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_ReplaceName",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_ReplaceName" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_ReplaceName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iCommandLineParser_ReplaceName" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->ReplaceName((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_ReplaceName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_ReplaceName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_ReplaceName" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_ReplaceName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->ReplaceName((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_ReplaceName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iCommandLineParser_ReplaceName__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iCommandLineParser_ReplaceName__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iCommandLineParser_ReplaceName'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ReplaceName(iCommandLineParser *,char const *,size_t)\n"
    "    ReplaceName(iCommandLineParser *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetBoolOption__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetBoolOption",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetBoolOption" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_GetBoolOption" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iCommandLineParser_GetBoolOption" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->GetBoolOption((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetBoolOption__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetBoolOption",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetBoolOption" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCommandLineParser_GetBoolOption" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->GetBoolOption((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetBoolOption(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iCommandLineParser_GetBoolOption__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iCommandLineParser_GetBoolOption__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iCommandLineParser_GetBoolOption'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetBoolOption(iCommandLineParser *,char const *,bool)\n"
    "    GetBoolOption(iCommandLineParser *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetResourceDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetResourceDir",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetResourceDir" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  result = (char *)(arg1)->GetResourceDir();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetAppDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetAppDir",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetAppDir" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  result = (char *)(arg1)->GetAppDir();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetAppPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetAppPath",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetAppPath" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  result = (char *)(arg1)->GetAppPath();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetOptionName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetOptionName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetOptionName" "', argument " "1"" of type '" "iCommandLineParser const *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iCommandLineParser_GetOptionName" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (char *)((iCommandLineParser const *)arg1)->GetOptionName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetOption__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetOption",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetOption" "', argument " "1"" of type '" "iCommandLineParser const *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iCommandLineParser_GetOption" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (char *)((iCommandLineParser const *)arg1)->GetOption(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetOption__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_GetOption",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCommandLineParser_GetOption" "', argument " "1"" of type '" "iCommandLineParser const *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  result = (char *)((iCommandLineParser const *)arg1)->GetOption();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_GetOption(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iCommandLineParser_GetOption__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iCommandLineParser_GetOption__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iCommandLineParser_GetOption__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iCommandLineParser_GetOption__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iCommandLineParser_GetOption'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetOption(iCommandLineParser const *,char const *,size_t)\n"
    "    GetOption(iCommandLineParser const *,char const *)\n"
    "    GetOption(iCommandLineParser const *,size_t)\n"
    "    GetOption(iCommandLineParser const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCommandLineParser_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCommandLineParser_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iCommandLineParser_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iCommandLineParser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCommandLineParser *arg1 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iCommandLineParser",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCommandLineParser, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iCommandLineParser" "', argument " "1"" of type '" "iCommandLineParser *""'"); 
  }
  arg1 = reinterpret_cast< iCommandLineParser * >(argp1);
  delete_iCommandLineParser(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iCommandLineParser_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iCommandLineParser, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csColor_red_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_red_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_red_set" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_red_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->red = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_red_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_red_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_red_get" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  result = (float) ((arg1)->red);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_green_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_green_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_green_set" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_green_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->green = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_green_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_green_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_green_get" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  result = (float) ((arg1)->green);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_blue_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_blue_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_blue_set" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_blue_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->blue = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_blue_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_blue_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_blue_get" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  result = (float) ((arg1)->blue);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor",0,0)) SWIG_fail;
  result = (csColor *)new csColor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csColor" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csColor" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csColor" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csColor *)new csColor(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csColor" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csColor *)new csColor(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csColor" "', argument " "1"" of type '" "csColor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csColor" "', argument " "1"" of type '" "csColor const &""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  result = (csColor *)new csColor((csColor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csColor__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csColor__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csColor__SWIG_2(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csColor__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csColor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csColor()\n"
    "    csColor(float,float,float)\n"
    "    csColor(float)\n"
    "    csColor(csColor const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_Set",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_Set" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csColor_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csColor_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->Set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_Set" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor_Set" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor_Set" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  (arg1)->Set((csColor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csColor_Set__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csColor_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csColor *,float,float,float)\n"
    "    Set(csColor *,csColor const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_Clamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_Clamp",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_Clamp" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_Clamp" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csColor_Clamp" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csColor_Clamp" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->Clamp(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_ClampDown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_ClampDown",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_ClampDown" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  (arg1)->ClampDown();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_IsBlack__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_IsBlack",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_IsBlack" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  result = (bool)((csColor const *)arg1)->IsBlack();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_IsBlack__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_IsBlack",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_IsBlack" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_IsBlack" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)((csColor const *)arg1)->IsBlack(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_IsBlack(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csColor_IsBlack__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csColor_IsBlack__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csColor_IsBlack'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IsBlack(csColor const *)\n"
    "    IsBlack(csColor const *,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_assign" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor_assign" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor_assign" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  {
    csColor &_result_ref = (arg1)->operator =((csColor const &)*arg2);
    result = (csColor *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___imul__" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csColor &_result_ref = (arg1)->operator *=(arg2);
    result = (csColor *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___iadd__" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor___iadd__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor___iadd__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  {
    csColor &_result_ref = (arg1)->operator +=((csColor const &)*arg2);
    result = (csColor *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___isub__" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor___isub__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor___isub__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  {
    csColor &_result_ref = (arg1)->operator -=((csColor const &)*arg2);
    result = (csColor *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___imul__" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor___imul__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor___imul__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  {
    csColor &_result_ref = (arg1)->operator *=((csColor const &)*arg2);
    result = (csColor *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor___imul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csColor___imul____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csColor___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(csColor *,float)\n"
    "    operator *=(csColor *,csColor const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___mul__" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (arg1)->operator *(arg2);
  resultobj = SWIG_NewPointerObj((new csColor(static_cast< const csColor& >(result))), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___eq__" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor___eq__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor___eq__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  result = (bool)((csColor const *)arg1)->operator ==((csColor const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___ne__" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor___ne__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor___ne__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  result = (bool)((csColor const *)arg1)->operator !=((csColor const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_Add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_Add",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_Add" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_Add" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csColor_Add" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csColor_Add" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->Add(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_Subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_Subtract",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_Subtract" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor_Subtract" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csColor_Subtract" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csColor_Subtract" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->Subtract(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor_Luminance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor_Luminance",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor_Luminance" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  result = (float)((csColor const *)arg1)->Luminance();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___add__" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor___add__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor___add__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  result = csColor_operator_Sa_((csColor const *)arg1,(csColor const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csColor(static_cast< const csColor& >(result))), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___sub__" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor___sub__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor___sub__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  result = csColor_operator_Ss_((csColor const *)arg1,(csColor const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csColor(static_cast< const csColor& >(result))), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor___rmul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor___rmul__" "', argument " "1"" of type '" "csColor const *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor___rmul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csColor___rmul__((csColor const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csColor(static_cast< const csColor& >(result))), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csColor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = (csColor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csColor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csColor" "', argument " "1"" of type '" "csColor *""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csColor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csColor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csColor4_alpha_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_alpha_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_alpha_set" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor4_alpha_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->alpha = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_alpha_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_alpha_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_alpha_get" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  result = (float) ((arg1)->alpha);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor4__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor4",0,0)) SWIG_fail;
  result = (csColor4 *)new csColor4();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor4__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor4",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csColor4" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csColor4" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csColor4" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csColor4" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csColor4 *)new csColor4(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor4__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor4",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csColor4" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csColor4" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csColor4" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csColor4 *)new csColor4(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor4__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csColor4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csColor4" "', argument " "1"" of type '" "csColor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csColor4" "', argument " "1"" of type '" "csColor const &""'"); 
  }
  arg1 = reinterpret_cast< csColor * >(argp1);
  result = (csColor4 *)new csColor4((csColor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csColor4(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csColor4__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csColor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csColor4__SWIG_3(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csColor4__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csColor4__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csColor4'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csColor4()\n"
    "    csColor4(float,float,float,float)\n"
    "    csColor4(float,float,float)\n"
    "    csColor4(csColor const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_Set" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4_Set" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4_Set" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  (arg1)->Set((csColor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_Set" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4_Set" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4_Set" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  arg2 = reinterpret_cast< csColor4 * >(argp2);
  (arg1)->Set((csColor4 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_Set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_Set",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_Set" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor4_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csColor4_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csColor4_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->Set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_Set__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_Set",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_Set" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor4_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csColor4_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csColor4_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csColor4_Set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->Set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4_Set__SWIG_0(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csColor4_Set__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csColor4_Set__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csColor4_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csColor4 *,csColor const &)\n"
    "    Set(csColor4 *,csColor4 const &)\n"
    "    Set(csColor4 *,float,float,float)\n"
    "    Set(csColor4 *,float,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_assign__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_assign" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4_assign" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4_assign" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  arg2 = reinterpret_cast< csColor4 * >(argp2);
  {
    csColor4 &_result_ref = (arg1)->operator =((csColor4 const &)*arg2);
    result = (csColor4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_assign__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4_assign" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4_assign" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4_assign" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  {
    csColor4 &_result_ref = (arg1)->operator =((csColor const &)*arg2);
    result = (csColor4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4_assign(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4_assign__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4_assign__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csColor4_assign'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator =(csColor4 *,csColor4 const &)\n"
    "    operator =(csColor4 *,csColor const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4___imul__" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csColor4___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csColor4 &_result_ref = (arg1)->operator *=(arg2);
    result = (csColor4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4___iadd__" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4___iadd__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4___iadd__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  arg2 = reinterpret_cast< csColor4 * >(argp2);
  {
    csColor4 &_result_ref = (arg1)->operator +=((csColor4 const &)*arg2);
    result = (csColor4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4___iadd__" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4___iadd__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4___iadd__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  {
    csColor4 &_result_ref = (arg1)->operator +=((csColor const &)*arg2);
    result = (csColor4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csColor4___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(csColor4 *,csColor4 const &)\n"
    "    operator +=(csColor4 *,csColor const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4___isub__" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4___isub__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4___isub__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  arg2 = reinterpret_cast< csColor4 * >(argp2);
  {
    csColor4 &_result_ref = (arg1)->operator -=((csColor4 const &)*arg2);
    result = (csColor4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csColor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4___isub__" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4___isub__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4___isub__" "', argument " "2"" of type '" "csColor const &""'"); 
  }
  arg2 = reinterpret_cast< csColor * >(argp2);
  {
    csColor &_result_ref = (arg1)->operator -=((csColor const &)*arg2);
    result = (csColor *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csColor, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csColor4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csColor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csColor4___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csColor4___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(csColor4 *,csColor4 const &)\n"
    "    operator -=(csColor4 *,csColor const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4___eq__" "', argument " "1"" of type '" "csColor4 const *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4___eq__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4___eq__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  arg2 = reinterpret_cast< csColor4 * >(argp2);
  result = (bool)((csColor4 const *)arg1)->operator ==((csColor4 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csColor4___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  csColor4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csColor4___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csColor4___ne__" "', argument " "1"" of type '" "csColor4 const *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csColor4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csColor4___ne__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csColor4___ne__" "', argument " "2"" of type '" "csColor4 const &""'"); 
  }
  arg2 = reinterpret_cast< csColor4 * >(argp2);
  result = (bool)((csColor4 const *)arg1)->operator !=((csColor4 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csColor4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csColor4 *arg1 = (csColor4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csColor4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csColor4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csColor4" "', argument " "1"" of type '" "csColor4 *""'"); 
  }
  arg1 = reinterpret_cast< csColor4 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csColor4_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csColor4, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csCommandLineHelper_Help__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iCommandLineParser *arg2 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandLineHelper_Help",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandLineHelper_Help" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csCommandLineHelper_Help" "', argument " "2"" of type '" "iCommandLineParser *""'"); 
  }
  arg2 = reinterpret_cast< iCommandLineParser * >(argp2);
  csCommandLineHelper::Help(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandLineHelper_Help__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandLineHelper_Help",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandLineHelper_Help" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  csCommandLineHelper::Help(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandLineHelper_Help(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csCommandLineHelper_Help__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csCommandLineHelper_Help__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csCommandLineHelper_Help'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Help(iObjectRegistry *,iCommandLineParser *)\n"
    "    csCommandLineHelper::Help(iObjectRegistry *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandLineHelper_CheckHelp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iCommandLineParser *arg2 = (iCommandLineParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandLineHelper_CheckHelp",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandLineHelper_CheckHelp" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csCommandLineHelper_CheckHelp" "', argument " "2"" of type '" "iCommandLineParser *""'"); 
  }
  arg2 = reinterpret_cast< iCommandLineParser * >(argp2);
  result = (bool)csCommandLineHelper::CheckHelp(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandLineHelper_CheckHelp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandLineHelper_CheckHelp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandLineHelper_CheckHelp" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (bool)csCommandLineHelper::CheckHelp(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandLineHelper_CheckHelp(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csCommandLineHelper_CheckHelp__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csCommandLineHelper_CheckHelp__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csCommandLineHelper_CheckHelp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CheckHelp(iObjectRegistry *,iCommandLineParser *)\n"
    "    csCommandLineHelper::CheckHelp(iObjectRegistry *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csCommandLineHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandLineHelper *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csCommandLineHelper",0,0)) SWIG_fail;
  result = (csCommandLineHelper *)new csCommandLineHelper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCommandLineHelper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csCommandLineHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandLineHelper *arg1 = (csCommandLineHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csCommandLineHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCommandLineHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csCommandLineHelper" "', argument " "1"" of type '" "csCommandLineHelper *""'"); 
  }
  arg1 = reinterpret_cast< csCommandLineHelper * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csCommandLineHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csCommandLineHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csFlags__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  uint32 arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csFlags *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csFlags",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csFlags" "', argument " "1"" of type '" "uint32""'");
  } 
  arg1 = static_cast< uint32 >(val1);
  result = (csFlags *)new csFlags(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csFlags, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csFlags__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csFlags",0,0)) SWIG_fail;
  result = (csFlags *)new csFlags();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csFlags, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csFlags(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csFlags__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csFlags__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csFlags'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csFlags(uint32)\n"
    "    csFlags()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_SetAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_SetAll",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_SetAll" "', argument " "1"" of type '" "csFlags *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFlags_SetAll" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  (arg1)->SetAll(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_Set" "', argument " "1"" of type '" "csFlags *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFlags_Set" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  (arg1)->Set(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_Reset",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_Reset" "', argument " "1"" of type '" "csFlags *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFlags_Reset" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  (arg1)->Reset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  uint32 arg2 ;
  uint32 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_Set" "', argument " "1"" of type '" "csFlags *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFlags_Set" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csFlags_Set" "', argument " "3"" of type '" "uint32""'");
  } 
  arg3 = static_cast< uint32 >(val3);
  (arg1)->Set(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csFlags, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csFlags_Set__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csFlags, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csFlags_Set__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csFlags_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csFlags *,uint32)\n"
    "    Set(csFlags *,uint32,uint32)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_SetBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  uint32 arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_SetBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_SetBool" "', argument " "1"" of type '" "csFlags *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFlags_SetBool" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csFlags_SetBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->SetBool(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_Get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_Get" "', argument " "1"" of type '" "csFlags const *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  result = ((csFlags const *)arg1)->Get();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_Check(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_Check",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_Check" "', argument " "1"" of type '" "csFlags const *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFlags_Check" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  result = (bool)((csFlags const *)arg1)->Check(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags_CheckAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags_CheckAll",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags_CheckAll" "', argument " "1"" of type '" "csFlags const *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFlags_CheckAll" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  result = (bool)((csFlags const *)arg1)->CheckAll(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  csFlags *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags___eq__" "', argument " "1"" of type '" "csFlags const *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csFlags,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csFlags___eq__" "', argument " "2"" of type '" "csFlags const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csFlags___eq__" "', argument " "2"" of type '" "csFlags const &""'"); 
  }
  arg2 = reinterpret_cast< csFlags * >(argp2);
  result = (bool)((csFlags const *)arg1)->operator ==((csFlags const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  csFlags *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags___ne__" "', argument " "1"" of type '" "csFlags const *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csFlags,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csFlags___ne__" "', argument " "2"" of type '" "csFlags const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csFlags___ne__" "', argument " "2"" of type '" "csFlags const &""'"); 
  }
  arg2 = reinterpret_cast< csFlags * >(argp2);
  result = (bool)((csFlags const *)arg1)->operator !=((csFlags const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags___and__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  csFlags *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csFlags result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags___and__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags___and__" "', argument " "1"" of type '" "csFlags const *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csFlags,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csFlags___and__" "', argument " "2"" of type '" "csFlags const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csFlags___and__" "', argument " "2"" of type '" "csFlags const &""'"); 
  }
  arg2 = reinterpret_cast< csFlags * >(argp2);
  result = ((csFlags const *)arg1)->operator &((csFlags const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csFlags(static_cast< const csFlags& >(result))), SWIGTYPE_p_csFlags, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFlags___invert__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csFlags result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFlags___invert__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFlags___invert__" "', argument " "1"" of type '" "csFlags const *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  result = ((csFlags const *)arg1)->operator ~();
  resultobj = SWIG_NewPointerObj((new csFlags(static_cast< const csFlags& >(result))), SWIGTYPE_p_csFlags, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFlags *arg1 = (csFlags *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csFlags",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFlags, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csFlags" "', argument " "1"" of type '" "csFlags *""'"); 
  }
  arg1 = reinterpret_cast< csFlags * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csFlags_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csFlags, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Request__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Request",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Request" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iGeneralStringSetBase_Request" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->Request((char const *)arg2);
  {
    CS::StringID< CS::StringSetTag::General > stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Request__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Request",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Request" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > const *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  {
    arg2 = (CS::StringID< CS::StringSetTag::General >)PyLong_AsUnsignedLong(obj1);
  }
  result = (char *)((iStringSetBase< CS::StringSetTag::General > const *)arg1)->Request(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Request(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iGeneralStringSetBase_Request__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        return _wrap_iGeneralStringSetBase_Request__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iGeneralStringSetBase_Request'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Request(iStringSetBase< CS::StringSetTag::General > *,char const *)\n"
    "    Request(iStringSetBase< CS::StringSetTag::General > const *,CS::StringID< CS::StringSetTag::General >)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Contains__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Contains" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > const *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iGeneralStringSetBase_Contains" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)((iStringSetBase< CS::StringSetTag::General > const *)arg1)->Contains((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Contains__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Contains" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > const *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  {
    arg2 = (CS::StringID< CS::StringSetTag::General >)PyLong_AsUnsignedLong(obj1);
  }
  result = (bool)((iStringSetBase< CS::StringSetTag::General > const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Contains(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iGeneralStringSetBase_Contains__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        return _wrap_iGeneralStringSetBase_Contains__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iGeneralStringSetBase_Contains'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Contains(iStringSetBase< CS::StringSetTag::General > const *,char const *)\n"
    "    Contains(iStringSetBase< CS::StringSetTag::General > const *,CS::StringID< CS::StringSetTag::General >)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Delete__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Delete",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Delete" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iGeneralStringSetBase_Delete" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->Delete((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Delete__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Delete",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Delete" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  {
    arg2 = (CS::StringID< CS::StringSetTag::General >)PyLong_AsUnsignedLong(obj1);
  }
  result = (bool)(arg1)->Delete(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Delete(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iGeneralStringSetBase_Delete__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        return _wrap_iGeneralStringSetBase_Delete__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iGeneralStringSetBase_Delete'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Delete(iStringSetBase< CS::StringSetTag::General > *,char const *)\n"
    "    Delete(iStringSetBase< CS::StringSetTag::General > *,CS::StringID< CS::StringSetTag::General >)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Empty" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_Clear" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_GetSize" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > const *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  result = ((iStringSetBase< CS::StringSetTag::General > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iGeneralStringSetBase_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iGeneralStringSetBase_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iGeneralStringSetBase_IsEmpty" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > const *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  result = (bool)((iStringSetBase< CS::StringSetTag::General > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iGeneralStringSetBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSetBase< CS::StringSetTag::General > *arg1 = (iStringSetBase< CS::StringSetTag::General > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iGeneralStringSetBase",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iGeneralStringSetBase" "', argument " "1"" of type '" "iStringSetBase< CS::StringSetTag::General > *""'"); 
  }
  arg1 = reinterpret_cast< iStringSetBase< CS::StringSetTag::General > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iGeneralStringSetBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iStringSet_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringSet_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iStringSet_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iStringSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringSet *arg1 = (iStringSet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iStringSet",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringSet, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iStringSet" "', argument " "1"" of type '" "iStringSet *""'"); 
  }
  arg1 = reinterpret_cast< iStringSet * >(argp1);
  delete_iStringSet(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iStringSet_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iStringSet, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csStringIDSet__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csSet< csStringID > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csStringIDSet",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csStringIDSet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csStringIDSet" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csStringIDSet" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csSet< csStringID > *)new csSet< csStringID >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csStringIDSet__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSet< csStringID > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csStringIDSet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csStringIDSet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csStringIDSet" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csSet< csStringID > *)new csSet< csStringID >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csStringIDSet__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csSet< csStringID > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csStringIDSet",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csStringIDSet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csSet< csStringID > *)new csSet< csStringID >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csStringIDSet__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csStringIDSet",0,0)) SWIG_fail;
  result = (csSet< csStringID > *)new csSet< csStringID >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csStringIDSet(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csStringIDSet__SWIG_3(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csStringIDSet__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csStringIDSet__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csStringIDSet__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csStringIDSet'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csSet< csStringID >(int,int,int)\n"
    "    csSet< csStringID >(int,int)\n"
    "    csSet< csStringID >(int)\n"
    "    csSet< csStringID >()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_Add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  CS::StringID< CS::StringSetTag::General > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_Add",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_Add" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csStringIDSet_Add" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csStringIDSet_Add" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  arg2 = reinterpret_cast< CS::StringID< CS::StringSetTag::General > * >(argp2);
  (arg1)->Add((CS::StringID< CS::StringSetTag::General > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_AddNoTest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  CS::StringID< CS::StringSetTag::General > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_AddNoTest",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_AddNoTest" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csStringIDSet_AddNoTest" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csStringIDSet_AddNoTest" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  arg2 = reinterpret_cast< CS::StringID< CS::StringSetTag::General > * >(argp2);
  (arg1)->AddNoTest((CS::StringID< CS::StringSetTag::General > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  CS::StringID< CS::StringSetTag::General > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_Contains" "', argument " "1"" of type '" "csSet< csStringID > const *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csStringIDSet_Contains" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csStringIDSet_Contains" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  arg2 = reinterpret_cast< CS::StringID< CS::StringSetTag::General > * >(argp2);
  result = (bool)((csSet< csStringID > const *)arg1)->Contains((CS::StringID< CS::StringSetTag::General > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_In(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  CS::StringID< CS::StringSetTag::General > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_In",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_In" "', argument " "1"" of type '" "csSet< csStringID > const *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csStringIDSet_In" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csStringIDSet_In" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  arg2 = reinterpret_cast< CS::StringID< CS::StringSetTag::General > * >(argp2);
  result = (bool)((csSet< csStringID > const *)arg1)->In((CS::StringID< CS::StringSetTag::General > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_DeleteAll" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_Empty" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  CS::StringID< CS::StringSetTag::General > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_Delete",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_Delete" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csStringIDSet_Delete" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csStringIDSet_Delete" "', argument " "2"" of type '" "CS::StringID< CS::StringSetTag::General > const &""'"); 
  }
  arg2 = reinterpret_cast< CS::StringID< CS::StringSetTag::General > * >(argp2);
  result = (bool)(arg1)->Delete((CS::StringID< CS::StringSetTag::General > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_GetSize" "', argument " "1"" of type '" "csSet< csStringID > const *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  result = ((csSet< csStringID > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_IsEmpty" "', argument " "1"" of type '" "csSet< csStringID > const *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  result = (bool)((csSet< csStringID > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet___len__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet___len__" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  result = (int)csSet_Sl_csStringID_Sg____len__(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet___contains__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet___contains__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet___contains__" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  {
    arg2 = (csStringID)PyLong_AsUnsignedLong(obj1);
  }
  result = (bool)csSet_Sl_csStringID_Sg____contains__(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet_append",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet_append" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  {
    arg2 = (csStringID)PyLong_AsUnsignedLong(obj1);
  }
  csSet_Sl_csStringID_Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csStringIDSet___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csStringIDSet___delitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csStringIDSet___delitem__" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  {
    arg2 = (csStringID)PyLong_AsUnsignedLong(obj1);
  }
  result = (bool)csSet_Sl_csStringID_Sg____delitem__(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csStringIDSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSet< csStringID > *arg1 = (csSet< csStringID > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csStringIDSet",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csStringIDSet" "', argument " "1"" of type '" "csSet< csStringID > *""'"); 
  }
  arg1 = reinterpret_cast< csSet< csStringID > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csStringIDSet_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csRefCount__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRefCount *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csRefCount",0,0)) SWIG_fail;
  result = (csRefCount *)new csRefCount();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRefCount, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csRefCount__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRefCount *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csRefCount *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefCount,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csRefCount" "', argument " "1"" of type '" "csRefCount const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csRefCount" "', argument " "1"" of type '" "csRefCount const &""'"); 
  }
  arg1 = reinterpret_cast< csRefCount * >(argp1);
  result = (csRefCount *)new csRefCount((csRefCount const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRefCount, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csRefCount(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csRefCount__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csRefCount, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csRefCount__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csRefCount'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csRefCount()\n"
    "    csRefCount(csRefCount const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRefCount_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRefCount *arg1 = (csRefCount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRefCount_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRefCount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRefCount_IncRef" "', argument " "1"" of type '" "csRefCount *""'"); 
  }
  arg1 = reinterpret_cast< csRefCount * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRefCount_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRefCount *arg1 = (csRefCount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRefCount_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRefCount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRefCount_DecRef" "', argument " "1"" of type '" "csRefCount *""'"); 
  }
  arg1 = reinterpret_cast< csRefCount * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRefCount_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRefCount *arg1 = (csRefCount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRefCount_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRefCount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRefCount_GetRefCount" "', argument " "1"" of type '" "csRefCount const *""'"); 
  }
  arg1 = reinterpret_cast< csRefCount * >(argp1);
  result = (int)((csRefCount const *)arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csRefCount_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csRefCount, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_InternalRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Utility::InternalRefCount *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_InternalRefCount",0,0)) SWIG_fail;
  result = (CS::Utility::InternalRefCount *)new CS::Utility::InternalRefCount();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Utility__InternalRefCount, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InternalRefCount_InternalIncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Utility::InternalRefCount *arg1 = (CS::Utility::InternalRefCount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"InternalRefCount_InternalIncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Utility__InternalRefCount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InternalRefCount_InternalIncRef" "', argument " "1"" of type '" "CS::Utility::InternalRefCount *""'"); 
  }
  arg1 = reinterpret_cast< CS::Utility::InternalRefCount * >(argp1);
  (arg1)->InternalIncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InternalRefCount_InternalDecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Utility::InternalRefCount *arg1 = (CS::Utility::InternalRefCount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"InternalRefCount_InternalDecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Utility__InternalRefCount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InternalRefCount_InternalDecRef" "', argument " "1"" of type '" "CS::Utility::InternalRefCount *""'"); 
  }
  arg1 = reinterpret_cast< CS::Utility::InternalRefCount * >(argp1);
  (arg1)->InternalDecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InternalRefCount_GetInternalRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Utility::InternalRefCount *arg1 = (CS::Utility::InternalRefCount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"InternalRefCount_GetInternalRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Utility__InternalRefCount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InternalRefCount_GetInternalRefCount" "', argument " "1"" of type '" "CS::Utility::InternalRefCount const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Utility::InternalRefCount * >(argp1);
  result = (int)((CS::Utility::InternalRefCount const *)arg1)->GetInternalRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *InternalRefCount_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Utility__InternalRefCount, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csDefaultRunLoop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csDefaultRunLoop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csDefaultRunLoop" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (bool)csDefaultRunLoop(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlatformStartup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlatformStartup",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlatformStartup" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (bool)csPlatformStartup(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlatformShutdown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlatformShutdown",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlatformShutdown" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (bool)csPlatformShutdown(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPrintf__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPrintf",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPrintf" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)csPrintf((char const *)arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPrintf(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,1);
  varargs = PyTuple_GetSlice(args,1,PyTuple_Size(args)+1);
  resultobj = _wrap_csPrintf__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_csFPrintf__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFPrintf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FILE, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFPrintf" "', argument " "1"" of type '" "FILE *""'"); 
  }
  arg1 = reinterpret_cast< FILE * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csFPrintf" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)csFPrintf(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFPrintf(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,2);
  varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args)+1);
  resultobj = _wrap_csFPrintf__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_csPrintfErr__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPrintfErr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPrintfErr" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)csPrintfErr((char const *)arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPrintfErr(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,1);
  varargs = PyTuple_GetSlice(args,1,PyTuple_Size(args)+1);
  resultobj = _wrap_csPrintfErr__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_csGetTicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTicks result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csGetTicks",0,0)) SWIG_fail;
  result = (csTicks)csGetTicks();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csGetMicroTicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csGetMicroTicks",0,0)) SWIG_fail;
  result = csGetMicroTicks();
  resultobj = SWIG_NewPointerObj((new int64(static_cast< const int64& >(result))), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSleep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSleep",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csSleep" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  csSleep(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csGetUsername(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csGetUsername",0,0)) SWIG_fail;
  result = csGetUsername();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csGetPlatformConfigPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csGetPlatformConfigPath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csGetPlatformConfigPath" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csGetPlatformConfigPath" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = csGetPlatformConfigPath((char const *)arg1,arg2);
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csGetPlatformConfigPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csGetPlatformConfigPath",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csGetPlatformConfigPath" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = csGetPlatformConfigPath((char const *)arg1);
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csGetPlatformConfigPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csGetPlatformConfigPath__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csGetPlatformConfigPath__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csGetPlatformConfigPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csGetPlatformConfigPath(char const *,bool)\n"
    "    csGetPlatformConfigPath(char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csString arg1 ;
  csString arg2 ;
  scfInterfaceID arg3 ;
  int arg4 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csPluginRequest *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPluginRequest",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csPluginRequest" "', argument " "3"" of type '" "scfInterfaceID""'");
  } 
  arg3 = static_cast< scfInterfaceID >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csPluginRequest" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (csPluginRequest *)new csPluginRequest(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPluginRequest, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPluginRequest *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPluginRequest",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPluginRequest,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPluginRequest" "', argument " "1"" of type '" "csPluginRequest const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPluginRequest" "', argument " "1"" of type '" "csPluginRequest const &""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  result = (csPluginRequest *)new csPluginRequest((csPluginRequest const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPluginRequest, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csPluginRequest, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csPluginRequest__SWIG_1(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = PyString_Check(argv[0]);
    }
    if (_v) {
      {
        _v = PyString_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csPluginRequest__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csPluginRequest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csPluginRequest(csString,csString,scfInterfaceID,int)\n"
    "    csPluginRequest(csPluginRequest const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequest_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  csPluginRequest *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPluginRequest *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequest_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequest_assign" "', argument " "1"" of type '" "csPluginRequest *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPluginRequest,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequest_assign" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequest_assign" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  arg2 = reinterpret_cast< csPluginRequest * >(argp2);
  {
    csPluginRequest &_result_ref = (arg1)->operator =((csPluginRequest const &)*arg2);
    result = (csPluginRequest *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPluginRequest, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequest___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  csPluginRequest *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequest___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequest___eq__" "', argument " "1"" of type '" "csPluginRequest const *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPluginRequest,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequest___eq__" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequest___eq__" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  arg2 = reinterpret_cast< csPluginRequest * >(argp2);
  result = (bool)((csPluginRequest const *)arg1)->operator ==((csPluginRequest const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequest___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  csPluginRequest *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequest___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequest___ne__" "', argument " "1"" of type '" "csPluginRequest const *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPluginRequest,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequest___ne__" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequest___ne__" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  arg2 = reinterpret_cast< csPluginRequest * >(argp2);
  result = (bool)((csPluginRequest const *)arg1)->operator !=((csPluginRequest const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequest_GetClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequest_GetClassName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequest_GetClassName" "', argument " "1"" of type '" "csPluginRequest const *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  result = ((csPluginRequest const *)arg1)->GetClassName();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequest_GetInterfaceName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequest_GetInterfaceName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequest_GetInterfaceName" "', argument " "1"" of type '" "csPluginRequest const *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  result = ((csPluginRequest const *)arg1)->GetInterfaceName();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequest_GetInterfaceID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequest_GetInterfaceID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequest_GetInterfaceID" "', argument " "1"" of type '" "csPluginRequest const *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  result = (scfInterfaceID)((csPluginRequest const *)arg1)->GetInterfaceID();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequest_GetInterfaceVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequest_GetInterfaceVersion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequest_GetInterfaceVersion" "', argument " "1"" of type '" "csPluginRequest const *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  result = (int)((csPluginRequest const *)arg1)->GetInterfaceVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPluginRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPluginRequest *arg1 = (csPluginRequest *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPluginRequest",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPluginRequest, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPluginRequest" "', argument " "1"" of type '" "csPluginRequest *""'"); 
  }
  arg1 = reinterpret_cast< csPluginRequest * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPluginRequest_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPluginRequest, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csInitializer__CreateEnvironment2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char **arg2 ;
  bool arg3 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iObjectRegistry *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer__CreateEnvironment2",2,2,&obj0,&obj1)) SWIG_fail;
  {
    if (!PyList_Check(obj0))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    arg1 = PyList_Size(obj0);
    typedef char * Char_Ptr;
    arg2 = new Char_Ptr[arg1 + 1];
    for (int i = 0; i < arg1; ++i)
    {
      PyObject * o = PyList_GetItem(obj0, i);
      if (!PyString_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain strings");
        delete [] arg2;
        return 0;
      }
      arg2[i] = PyString_AsString(o);
    }
    arg2[arg1] = 0;
  }
  ecode3 = SWIG_AsVal_bool(obj1, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csInitializer__CreateEnvironment2" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (iObjectRegistry *)csInitializer::CreateEnvironment(arg1,(char const *const (*))arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  {
    delete [] arg2;
  }
  return resultobj;
fail:
  {
    delete [] arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer__CreateEnvironment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char **arg2 ;
  PyObject * obj0 = 0 ;
  iObjectRegistry *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer__CreateEnvironment",1,1,&obj0)) SWIG_fail;
  {
    if (!PyList_Check(obj0))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    arg1 = PyList_Size(obj0);
    typedef char * Char_Ptr;
    arg2 = new Char_Ptr[arg1 + 1];
    for (int i = 0; i < arg1; ++i)
    {
      PyObject * o = PyList_GetItem(obj0, i);
      if (!PyString_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain strings");
        delete [] arg2;
        return 0;
      }
      arg2[i] = PyString_AsString(o);
    }
    arg2[arg1] = 0;
  }
  result = (iObjectRegistry *)csInitializer::CreateEnvironment(arg1,(char const *const (*))arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  {
    delete [] arg2;
  }
  return resultobj;
fail:
  {
    delete [] arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer__InitializeSCF__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char **arg2 ;
  bool arg3 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer__InitializeSCF",2,2,&obj0,&obj1)) SWIG_fail;
  {
    if (!PyList_Check(obj0))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    arg1 = PyList_Size(obj0);
    typedef char * Char_Ptr;
    arg2 = new Char_Ptr[arg1 + 1];
    for (int i = 0; i < arg1; ++i)
    {
      PyObject * o = PyList_GetItem(obj0, i);
      if (!PyString_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain strings");
        delete [] arg2;
        return 0;
      }
      arg2[i] = PyString_AsString(o);
    }
    arg2[arg1] = 0;
  }
  ecode3 = SWIG_AsVal_bool(obj1, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csInitializer__InitializeSCF" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)csInitializer::InitializeSCF(arg1,(char const *const (*))arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  {
    delete [] arg2;
  }
  return resultobj;
fail:
  {
    delete [] arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer__InitializeSCF__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char **arg2 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer__InitializeSCF",1,1,&obj0)) SWIG_fail;
  {
    if (!PyList_Check(obj0))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    arg1 = PyList_Size(obj0);
    typedef char * Char_Ptr;
    arg2 = new Char_Ptr[arg1 + 1];
    for (int i = 0; i < arg1; ++i)
    {
      PyObject * o = PyList_GetItem(obj0, i);
      if (!PyString_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain strings");
        delete [] arg2;
        return 0;
      }
      arg2[i] = PyString_AsString(o);
    }
    arg2[arg1] = 0;
  }
  result = (bool)csInitializer::InitializeSCF(arg1,(char const *const (*))arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  {
    delete [] arg2;
  }
  return resultobj;
fail:
  {
    delete [] arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer__InitializeSCF(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_csInitializer__InitializeSCF__SWIG_1(self, args);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_char, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csInitializer__InitializeSCF__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csInitializer__InitializeSCF__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csInitializer__InitializeSCF'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    InitializeSCF(int,char const *const [],bool)\n"
    "    csInitializer::InitializeSCF(int,char const *const [])\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateObjectRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateObjectRegistry",0,0)) SWIG_fail;
  result = (iObjectRegistry *)csInitializer::CreateObjectRegistry();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreatePluginManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iPluginManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreatePluginManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreatePluginManager" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iPluginManager *)csInitializer::CreatePluginManager(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iPluginManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateEventQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iEventQueue *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateEventQueue",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateEventQueue" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iEventQueue *)csInitializer::CreateEventQueue(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iEventQueue, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateThreadManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iThreadManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateThreadManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateThreadManager" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iThreadManager *)csInitializer::CreateThreadManager(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iThreadManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateVirtualClock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iVirtualClock *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateVirtualClock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateVirtualClock" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iVirtualClock *)csInitializer::CreateVirtualClock(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iVirtualClock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateCommandLineParser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  int arg2 ;
  char **arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iCommandLineParser *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateCommandLineParser",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateCommandLineParser" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    if (!PyList_Check(obj1))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    arg2 = PyList_Size(obj1);
    typedef char * Char_Ptr;
    arg3 = new Char_Ptr[arg2 + 1];
    for (int i = 0; i < arg2; ++i)
    {
      PyObject * o = PyList_GetItem(obj1, i);
      if (!PyString_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain strings");
        delete [] arg3;
        return 0;
      }
      arg3[i] = PyString_AsString(o);
    }
    arg3[arg2] = 0;
  }
  result = (iCommandLineParser *)csInitializer::CreateCommandLineParser(arg1,arg2,(char const *const (*))arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  {
    delete [] arg3;
  }
  return resultobj;
fail:
  {
    delete [] arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateVerbosityManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iVerbosityManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateVerbosityManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateVerbosityManager" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iVerbosityManager *)csInitializer::CreateVerbosityManager(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iVerbosityManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateConfigManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iConfigManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateConfigManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateConfigManager" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iConfigManager *)csInitializer::CreateConfigManager(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iConfigManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateInputDrivers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateInputDrivers",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateInputDrivers" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (bool)csInitializer::CreateInputDrivers(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateStringSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateStringSet",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateStringSet" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (bool)csInitializer::CreateStringSet(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CreateSystemOpenManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iSystemOpenManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CreateSystemOpenManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CreateSystemOpenManager" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iSystemOpenManager *)csInitializer::CreateSystemOpenManager(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iSystemOpenManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_SetupConfigManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  {
    arg2 = 0; 
  }
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_SetupConfigManager",1,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_SetupConfigManager" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  if (obj1) {
    res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csInitializer_SetupConfigManager" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
  }
  if (obj2) {
    res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csInitializer_SetupConfigManager" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
  }
  result = (bool)csInitializer::SetupConfigManager(arg1,(char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_SetupVFS__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iVFS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_SetupVFS",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_SetupVFS" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csInitializer_SetupVFS" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (iVFS *)csInitializer::SetupVFS(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iVFS, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_SetupVFS__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iVFS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_SetupVFS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_SetupVFS" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (iVFS *)csInitializer::SetupVFS(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iVFS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_SetupVFS(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csInitializer_SetupVFS__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csInitializer_SetupVFS__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csInitializer_SetupVFS'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetupVFS(iObjectRegistry *,char const *)\n"
    "    csInitializer::SetupVFS(iObjectRegistry *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer__RequestPlugins(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csArray< csPluginRequest > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer__RequestPlugins",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer__RequestPlugins" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csInitializer__RequestPlugins" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csInitializer__RequestPlugins" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csPluginRequest > * >(argp2);
  result = (bool)csInitializer::RequestPlugins(arg1,(csArray< csPluginRequest > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_OpenApplication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_OpenApplication",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_OpenApplication" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (bool)csInitializer::OpenApplication(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_CloseApplication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_CloseApplication",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_CloseApplication" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  csInitializer::CloseApplication(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer__SetupEventHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer__SetupEventHandler",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer__SetupEventHandler" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csInitializer__SetupEventHandler" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  {
    int cnt; 
    if (!PyList_Check(obj2))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    cnt = PyList_Size(obj2);
    csEventID * ptr = new csEventID[cnt];
    for (int i = 0; i < cnt; ++i)
    {
      PyObject * o = PyList_GetItem(obj2, i);
      if (!PyNumber_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain numbers");
        delete [] ptr;
        return 0;
      }
      ptr[i] = (csEventID) PyInt_AsUnsignedLongMask(o);
    }
    arg3 = ptr;
  }
  result = (bool)csInitializer::SetupEventHandler(arg1,arg2,(CS::StringID< CS::StringSetTag::General > const (*))arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_DestroyApplication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_DestroyApplication",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInitializer_DestroyApplication" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  csInitializer::DestroyApplication(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInitializer_GetDefaultAppID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInitializer_GetDefaultAppID",0,0)) SWIG_fail;
  result = (char *)csInitializer::GetDefaultAppID();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csInitializer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csInitializer *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csInitializer",0,0)) SWIG_fail;
  result = (csInitializer *)new csInitializer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csInitializer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csInitializer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csInitializer *arg1 = (csInitializer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csInitializer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csInitializer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csInitializer" "', argument " "1"" of type '" "csInitializer *""'"); 
  }
  arg1 = reinterpret_cast< csInitializer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csInitializer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csInitializer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csPluginRequestArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< csPluginRequest > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPluginRequestArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPluginRequestArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csPluginRequestArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPluginRequestArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csArray< csPluginRequest > *)new csArray< csPluginRequest >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequestArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csPluginRequest > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPluginRequestArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPluginRequestArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArray< csPluginRequest > *)new csArray< csPluginRequest >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequestArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPluginRequestArray",0,0)) SWIG_fail;
  result = (csArray< csPluginRequest > *)new csArray< csPluginRequest >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequestArray__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  CS::Memory::AllocatorMalloc *arg2 = 0 ;
  csArrayCapacityFixedGrow< 16 > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csArray< csPluginRequest > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPluginRequestArray",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPluginRequestArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Memory__AllocatorMalloc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csPluginRequestArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPluginRequestArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Memory::AllocatorMalloc * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csPluginRequestArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPluginRequestArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg3 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp3);
  result = (csArray< csPluginRequest > *)new csArray< csPluginRequest >(arg1,(CS::Memory::AllocatorMalloc const &)*arg2,(csArrayCapacityFixedGrow< 16 > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPluginRequestArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPluginRequestArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPluginRequestArray" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequestArray__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csPluginRequest > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPluginRequestArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPluginRequestArray" "', argument " "1"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPluginRequestArray" "', argument " "1"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  result = (csArray< csPluginRequest > *)new csArray< csPluginRequest >((csArray< csPluginRequest > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPluginRequestArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csPluginRequestArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csPluginRequestArray__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csPluginRequestArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csPluginRequestArray__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_csPluginRequestArray__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csPluginRequestArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArray< csPluginRequest >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csPluginRequest >(size_t)\n"
    "    csArray< csPluginRequest >()\n"
    "    csArray< csPluginRequest >(size_t,CS::Memory::AllocatorMalloc const &,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csPluginRequest >(csArray< csPluginRequest > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_GetSize" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  result = ((csArray< csPluginRequest > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPluginRequest *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Get" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPluginRequestArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csPluginRequest const &_result_ref = ((csArray< csPluginRequest > const *)arg1)->Get(arg2);
    result = (csPluginRequest *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPluginRequest, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  csPluginRequest *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Push" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPluginRequest,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequestArray_Push" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequestArray_Push" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  arg2 = reinterpret_cast< csPluginRequest * >(argp2);
  result = (arg1)->Push((csPluginRequest const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Merge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  csArray< csPluginRequest > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Merge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Merge" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequestArray_Merge" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequestArray_Merge" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csPluginRequest > * >(argp2);
  (arg1)->Merge((csArray< csPluginRequest > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_MergeSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  csArray< csPluginRequest > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_MergeSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_MergeSmart" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequestArray_MergeSmart" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequestArray_MergeSmart" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csPluginRequest > * >(argp2);
  (arg1)->MergeSmart((csArray< csPluginRequest > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPluginRequest > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Pop" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  result = (arg1)->Pop();
  resultobj = SWIG_NewPointerObj((new csPluginRequest(static_cast< const csPluginRequest& >(result))), SWIGTYPE_p_csPluginRequest, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Top(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPluginRequest *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Top" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  {
    csPluginRequest const &_result_ref = ((csArray< csPluginRequest > const *)arg1)->Top();
    result = (csPluginRequest *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPluginRequest, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  size_t arg2 ;
  csPluginRequest *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Insert" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPluginRequestArray_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPluginRequest,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPluginRequestArray_Insert" "', argument " "3"" of type '" "csPluginRequest const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequestArray_Insert" "', argument " "3"" of type '" "csPluginRequest const &""'"); 
  }
  arg3 = reinterpret_cast< csPluginRequest * >(argp3);
  result = (bool)(arg1)->Insert(arg2,(csPluginRequest const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  csPluginRequest *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Contains" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPluginRequest,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequestArray_Contains" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequestArray_Contains" "', argument " "2"" of type '" "csPluginRequest const &""'"); 
  }
  arg2 = reinterpret_cast< csPluginRequest * >(argp2);
  result = ((csArray< csPluginRequest > const *)arg1)->Contains((csPluginRequest const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Truncate" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPluginRequestArray_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_Empty" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_IsEmpty" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  result = (bool)((csArray< csPluginRequest > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_SetMinimalCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_SetMinimalCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_SetMinimalCapacity" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPluginRequestArray_SetMinimalCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMinimalCapacity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_DeleteIndex" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPluginRequestArray_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_DeleteIndexFast" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPluginRequestArray_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_DeleteRange" "', argument " "1"" of type '" "csArray< csPluginRequest > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPluginRequestArray_DeleteRange" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPluginRequestArray_DeleteRange" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->DeleteRange(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  csArray< csPluginRequest > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray___eq__" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequestArray___eq__" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequestArray___eq__" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csPluginRequest > * >(argp2);
  result = (bool)((csArray< csPluginRequest > const *)arg1)->operator ==((csArray< csPluginRequest > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  csArray< csPluginRequest > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray___ne__" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPluginRequestArray___ne__" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPluginRequestArray___ne__" "', argument " "2"" of type '" "csArray< csPluginRequest > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csPluginRequest > * >(argp2);
  result = (bool)((csArray< csPluginRequest > const *)arg1)->operator !=((csArray< csPluginRequest > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPluginRequestArray_GetAllocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csPluginRequest > *arg1 = (csArray< csPluginRequest > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Memory::AllocatorMalloc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPluginRequestArray_GetAllocator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPluginRequestArray_GetAllocator" "', argument " "1"" of type '" "csArray< csPluginRequest > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csPluginRequest > * >(argp1);
  {
    CS::Memory::AllocatorMalloc const &_result_ref = ((csArray< csPluginRequest > const *)arg1)->GetAllocator();
    result = (CS::Memory::AllocatorMalloc *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPluginRequestArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iReporterListener_Report(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterListener *arg1 = (iReporterListener *) 0 ;
  iReporter *arg2 = (iReporter *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  SwigValueWrapper< csRef< iThreadReturn > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterListener_Report",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporterListener_Report" "', argument " "1"" of type '" "iReporterListener *""'"); 
  }
  arg1 = reinterpret_cast< iReporterListener * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporterListener_Report" "', argument " "2"" of type '" "iReporter *""'"); 
  }
  arg2 = reinterpret_cast< iReporter * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iReporterListener_Report" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iReporterListener_Report" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iReporterListener_Report" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (arg1)->Report(arg2,arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_NewPointerObj((new csRef< iThreadReturn >(static_cast< const csRef< iThreadReturn >& >(result))), SWIGTYPE_p_csRefT_iThreadReturn_t, SWIG_POINTER_OWN |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporterListener_ReportWait(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterListener *arg1 = (iReporterListener *) 0 ;
  iReporter *arg2 = (iReporter *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  SwigValueWrapper< csRef< iThreadReturn > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterListener_ReportWait",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporterListener_ReportWait" "', argument " "1"" of type '" "iReporterListener *""'"); 
  }
  arg1 = reinterpret_cast< iReporterListener * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporterListener_ReportWait" "', argument " "2"" of type '" "iReporter *""'"); 
  }
  arg2 = reinterpret_cast< iReporter * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iReporterListener_ReportWait" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iReporterListener_ReportWait" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iReporterListener_ReportWait" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (arg1)->ReportWait(arg2,arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_NewPointerObj((new csRef< iThreadReturn >(static_cast< const csRef< iThreadReturn >& >(result))), SWIGTYPE_p_csRefT_iThreadReturn_t, SWIG_POINTER_OWN |  0 );
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporterListener_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterListener_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iReporterListener_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iReporterListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterListener *arg1 = (iReporterListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iReporterListener",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterListener, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iReporterListener" "', argument " "1"" of type '" "iReporterListener *""'"); 
  }
  arg1 = reinterpret_cast< iReporterListener * >(argp1);
  delete_iReporterListener(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iReporterListener_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iReporterListener, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iReporterIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterIterator *arg1 = (iReporterIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporterIterator_HasNext" "', argument " "1"" of type '" "iReporterIterator *""'"); 
  }
  arg1 = reinterpret_cast< iReporterIterator * >(argp1);
  result = (bool)(arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporterIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterIterator *arg1 = (iReporterIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporterIterator_Next" "', argument " "1"" of type '" "iReporterIterator *""'"); 
  }
  arg1 = reinterpret_cast< iReporterIterator * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporterIterator_GetMessageSeverity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterIterator *arg1 = (iReporterIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterIterator_GetMessageSeverity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporterIterator_GetMessageSeverity" "', argument " "1"" of type '" "iReporterIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iReporterIterator * >(argp1);
  result = (int)((iReporterIterator const *)arg1)->GetMessageSeverity();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporterIterator_GetMessageId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterIterator *arg1 = (iReporterIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterIterator_GetMessageId",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporterIterator_GetMessageId" "', argument " "1"" of type '" "iReporterIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iReporterIterator * >(argp1);
  result = (char *)((iReporterIterator const *)arg1)->GetMessageId();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporterIterator_GetMessageDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterIterator *arg1 = (iReporterIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterIterator_GetMessageDescription",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporterIterator_GetMessageDescription" "', argument " "1"" of type '" "iReporterIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iReporterIterator * >(argp1);
  result = (char *)((iReporterIterator const *)arg1)->GetMessageDescription();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporterIterator_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporterIterator_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iReporterIterator_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iReporterIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporterIterator *arg1 = (iReporterIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iReporterIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporterIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iReporterIterator" "', argument " "1"" of type '" "iReporterIterator *""'"); 
  }
  arg1 = reinterpret_cast< iReporterIterator * >(argp1);
  delete_iReporterIterator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iReporterIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iReporterIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iReporter_Report__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_Report",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_Report" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iReporter_Report" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iReporter_Report" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = "%s";
    arg5 = (void *) PyString_AsString(obj3);
  }
  (arg1)->Report(arg2,(char const *)arg3,(char const *)arg4,arg5);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_Report(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,4);
  varargs = PyTuple_GetSlice(args,4,PyTuple_Size(args)+1);
  resultobj = _wrap_iReporter_Report__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_iReporter_Clear__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_Clear",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_Clear" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iReporter_Clear" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Clear(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_Clear__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_Clear" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_Clear__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_Clear",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_Clear" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_Clear" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->Clear((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_Clear(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iReporter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iReporter_Clear__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iReporter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iReporter_Clear__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iReporter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iReporter_Clear__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iReporter_Clear'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Clear(iReporter *,int)\n"
    "    Clear(iReporter *)\n"
    "    Clear(iReporter *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_GetMessageIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iReporterIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_GetMessageIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_GetMessageIterator" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  result = (arg1)->GetMessageIterator();
  {
    csRef<iReporterIterator> ref((csPtr<iReporterIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iReporterIterator *)ref, SWIGTYPE_p_iReporterIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_AddReporterListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  iReporterListener *arg2 = (iReporterListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_AddReporterListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_AddReporterListener" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iReporterListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_AddReporterListener" "', argument " "2"" of type '" "iReporterListener *""'"); 
  }
  arg2 = reinterpret_cast< iReporterListener * >(argp2);
  (arg1)->AddReporterListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_RemoveReporterListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  iReporterListener *arg2 = (iReporterListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_RemoveReporterListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_RemoveReporterListener" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iReporterListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_RemoveReporterListener" "', argument " "2"" of type '" "iReporterListener *""'"); 
  }
  arg2 = reinterpret_cast< iReporterListener * >(argp2);
  (arg1)->RemoveReporterListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_FindReporterListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  iReporterListener *arg2 = (iReporterListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_FindReporterListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_FindReporterListener" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iReporterListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_FindReporterListener" "', argument " "2"" of type '" "iReporterListener *""'"); 
  }
  arg2 = reinterpret_cast< iReporterListener * >(argp2);
  result = (bool)(arg1)->FindReporterListener(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportError__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_ReportError",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_ReportError" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_ReportError" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = "%s";
    arg4 = (void *) PyString_AsString(obj2);
  }
  (arg1)->ReportError((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportError(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,3);
  varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
  resultobj = _wrap_iReporter_ReportError__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportWarning__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_ReportWarning",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_ReportWarning" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_ReportWarning" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = "%s";
    arg4 = (void *) PyString_AsString(obj2);
  }
  (arg1)->ReportWarning((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportWarning(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,3);
  varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
  resultobj = _wrap_iReporter_ReportWarning__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportNotify__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_ReportNotify",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_ReportNotify" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_ReportNotify" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = "%s";
    arg4 = (void *) PyString_AsString(obj2);
  }
  (arg1)->ReportNotify((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportNotify(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,3);
  varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
  resultobj = _wrap_iReporter_ReportNotify__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportBug__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_ReportBug",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_ReportBug" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_ReportBug" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = "%s";
    arg4 = (void *) PyString_AsString(obj2);
  }
  (arg1)->ReportBug((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportBug(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,3);
  varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
  resultobj = _wrap_iReporter_ReportBug__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportDebug__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_ReportDebug",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iReporter_ReportDebug" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iReporter_ReportDebug" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    arg3 = "%s";
    arg4 = (void *) PyString_AsString(obj2);
  }
  (arg1)->ReportDebug((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iReporter_ReportDebug(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,3);
  varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
  resultobj = _wrap_iReporter_ReportDebug__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_iReporter_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iReporter_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iReporter_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iReporter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iReporter *arg1 = (iReporter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iReporter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iReporter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iReporter" "', argument " "1"" of type '" "iReporter *""'"); 
  }
  arg1 = reinterpret_cast< iReporter * >(argp1);
  delete_iReporter(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iReporter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iReporter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csReporterHelper_Report__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReporterHelper_Report",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReporterHelper_Report" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csReporterHelper_Report" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csReporterHelper_Report" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    arg4 = "%s";
    arg5 = (void *) PyString_AsString(obj3);
  }
  csReporterHelper::Report(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReporterHelper_Report(PyObject *self, PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,4);
  varargs = PyTuple_GetSlice(args,4,PyTuple_Size(args)+1);
  resultobj = _wrap_csReporterHelper_Report__varargs__(self,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_new_csReporterHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReporterHelper *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csReporterHelper",0,0)) SWIG_fail;
  result = (csReporterHelper *)new csReporterHelper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csReporterHelper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csReporterHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReporterHelper *arg1 = (csReporterHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csReporterHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReporterHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csReporterHelper" "', argument " "1"" of type '" "csReporterHelper *""'"); 
  }
  arg1 = reinterpret_cast< csReporterHelper * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csReporterHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csReporterHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iComponent_Initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iComponent *arg1 = (iComponent *) 0 ;
  iObjectRegistry *arg2 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iComponent_Initialize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iComponent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iComponent_Initialize" "', argument " "1"" of type '" "iComponent *""'"); 
  }
  arg1 = reinterpret_cast< iComponent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iComponent_Initialize" "', argument " "2"" of type '" "iObjectRegistry *""'"); 
  }
  arg2 = reinterpret_cast< iObjectRegistry * >(argp2);
  result = (bool)(arg1)->Initialize(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iComponent_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iComponent_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iComponent_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iComponent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iComponent *arg1 = (iComponent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iComponent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iComponent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iComponent" "', argument " "1"" of type '" "iComponent *""'"); 
  }
  arg1 = reinterpret_cast< iComponent * >(argp1);
  delete_iComponent(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iComponent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iComponent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iCacheManager_SetReadOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_SetReadOnly",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_SetReadOnly" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iCacheManager_SetReadOnly" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetReadOnly(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_IsReadOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_IsReadOnly",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_IsReadOnly" "', argument " "1"" of type '" "iCacheManager const *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  result = (bool)((iCacheManager const *)arg1)->IsReadOnly();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_SetCurrentType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_SetCurrentType",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_SetCurrentType" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCacheManager_SetCurrentType" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetCurrentType((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_GetCurrentType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_GetCurrentType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_GetCurrentType" "', argument " "1"" of type '" "iCacheManager const *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  result = (char *)((iCacheManager const *)arg1)->GetCurrentType();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_SetCurrentScope(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_SetCurrentScope",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_SetCurrentScope" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCacheManager_SetCurrentScope" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetCurrentScope((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_GetCurrentScope(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_GetCurrentScope",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_GetCurrentScope" "', argument " "1"" of type '" "iCacheManager const *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  result = (char *)((iCacheManager const *)arg1)->GetCurrentScope();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_CacheData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  uint32 arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned long val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_CacheData",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_CacheData" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCacheManager_CacheData" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iCacheManager_CacheData" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iCacheManager_CacheData" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iCacheManager_CacheData" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  ecode6 = SWIG_AsVal_unsigned_SS_long(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "iCacheManager_CacheData" "', argument " "6"" of type '" "uint32""'");
  } 
  arg6 = static_cast< uint32 >(val6);
  result = (bool)(arg1)->CacheData((void const *)arg2,arg3,(char const *)arg4,(char const *)arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_ReadCache(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32 arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_ReadCache",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_ReadCache" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCacheManager_ReadCache" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iCacheManager_ReadCache" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iCacheManager_ReadCache" "', argument " "4"" of type '" "uint32""'");
  } 
  arg4 = static_cast< uint32 >(val4);
  result = (arg1)->ReadCache((char const *)arg2,(char const *)arg3,arg4);
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_ClearCache__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_ClearCache",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_ClearCache" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCacheManager_ClearCache" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iCacheManager_ClearCache" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_uint32_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iCacheManager_ClearCache" "', argument " "4"" of type '" "uint32 const *""'"); 
  }
  arg4 = reinterpret_cast< uint32 * >(argp4);
  result = (bool)(arg1)->ClearCache((char const *)arg2,(char const *)arg3,(uint32 const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_ClearCache__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_ClearCache",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_ClearCache" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCacheManager_ClearCache" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iCacheManager_ClearCache" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->ClearCache((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_ClearCache__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_ClearCache",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_ClearCache" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCacheManager_ClearCache" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->ClearCache((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_ClearCache__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_ClearCache",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_ClearCache" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  result = (bool)(arg1)->ClearCache();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_ClearCache(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCacheManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iCacheManager_ClearCache__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCacheManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iCacheManager_ClearCache__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCacheManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iCacheManager_ClearCache__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCacheManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_uint32_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iCacheManager_ClearCache__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iCacheManager_ClearCache'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ClearCache(iCacheManager *,char const *,char const *,uint32 const *)\n"
    "    ClearCache(iCacheManager *,char const *,char const *)\n"
    "    ClearCache(iCacheManager *,char const *)\n"
    "    ClearCache(iCacheManager *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_Flush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_Flush",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCacheManager_Flush" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  (arg1)->Flush();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCacheManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCacheManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iCacheManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iCacheManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCacheManager *arg1 = (iCacheManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iCacheManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCacheManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iCacheManager" "', argument " "1"" of type '" "iCacheManager *""'"); 
  }
  arg1 = reinterpret_cast< iCacheManager * >(argp1);
  delete_iCacheManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iCacheManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iCacheManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csFileTime_sec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_sec_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_sec_set" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFileTime_sec_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_sec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_sec_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_sec_get" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  result = (int) ((arg1)->sec);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_min_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_min_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_min_set" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFileTime_min_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->min = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_min_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_min_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_min_get" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  result = (int) ((arg1)->min);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_hour_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_hour_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_hour_set" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFileTime_hour_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->hour = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_hour_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_hour_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_hour_get" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  result = (int) ((arg1)->hour);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_day_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_day_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_day_set" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFileTime_day_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->day = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_day_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_day_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_day_get" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  result = (int) ((arg1)->day);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_mon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_mon_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_mon_set" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFileTime_mon_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mon = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_mon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_mon_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_mon_get" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  result = (int) ((arg1)->mon);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_year_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_year_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_year_set" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csFileTime_year_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->year = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csFileTime_year_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csFileTime_year_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csFileTime_year_get" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  result = (int) ((arg1)->year);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csFileTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csFileTime",0,0)) SWIG_fail;
  result = (csFileTime *)new csFileTime();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csFileTime, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csFileTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFileTime *arg1 = (csFileTime *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csFileTime",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csFileTime, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csFileTime" "', argument " "1"" of type '" "csFileTime *""'"); 
  }
  arg1 = reinterpret_cast< csFileTime * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csFileTime_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csFileTime, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iFile_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_GetName" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  result = (char *)(arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_GetSize" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  result = (arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_GetStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_GetStatus",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_GetStatus" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  result = (int)(arg1)->GetStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_Read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_Read",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_Read" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iFile_Read" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iFile_Read" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (arg1)->Read(arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_Write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_Write",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_Write" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iFile_Write" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iFile_Write" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (arg1)->Write((char const *)arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_Flush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_Flush",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_Flush" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  (arg1)->Flush();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_AtEOF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_AtEOF",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_AtEOF" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  result = (bool)(arg1)->AtEOF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_GetPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_GetPos",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_GetPos" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  result = (arg1)->GetPos();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_SetPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_SetPos",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_SetPos" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iFile_SetPos" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->SetPos(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_GetAllData__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_GetAllData",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_GetAllData" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iFile_GetAllData" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (arg1)->GetAllData(arg2);
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_GetAllData__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_GetAllData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFile_GetAllData" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  result = (arg1)->GetAllData();
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_GetAllData(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iFile_GetAllData__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iFile_GetAllData__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iFile_GetAllData'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetAllData(iFile *,bool)\n"
    "    GetAllData(iFile *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFile_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFile_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iFile_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFile *arg1 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iFile" "', argument " "1"" of type '" "iFile *""'"); 
  }
  arg1 = reinterpret_cast< iFile * >(argp1);
  delete_iFile(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iFile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iFile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iVFS_ChDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ChDir",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ChDir" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ChDir" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->ChDir((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_GetCwd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_GetCwd",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_GetCwd" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  result = (char *)(arg1)->GetCwd();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_PushDir__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_PushDir",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_PushDir" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_PushDir" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->PushDir((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_PushDir__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_PushDir",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_PushDir" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  (arg1)->PushDir();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_PushDir(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iVFS_PushDir__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iVFS_PushDir__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iVFS_PushDir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PushDir(iVFS *,char const *)\n"
    "    PushDir(iVFS *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_PopDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_PopDir",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_PopDir" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  result = (bool)(arg1)->PopDir();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ExpandPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ExpandPath",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ExpandPath" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ExpandPath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iVFS_ExpandPath" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (arg1)->ExpandPath((char const *)arg2,arg3);
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ExpandPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ExpandPath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ExpandPath" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ExpandPath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->ExpandPath((char const *)arg2);
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ExpandPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iVFS_ExpandPath__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iVFS_ExpandPath__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iVFS_ExpandPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ExpandPath(iVFS *,char const *,bool)\n"
    "    ExpandPath(iVFS *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_Exists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_Exists",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_Exists" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_Exists" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->Exists((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_FindFiles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_FindFiles",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_FindFiles" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_FindFiles" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->FindFiles((char const *)arg2);
  {
    csRef<iStringArray> ref((csPtr<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_Open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< iFile > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_Open",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_Open" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_Open" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iVFS_Open" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (arg1)->Open((char const *)arg2,arg3);
  {
    csRef<iFile> ref((csPtr<iFile>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iFile *)ref, SWIGTYPE_p_iFile, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ReadFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ReadFile",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ReadFile" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ReadFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iVFS_ReadFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (arg1)->ReadFile((char const *)arg2,arg3);
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ReadFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ReadFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ReadFile" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ReadFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->ReadFile((char const *)arg2);
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ReadFile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iVFS_ReadFile__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iVFS_ReadFile__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iVFS_ReadFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ReadFile(iVFS *,char const *,bool)\n"
    "    ReadFile(iVFS *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_WriteFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_WriteFile",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_WriteFile" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_WriteFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_WriteFile" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iVFS_WriteFile" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  result = (bool)(arg1)->WriteFile((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_DeleteFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_DeleteFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_DeleteFile" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_DeleteFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->DeleteFile((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_Sync(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_Sync",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_Sync" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  result = (bool)(arg1)->Sync();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_SymbolicLink__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_SymbolicLink",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_SymbolicLink" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_SymbolicLink" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_SymbolicLink" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iVFS_SymbolicLink" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (bool)(arg1)->SymbolicLink((char const *)arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_SymbolicLink__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_SymbolicLink",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_SymbolicLink" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_SymbolicLink" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_SymbolicLink" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->SymbolicLink((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_SymbolicLink__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_SymbolicLink",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_SymbolicLink" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_SymbolicLink" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->SymbolicLink((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_SymbolicLink(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iVFS_SymbolicLink__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iVFS_SymbolicLink__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iVFS_SymbolicLink__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iVFS_SymbolicLink'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SymbolicLink(iVFS *,char const *,char const *,int)\n"
    "    SymbolicLink(iVFS *,char const *,char const *)\n"
    "    SymbolicLink(iVFS *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_Mount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_Mount",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_Mount" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_Mount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_Mount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->Mount((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_Unmount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_Unmount",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_Unmount" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_Unmount" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_Unmount" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->Unmount((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_MountRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_MountRoot",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_MountRoot" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_MountRoot" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->MountRoot((char const *)arg2);
  {
    csRef<iStringArray> ref((csRef<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_SaveMounts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_SaveMounts",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_SaveMounts" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_SaveMounts" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->SaveMounts((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_LoadMountsFromFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  iConfigFile *arg2 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_LoadMountsFromFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_LoadMountsFromFile" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_LoadMountsFromFile" "', argument " "2"" of type '" "iConfigFile *""'"); 
  }
  arg2 = reinterpret_cast< iConfigFile * >(argp2);
  result = (bool)(arg1)->LoadMountsFromFile(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ChDirAuto__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  csStringArray *arg3 = (csStringArray *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ChDirAuto",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ChDirAuto" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ChDirAuto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csStringArray, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_ChDirAuto" "', argument " "3"" of type '" "csStringArray const *""'"); 
  }
  arg3 = reinterpret_cast< csStringArray * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iVFS_ChDirAuto" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iVFS_ChDirAuto" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  result = (bool)(arg1)->ChDirAuto((char const *)arg2,(csStringArray const *)arg3,(char const *)arg4,(char const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ChDirAuto__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  csStringArray *arg3 = (csStringArray *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ChDirAuto",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ChDirAuto" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ChDirAuto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csStringArray, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_ChDirAuto" "', argument " "3"" of type '" "csStringArray const *""'"); 
  }
  arg3 = reinterpret_cast< csStringArray * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iVFS_ChDirAuto" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)(arg1)->ChDirAuto((char const *)arg2,(csStringArray const *)arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ChDirAuto__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  csStringArray *arg3 = (csStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ChDirAuto",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ChDirAuto" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ChDirAuto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csStringArray, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_ChDirAuto" "', argument " "3"" of type '" "csStringArray const *""'"); 
  }
  arg3 = reinterpret_cast< csStringArray * >(argp3);
  result = (bool)(arg1)->ChDirAuto((char const *)arg2,(csStringArray const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ChDirAuto__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_ChDirAuto",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_ChDirAuto" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_ChDirAuto" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->ChDirAuto((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_ChDirAuto(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iVFS_ChDirAuto__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csStringArray, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iVFS_ChDirAuto__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csStringArray, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iVFS_ChDirAuto__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iVFS, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csStringArray, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_iVFS_ChDirAuto__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iVFS_ChDirAuto'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ChDirAuto(iVFS *,char const *,csStringArray const *,char const *,char const *)\n"
    "    ChDirAuto(iVFS *,char const *,csStringArray const *,char const *)\n"
    "    ChDirAuto(iVFS *,char const *,csStringArray const *)\n"
    "    ChDirAuto(iVFS *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_GetFileTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  csFileTime *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_GetFileTime",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_GetFileTime" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_GetFileTime" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csFileTime,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_GetFileTime" "', argument " "3"" of type '" "csFileTime &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iVFS_GetFileTime" "', argument " "3"" of type '" "csFileTime &""'"); 
  }
  arg3 = reinterpret_cast< csFileTime * >(argp3);
  result = (bool)(arg1)->GetFileTime((char const *)arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_SetFileTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  csFileTime *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_SetFileTime",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_SetFileTime" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_SetFileTime" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csFileTime,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_SetFileTime" "', argument " "3"" of type '" "csFileTime const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iVFS_SetFileTime" "', argument " "3"" of type '" "csFileTime const &""'"); 
  }
  arg3 = reinterpret_cast< csFileTime * >(argp3);
  result = (bool)(arg1)->SetFileTime((char const *)arg2,(csFileTime const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_GetFileSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_GetFileSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_GetFileSize" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_GetFileSize" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iVFS_GetFileSize" "', argument " "3"" of type '" "size_t &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iVFS_GetFileSize" "', argument " "3"" of type '" "size_t &""'"); 
  }
  arg3 = reinterpret_cast< size_t * >(argp3);
  result = (bool)(arg1)->GetFileSize((char const *)arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_GetRealPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iDataBuffer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_GetRealPath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_GetRealPath" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_GetRealPath" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetRealPath((char const *)arg2);
  {
    csRef<iDataBuffer> ref((csPtr<iDataBuffer>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDataBuffer *)ref, SWIGTYPE_p_iDataBuffer, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_GetMounts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_GetMounts",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_GetMounts" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  result = (arg1)->GetMounts();
  {
    csRef<iStringArray> ref((csRef<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_GetRealMountPaths(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_GetRealMountPaths",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVFS_GetRealMountPaths" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iVFS_GetRealMountPaths" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetRealMountPaths((char const *)arg2);
  {
    csRef<iStringArray> ref((csRef<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVFS_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVFS_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iVFS_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iVFS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVFS *arg1 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iVFS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVFS, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iVFS" "', argument " "1"" of type '" "iVFS *""'"); 
  }
  arg1 = reinterpret_cast< iVFS * >(argp1);
  delete_iVFS(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iVFS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iVFS, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iObjectNameChangeListener_NameChanged(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectNameChangeListener *arg1 = (iObjectNameChangeListener *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectNameChangeListener_NameChanged",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectNameChangeListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectNameChangeListener_NameChanged" "', argument " "1"" of type '" "iObjectNameChangeListener *""'"); 
  }
  arg1 = reinterpret_cast< iObjectNameChangeListener * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObjectNameChangeListener_NameChanged" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iObjectNameChangeListener_NameChanged" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iObjectNameChangeListener_NameChanged" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  (arg1)->NameChanged(arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iObjectNameChangeListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectNameChangeListener *arg1 = (iObjectNameChangeListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iObjectNameChangeListener",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectNameChangeListener, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iObjectNameChangeListener" "', argument " "1"" of type '" "iObjectNameChangeListener *""'"); 
  }
  arg1 = reinterpret_cast< iObjectNameChangeListener * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iObjectNameChangeListener_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iObjectNameChangeListener, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iObject_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_SetName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_SetName" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_SetName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetName((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_GetName" "', argument " "1"" of type '" "iObject const *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  result = (char *)((iObject const *)arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_GetID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_GetID" "', argument " "1"" of type '" "iObject const *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  result = (uint)((iObject const *)arg1)->GetID();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_SetObjectParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_SetObjectParent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_SetObjectParent" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_SetObjectParent" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->SetObjectParent(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetObjectParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_GetObjectParent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_GetObjectParent" "', argument " "1"" of type '" "iObject const *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  result = (iObject *)((iObject const *)arg1)->GetObjectParent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_ObjAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_ObjAdd",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_ObjAdd" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_ObjAdd" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjAdd(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_ObjRemove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_ObjRemove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_ObjRemove" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_ObjRemove" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjRemove(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_ObjRemoveAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_ObjRemoveAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_ObjRemoveAll" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  (arg1)->ObjRemoveAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_ObjAddChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_ObjAddChildren",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_ObjAddChildren" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_ObjAddChildren" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjAddChildren(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetChildByName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_GetChildByName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_GetChildByName" "', argument " "1"" of type '" "iObject const *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_GetChildByName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (iObject *)((iObject const *)arg1)->GetChild((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iObjectIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_GetIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_GetIterator" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  result = (arg1)->GetIterator();
  {
    csRef<iObjectIterator> ref((csPtr<iObjectIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iObjectIterator *)ref, SWIGTYPE_p_iObjectIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_ObjReleaseOld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_ObjReleaseOld",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_ObjReleaseOld" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_ObjReleaseOld" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjReleaseOld(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_AddNameChangeListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  iObjectNameChangeListener *arg2 = (iObjectNameChangeListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_AddNameChangeListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_AddNameChangeListener" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObjectNameChangeListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_AddNameChangeListener" "', argument " "2"" of type '" "iObjectNameChangeListener *""'"); 
  }
  arg2 = reinterpret_cast< iObjectNameChangeListener * >(argp2);
  (arg1)->AddNameChangeListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_RemoveNameChangeListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  iObjectNameChangeListener *arg2 = (iObjectNameChangeListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_RemoveNameChangeListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_RemoveNameChangeListener" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObjectNameChangeListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObject_RemoveNameChangeListener" "', argument " "2"" of type '" "iObjectNameChangeListener *""'"); 
  }
  arg2 = reinterpret_cast< iObjectNameChangeListener * >(argp2);
  (arg1)->RemoveNameChangeListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetChild__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_GetChild",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_GetChild" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  res4 = SWIG_AsCharPtrAndSize(obj2, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iObject_GetChild" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = iObject_GetChild__SWIG_0(arg1,(char const *)arg2,arg3,(char const *)arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetChild__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_GetChild",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObject_GetChild" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = iObject_GetChild__SWIG_0(arg1,(char const *)arg2,arg3);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_GetChild(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyObject_HasAttrString(argv[1],"scfGetVersion");
      }
      if (_v) {
        if (argc <= 2) {
          return _wrap_iObject_GetChild__SWIG_1(self, args);
        }
        return _wrap_iObject_GetChild__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyObject_HasAttrString(argv[1],"scfGetVersion");
      }
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iObject_GetChild__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iObject_GetChild'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetChild(iObject *,char const *,int,char const *)\n"
    "    GetChild(iObject *,char const *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObject_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObject_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iObject_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iObject" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  delete_iObject(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iObjectIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectIterator *arg1 = (iObjectIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectIterator_Next" "', argument " "1"" of type '" "iObjectIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectIterator * >(argp1);
  result = (iObject *)(arg1)->Next();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectIterator_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectIterator *arg1 = (iObjectIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectIterator_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectIterator_Reset" "', argument " "1"" of type '" "iObjectIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectIterator * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectIterator_GetParentObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectIterator *arg1 = (iObjectIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectIterator_GetParentObj",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectIterator_GetParentObj" "', argument " "1"" of type '" "iObjectIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iObjectIterator * >(argp1);
  result = (iObject *)((iObjectIterator const *)arg1)->GetParentObj();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectIterator *arg1 = (iObjectIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectIterator_HasNext" "', argument " "1"" of type '" "iObjectIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iObjectIterator * >(argp1);
  result = (bool)((iObjectIterator const *)arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectIterator_FindName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectIterator *arg1 = (iObjectIterator *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectIterator_FindName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectIterator_FindName" "', argument " "1"" of type '" "iObjectIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectIterator * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObjectIterator_FindName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (iObject *)(arg1)->FindName((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectIterator_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectIterator_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iObjectIterator_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iObjectIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectIterator *arg1 = (iObjectIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iObjectIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iObjectIterator" "', argument " "1"" of type '" "iObjectIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectIterator * >(argp1);
  delete_iObjectIterator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iObjectIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iObjectIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iObjectRegistry_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Clear" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Register__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iBase *arg2 = (iBase *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Register",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Register" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObjectRegistry_Register" "', argument " "2"" of type '" "iBase *""'"); 
  }
  arg2 = reinterpret_cast< iBase * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iObjectRegistry_Register" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->Register(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Register__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iBase *arg2 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Register",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Register" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObjectRegistry_Register" "', argument " "2"" of type '" "iBase *""'"); 
  }
  arg2 = reinterpret_cast< iBase * >(argp2);
  result = (bool)(arg1)->Register(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Register(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iObjectRegistry_Register__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iObjectRegistry_Register__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iObjectRegistry_Register'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Register(iObjectRegistry *,iBase *,char const *)\n"
    "    Register(iObjectRegistry *,iBase *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Unregister__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iBase *arg2 = (iBase *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Unregister",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Unregister" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObjectRegistry_Unregister" "', argument " "2"" of type '" "iBase *""'"); 
  }
  arg2 = reinterpret_cast< iBase * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iObjectRegistry_Unregister" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->Unregister(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Unregister__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iBase *arg2 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Unregister",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Unregister" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObjectRegistry_Unregister" "', argument " "2"" of type '" "iBase *""'"); 
  }
  arg2 = reinterpret_cast< iBase * >(argp2);
  (arg1)->Unregister(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Unregister(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iObjectRegistry_Unregister__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iBase, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iObjectRegistry_Unregister__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iObjectRegistry_Unregister'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Unregister(iObjectRegistry *,iBase *,char const *)\n"
    "    Unregister(iObjectRegistry *,iBase *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iObjectRegistryIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Get" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (arg1)->Get();
  resultobj = SWIG_NewPointerObj((new csPtr< iObjectRegistryIterator >(static_cast< const csPtr< iObjectRegistryIterator >& >(result))), SWIGTYPE_p_csPtrT_iObjectRegistryIterator_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Get" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = iObjectRegistry_Get__SWIG_1(arg1,(char const *)arg2,arg3);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Get__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csString className3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_Get",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistry_Get" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iObjectRegistry_Get" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    PyObject *pyname = PyObject_GetAttrString(obj2, "__name__");
    className3 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg3 = (char*)className3.GetData(); // SWIG declares arg3 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj2, "scfGetVersion", NULL);
    arg4 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = iObjectRegistry_Get__SWIG_2(arg1,(char const *)arg2,(char const *)arg3,arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iObjectRegistry_Get__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyObject_HasAttrString(argv[1],"scfGetVersion");
      }
      if (_v) {
        if (argc <= 2) {
          return _wrap_iObjectRegistry_Get__SWIG_1(self, args);
        }
        return _wrap_iObjectRegistry_Get__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          _v = PyObject_HasAttrString(argv[2],"scfGetVersion");
        }
        if (_v) {
          if (argc <= 3) {
            return _wrap_iObjectRegistry_Get__SWIG_2(self, args);
          }
          return _wrap_iObjectRegistry_Get__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iObjectRegistry_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(iObjectRegistry *)\n"
    "    Get(iObjectRegistry *,char const *,int)\n"
    "    Get(iObjectRegistry *,char const *,char const *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistry_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistry_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iObjectRegistry_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iObjectRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iObjectRegistry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iObjectRegistry" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  delete_iObjectRegistry(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iObjectRegistry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iObjectRegistry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iObjectRegistryIterator_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistryIterator_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistryIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistryIterator_Reset" "', argument " "1"" of type '" "iObjectRegistryIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistryIterator * >(argp1);
  result = (bool)(arg1)->Reset();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistryIterator_GetCurrentTag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistryIterator_GetCurrentTag",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistryIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistryIterator_GetCurrentTag" "', argument " "1"" of type '" "iObjectRegistryIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistryIterator * >(argp1);
  result = (char *)(arg1)->GetCurrentTag();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistryIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistryIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistryIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistryIterator_HasNext" "', argument " "1"" of type '" "iObjectRegistryIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistryIterator * >(argp1);
  result = (bool)(arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iObjectRegistryIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iBase *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iObjectRegistryIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistryIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iObjectRegistryIterator_Next" "', argument " "1"" of type '" "iObjectRegistryIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistryIterator * >(argp1);
  result = (iBase *)(arg1)->Next();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iObjectRegistryIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iObjectRegistryIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistryIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iObjectRegistryIterator" "', argument " "1"" of type '" "iObjectRegistryIterator *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistryIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iObjectRegistryIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iObjectRegistryIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csQueryRegistryTag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iBase > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQueryRegistryTag",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQueryRegistryTag" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQueryRegistryTag" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = csQueryRegistryTag(arg1,(char const *)arg2);
  {
    csRef<iBase> ref((csPtr<iBase>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iBase *)ref, SWIGTYPE_p_iBase, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVirtualClock_Advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVirtualClock *arg1 = (iVirtualClock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVirtualClock_Advance",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVirtualClock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVirtualClock_Advance" "', argument " "1"" of type '" "iVirtualClock *""'"); 
  }
  arg1 = reinterpret_cast< iVirtualClock * >(argp1);
  (arg1)->Advance();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVirtualClock_Suspend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVirtualClock *arg1 = (iVirtualClock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVirtualClock_Suspend",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVirtualClock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVirtualClock_Suspend" "', argument " "1"" of type '" "iVirtualClock *""'"); 
  }
  arg1 = reinterpret_cast< iVirtualClock * >(argp1);
  (arg1)->Suspend();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVirtualClock_Resume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVirtualClock *arg1 = (iVirtualClock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVirtualClock_Resume",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVirtualClock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVirtualClock_Resume" "', argument " "1"" of type '" "iVirtualClock *""'"); 
  }
  arg1 = reinterpret_cast< iVirtualClock * >(argp1);
  (arg1)->Resume();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVirtualClock_GetElapsedTicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVirtualClock *arg1 = (iVirtualClock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTicks result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVirtualClock_GetElapsedTicks",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVirtualClock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVirtualClock_GetElapsedTicks" "', argument " "1"" of type '" "iVirtualClock const *""'"); 
  }
  arg1 = reinterpret_cast< iVirtualClock * >(argp1);
  result = (csTicks)((iVirtualClock const *)arg1)->GetElapsedTicks();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVirtualClock_GetCurrentTicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVirtualClock *arg1 = (iVirtualClock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTicks result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVirtualClock_GetCurrentTicks",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVirtualClock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iVirtualClock_GetCurrentTicks" "', argument " "1"" of type '" "iVirtualClock const *""'"); 
  }
  arg1 = reinterpret_cast< iVirtualClock * >(argp1);
  result = (csTicks)((iVirtualClock const *)arg1)->GetCurrentTicks();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iVirtualClock_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iVirtualClock_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iVirtualClock_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iVirtualClock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iVirtualClock *arg1 = (iVirtualClock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iVirtualClock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iVirtualClock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iVirtualClock" "', argument " "1"" of type '" "iVirtualClock *""'"); 
  }
  arg1 = reinterpret_cast< iVirtualClock * >(argp1);
  delete_iVirtualClock(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iVirtualClock_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iVirtualClock, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iEventAttributeIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventAttributeIterator *arg1 = (iEventAttributeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventAttributeIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventAttributeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventAttributeIterator_HasNext" "', argument " "1"" of type '" "iEventAttributeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iEventAttributeIterator * >(argp1);
  result = (bool)(arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventAttributeIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventAttributeIterator *arg1 = (iEventAttributeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventAttributeIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventAttributeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventAttributeIterator_Next" "', argument " "1"" of type '" "iEventAttributeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iEventAttributeIterator * >(argp1);
  result = (char *)(arg1)->Next();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventAttributeIterator_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventAttributeIterator *arg1 = (iEventAttributeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventAttributeIterator_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventAttributeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventAttributeIterator_Reset" "', argument " "1"" of type '" "iEventAttributeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iEventAttributeIterator * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventAttributeIterator_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventAttributeIterator_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iEventAttributeIterator_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEventAttributeIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventAttributeIterator *arg1 = (iEventAttributeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEventAttributeIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventAttributeIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEventAttributeIterator" "', argument " "1"" of type '" "iEventAttributeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iEventAttributeIterator * >(argp1);
  delete_iEventAttributeIterator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEventAttributeIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEventAttributeIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csKeyEventData_eventType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  csKeyEventType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_eventType_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_eventType_set" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csKeyEventData_eventType_set" "', argument " "2"" of type '" "csKeyEventType""'");
  } 
  arg2 = static_cast< csKeyEventType >(val2);
  if (arg1) (arg1)->eventType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_eventType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csKeyEventType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_eventType_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_eventType_get" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  result = (csKeyEventType) ((arg1)->eventType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_codeRaw_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  utf32_char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_codeRaw_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_codeRaw_set" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csKeyEventData_codeRaw_set" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  if (arg1) (arg1)->codeRaw = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_codeRaw_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  utf32_char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_codeRaw_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_codeRaw_get" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  result =  ((arg1)->codeRaw);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_codeCooked_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  utf32_char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_codeCooked_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_codeCooked_set" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csKeyEventData_codeCooked_set" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  if (arg1) (arg1)->codeCooked = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_codeCooked_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  utf32_char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_codeCooked_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_codeCooked_get" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  result =  ((arg1)->codeCooked);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_modifiers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  csKeyModifiers *arg2 = (csKeyModifiers *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_modifiers_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_modifiers_set" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p__csKeyModifiers, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csKeyEventData_modifiers_set" "', argument " "2"" of type '" "csKeyModifiers *""'"); 
  }
  arg2 = reinterpret_cast< csKeyModifiers * >(argp2);
  if (arg1) (arg1)->modifiers = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_modifiers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csKeyModifiers *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_modifiers_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_modifiers_get" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  result = (csKeyModifiers *)& ((arg1)->modifiers);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__csKeyModifiers, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_autoRepeat_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_autoRepeat_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_autoRepeat_set" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csKeyEventData_autoRepeat_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->autoRepeat = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_autoRepeat_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_autoRepeat_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_autoRepeat_get" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  result = (bool) ((arg1)->autoRepeat);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_charType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  csKeyCharType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_charType_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_charType_set" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csKeyEventData_charType_set" "', argument " "2"" of type '" "csKeyCharType""'");
  } 
  arg2 = static_cast< csKeyCharType >(val2);
  if (arg1) (arg1)->charType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventData_charType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csKeyCharType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventData_charType_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventData_charType_get" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  result = (csKeyCharType) ((arg1)->charType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csKeyEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csKeyEventData",0,0)) SWIG_fail;
  result = (csKeyEventData *)new csKeyEventData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csKeyEventData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csKeyEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventData *arg1 = (csKeyEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csKeyEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csKeyEventData" "', argument " "1"" of type '" "csKeyEventData *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventData * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csKeyEventData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csKeyEventData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csMouseEventData_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_x_set" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventData_x_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_x_get" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  result = (int) ((arg1)->x);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_y_set" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventData_y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_y_get" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  result = (int) ((arg1)->y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_axes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  int32 *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_axes_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_axes_set" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMouseEventData_axes_set" "', argument " "2"" of type '" "int32 [8]""'"); 
  } 
  arg2 = reinterpret_cast< int32 * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) arg1->axes[ii] = arg2[ii];
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""axes""' of type '""int32 [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_axes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int32 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_axes_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_axes_get" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  result = (int32 *)(int32 *) ((arg1)->axes);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_numAxes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_numAxes_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_numAxes_set" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventData_numAxes_set" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  if (arg1) (arg1)->numAxes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_numAxes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_numAxes_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_numAxes_get" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  result = (uint) ((arg1)->numAxes);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_Button_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_Button_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_Button_set" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventData_Button_set" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  if (arg1) (arg1)->Button = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_Button_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_Button_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_Button_get" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  result = (uint) ((arg1)->Button);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_Modifiers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_Modifiers_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_Modifiers_set" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventData_Modifiers_set" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  if (arg1) (arg1)->Modifiers = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventData_Modifiers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventData_Modifiers_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventData_Modifiers_get" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  result =  ((arg1)->Modifiers);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMouseEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMouseEventData",0,0)) SWIG_fail;
  result = (csMouseEventData *)new csMouseEventData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMouseEventData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csMouseEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventData *arg1 = (csMouseEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csMouseEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csMouseEventData" "', argument " "1"" of type '" "csMouseEventData *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventData * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csMouseEventData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csMouseEventData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csJoystickEventData_number_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_number_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_number_set" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventData_number_set" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  if (arg1) (arg1)->number = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_number_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_number_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_number_get" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  result = (uint) ((arg1)->number);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_axes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  int32 *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_axes_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_axes_set" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csJoystickEventData_axes_set" "', argument " "2"" of type '" "int32 [8]""'"); 
  } 
  arg2 = reinterpret_cast< int32 * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) arg1->axes[ii] = arg2[ii];
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""axes""' of type '""int32 [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_axes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int32 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_axes_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_axes_get" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  result = (int32 *)(int32 *) ((arg1)->axes);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_numAxes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_numAxes_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_numAxes_set" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventData_numAxes_set" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  if (arg1) (arg1)->numAxes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_numAxes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_numAxes_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_numAxes_get" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  result = (uint) ((arg1)->numAxes);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_axesChanged_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_axesChanged_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_axesChanged_set" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventData_axesChanged_set" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  if (arg1) (arg1)->axesChanged = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_axesChanged_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_axesChanged_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_axesChanged_get" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  result =  ((arg1)->axesChanged);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_Button_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_Button_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_Button_set" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventData_Button_set" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  if (arg1) (arg1)->Button = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_Button_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_Button_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_Button_get" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  result = (uint) ((arg1)->Button);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_Modifiers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  uint32 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_Modifiers_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_Modifiers_set" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventData_Modifiers_set" "', argument " "2"" of type '" "uint32""'");
  } 
  arg2 = static_cast< uint32 >(val2);
  if (arg1) (arg1)->Modifiers = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventData_Modifiers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventData_Modifiers_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventData_Modifiers_get" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  result =  ((arg1)->Modifiers);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csJoystickEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csJoystickEventData",0,0)) SWIG_fail;
  result = (csJoystickEventData *)new csJoystickEventData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csJoystickEventData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csJoystickEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventData *arg1 = (csJoystickEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csJoystickEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csJoystickEventData" "', argument " "1"" of type '" "csJoystickEventData *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventData * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csJoystickEventData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csJoystickEventData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csCommandEventData_Code_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventData *arg1 = (csCommandEventData *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventData_Code_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCommandEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandEventData_Code_set" "', argument " "1"" of type '" "csCommandEventData *""'"); 
  }
  arg1 = reinterpret_cast< csCommandEventData * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCommandEventData_Code_set" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  if (arg1) (arg1)->Code = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventData_Code_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventData *arg1 = (csCommandEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventData_Code_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCommandEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandEventData_Code_get" "', argument " "1"" of type '" "csCommandEventData *""'"); 
  }
  arg1 = reinterpret_cast< csCommandEventData * >(argp1);
  result = (uint) ((arg1)->Code);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventData_Info_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventData *arg1 = (csCommandEventData *) 0 ;
  intptr_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventData_Info_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCommandEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandEventData_Info_set" "', argument " "1"" of type '" "csCommandEventData *""'"); 
  }
  arg1 = reinterpret_cast< csCommandEventData * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_intptr_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csCommandEventData_Info_set" "', argument " "2"" of type '" "intptr_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csCommandEventData_Info_set" "', argument " "2"" of type '" "intptr_t""'");
    } else {
      intptr_t * temp = reinterpret_cast< intptr_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->Info = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventData_Info_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventData *arg1 = (csCommandEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  intptr_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventData_Info_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCommandEventData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandEventData_Info_get" "', argument " "1"" of type '" "csCommandEventData *""'"); 
  }
  arg1 = reinterpret_cast< csCommandEventData * >(argp1);
  result =  ((arg1)->Info);
  resultobj = SWIG_NewPointerObj((new intptr_t(static_cast< const intptr_t& >(result))), SWIGTYPE_p_intptr_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csCommandEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventData *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csCommandEventData",0,0)) SWIG_fail;
  result = (csCommandEventData *)new csCommandEventData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCommandEventData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csCommandEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventData *arg1 = (csCommandEventData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csCommandEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCommandEventData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csCommandEventData" "', argument " "1"" of type '" "csCommandEventData *""'"); 
  }
  arg1 = reinterpret_cast< csCommandEventData * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csCommandEventData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csCommandEventData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iEvent_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_GetName" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (arg1)->GetName();
  {
    csEventID const stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Time_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csTicks arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Time_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Time_set" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEvent_Time_set" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  if (arg1) (arg1)->Time = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Time_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTicks result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Time_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Time_get" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (csTicks) ((arg1)->Time);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Broadcast_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Broadcast_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Broadcast_set" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEvent_Broadcast_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->Broadcast = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Broadcast_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Broadcast_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Broadcast_get" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool) ((arg1)->Broadcast);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddInt8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int8 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddInt8",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddInt8" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddInt8" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int8_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_AddInt8" "', argument " "3"" of type '" "int8""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_AddInt8" "', argument " "3"" of type '" "int8""'");
    } else {
      int8 * temp = reinterpret_cast< int8 * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddUInt8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint8 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddUInt8",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddUInt8" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddUInt8" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_AddUInt8" "', argument " "3"" of type '" "uint8""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_AddUInt8" "', argument " "3"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddInt16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int16 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddInt16",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddInt16" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddInt16" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int16_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_AddInt16" "', argument " "3"" of type '" "int16""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_AddInt16" "', argument " "3"" of type '" "int16""'");
    } else {
      int16 * temp = reinterpret_cast< int16 * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddUInt16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint16 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddUInt16",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddUInt16" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddUInt16" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uint16_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_AddUInt16" "', argument " "3"" of type '" "uint16""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_AddUInt16" "', argument " "3"" of type '" "uint16""'");
    } else {
      uint16 * temp = reinterpret_cast< uint16 * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddInt32(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int32 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddInt32",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddInt32" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddInt32" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEvent_AddInt32" "', argument " "3"" of type '" "int32""'");
  } 
  arg3 = static_cast< int32 >(val3);
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddUInt32(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddUInt32",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddUInt32" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddUInt32" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEvent_AddUInt32" "', argument " "3"" of type '" "uint32""'");
  } 
  arg3 = static_cast< uint32 >(val3);
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int64 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Add",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Add" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Add" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int64_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Add" "', argument " "3"" of type '" "int64""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Add" "', argument " "3"" of type '" "int64""'");
    } else {
      int64 * temp = reinterpret_cast< int64 * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint64 arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Add",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Add" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Add" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uint64_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Add" "', argument " "3"" of type '" "uint64""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Add" "', argument " "3"" of type '" "uint64""'");
    } else {
      uint64 * temp = reinterpret_cast< uint64 * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddFloat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddFloat" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEvent_AddFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddDouble",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddDouble" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddDouble" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEvent_AddDouble" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Add__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Add",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Add" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Add" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Add" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->Add((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Add__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  size_t val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Add",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Add" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Add" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Add" "', argument " "3"" of type '" "void const *""'"); 
  }
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iEvent_Add" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  result = (bool)(arg1)->Add((char const *)arg2,(void const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AddBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AddBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AddBool" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AddBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEvent_AddBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Add__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  iEvent *arg3 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Add",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Add" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Add" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Add" "', argument " "3"" of type '" "iEvent *""'"); 
  }
  arg3 = reinterpret_cast< iEvent * >(argp3);
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Add__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  iBase *arg3 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Add",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Add" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Add" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Add" "', argument " "3"" of type '" "iBase *""'"); 
  }
  arg3 = reinterpret_cast< iBase * >(argp3);
  result = (bool)(arg1)->Add((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Add(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_int64_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Add__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Add__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iEvent, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Add__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iBase, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Add__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Add__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *ptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &ptr, 0, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_size_t(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iEvent_Add__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iEvent_Add'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Add(iEvent *,char const *,int64)\n"
    "    Add(iEvent *,char const *,uint64)\n"
    "    Add(iEvent *,char const *,char const *)\n"
    "    Add(iEvent *,char const *,void const *,size_t)\n"
    "    Add(iEvent *,char const *,iEvent *)\n"
    "    Add(iEvent *,char const *,iBase *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveInt8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int8 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveInt8",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveInt8" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveInt8" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int8_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveInt8" "', argument " "3"" of type '" "int8 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveInt8" "', argument " "3"" of type '" "int8 &""'"); 
  }
  arg3 = reinterpret_cast< int8 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveUInt8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint8 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveUInt8",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveUInt8" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveUInt8" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uint8_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveUInt8" "', argument " "3"" of type '" "uint8 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveUInt8" "', argument " "3"" of type '" "uint8 &""'"); 
  }
  arg3 = reinterpret_cast< uint8 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveInt16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int16 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveInt16",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveInt16" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveInt16" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int16_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveInt16" "', argument " "3"" of type '" "int16 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveInt16" "', argument " "3"" of type '" "int16 &""'"); 
  }
  arg3 = reinterpret_cast< int16 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveUInt16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint16 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveUInt16",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveUInt16" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveUInt16" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uint16_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveUInt16" "', argument " "3"" of type '" "uint16 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveUInt16" "', argument " "3"" of type '" "uint16 &""'"); 
  }
  arg3 = reinterpret_cast< uint16 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveInt32(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int32 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveInt32",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveInt32" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveInt32" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveInt32" "', argument " "3"" of type '" "int32 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveInt32" "', argument " "3"" of type '" "int32 &""'"); 
  }
  arg3 = reinterpret_cast< int32 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveUInt32(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveUInt32",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveUInt32" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveUInt32" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uint32_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveUInt32" "', argument " "3"" of type '" "uint32 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveUInt32" "', argument " "3"" of type '" "uint32 &""'"); 
  }
  arg3 = reinterpret_cast< uint32 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Retrieve__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  int64 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Retrieve",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Retrieve" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Retrieve" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int64_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "int64 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "int64 &""'"); 
  }
  arg3 = reinterpret_cast< int64 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Retrieve__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  uint64 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Retrieve",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Retrieve" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Retrieve" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_uint64_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "uint64 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "uint64 &""'"); 
  }
  arg3 = reinterpret_cast< uint64 * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveFloat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveFloat" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveFloat" "', argument " "3"" of type '" "float &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveFloat" "', argument " "3"" of type '" "float &""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveDouble",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveDouble" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveDouble" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveDouble" "', argument " "3"" of type '" "double &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveDouble" "', argument " "3"" of type '" "double &""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Retrieve__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  void **arg3 = 0 ;
  size_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Retrieve",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Retrieve" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Retrieve" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_p_void,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "void const *&""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "void const *&""'"); 
  }
  arg3 = reinterpret_cast< void ** >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iEvent_Retrieve" "', argument " "4"" of type '" "size_t &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Retrieve" "', argument " "4"" of type '" "size_t &""'"); 
  }
  arg4 = reinterpret_cast< size_t * >(argp4);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,(void const *&)*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveBool" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveBool" "', argument " "3"" of type '" "bool &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveBool" "', argument " "3"" of type '" "bool &""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Retrieve__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  csRef< iEvent > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Retrieve",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Retrieve" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Retrieve" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEvent_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "csRef< iEvent > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "csRef< iEvent > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEvent > * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Retrieve__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  csRef< iBase > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Retrieve",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Retrieve" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Retrieve" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iBase_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "csRef< iBase > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_Retrieve" "', argument " "3"" of type '" "csRef< iBase > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iBase > * >(argp3);
  result = (csEventError)((iEvent const *)arg1)->Retrieve((char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Retrieve(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int64_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Retrieve__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Retrieve__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csRefT_iEvent_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Retrieve__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csRefT_iBase_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEvent_Retrieve__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_void, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_size_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iEvent_Retrieve__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iEvent_Retrieve'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Retrieve(iEvent const *,char const *,int64 &)\n"
    "    Retrieve(iEvent const *,char const *,uint64 &)\n"
    "    Retrieve(iEvent const *,char const *,void const *&,size_t &)\n"
    "    Retrieve(iEvent const *,char const *,csRef< iEvent > &)\n"
    "    Retrieve(iEvent const *,char const *,csRef< iBase > &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_AttributeExists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_AttributeExists",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_AttributeExists" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_AttributeExists" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->AttributeExists((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_GetAttributeType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csEventAttributeType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_GetAttributeType",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_GetAttributeType" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_GetAttributeType" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (csEventAttributeType)(arg1)->GetAttributeType((char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Remove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Remove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Remove" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_Remove" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->Remove((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RemoveAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RemoveAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RemoveAll" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)(arg1)->RemoveAll();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_GetAttributeIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iEventAttributeIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_GetAttributeIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_GetAttributeIterator" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (arg1)->GetAttributeIterator();
  {
    csRef<iEventAttributeIterator> ref((csRef<iEventAttributeIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iEventAttributeIterator *)ref, SWIGTYPE_p_iEventAttributeIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_RetrieveString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_RetrieveString",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_RetrieveString" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEvent_RetrieveString" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_p_char,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEvent_RetrieveString" "', argument " "3"" of type '" "char *&""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEvent_RetrieveString" "', argument " "3"" of type '" "char *&""'"); 
  }
  arg3 = reinterpret_cast< char ** >(argp3);
  result = (csEventError)iEvent_RetrieveString(arg1,(char const *)arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Mouse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMouseEventData *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Mouse_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Mouse_get" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (csMouseEventData *)iEvent_Mouse_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMouseEventData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Joystick_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csJoystickEventData *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Joystick_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Joystick_get" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (csJoystickEventData *)iEvent_Joystick_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csJoystickEventData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_Command_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csCommandEventData *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_Command_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEvent_Command_get" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (csCommandEventData *)iEvent_Command_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCommandEventData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEvent_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEvent_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iEvent_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEvent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEvent" "', argument " "1"" of type '" "iEvent *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  delete_iEvent(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iEventPlug_GetPotentiallyConflictingEvents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventPlug *arg1 = (iEventPlug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventPlug_GetPotentiallyConflictingEvents",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventPlug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventPlug_GetPotentiallyConflictingEvents" "', argument " "1"" of type '" "iEventPlug *""'"); 
  }
  arg1 = reinterpret_cast< iEventPlug * >(argp1);
  result = (unsigned int)(arg1)->GetPotentiallyConflictingEvents();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventPlug_QueryEventPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventPlug *arg1 = (iEventPlug *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventPlug_QueryEventPriority",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventPlug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventPlug_QueryEventPriority" "', argument " "1"" of type '" "iEventPlug *""'"); 
  }
  arg1 = reinterpret_cast< iEventPlug * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEventPlug_QueryEventPriority" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)(arg1)->QueryEventPriority(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventPlug_EnableEvents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventPlug *arg1 = (iEventPlug *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventPlug_EnableEvents",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventPlug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventPlug_EnableEvents" "', argument " "1"" of type '" "iEventPlug *""'"); 
  }
  arg1 = reinterpret_cast< iEventPlug * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEventPlug_EnableEvents" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEventPlug_EnableEvents" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->EnableEvents(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventPlug_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventPlug_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iEventPlug_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEventPlug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventPlug *arg1 = (iEventPlug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEventPlug",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventPlug, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEventPlug" "', argument " "1"" of type '" "iEventPlug *""'"); 
  }
  arg1 = reinterpret_cast< iEventPlug * >(argp1);
  delete_iEventPlug(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEventPlug_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEventPlug, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iEventOutlet_CreateEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iEvent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_CreateEvent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_CreateEvent" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  result = (arg1)->CreateEvent();
  {
    csRef<iEvent> ref((csPtr<iEvent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iEvent *)ref, SWIGTYPE_p_iEvent, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Post(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  iEvent *arg2 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_Post",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_Post" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventOutlet_Post" "', argument " "2"" of type '" "iEvent *""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  (arg1)->Post(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Key__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  utf32_char arg2 ;
  utf32_char arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_Key",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_Key" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEventOutlet_Key" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEventOutlet_Key" "', argument " "3"" of type '" "utf32_char""'");
  } 
  arg3 = static_cast< utf32_char >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iEventOutlet_Key" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iEventOutlet_Key" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->Key(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Key__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  utf32_char arg2 ;
  utf32_char arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_Key",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_Key" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEventOutlet_Key" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEventOutlet_Key" "', argument " "3"" of type '" "utf32_char""'");
  } 
  arg3 = static_cast< utf32_char >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iEventOutlet_Key" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->Key(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Key(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventOutlet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iEventOutlet_Key__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventOutlet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_iEventOutlet_Key__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iEventOutlet_Key'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Key(iEventOutlet *,utf32_char,utf32_char,bool,bool)\n"
    "    Key(iEventOutlet *,utf32_char,utf32_char,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Mouse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  int arg2 ;
  bool arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_Mouse",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_Mouse" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEventOutlet_Mouse" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEventOutlet_Mouse" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iEventOutlet_Mouse" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iEventOutlet_Mouse" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->Mouse(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Joystick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  uint arg2 ;
  int arg3 ;
  bool arg4 ;
  int32 *arg5 = (int32 *) 0 ;
  uint arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  unsigned long val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_Joystick",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_Joystick" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEventOutlet_Joystick" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEventOutlet_Joystick" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iEventOutlet_Joystick" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iEventOutlet_Joystick" "', argument " "5"" of type '" "int32 const *""'"); 
  }
  arg5 = reinterpret_cast< int32 * >(argp5);
  ecode6 = SWIG_AsVal_unsigned_SS_long(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "iEventOutlet_Joystick" "', argument " "6"" of type '" "uint""'");
  } 
  arg6 = static_cast< uint >(val6);
  (arg1)->Joystick(arg2,arg3,arg4,(int32 const *)arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Broadcast__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  intptr_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_Broadcast",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_Broadcast" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_intptr_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventOutlet_Broadcast" "', argument " "3"" of type '" "intptr_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventOutlet_Broadcast" "', argument " "3"" of type '" "intptr_t""'");
    } else {
      intptr_t * temp = reinterpret_cast< intptr_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->Broadcast(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Broadcast__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_Broadcast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_Broadcast" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  (arg1)->Broadcast(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_Broadcast(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventOutlet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        return _wrap_iEventOutlet_Broadcast__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventOutlet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_intptr_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEventOutlet_Broadcast__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iEventOutlet_Broadcast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Broadcast(iEventOutlet *,csEventID,intptr_t)\n"
    "    Broadcast(iEventOutlet *,csEventID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_ImmediateBroadcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  intptr_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_ImmediateBroadcast",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventOutlet_ImmediateBroadcast" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_intptr_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventOutlet_ImmediateBroadcast" "', argument " "3"" of type '" "intptr_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventOutlet_ImmediateBroadcast" "', argument " "3"" of type '" "intptr_t""'");
    } else {
      intptr_t * temp = reinterpret_cast< intptr_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->ImmediateBroadcast(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventOutlet_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventOutlet_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iEventOutlet_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEventOutlet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventOutlet *arg1 = (iEventOutlet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEventOutlet",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventOutlet, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEventOutlet" "', argument " "1"" of type '" "iEventOutlet *""'"); 
  }
  arg1 = reinterpret_cast< iEventOutlet * >(argp1);
  delete_iEventOutlet(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEventOutlet_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEventOutlet, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iEventCord_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventCord *arg1 = (iEventCord *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventCord_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventCord, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventCord_Insert" "', argument " "1"" of type '" "iEventCord *""'"); 
  }
  arg1 = reinterpret_cast< iEventCord * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventCord_Insert" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iEventCord_Insert" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)(arg1)->Insert(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventCord_Remove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventCord *arg1 = (iEventCord *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventCord_Remove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventCord, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventCord_Remove" "', argument " "1"" of type '" "iEventCord *""'"); 
  }
  arg1 = reinterpret_cast< iEventCord * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventCord_Remove" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  (arg1)->Remove(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventCord_GetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventCord *arg1 = (iEventCord *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventCord_GetPass",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventCord, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventCord_GetPass" "', argument " "1"" of type '" "iEventCord const *""'"); 
  }
  arg1 = reinterpret_cast< iEventCord * >(argp1);
  result = (bool)((iEventCord const *)arg1)->GetPass();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventCord_SetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventCord *arg1 = (iEventCord *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventCord_SetPass",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventCord, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventCord_SetPass" "', argument " "1"" of type '" "iEventCord *""'"); 
  }
  arg1 = reinterpret_cast< iEventCord * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iEventCord_SetPass" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetPass(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventCord_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventCord *arg1 = (iEventCord *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventCord_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventCord, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventCord_GetName" "', argument " "1"" of type '" "iEventCord const *""'"); 
  }
  arg1 = reinterpret_cast< iEventCord * >(argp1);
  result = ((iEventCord const *)arg1)->GetName();
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEventCord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventCord *arg1 = (iEventCord *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEventCord",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventCord, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEventCord" "', argument " "1"" of type '" "iEventCord *""'"); 
  }
  arg1 = reinterpret_cast< iEventCord * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEventCord_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEventCord, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetRawCode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  utf32_char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetRawCode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetRawCode" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = csKeyEventHelper::GetRawCode((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetCookedCode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  utf32_char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetCookedCode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetCookedCode" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = csKeyEventHelper::GetCookedCode((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetModifiers__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csKeyModifiers *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  {
    arg2 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetModifiers",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetModifiers" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  csKeyEventHelper::GetModifiers((iEvent const *)arg1,*arg2);
  resultobj = SWIG_Py_Void();
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetEventType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csKeyEventType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetEventType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetEventType" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (csKeyEventType)csKeyEventHelper::GetEventType((iEvent const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetAutoRepeat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetAutoRepeat",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetAutoRepeat" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)csKeyEventHelper::GetAutoRepeat((iEvent const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetCharacterType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csKeyCharType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetCharacterType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetCharacterType" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (csKeyCharType)csKeyEventHelper::GetCharacterType((iEvent const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csKeyEventData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  {
    arg2 = new csKeyEventData();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetEventData" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)csKeyEventHelper::GetEventData((iEvent const *)arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csKeyEventData" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetModifiersBits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyModifiers *arg1 = 0 ;
  uint32 result;
  
  {
    arg1 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetModifiersBits",0,0)) SWIG_fail;
  result = csKeyEventHelper::GetModifiersBits((_csKeyModifiers const &)*arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  {
    resultobj = SWIG_NewPointerObj((void*)arg1, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetModifiersBits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetModifiersBits",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyEventHelper_GetModifiersBits" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = csKeyEventHelper::GetModifiersBits((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetModifiersBits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_csKeyEventHelper_GetModifiersBits__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csKeyEventHelper_GetModifiersBits__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csKeyEventHelper_GetModifiersBits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetModifiersBits(csKeyModifiers const &)\n"
    "    csKeyEventHelper::GetModifiersBits(iEvent const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetModifiers__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  uint32 arg1 ;
  csKeyModifiers *arg2 = 0 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  {
    arg2 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csKeyEventHelper_GetModifiers",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csKeyEventHelper_GetModifiers" "', argument " "1"" of type '" "uint32""'");
  } 
  arg1 = static_cast< uint32 >(val1);
  csKeyEventHelper::GetModifiers(arg1,*arg2);
  resultobj = SWIG_Py_Void();
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyEventHelper_GetModifiers(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEvent, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csKeyEventHelper_GetModifiers__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_csKeyEventHelper_GetModifiers__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csKeyEventHelper_GetModifiers'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetModifiers(iEvent const *,csKeyModifiers &)\n"
    "    csKeyEventHelper::GetModifiers(uint32,csKeyModifiers &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csKeyEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventHelper *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csKeyEventHelper",0,0)) SWIG_fail;
  result = (csKeyEventHelper *)new csKeyEventHelper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csKeyEventHelper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csKeyEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyEventHelper *arg1 = (csKeyEventHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csKeyEventHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csKeyEventHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csKeyEventHelper" "', argument " "1"" of type '" "csKeyEventHelper *""'"); 
  }
  arg1 = reinterpret_cast< csKeyEventHelper * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csKeyEventHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csKeyEventHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csMouseEventHelper_NewEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  csMouseEventType arg4 ;
  int arg5 ;
  int arg6 ;
  uint32 arg7 ;
  uint arg8 ;
  bool arg9 ;
  uint32 arg10 ;
  csKeyModifiers *arg11 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  unsigned long val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  unsigned long val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  csEvent *result = 0 ;
  
  {
    arg11 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_NewEvent",10,10,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "csMouseEventType""'");
  } 
  arg4 = static_cast< csMouseEventType >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMouseEventHelper_NewEvent" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csMouseEventHelper_NewEvent" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_long(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "uint32""'");
  } 
  arg7 = static_cast< uint32 >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csMouseEventHelper_NewEvent" "', argument " "8"" of type '" "uint""'");
  } 
  arg8 = static_cast< uint >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csMouseEventHelper_NewEvent" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_unsigned_SS_long(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csMouseEventHelper_NewEvent" "', argument " "10"" of type '" "uint32""'");
  } 
  arg10 = static_cast< uint32 >(val10);
  result = (csEvent *)csMouseEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(_csKeyModifiers const &)*arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  {
    resultobj = SWIG_NewPointerObj((void*)arg11, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_NewEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  uint8 arg4 ;
  csMouseEventType arg5 ;
  int arg6 ;
  int arg7 ;
  uint32 arg8 ;
  uint arg9 ;
  bool arg10 ;
  uint32 arg11 ;
  csKeyModifiers *arg12 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  unsigned long val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  unsigned long val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  csEvent *result = 0 ;
  
  {
    arg12 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_NewEvent",11,11,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMouseEventHelper_NewEvent" "', argument " "5"" of type '" "csMouseEventType""'");
  } 
  arg5 = static_cast< csMouseEventType >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csMouseEventHelper_NewEvent" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csMouseEventHelper_NewEvent" "', argument " "8"" of type '" "uint32""'");
  } 
  arg8 = static_cast< uint32 >(val8);
  ecode9 = SWIG_AsVal_unsigned_SS_long(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csMouseEventHelper_NewEvent" "', argument " "9"" of type '" "uint""'");
  } 
  arg9 = static_cast< uint >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csMouseEventHelper_NewEvent" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_unsigned_SS_long(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "csMouseEventHelper_NewEvent" "', argument " "11"" of type '" "uint32""'");
  } 
  arg11 = static_cast< uint32 >(val11);
  result = (csEvent *)csMouseEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,(_csKeyModifiers const &)*arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  {
    resultobj = SWIG_NewPointerObj((void*)arg12, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_NewEvent__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  uint8 arg4 ;
  csMouseEventType arg5 ;
  int32 *arg6 = (int32 *) 0 ;
  uint8 arg7 ;
  uint32 arg8 ;
  uint arg9 ;
  bool arg10 ;
  uint32 arg11 ;
  csKeyModifiers *arg12 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 ;
  int res7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  unsigned long val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  unsigned long val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  csEvent *result = 0 ;
  
  {
    arg12 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_NewEvent",11,11,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMouseEventHelper_NewEvent" "', argument " "5"" of type '" "csMouseEventType""'");
  } 
  arg5 = static_cast< csMouseEventType >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csMouseEventHelper_NewEvent" "', argument " "6"" of type '" "int32 const *""'"); 
  }
  arg6 = reinterpret_cast< int32 * >(argp6);
  {
    res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "uint8""'"); 
    }  
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp7);
      arg7 = *temp;
      if (SWIG_IsNewObj(res7)) delete temp;
    }
  }
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csMouseEventHelper_NewEvent" "', argument " "8"" of type '" "uint32""'");
  } 
  arg8 = static_cast< uint32 >(val8);
  ecode9 = SWIG_AsVal_unsigned_SS_long(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csMouseEventHelper_NewEvent" "', argument " "9"" of type '" "uint""'");
  } 
  arg9 = static_cast< uint >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csMouseEventHelper_NewEvent" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_unsigned_SS_long(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "csMouseEventHelper_NewEvent" "', argument " "11"" of type '" "uint32""'");
  } 
  arg11 = static_cast< uint32 >(val11);
  result = (csEvent *)csMouseEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,(int const *)arg6,arg7,arg8,arg9,arg10,arg11,(_csKeyModifiers const &)*arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  {
    resultobj = SWIG_NewPointerObj((void*)arg12, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_NewEvent__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  csMouseEventType arg4 ;
  int arg5 ;
  int arg6 ;
  uint32 arg7 ;
  uint arg8 ;
  bool arg9 ;
  uint32 arg10 ;
  uint32 arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  unsigned long val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  unsigned long val10 ;
  int ecode10 = 0 ;
  unsigned long val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  csEvent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_NewEvent",11,11,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "csMouseEventType""'");
  } 
  arg4 = static_cast< csMouseEventType >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMouseEventHelper_NewEvent" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csMouseEventHelper_NewEvent" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_long(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "uint32""'");
  } 
  arg7 = static_cast< uint32 >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csMouseEventHelper_NewEvent" "', argument " "8"" of type '" "uint""'");
  } 
  arg8 = static_cast< uint >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csMouseEventHelper_NewEvent" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_unsigned_SS_long(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csMouseEventHelper_NewEvent" "', argument " "10"" of type '" "uint32""'");
  } 
  arg10 = static_cast< uint32 >(val10);
  ecode11 = SWIG_AsVal_unsigned_SS_long(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "csMouseEventHelper_NewEvent" "', argument " "11"" of type '" "uint32""'");
  } 
  arg11 = static_cast< uint32 >(val11);
  result = (csEvent *)csMouseEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_NewEvent__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  uint8 arg4 ;
  csMouseEventType arg5 ;
  int arg6 ;
  int arg7 ;
  uint32 arg8 ;
  uint arg9 ;
  bool arg10 ;
  uint32 arg11 ;
  uint32 arg12 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  unsigned long val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  unsigned long val11 ;
  int ecode11 = 0 ;
  unsigned long val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  csEvent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_NewEvent",12,12,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMouseEventHelper_NewEvent" "', argument " "5"" of type '" "csMouseEventType""'");
  } 
  arg5 = static_cast< csMouseEventType >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csMouseEventHelper_NewEvent" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csMouseEventHelper_NewEvent" "', argument " "8"" of type '" "uint32""'");
  } 
  arg8 = static_cast< uint32 >(val8);
  ecode9 = SWIG_AsVal_unsigned_SS_long(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csMouseEventHelper_NewEvent" "', argument " "9"" of type '" "uint""'");
  } 
  arg9 = static_cast< uint >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csMouseEventHelper_NewEvent" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_unsigned_SS_long(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "csMouseEventHelper_NewEvent" "', argument " "11"" of type '" "uint32""'");
  } 
  arg11 = static_cast< uint32 >(val11);
  ecode12 = SWIG_AsVal_unsigned_SS_long(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "csMouseEventHelper_NewEvent" "', argument " "12"" of type '" "uint32""'");
  } 
  arg12 = static_cast< uint32 >(val12);
  result = (csEvent *)csMouseEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_NewEvent__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  uint8 arg4 ;
  csMouseEventType arg5 ;
  int32 *arg6 = (int32 *) 0 ;
  uint8 arg7 ;
  uint32 arg8 ;
  uint arg9 ;
  bool arg10 ;
  uint32 arg11 ;
  uint32 arg12 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 ;
  int res7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  unsigned long val9 ;
  int ecode9 = 0 ;
  bool val10 ;
  int ecode10 = 0 ;
  unsigned long val11 ;
  int ecode11 = 0 ;
  unsigned long val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  csEvent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_NewEvent",12,12,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "4"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMouseEventHelper_NewEvent" "', argument " "5"" of type '" "csMouseEventType""'");
  } 
  arg5 = static_cast< csMouseEventType >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csMouseEventHelper_NewEvent" "', argument " "6"" of type '" "int32 const *""'"); 
  }
  arg6 = reinterpret_cast< int32 * >(argp6);
  {
    res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "uint8""'"); 
    }  
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMouseEventHelper_NewEvent" "', argument " "7"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp7);
      arg7 = *temp;
      if (SWIG_IsNewObj(res7)) delete temp;
    }
  }
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csMouseEventHelper_NewEvent" "', argument " "8"" of type '" "uint32""'");
  } 
  arg8 = static_cast< uint32 >(val8);
  ecode9 = SWIG_AsVal_unsigned_SS_long(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csMouseEventHelper_NewEvent" "', argument " "9"" of type '" "uint""'");
  } 
  arg9 = static_cast< uint >(val9);
  ecode10 = SWIG_AsVal_bool(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csMouseEventHelper_NewEvent" "', argument " "10"" of type '" "bool""'");
  } 
  arg10 = static_cast< bool >(val10);
  ecode11 = SWIG_AsVal_unsigned_SS_long(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "csMouseEventHelper_NewEvent" "', argument " "11"" of type '" "uint32""'");
  } 
  arg11 = static_cast< uint32 >(val11);
  ecode12 = SWIG_AsVal_unsigned_SS_long(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "csMouseEventHelper_NewEvent" "', argument " "12"" of type '" "uint32""'");
  } 
  arg12 = static_cast< uint32 >(val12);
  result = (csEvent *)csMouseEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,(int const *)arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_NewEvent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[13];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 12); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_long(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_unsigned_SS_long(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_csMouseEventHelper_NewEvent__SWIG_0(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_uint8_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_long(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_unsigned_SS_long(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_csMouseEventHelper_NewEvent__SWIG_1(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_uint8_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_int, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_uint8_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_long(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_unsigned_SS_long(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_csMouseEventHelper_NewEvent__SWIG_2(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_long(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_unsigned_SS_long(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_unsigned_SS_long(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_csMouseEventHelper_NewEvent__SWIG_3(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_uint8_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_long(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_unsigned_SS_long(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_unsigned_SS_long(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_csMouseEventHelper_NewEvent__SWIG_4(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_uint8_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_int, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_uint8_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_long(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_bool(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_unsigned_SS_long(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_unsigned_SS_long(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_csMouseEventHelper_NewEvent__SWIG_5(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csMouseEventHelper_NewEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,csMouseEventType,int,int,uint32,uint,bool,uint32,csKeyModifiers const &)\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,uint8,csMouseEventType,int,int,uint32,uint,bool,uint32,csKeyModifiers const &)\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,uint8,csMouseEventType,int32 const *,uint8,uint32,uint,bool,uint32,csKeyModifiers const &)\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,csMouseEventType,int,int,uint32,uint,bool,uint32,uint32)\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,uint8,csMouseEventType,int,int,uint32,uint,bool,uint32,uint32)\n"
    "    csMouseEventHelper::NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,uint8,csMouseEventType,int32 const *,uint8,uint32,uint,bool,uint32,uint32)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetEventType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMouseEventType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetEventType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetEventType" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (csMouseEventType)csMouseEventHelper::GetEventType((iEvent const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetNumber",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetNumber" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (uint)csMouseEventHelper::GetNumber((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetX",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetX" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (int)csMouseEventHelper::GetX((iEvent const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetY",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetY" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (int)csMouseEventHelper::GetY((iEvent const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetAxis",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetAxis" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMouseEventHelper_GetAxis" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (int)csMouseEventHelper::GetAxis((iEvent const *)arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetNumAxes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetNumAxes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetNumAxes" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (uint)csMouseEventHelper::GetNumAxes((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetButton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetButton" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (uint)csMouseEventHelper::GetButton((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetButtonState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetButtonState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetButtonState" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)csMouseEventHelper::GetButtonState((iEvent const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetButtonMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetButtonMask",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetButtonMask" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = csMouseEventHelper::GetButtonMask((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetModifiers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csKeyModifiers *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  {
    arg2 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetModifiers",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetModifiers" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  csMouseEventHelper::GetModifiers((iEvent const *)arg1,*arg2);
  resultobj = SWIG_Py_Void();
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMouseEventHelper_GetEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csMouseEventData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  {
    arg2 = new csMouseEventData();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csMouseEventHelper_GetEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMouseEventHelper_GetEventData" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)csMouseEventHelper::GetEventData((iEvent const *)arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csMouseEventData" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMouseEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventHelper *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMouseEventHelper",0,0)) SWIG_fail;
  result = (csMouseEventHelper *)new csMouseEventHelper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMouseEventHelper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csMouseEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMouseEventHelper *arg1 = (csMouseEventHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csMouseEventHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMouseEventHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csMouseEventHelper" "', argument " "1"" of type '" "csMouseEventHelper *""'"); 
  }
  arg1 = reinterpret_cast< csMouseEventHelper * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csMouseEventHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csMouseEventHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csJoystickEventHelper_NewEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  uint32 arg7 ;
  uint arg8 ;
  bool arg9 ;
  uint32 arg10 ;
  csKeyModifiers *arg11 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  unsigned long val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  unsigned long val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  csEvent *result = 0 ;
  
  {
    arg11 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_NewEvent",10,10,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_long(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "7"" of type '" "uint32""'");
  } 
  arg7 = static_cast< uint32 >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "8"" of type '" "uint""'");
  } 
  arg8 = static_cast< uint >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_unsigned_SS_long(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "10"" of type '" "uint32""'");
  } 
  arg10 = static_cast< uint32 >(val10);
  result = (csEvent *)csJoystickEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(_csKeyModifiers const &)*arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  {
    resultobj = SWIG_NewPointerObj((void*)arg11, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_NewEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  int arg4 ;
  int32 *arg5 = (int32 *) 0 ;
  uint8 arg6 ;
  uint32 arg7 ;
  uint arg8 ;
  bool arg9 ;
  uint32 arg10 ;
  csKeyModifiers *arg11 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  unsigned long val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  unsigned long val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  csEvent *result = 0 ;
  
  {
    arg11 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_NewEvent",10,10,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "5"" of type '" "int32 const *""'"); 
  }
  arg5 = reinterpret_cast< int32 * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "6"" of type '" "uint8""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csJoystickEventHelper_NewEvent" "', argument " "6"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_unsigned_SS_long(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "7"" of type '" "uint32""'");
  } 
  arg7 = static_cast< uint32 >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "8"" of type '" "uint""'");
  } 
  arg8 = static_cast< uint >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_unsigned_SS_long(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "10"" of type '" "uint32""'");
  } 
  arg10 = static_cast< uint32 >(val10);
  result = (csEvent *)csJoystickEventHelper::NewEvent(*arg1,arg2,arg3,arg4,(int const *)arg5,arg6,arg7,arg8,arg9,arg10,(_csKeyModifiers const &)*arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  {
    resultobj = SWIG_NewPointerObj((void*)arg11, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_NewEvent__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  uint32 arg7 ;
  uint arg8 ;
  bool arg9 ;
  uint32 arg10 ;
  uint32 arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  unsigned long val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  unsigned long val10 ;
  int ecode10 = 0 ;
  unsigned long val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  csEvent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_NewEvent",11,11,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_long(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "7"" of type '" "uint32""'");
  } 
  arg7 = static_cast< uint32 >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "8"" of type '" "uint""'");
  } 
  arg8 = static_cast< uint >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_unsigned_SS_long(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "10"" of type '" "uint32""'");
  } 
  arg10 = static_cast< uint32 >(val10);
  ecode11 = SWIG_AsVal_unsigned_SS_long(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "11"" of type '" "uint32""'");
  } 
  arg11 = static_cast< uint32 >(val11);
  result = (csEvent *)csJoystickEventHelper::NewEvent(*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_NewEvent__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  csTicks arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  int arg4 ;
  int32 *arg5 = (int32 *) 0 ;
  uint8 arg6 ;
  uint32 arg7 ;
  uint arg8 ;
  bool arg9 ;
  uint32 arg10 ;
  uint32 arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  unsigned long val7 ;
  int ecode7 = 0 ;
  unsigned long val8 ;
  int ecode8 = 0 ;
  bool val9 ;
  int ecode9 = 0 ;
  unsigned long val10 ;
  int ecode10 = 0 ;
  unsigned long val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  csEvent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_NewEvent",11,11,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csJoystickEventHelper_NewEvent" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "2"" of type '" "csTicks""'");
  } 
  arg2 = static_cast< csTicks >(val2);
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "5"" of type '" "int32 const *""'"); 
  }
  arg5 = reinterpret_cast< int32 * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_uint8_t,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "6"" of type '" "uint8""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csJoystickEventHelper_NewEvent" "', argument " "6"" of type '" "uint8""'");
    } else {
      uint8 * temp = reinterpret_cast< uint8 * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  ecode7 = SWIG_AsVal_unsigned_SS_long(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "7"" of type '" "uint32""'");
  } 
  arg7 = static_cast< uint32 >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_long(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "8"" of type '" "uint""'");
  } 
  arg8 = static_cast< uint >(val8);
  ecode9 = SWIG_AsVal_bool(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "9"" of type '" "bool""'");
  } 
  arg9 = static_cast< bool >(val9);
  ecode10 = SWIG_AsVal_unsigned_SS_long(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "10"" of type '" "uint32""'");
  } 
  arg10 = static_cast< uint32 >(val10);
  ecode11 = SWIG_AsVal_unsigned_SS_long(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "csJoystickEventHelper_NewEvent" "', argument " "11"" of type '" "uint32""'");
  } 
  arg11 = static_cast< uint32 >(val11);
  result = (csEvent *)csJoystickEventHelper::NewEvent(*arg1,arg2,arg3,arg4,(int const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_NewEvent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[12];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 11); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_long(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_unsigned_SS_long(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_csJoystickEventHelper_NewEvent__SWIG_0(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_int, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_uint8_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_long(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_unsigned_SS_long(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_csJoystickEventHelper_NewEvent__SWIG_1(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_long(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_unsigned_SS_long(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_unsigned_SS_long(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_csJoystickEventHelper_NewEvent__SWIG_2(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_int, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_uint8_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_long(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_long(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_bool(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_unsigned_SS_long(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_unsigned_SS_long(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_csJoystickEventHelper_NewEvent__SWIG_3(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csJoystickEventHelper_NewEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,int,int,int,uint32,uint,bool,uint32,csKeyModifiers const &)\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,int,int32 const *,uint8,uint32,uint,bool,uint32,csKeyModifiers const &)\n"
    "    NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,int,int,int,uint32,uint,bool,uint32,uint32)\n"
    "    csJoystickEventHelper::NewEvent(csRef< iEventNameRegistry > &,csTicks,csEventID,int,int32 const *,uint8,uint32,uint,bool,uint32,uint32)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetNumber",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetNumber" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (uint)csJoystickEventHelper::GetNumber((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetAxis",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetAxis" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csJoystickEventHelper_GetAxis" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (int)csJoystickEventHelper::GetAxis((iEvent const *)arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetNumAxes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetNumAxes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetNumAxes" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (uint)csJoystickEventHelper::GetNumAxes((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetButton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetButton" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (uint)csJoystickEventHelper::GetButton((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetButtonState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetButtonState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetButtonState" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)csJoystickEventHelper::GetButtonState((iEvent const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetButtonMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetButtonMask",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetButtonMask" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = csJoystickEventHelper::GetButtonMask((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetModifiers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csKeyModifiers *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  {
    arg2 = new csKeyModifiers();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetModifiers",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetModifiers" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  csJoystickEventHelper::GetModifiers((iEvent const *)arg1,*arg2);
  resultobj = SWIG_Py_Void();
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csKeyModifiers" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csJoystickEventHelper_GetEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csJoystickEventData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  {
    arg2 = new csJoystickEventData();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csJoystickEventHelper_GetEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csJoystickEventHelper_GetEventData" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)csJoystickEventHelper::GetEventData((iEvent const *)arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csJoystickEventData" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csJoystickEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventHelper *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csJoystickEventHelper",0,0)) SWIG_fail;
  result = (csJoystickEventHelper *)new csJoystickEventHelper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csJoystickEventHelper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csJoystickEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csJoystickEventHelper *arg1 = (csJoystickEventHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csJoystickEventHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csJoystickEventHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csJoystickEventHelper" "', argument " "1"" of type '" "csJoystickEventHelper *""'"); 
  }
  arg1 = reinterpret_cast< csJoystickEventHelper * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csJoystickEventHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csJoystickEventHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csInputEventHelper_GetButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  iEvent *arg2 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInputEventHelper_GetButton",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInputEventHelper_GetButton" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csInputEventHelper_GetButton" "', argument " "2"" of type '" "iEvent const *""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (uint)csInputEventHelper::GetButton(arg1,(iEvent const *)arg2);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csInputEventHelper_GetButtonState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  iEvent *arg2 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csInputEventHelper_GetButtonState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csInputEventHelper_GetButtonState" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csInputEventHelper_GetButtonState" "', argument " "2"" of type '" "iEvent const *""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)csInputEventHelper::GetButtonState(arg1,(iEvent const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csInputEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csInputEventHelper *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csInputEventHelper",0,0)) SWIG_fail;
  result = (csInputEventHelper *)new csInputEventHelper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csInputEventHelper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csInputEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csInputEventHelper *arg1 = (csInputEventHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csInputEventHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csInputEventHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csInputEventHelper" "', argument " "1"" of type '" "csInputEventHelper *""'"); 
  }
  arg1 = reinterpret_cast< csInputEventHelper * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csInputEventHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csInputEventHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csCommandEventHelper_NewEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTicks arg1 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  bool arg3 ;
  intptr_t arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csEvent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventHelper_NewEvent",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csCommandEventHelper_NewEvent" "', argument " "1"" of type '" "csTicks""'");
  } 
  arg1 = static_cast< csTicks >(val1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csCommandEventHelper_NewEvent" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_intptr_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csCommandEventHelper_NewEvent" "', argument " "4"" of type '" "intptr_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csCommandEventHelper_NewEvent" "', argument " "4"" of type '" "intptr_t""'");
    } else {
      intptr_t * temp = reinterpret_cast< intptr_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (csEvent *)csCommandEventHelper::NewEvent(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventHelper_NewEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTicks arg1 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  bool arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csEvent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventHelper_NewEvent",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csCommandEventHelper_NewEvent" "', argument " "1"" of type '" "csTicks""'");
  } 
  arg1 = static_cast< csTicks >(val1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csCommandEventHelper_NewEvent" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (csEvent *)csCommandEventHelper::NewEvent(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventHelper_NewEvent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csCommandEventHelper_NewEvent__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_intptr_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csCommandEventHelper_NewEvent__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csCommandEventHelper_NewEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    NewEvent(csTicks,csEventID,bool,intptr_t)\n"
    "    csCommandEventHelper::NewEvent(csTicks,csEventID,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventHelper_GetCode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventHelper_GetCode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandEventHelper_GetCode" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (uint)csCommandEventHelper::GetCode((iEvent const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventHelper_GetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  intptr_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventHelper_GetInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandEventHelper_GetInfo" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = csCommandEventHelper::GetInfo((iEvent const *)arg1);
  resultobj = SWIG_NewPointerObj((new intptr_t(static_cast< const intptr_t& >(result))), SWIGTYPE_p_intptr_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCommandEventHelper_GetEventData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEvent *arg1 = (iEvent *) 0 ;
  csCommandEventData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  {
    arg2 = new csCommandEventData();
  }
  if(!PyArg_UnpackTuple(args,(char *)"csCommandEventHelper_GetEventData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCommandEventHelper_GetEventData" "', argument " "1"" of type '" "iEvent const *""'"); 
  }
  arg1 = reinterpret_cast< iEvent * >(argp1);
  result = (bool)csCommandEventHelper::GetEventData((iEvent const *)arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  {
    resultobj = SWIG_NewPointerObj((void*)arg2, SWIG_TypeQuery("csCommandEventData" " *"), 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csCommandEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventHelper *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csCommandEventHelper",0,0)) SWIG_fail;
  result = (csCommandEventHelper *)new csCommandEventHelper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCommandEventHelper, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csCommandEventHelper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCommandEventHelper *arg1 = (csCommandEventHelper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csCommandEventHelper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCommandEventHelper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csCommandEventHelper" "', argument " "1"" of type '" "csCommandEventHelper *""'"); 
  }
  arg1 = reinterpret_cast< csCommandEventHelper * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csCommandEventHelper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csCommandEventHelper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_RegisterWeakListener__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csRef< iEventHandler > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"RegisterWeakListener",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RegisterWeakListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RegisterWeakListener" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventHandler_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RegisterWeakListener" "', argument " "3"" of type '" "csRef< iEventHandler > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RegisterWeakListener" "', argument " "3"" of type '" "csRef< iEventHandler > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventHandler > * >(argp3);
  result = CS::RegisterWeakListener(arg1,arg2,*arg3);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RegisterWeakListener__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 = 0 ;
  csRef< iEventHandler > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"RegisterWeakListener",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RegisterWeakListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RegisterWeakListener" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RegisterWeakListener" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RegisterWeakListener" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  arg3 = reinterpret_cast< csEventID * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csRefT_iEventHandler_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "RegisterWeakListener" "', argument " "4"" of type '" "csRef< iEventHandler > &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RegisterWeakListener" "', argument " "4"" of type '" "csRef< iEventHandler > &""'"); 
  }
  arg4 = reinterpret_cast< csRef< iEventHandler > * >(argp4);
  result = CS::RegisterWeakListener(arg1,arg2,(CS::StringID< CS::StringSetTag::General > const &)*arg3,*arg4);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RegisterWeakListener__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 ;
  csRef< iEventHandler > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"RegisterWeakListener",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RegisterWeakListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RegisterWeakListener" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  {
    int cnt; 
    if (!PyList_Check(obj2))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    cnt = PyList_Size(obj2);
    csEventID * ptr = new csEventID[cnt];
    for (int i = 0; i < cnt; ++i)
    {
      PyObject * o = PyList_GetItem(obj2, i);
      if (!PyNumber_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain numbers");
        delete [] ptr;
        return 0;
      }
      ptr[i] = (csEventID) PyInt_AsUnsignedLongMask(o);
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csRefT_iEventHandler_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "RegisterWeakListener" "', argument " "4"" of type '" "csRef< iEventHandler > &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RegisterWeakListener" "', argument " "4"" of type '" "csRef< iEventHandler > &""'"); 
  }
  arg4 = reinterpret_cast< csRef< iEventHandler > * >(argp4);
  result = CS::RegisterWeakListener(arg1,arg2,(CS::StringID< CS::StringSetTag::General > const (*))arg3,*arg4);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RegisterWeakListener(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csRefT_iEventHandler_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_RegisterWeakListener__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csRefT_iEventHandler_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_RegisterWeakListener__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csRefT_iEventHandler_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_RegisterWeakListener__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RegisterWeakListener'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CS::RegisterWeakListener(iEventQueue *,iEventHandler *,csRef< iEventHandler > &)\n"
    "    CS::RegisterWeakListener(iEventQueue *,iEventHandler *,csEventID const &,csRef< iEventHandler > &)\n"
    "    CS::RegisterWeakListener(iEventQueue *,iEventHandler *,csEventID const [],csRef< iEventHandler > &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RemoveWeakListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  csRef< iEventHandler > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RemoveWeakListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RemoveWeakListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandler_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RemoveWeakListener" "', argument " "2"" of type '" "csRef< iEventHandler > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RemoveWeakListener" "', argument " "2"" of type '" "csRef< iEventHandler > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandler > * >(argp2);
  CS::RemoveWeakListener(arg1,*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyModifiers_modifiers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyModifiers *arg1 = (csKeyModifiers *) 0 ;
  unsigned int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyModifiers_modifiers_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csKeyModifiers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyModifiers_modifiers_set" "', argument " "1"" of type '" "csKeyModifiers *""'"); 
  }
  arg1 = reinterpret_cast< csKeyModifiers * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csKeyModifiers_modifiers_set" "', argument " "2"" of type '" "unsigned int [csKeyModifierTypeLast]""'"); 
  } 
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)csKeyModifierTypeLast; ++ii) arg1->modifiers[ii] = arg2[ii];
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""modifiers""' of type '""unsigned int [csKeyModifierTypeLast]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyModifiers_modifiers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyModifiers *arg1 = (csKeyModifiers *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyModifiers_modifiers_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csKeyModifiers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyModifiers_modifiers_get" "', argument " "1"" of type '" "csKeyModifiers *""'"); 
  }
  arg1 = reinterpret_cast< csKeyModifiers * >(argp1);
  result = (unsigned int *)(unsigned int *) ((arg1)->modifiers);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csKeyModifiers___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyModifiers *arg1 = (csKeyModifiers *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csKeyModifiers___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csKeyModifiers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csKeyModifiers___getitem__" "', argument " "1"" of type '" "csKeyModifiers const *""'"); 
  }
  arg1 = reinterpret_cast< csKeyModifiers * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csKeyModifiers___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (unsigned int)csKeyModifiers___getitem__((_csKeyModifiers const *)arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csKeyModifiers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyModifiers *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csKeyModifiers",0,0)) SWIG_fail;
  result = (csKeyModifiers *)new csKeyModifiers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__csKeyModifiers, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csKeyModifiers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csKeyModifiers *arg1 = (csKeyModifiers *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csKeyModifiers",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csKeyModifiers, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csKeyModifiers" "', argument " "1"" of type '" "csKeyModifiers *""'"); 
  }
  arg1 = reinterpret_cast< csKeyModifiers * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csKeyModifiers_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p__csKeyModifiers, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iEventQueue_Process(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Process",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Process" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  (arg1)->Process();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Dispatch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Dispatch",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Dispatch" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_Dispatch" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventQueue_Dispatch" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  (arg1)->Dispatch(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_RegisterListener__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_RegisterListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_RegisterListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_RegisterListener" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  result = (arg1)->RegisterListener(arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Subscribe__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Subscribe",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Subscribe" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_Subscribe" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventQueue_Subscribe" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventQueue_Subscribe" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  arg3 = reinterpret_cast< csEventID * >(argp3);
  result = (bool)(arg1)->Subscribe(arg2,(csEventID const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Subscribe__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Subscribe",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Subscribe" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_Subscribe" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  {
    int cnt; 
    if (!PyList_Check(obj2))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    cnt = PyList_Size(obj2);
    csEventID * ptr = new csEventID[cnt];
    for (int i = 0; i < cnt; ++i)
    {
      PyObject * o = PyList_GetItem(obj2, i);
      if (!PyNumber_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain numbers");
        delete [] ptr;
        return 0;
      }
      ptr[i] = (csEventID) PyInt_AsUnsignedLongMask(o);
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->Subscribe(arg2,(csEventID const (*))arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Subscribe(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEventQueue_Subscribe__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEventQueue_Subscribe__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iEventQueue_Subscribe'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Subscribe(iEventQueue *,iEventHandler *,csEventID const &)\n"
    "    Subscribe(iEventQueue *,iEventHandler *,csEventID const [])\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Unsubscribe__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Unsubscribe",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Unsubscribe" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_Unsubscribe" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  {
    int cnt; 
    if (!PyList_Check(obj2))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    cnt = PyList_Size(obj2);
    csEventID * ptr = new csEventID[cnt];
    for (int i = 0; i < cnt; ++i)
    {
      PyObject * o = PyList_GetItem(obj2, i);
      if (!PyNumber_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain numbers");
        delete [] ptr;
        return 0;
      }
      ptr[i] = (csEventID) PyInt_AsUnsignedLongMask(o);
    }
    arg3 = ptr;
  }
  (arg1)->Unsubscribe(arg2,(csEventID const (*))arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Unsubscribe__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Unsubscribe",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Unsubscribe" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_Unsubscribe" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventQueue_Unsubscribe" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventQueue_Unsubscribe" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  arg3 = reinterpret_cast< csEventID * >(argp3);
  (arg1)->Unsubscribe(arg2,(csEventID const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Unsubscribe(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEventQueue_Unsubscribe__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEventQueue_Unsubscribe__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iEventQueue_Unsubscribe'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Unsubscribe(iEventQueue *,iEventHandler *,csEventID const [])\n"
    "    Unsubscribe(iEventQueue *,iEventHandler *,csEventID const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_RegisterListener__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_RegisterListener",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_RegisterListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_RegisterListener" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventQueue_RegisterListener" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventQueue_RegisterListener" "', argument " "3"" of type '" "csEventID const &""'"); 
  }
  arg3 = reinterpret_cast< csEventID * >(argp3);
  result = (arg1)->RegisterListener(arg2,(csEventID const &)*arg3);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_RegisterListener__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  csEventID *arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_RegisterListener",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_RegisterListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_RegisterListener" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  {
    int cnt; 
    if (!PyList_Check(obj2))
    {
      PyErr_SetString(PyExc_TypeError, "not a list");
      return 0;
    }
    cnt = PyList_Size(obj2);
    csEventID * ptr = new csEventID[cnt];
    for (int i = 0; i < cnt; ++i)
    {
      PyObject * o = PyList_GetItem(obj2, i);
      if (!PyNumber_Check(o))
      {
        PyErr_SetString(PyExc_TypeError, "list must contain numbers");
        delete [] ptr;
        return 0;
      }
      ptr[i] = (csEventID) PyInt_AsUnsignedLongMask(o);
    }
    arg3 = ptr;
  }
  result = (arg1)->RegisterListener(arg2,(csEventID const (*))arg3);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_RegisterListener(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iEventQueue_RegisterListener__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEventQueue_RegisterListener__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iEventQueue_RegisterListener__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iEventQueue_RegisterListener'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RegisterListener(iEventQueue *,iEventHandler *)\n"
    "    RegisterListener(iEventQueue *,iEventHandler *,csEventID const &)\n"
    "    RegisterListener(iEventQueue *,iEventHandler *,csEventID const [])\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_RemoveListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_RemoveListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_RemoveListener" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_RemoveListener" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  (arg1)->RemoveListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_CreateEventOutlet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEventPlug *arg2 = (iEventPlug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iEventOutlet > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_CreateEventOutlet",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_CreateEventOutlet" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventPlug, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_CreateEventOutlet" "', argument " "2"" of type '" "iEventPlug *""'"); 
  }
  arg2 = reinterpret_cast< iEventPlug * >(argp2);
  result = (arg1)->CreateEventOutlet(arg2);
  {
    csRef<iEventOutlet> ref((csPtr<iEventOutlet>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iEventOutlet *)ref, SWIGTYPE_p_iEventOutlet, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_GetEventOutlet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iEventOutlet *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_GetEventOutlet",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_GetEventOutlet" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  result = (iEventOutlet *)(arg1)->GetEventOutlet();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iEventOutlet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_GetEventCord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  csEventID *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iEventCord *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_GetEventCord",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_GetEventCord" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_GetEventCord" "', argument " "2"" of type '" "csEventID const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventQueue_GetEventCord" "', argument " "2"" of type '" "csEventID const &""'"); 
  }
  arg2 = reinterpret_cast< csEventID * >(argp2);
  result = (iEventCord *)(arg1)->GetEventCord((csEventID const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iEventCord, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_CreateEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  csEventID *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iEvent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_CreateEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_CreateEvent" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_CreateEvent" "', argument " "2"" of type '" "csEventID const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventQueue_CreateEvent" "', argument " "2"" of type '" "csEventID const &""'"); 
  }
  arg2 = reinterpret_cast< csEventID * >(argp2);
  result = (arg1)->CreateEvent((csEventID const &)*arg2);
  {
    csRef<iEvent> ref((csPtr<iEvent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iEvent *)ref, SWIGTYPE_p_iEvent, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_CreateBroadcastEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  csEventID *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iEvent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_CreateBroadcastEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_CreateBroadcastEvent" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_CreateBroadcastEvent" "', argument " "2"" of type '" "csEventID const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventQueue_CreateBroadcastEvent" "', argument " "2"" of type '" "csEventID const &""'"); 
  }
  arg2 = reinterpret_cast< csEventID * >(argp2);
  result = (arg1)->CreateBroadcastEvent((csEventID const &)*arg2);
  {
    csRef<iEvent> ref((csPtr<iEvent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iEvent *)ref, SWIGTYPE_p_iEvent, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Post(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  iEvent *arg2 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Post",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Post" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventQueue_Post" "', argument " "2"" of type '" "iEvent *""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  (arg1)->Post(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iEvent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Get" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  result = (arg1)->Get();
  {
    csRef<iEvent> ref((csPtr<iEvent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iEvent *)ref, SWIGTYPE_p_iEvent, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_Clear" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_IsEmpty" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  result = (bool)(arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_RemoveAllListeners(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_RemoveAllListeners",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventQueue_RemoveAllListeners" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  (arg1)->RemoveAllListeners();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventQueue_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventQueue_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iEventQueue_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEventQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventQueue *arg1 = (iEventQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEventQueue",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventQueue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEventQueue" "', argument " "1"" of type '" "iEventQueue *""'"); 
  }
  arg1 = reinterpret_cast< iEventQueue * >(argp1);
  delete_iEventQueue(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEventQueue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEventQueue, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iEventNameRegistry_GetID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventNameRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventNameRegistry_GetID" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventNameRegistry_GetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetID((char const *)arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventNameRegistry_GetString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventNameRegistry_GetString",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventNameRegistry_GetString" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  result = (char *)(arg1)->GetString(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventNameRegistry_GetParentID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventNameRegistry_GetParentID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventNameRegistry_GetParentID" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  result = (arg1)->GetParentID(arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventNameRegistry_IsImmediateChildOf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventNameRegistry_IsImmediateChildOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventNameRegistry_IsImmediateChildOf" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  {
    arg3 = (csEventID const)PyLong_AsUnsignedLong(obj2);
  }
  result = (bool)(arg1)->IsImmediateChildOf(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventNameRegistry_IsKindOf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventNameRegistry_IsKindOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventNameRegistry_IsKindOf" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  {
    arg3 = (csEventID const)PyLong_AsUnsignedLong(obj2);
  }
  result = (bool)(arg1)->IsKindOf(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventNameRegistry_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventNameRegistry_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iEventNameRegistry_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEventNameRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEventNameRegistry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEventNameRegistry" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  delete_iEventNameRegistry(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEventNameRegistry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEventNameRegistry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_csEventNameRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventNameRegistry *arg1 = (csEventNameRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csEventNameRegistry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventNameRegistry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csEventNameRegistry" "', argument " "1"" of type '" "csEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventNameRegistry * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventNameRegistry *arg1 = (csEventNameRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_GetID" "', argument " "1"" of type '" "csEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventNameRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventNameRegistry_GetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetID((char const *)arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventNameRegistry *arg1 = (csEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_GetString",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_GetString" "', argument " "1"" of type '" "csEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  result = (char *)(arg1)->GetString(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_GetString",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_GetString" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  result = (char *)csEventNameRegistry::GetString(arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetString(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        return _wrap_csEventNameRegistry_GetString__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        return _wrap_csEventNameRegistry_GetString__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventNameRegistry_GetString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetString(csEventNameRegistry *,csEventID const)\n"
    "    csEventNameRegistry::GetString(iObjectRegistry *,csEventID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetParentID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventNameRegistry *arg1 = (csEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_GetParentID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_GetParentID" "', argument " "1"" of type '" "csEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  result = (arg1)->GetParentID(arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_IsImmediateChildOf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventNameRegistry *arg1 = (csEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_IsImmediateChildOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_IsImmediateChildOf" "', argument " "1"" of type '" "csEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  {
    arg3 = (csEventID const)PyLong_AsUnsignedLong(obj2);
  }
  result = (bool)(arg1)->IsImmediateChildOf(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_IsKindOf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventNameRegistry *arg1 = (csEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_IsKindOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_IsKindOf" "', argument " "1"" of type '" "csEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID const)PyLong_AsUnsignedLong(obj1);
  }
  {
    arg3 = (csEventID const)PyLong_AsUnsignedLong(obj2);
  }
  result = (bool)(arg1)->IsKindOf(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iEventNameRegistry > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_GetRegistry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_GetRegistry" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csEventNameRegistry::GetRegistry(arg1);
  {
    csRef<iEventNameRegistry> ref((csRef<iEventNameRegistry>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iEventNameRegistry *)ref, SWIGTYPE_p_iEventNameRegistry, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_GetID" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventNameRegistry_GetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = csEventNameRegistry::GetID(arg1,(char const *)arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetID__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_GetID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventNameRegistry_GetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = csEventNameRegistry::GetID(arg1,(char const *)arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_GetID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventNameRegistry_GetID__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventNameRegistry_GetID__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventNameRegistry_GetID__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventNameRegistry_GetID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetID(csEventNameRegistry *,char const *)\n"
    "    GetID(iEventNameRegistry *,char const *)\n"
    "    csEventNameRegistry::GetID(iObjectRegistry *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_IsKindOf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_IsKindOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_IsKindOf" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  result = (bool)csEventNameRegistry::IsKindOf(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_IsKindOf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg2 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventNameRegistry_IsKindOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventNameRegistry_IsKindOf" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    arg2 = (csEventID)PyLong_AsUnsignedLong(obj1);
  }
  {
    arg3 = (csEventID)PyLong_AsUnsignedLong(obj2);
  }
  result = (bool)csEventNameRegistry::IsKindOf(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventNameRegistry_IsKindOf(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          return _wrap_csEventNameRegistry_IsKindOf__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          return _wrap_csEventNameRegistry_IsKindOf__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = (PyLong_Check(argv[1]) || PyInt_Check(argv[1]));
      }
      if (_v) {
        {
          _v = (PyLong_Check(argv[2]) || PyInt_Check(argv[2]));
        }
        if (_v) {
          return _wrap_csEventNameRegistry_IsKindOf__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventNameRegistry_IsKindOf'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IsKindOf(csEventNameRegistry *,csEventID const,csEventID const)\n"
    "    IsKindOf(iEventNameRegistry *,csEventID,csEventID)\n"
    "    csEventNameRegistry::IsKindOf(iObjectRegistry *,csEventID,csEventID)\n");
  return NULL;
}


SWIGINTERN PyObject *csEventNameRegistry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csEventNameRegistry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csevMouse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouse",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouse" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouse" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouse(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouse",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouse" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouse" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouse(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csevMouse__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csevMouse__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csevMouse'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csevMouse(iEventNameRegistry *,uint)\n"
    "    csevMouse(iObjectRegistry *,uint)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseOp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  uint arg2 ;
  csString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseOp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseOp" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseOp" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csString,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csevMouseOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csevMouseOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  arg3 = reinterpret_cast< csString * >(argp3);
  result = csevMouseOp(arg1,arg2,(csString const &)*arg3);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseOp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  csString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseOp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseOp" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseOp" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csString,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csevMouseOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csevMouseOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  arg3 = reinterpret_cast< csString * >(argp3);
  result = csevMouseOp(arg1,arg2,(csString const &)*arg3);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseOp(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csevMouseOp__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csevMouseOp__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csevMouseOp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csevMouseOp(iEventNameRegistry *,uint,csString const &)\n"
    "    csevMouseOp(iObjectRegistry *,uint,csString const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevJoystick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevJoystick",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevJoystick" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevJoystick" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevJoystick(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevJoystick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevJoystick",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevJoystick" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevJoystick" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevJoystick(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevJoystick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csevJoystick__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csevJoystick__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csevJoystick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csevJoystick(iEventNameRegistry *,uint)\n"
    "    csevJoystick(iObjectRegistry *,uint)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevJoystickOp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventNameRegistry *arg1 = (iEventNameRegistry *) 0 ;
  uint arg2 ;
  csString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevJoystickOp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventNameRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevJoystickOp" "', argument " "1"" of type '" "iEventNameRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iEventNameRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevJoystickOp" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csString,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csevJoystickOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csevJoystickOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  arg3 = reinterpret_cast< csString * >(argp3);
  result = csevJoystickOp(arg1,arg2,(csString const &)*arg3);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevJoystickOp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  csString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevJoystickOp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevJoystickOp" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevJoystickOp" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csString,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csevJoystickOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csevJoystickOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  arg3 = reinterpret_cast< csString * >(argp3);
  result = csevJoystickOp(arg1,arg2,(csString const &)*arg3);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevJoystickOp(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iEventNameRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csevJoystickOp__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csevJoystickOp__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csevJoystickOp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csevJoystickOp(iEventNameRegistry *,uint,csString const &)\n"
    "    csevJoystickOp(iObjectRegistry *,uint,csString const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevCanvasOp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventNameRegistry > *arg1 = 0 ;
  iGraphics2D *arg2 = (iGraphics2D *) 0 ;
  csString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevCanvasOp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevCanvasOp" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csevCanvasOp" "', argument " "1"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iGraphics2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csevCanvasOp" "', argument " "2"" of type '" "iGraphics2D const *""'"); 
  }
  arg2 = reinterpret_cast< iGraphics2D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csString,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csevCanvasOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csevCanvasOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  arg3 = reinterpret_cast< csString * >(argp3);
  result = csevCanvasOp(*arg1,(iGraphics2D const *)arg2,(csString const &)*arg3);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevCanvasOp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iGraphics2D *arg2 = (iGraphics2D *) 0 ;
  csString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevCanvasOp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevCanvasOp" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iGraphics2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csevCanvasOp" "', argument " "2"" of type '" "iGraphics2D const *""'"); 
  }
  arg2 = reinterpret_cast< iGraphics2D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csString,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csevCanvasOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csevCanvasOp" "', argument " "3"" of type '" "csString const &""'"); 
  }
  arg3 = reinterpret_cast< csString * >(argp3);
  result = csevCanvasOp(arg1,(iGraphics2D const *)arg2,(csString const &)*arg3);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevCanvasOp(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRefT_iEventNameRegistry_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iGraphics2D, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csevCanvasOp__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iGraphics2D, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csevCanvasOp__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csevCanvasOp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csevCanvasOp(csRef< iEventNameRegistry > &,iGraphics2D const *,csString const &)\n"
    "    csevCanvasOp(iObjectRegistry *,iGraphics2D const *,csString const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_HandleEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_HandleEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventHandler_HandleEvent" "', argument " "1"" of type '" "iEventHandler *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventHandler_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)(arg1)->HandleEvent(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventHandler_GenericName" "', argument " "1"" of type '" "iEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  result = (char *)((iEventHandler const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventHandler_GenericID" "', argument " "1"" of type '" "iEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventHandler_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((iEventHandler const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventHandler_GenericPrec" "', argument " "1"" of type '" "iEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventHandler_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventHandler_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((iEventHandler const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventHandler_GenericSucc" "', argument " "1"" of type '" "iEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventHandler_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventHandler_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((iEventHandler const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_InstancePrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_InstancePrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventHandler_InstancePrec" "', argument " "1"" of type '" "iEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventHandler_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventHandler_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((iEventHandler const *)arg1)->InstancePrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_InstanceSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_InstanceSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iEventHandler_InstanceSucc" "', argument " "1"" of type '" "iEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iEventHandler_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iEventHandler_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iEventHandler_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((iEventHandler const *)arg1)->InstanceSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iEventHandler_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iEventHandler_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iEventHandler_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iEventHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iEventHandler *arg1 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iEventHandler",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iEventHandler, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iEventHandler" "', argument " "1"" of type '" "iEventHandler *""'"); 
  }
  arg1 = reinterpret_cast< iEventHandler * >(argp1);
  delete_iEventHandler(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iEventHandler_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iEventHandler, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iPluginIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginIterator *arg1 = (iPluginIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginIterator_HasNext" "', argument " "1"" of type '" "iPluginIterator *""'"); 
  }
  arg1 = reinterpret_cast< iPluginIterator * >(argp1);
  result = (bool)(arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginIterator *arg1 = (iPluginIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iComponent *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginIterator_Next" "', argument " "1"" of type '" "iPluginIterator *""'"); 
  }
  arg1 = reinterpret_cast< iPluginIterator * >(argp1);
  result = (iComponent *)(arg1)->Next();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iComponent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginIterator_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginIterator_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iPluginIterator_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iPluginIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginIterator *arg1 = (iPluginIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iPluginIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iPluginIterator" "', argument " "1"" of type '" "iPluginIterator *""'"); 
  }
  arg1 = reinterpret_cast< iPluginIterator * >(argp1);
  delete_iPluginIterator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iPluginIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iPluginIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iPluginManager_LoadPluginInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  uint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadPluginInstance",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadPluginInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iPluginManager_LoadPluginInstance" "', argument " "3"" of type '" "uint""'");
  } 
  arg3 = static_cast< uint >(val3);
  result = (arg1)->LoadPluginInstance((char const *)arg2,arg3);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPluginAlways__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  iBase *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadPluginAlways",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (iBase *)(arg1)->LoadPlugin((char const *)arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iBase, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPluginAlways__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  iBase *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadPluginAlways",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (iBase *)(arg1)->LoadPlugin((char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iBase, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPluginAlways__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iBase *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadPluginAlways",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadPluginAlways" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (iBase *)(arg1)->LoadPlugin((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iBase, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPluginAlways(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iPluginManager_LoadPluginAlways__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iPluginManager_LoadPluginAlways__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iPluginManager_LoadPluginAlways__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iPluginManager_LoadPluginAlways'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    LoadPlugin(iPluginManager *,char const *,bool,bool)\n"
    "    LoadPlugin(iPluginManager *,char const *,bool)\n"
    "    LoadPlugin(iPluginManager *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_QueryPluginInstance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_QueryPluginInstance",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (arg1)->QueryPluginInstance((char const *)arg2,arg3);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_QueryPluginInstance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_QueryPluginInstance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->QueryPluginInstance((char const *)arg2);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_QueryPluginInstance__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_QueryPluginInstance",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iPluginManager_QueryPluginInstance" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (arg1)->QueryPluginInstance((char const *)arg2,(char const *)arg3,arg4);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_QueryPluginInstance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iPluginManager_QueryPluginInstance__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iPluginManager_QueryPluginInstance__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iPluginManager_QueryPluginInstance__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iPluginManager_QueryPluginInstance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    QueryPluginInstance(iPluginManager *,char const *,int)\n"
    "    QueryPluginInstance(iPluginManager *,char const *)\n"
    "    QueryPluginInstance(iPluginManager *,char const *,char const *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_UnloadPluginInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  iComponent *arg2 = (iComponent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_UnloadPluginInstance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_UnloadPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iComponent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_UnloadPluginInstance" "', argument " "2"" of type '" "iComponent *""'"); 
  }
  arg2 = reinterpret_cast< iComponent * >(argp2);
  result = (bool)(arg1)->UnloadPluginInstance(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_UnloadPlugin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  iComponent *arg2 = (iComponent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_UnloadPlugin",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_UnloadPlugin" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iComponent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_UnloadPlugin" "', argument " "2"" of type '" "iComponent *""'"); 
  }
  arg2 = reinterpret_cast< iComponent * >(argp2);
  result = (bool)(arg1)->UnloadPlugin(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_RegisterPluginInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  iComponent *arg3 = (iComponent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_RegisterPluginInstance",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_RegisterPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_RegisterPluginInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iComponent, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPluginManager_RegisterPluginInstance" "', argument " "3"" of type '" "iComponent *""'"); 
  }
  arg3 = reinterpret_cast< iComponent * >(argp3);
  result = (bool)(arg1)->RegisterPluginInstance((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_RegisterPlugin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  iComponent *arg3 = (iComponent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_RegisterPlugin",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_RegisterPlugin" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_RegisterPlugin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iComponent, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPluginManager_RegisterPlugin" "', argument " "3"" of type '" "iComponent *""'"); 
  }
  arg3 = reinterpret_cast< iComponent * >(argp3);
  result = (bool)(arg1)->RegisterPlugin((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_GetPluginInstances(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iPluginIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_GetPluginInstances",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_GetPluginInstances" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  result = (arg1)->GetPluginInstances();
  {
    csRef<iPluginIterator> ref((csPtr<iPluginIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iPluginIterator *)ref, SWIGTYPE_p_iPluginIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_GetPlugins(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iPluginIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_GetPlugins",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_GetPlugins" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  result = (arg1)->GetPlugins();
  {
    csRef<iPluginIterator> ref((csPtr<iPluginIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iPluginIterator *)ref, SWIGTYPE_p_iPluginIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_Clear" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_QueryOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  iComponent *arg2 = (iComponent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_QueryOptions",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_QueryOptions" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iComponent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_QueryOptions" "', argument " "2"" of type '" "iComponent *""'"); 
  }
  arg2 = reinterpret_cast< iComponent * >(argp2);
  (arg1)->QueryOptions(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_SetTagClassIDMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_SetTagClassIDMapping",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_SetTagClassIDMapping" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_SetTagClassIDMapping" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPluginManager_SetTagClassIDMapping" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->SetTagClassIDMapping((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_UnsetTagClassIDMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_UnsetTagClassIDMapping",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_UnsetTagClassIDMapping" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_UnsetTagClassIDMapping" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->UnsetTagClassIDMapping((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_GetTagClassIDMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_GetTagClassIDMapping",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_GetTagClassIDMapping" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_GetTagClassIDMapping" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->GetTagClassIDMapping((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_GetClassIDTags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_GetClassIDTags",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_GetClassIDTags" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_GetClassIDTags" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetClassIDTags((char const *)arg2);
  {
    csRef<iStringArray> ref((csPtr<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadTagPluginInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  uint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadTagPluginInstance",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadTagPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadTagPluginInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iPluginManager_LoadTagPluginInstance" "', argument " "3"" of type '" "uint""'");
  } 
  arg3 = static_cast< uint >(val3);
  result = (arg1)->LoadTagPluginInstance((char const *)arg2,arg3);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_QueryTagPluginInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_QueryTagPluginInstance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_QueryTagPluginInstance" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_QueryTagPluginInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->QueryTagPluginInstance((char const *)arg2);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPlugin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  bool arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csString className3 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadPlugin",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadPlugin" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadPlugin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    PyObject *pyname = PyObject_GetAttrString(obj2, "__name__");
    className3 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg3 = (char*)className3.GetData(); // SWIG declares arg3 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj2, "scfGetVersion", NULL);
    arg4 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  ecode5 = SWIG_AsVal_bool(obj3, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iPluginManager_LoadPlugin" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj4, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "iPluginManager_LoadPlugin" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = iPluginManager_LoadPlugin__SWIG_0(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,arg6);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPlugin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csString className3 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadPlugin",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadPlugin" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadPlugin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    PyObject *pyname = PyObject_GetAttrString(obj2, "__name__");
    className3 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg3 = (char*)className3.GetData(); // SWIG declares arg3 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj2, "scfGetVersion", NULL);
    arg4 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  ecode5 = SWIG_AsVal_bool(obj3, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iPluginManager_LoadPlugin" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = iPluginManager_LoadPlugin__SWIG_0(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPlugin__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csString className3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_LoadPlugin",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPluginManager_LoadPlugin" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPluginManager_LoadPlugin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    PyObject *pyname = PyObject_GetAttrString(obj2, "__name__");
    className3 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg3 = (char*)className3.GetData(); // SWIG declares arg3 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj2, "scfGetVersion", NULL);
    arg4 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = iPluginManager_LoadPlugin__SWIG_0(arg1,(char const *)arg2,(char const *)arg3,arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_LoadPlugin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          _v = PyObject_HasAttrString(argv[2],"scfGetVersion");
        }
        if (_v) {
          if (argc <= 3) {
            return _wrap_iPluginManager_LoadPlugin__SWIG_2(self, args);
          }
          return _wrap_iPluginManager_LoadPlugin__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          _v = PyObject_HasAttrString(argv[2],"scfGetVersion");
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iPluginManager_LoadPlugin__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          _v = PyObject_HasAttrString(argv[2],"scfGetVersion");
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_iPluginManager_LoadPlugin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iPluginManager_LoadPlugin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    LoadPlugin(iPluginManager *,char const *,char const *,int,bool,bool)\n"
    "    LoadPlugin(iPluginManager *,char const *,char const *,int,bool)\n"
    "    LoadPlugin(iPluginManager *,char const *,char const *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPluginManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPluginManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iPluginManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iPluginManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iPluginManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iPluginManager" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  delete_iPluginManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iPluginManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iPluginManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csLoadPluginAlways__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csLoadPluginAlways",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csLoadPluginAlways" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csLoadPluginAlways" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csLoadPluginAlways" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = csLoadPluginAlways(arg1,(char const *)arg2,arg3);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csLoadPluginAlways__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iComponent > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csLoadPluginAlways",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csLoadPluginAlways" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csLoadPluginAlways" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = csLoadPluginAlways(arg1,(char const *)arg2);
  {
    csRef<iComponent> ref((csPtr<iComponent>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iComponent *)ref, SWIGTYPE_p_iComponent, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csLoadPluginAlways(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csLoadPluginAlways__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iPluginManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csLoadPluginAlways__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csLoadPluginAlways'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csLoadPluginAlways(iPluginManager *,char const *,bool)\n"
    "    csLoadPluginAlways(iPluginManager *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfObject_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csObject,iObject > *arg1 = (scfImplementation1< csObject,iObject > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfObject_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfObject_IncRef" "', argument " "1"" of type '" "scfImplementation1< csObject,iObject > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csObject,iObject > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfObject_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csObject,iObject > *arg1 = (scfImplementation1< csObject,iObject > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfObject_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfObject_DecRef" "', argument " "1"" of type '" "scfImplementation1< csObject,iObject > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csObject,iObject > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfObject_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csObject,iObject > *arg1 = (scfImplementation1< csObject,iObject > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfObject_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfObject_GetRefCount" "', argument " "1"" of type '" "scfImplementation1< csObject,iObject > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csObject,iObject > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfObject_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csObject,iObject > *arg1 = (scfImplementation1< csObject,iObject > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfObject_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfObject_QueryInterface" "', argument " "1"" of type '" "scfImplementation1< csObject,iObject > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csObject,iObject > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfObject_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "scfObject_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfObject_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csObject,iObject > *arg1 = (scfImplementation1< csObject,iObject > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfObject_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfObject_AddRefOwner" "', argument " "1"" of type '" "scfImplementation1< csObject,iObject > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csObject,iObject > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfObject_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfObject_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csObject,iObject > *arg1 = (scfImplementation1< csObject,iObject > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfObject_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfObject_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementation1< csObject,iObject > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csObject,iObject > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfObject_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfObject_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csObject,iObject > *arg1 = (scfImplementation1< csObject,iObject > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfObject_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfObject_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementation1< csObject,iObject > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csObject,iObject > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *scfObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementation1T_csObject_iObject_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csObject" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  result = (csObject *)new csObject(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csObject",0,0)) SWIG_fail;
  result = (csObject *)new csObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csObject__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csObject,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csObject" "', argument " "1"" of type '" "csObject &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csObject" "', argument " "1"" of type '" "csObject &""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  result = (csObject *)new csObject(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csObject__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csObject__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csObject__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csObject(iBase *)\n"
    "    csObject()\n"
    "    csObject(csObject &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csObject" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_SetName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_SetName" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_SetName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetName((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_GetName" "', argument " "1"" of type '" "csObject const *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  result = (char *)((csObject const *)arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_GetID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_GetID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_GetID" "', argument " "1"" of type '" "csObject const *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  result = (uint)((csObject const *)arg1)->GetID();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_SetObjectParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_SetObjectParent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_SetObjectParent" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_SetObjectParent" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->SetObjectParent(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_GetObjectParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_GetObjectParent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_GetObjectParent" "', argument " "1"" of type '" "csObject const *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  result = (iObject *)((csObject const *)arg1)->GetObjectParent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_ObjAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_ObjAdd",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_ObjAdd" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_ObjAdd" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjAdd(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_ObjRemove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_ObjRemove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_ObjRemove" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_ObjRemove" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjRemove(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_ObjRemoveAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_ObjRemoveAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_ObjRemoveAll" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  (arg1)->ObjRemoveAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_ObjAddChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_ObjAddChildren",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_ObjAddChildren" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_ObjAddChildren" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjAddChildren(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_GetChildByName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_GetChildByName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_GetChildByName" "', argument " "1"" of type '" "csObject const *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_GetChildByName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (iObject *)((csObject const *)arg1)->GetChild((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_GetIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iObjectIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_GetIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_GetIterator" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  result = (arg1)->GetIterator();
  {
    csRef<iObjectIterator> ref((csPtr<iObjectIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iObjectIterator *)ref, SWIGTYPE_p_iObjectIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_AddNameChangeListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  iObjectNameChangeListener *arg2 = (iObjectNameChangeListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_AddNameChangeListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_AddNameChangeListener" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObjectNameChangeListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_AddNameChangeListener" "', argument " "2"" of type '" "iObjectNameChangeListener *""'"); 
  }
  arg2 = reinterpret_cast< iObjectNameChangeListener * >(argp2);
  (arg1)->AddNameChangeListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_RemoveNameChangeListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  iObjectNameChangeListener *arg2 = (iObjectNameChangeListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_RemoveNameChangeListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_RemoveNameChangeListener" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObjectNameChangeListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_RemoveNameChangeListener" "', argument " "2"" of type '" "iObjectNameChangeListener *""'"); 
  }
  arg2 = reinterpret_cast< iObjectNameChangeListener * >(argp2);
  (arg1)->RemoveNameChangeListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csObject_ObjReleaseOld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csObject *arg1 = (csObject *) 0 ;
  iObject *arg2 = (iObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csObject_ObjReleaseOld",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csObject_ObjReleaseOld" "', argument " "1"" of type '" "csObject *""'"); 
  }
  arg1 = reinterpret_cast< csObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csObject_ObjReleaseOld" "', argument " "2"" of type '" "iObject *""'"); 
  }
  arg2 = reinterpret_cast< iObject * >(argp2);
  (arg1)->ObjReleaseOld(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csVertexStatus_Type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *arg1 = (csVertexStatus *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVertexStatus_Type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVertexStatus_Type_set" "', argument " "1"" of type '" "csVertexStatus *""'"); 
  }
  arg1 = reinterpret_cast< csVertexStatus * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVertexStatus_Type_set" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  if (arg1) (arg1)->Type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVertexStatus_Type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *arg1 = (csVertexStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVertexStatus_Type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVertexStatus_Type_get" "', argument " "1"" of type '" "csVertexStatus *""'"); 
  }
  arg1 = reinterpret_cast< csVertexStatus * >(argp1);
  result = (unsigned char) ((arg1)->Type);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVertexStatus_Vertex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *arg1 = (csVertexStatus *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVertexStatus_Vertex_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVertexStatus_Vertex_set" "', argument " "1"" of type '" "csVertexStatus *""'"); 
  }
  arg1 = reinterpret_cast< csVertexStatus * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVertexStatus_Vertex_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->Vertex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVertexStatus_Vertex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *arg1 = (csVertexStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVertexStatus_Vertex_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVertexStatus_Vertex_get" "', argument " "1"" of type '" "csVertexStatus *""'"); 
  }
  arg1 = reinterpret_cast< csVertexStatus * >(argp1);
  result =  ((arg1)->Vertex);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVertexStatus_Pos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *arg1 = (csVertexStatus *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVertexStatus_Pos_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVertexStatus_Pos_set" "', argument " "1"" of type '" "csVertexStatus *""'"); 
  }
  arg1 = reinterpret_cast< csVertexStatus * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVertexStatus_Pos_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->Pos = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVertexStatus_Pos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *arg1 = (csVertexStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVertexStatus_Pos_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVertexStatus_Pos_get" "', argument " "1"" of type '" "csVertexStatus *""'"); 
  }
  arg1 = reinterpret_cast< csVertexStatus * >(argp1);
  result = (float) ((arg1)->Pos);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVertexStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVertexStatus",0,0)) SWIG_fail;
  result = (csVertexStatus *)new csVertexStatus();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVertexStatus, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVertexStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVertexStatus *arg1 = (csVertexStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVertexStatus",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVertexStatus, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVertexStatus" "', argument " "1"" of type '" "csVertexStatus *""'"); 
  }
  arg1 = reinterpret_cast< csVertexStatus * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVertexStatus_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csVertexStatus, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iClipper2D_Clip__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  size_t arg3 ;
  csVector2 *arg4 = (csVector2 *) 0 ;
  size_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  uint8 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_Clip",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_Clip" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iClipper2D_Clip" "', argument " "2"" of type '" "csVector2 *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iClipper2D_Clip" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iClipper2D_Clip" "', argument " "4"" of type '" "csVector2 *""'"); 
  }
  arg4 = reinterpret_cast< csVector2 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iClipper2D_Clip" "', argument " "5"" of type '" "size_t &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_Clip" "', argument " "5"" of type '" "size_t &""'"); 
  }
  arg5 = reinterpret_cast< size_t * >(argp5);
  result = (arg1)->Clip(arg2,arg3,arg4,*arg5);
  resultobj = SWIG_NewPointerObj((new uint8(static_cast< const uint8& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_Clip__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  size_t arg3 ;
  csVector2 *arg4 = (csVector2 *) 0 ;
  size_t *arg5 = 0 ;
  csBox2 *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  uint8 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_Clip",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_Clip" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iClipper2D_Clip" "', argument " "2"" of type '" "csVector2 *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iClipper2D_Clip" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iClipper2D_Clip" "', argument " "4"" of type '" "csVector2 *""'"); 
  }
  arg4 = reinterpret_cast< csVector2 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iClipper2D_Clip" "', argument " "5"" of type '" "size_t &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_Clip" "', argument " "5"" of type '" "size_t &""'"); 
  }
  arg5 = reinterpret_cast< size_t * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_csBox2,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "iClipper2D_Clip" "', argument " "6"" of type '" "csBox2 &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_Clip" "', argument " "6"" of type '" "csBox2 &""'"); 
  }
  arg6 = reinterpret_cast< csBox2 * >(argp6);
  result = (arg1)->Clip(arg2,arg3,arg4,*arg5,*arg6);
  resultobj = SWIG_NewPointerObj((new uint8(static_cast< const uint8& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_Clip__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  size_t arg3 ;
  csVector2 *arg4 = (csVector2 *) 0 ;
  size_t *arg5 = 0 ;
  csVertexStatus *arg6 = (csVertexStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  uint8 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_Clip",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_Clip" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iClipper2D_Clip" "', argument " "2"" of type '" "csVector2 *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iClipper2D_Clip" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iClipper2D_Clip" "', argument " "4"" of type '" "csVector2 *""'"); 
  }
  arg4 = reinterpret_cast< csVector2 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iClipper2D_Clip" "', argument " "5"" of type '" "size_t &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_Clip" "', argument " "5"" of type '" "size_t &""'"); 
  }
  arg5 = reinterpret_cast< size_t * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "iClipper2D_Clip" "', argument " "6"" of type '" "csVertexStatus *""'"); 
  }
  arg6 = reinterpret_cast< csVertexStatus * >(argp6);
  result = (arg1)->Clip(arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_NewPointerObj((new uint8(static_cast< const uint8& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_Clip(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iClipper2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_size_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_iClipper2D_Clip__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iClipper2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_size_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_csBox2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_iClipper2D_Clip__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iClipper2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_size_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_csVertexStatus, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_iClipper2D_Clip__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iClipper2D_Clip'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Clip(iClipper2D *,csVector2 *,size_t,csVector2 *,size_t &)\n"
    "    Clip(iClipper2D *,csVector2 *,size_t,csVector2 *,size_t &,csBox2 &)\n"
    "    Clip(iClipper2D *,csVector2 *,size_t,csVector2 *,size_t &,csVertexStatus *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_ClipInPlace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  size_t *arg3 = 0 ;
  csBox2 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  uint8 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_ClipInPlace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_ClipInPlace" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iClipper2D_ClipInPlace" "', argument " "2"" of type '" "csVector2 *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iClipper2D_ClipInPlace" "', argument " "3"" of type '" "size_t &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_ClipInPlace" "', argument " "3"" of type '" "size_t &""'"); 
  }
  arg3 = reinterpret_cast< size_t * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csBox2,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iClipper2D_ClipInPlace" "', argument " "4"" of type '" "csBox2 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_ClipInPlace" "', argument " "4"" of type '" "csBox2 &""'"); 
  }
  arg4 = reinterpret_cast< csBox2 * >(argp4);
  result = (arg1)->ClipInPlace(arg2,*arg3,*arg4);
  resultobj = SWIG_NewPointerObj((new uint8(static_cast< const uint8& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_ClassifyBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_ClassifyBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_ClassifyBox" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iClipper2D_ClassifyBox" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_ClassifyBox" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (int)(arg1)->ClassifyBox((csBox2 const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_IsInside(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_IsInside",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_IsInside" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iClipper2D_IsInside" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iClipper2D_IsInside" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)(arg1)->IsInside((csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_GetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_GetVertexCount" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  result = (arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_GetClipPoly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_GetClipPoly",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_GetClipPoly" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  result = (csVector2 *)(arg1)->GetClipPoly();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iClipper2D_GetClipperType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iClipper2D::ClipperType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iClipper2D_GetClipperType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iClipper2D_GetClipperType" "', argument " "1"" of type '" "iClipper2D const *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  result = (iClipper2D::ClipperType)((iClipper2D const *)arg1)->GetClipperType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iClipper2D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iClipper2D *arg1 = (iClipper2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iClipper2D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iClipper2D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iClipper2D" "', argument " "1"" of type '" "iClipper2D *""'"); 
  }
  arg1 = reinterpret_cast< iClipper2D * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iClipper2D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iClipper2D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iPath_Length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_Length",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_Length" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  result = (int)(arg1)->Length();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_CalculateAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_CalculateAtTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_CalculateAtTime" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_CalculateAtTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->CalculateAtTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetCurrentIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetCurrentIndex",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetCurrentIndex" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  result = (int)(arg1)->GetCurrentIndex();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_SetPositionVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_SetPositionVectors",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_SetPositionVectors" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPath_SetPositionVectors" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetPositionVectors(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_SetUpVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_SetUpVectors",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_SetUpVectors" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPath_SetUpVectors" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetUpVectors(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_SetForwardVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_SetForwardVectors",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_SetForwardVectors" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPath_SetForwardVectors" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetForwardVectors(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_SetPositionVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_SetPositionVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_SetPositionVector" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_SetPositionVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPath_SetPositionVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_SetPositionVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetPositionVector(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_SetUpVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_SetUpVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_SetUpVector" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_SetUpVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPath_SetUpVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_SetUpVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetUpVector(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_SetForwardVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_SetForwardVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_SetForwardVector" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_SetForwardVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPath_SetForwardVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_SetForwardVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetForwardVector(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetPositionVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetPositionVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetPositionVector" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_GetPositionVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPath_GetPositionVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_GetPositionVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->GetPositionVector(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetUpVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetUpVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetUpVector" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_GetUpVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPath_GetUpVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_GetUpVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->GetUpVector(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetForwardVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetForwardVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetForwardVector" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_GetForwardVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iPath_GetForwardVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_GetForwardVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->GetForwardVector(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetTime" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_GetTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)(arg1)->GetTime(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_SetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_SetTime",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_SetTime" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iPath_SetTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iPath_SetTime" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetTime(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetInterpolatedPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetInterpolatedPosition",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetInterpolatedPosition" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPath_GetInterpolatedPosition" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_GetInterpolatedPosition" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->GetInterpolatedPosition(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetInterpolatedUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetInterpolatedUp",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetInterpolatedUp" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPath_GetInterpolatedUp" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_GetInterpolatedUp" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->GetInterpolatedUp(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_GetInterpolatedForward(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_GetInterpolatedForward",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_GetInterpolatedForward" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iPath_GetInterpolatedForward" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iPath_GetInterpolatedForward" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->GetInterpolatedForward(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_QueryObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_QueryObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iPath_QueryObject" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  result = (iObject *)(arg1)->QueryObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iPath_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iPath_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iPath_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPath *arg1 = (iPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iPath",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPath, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iPath" "', argument " "1"" of type '" "iPath *""'"); 
  }
  arg1 = reinterpret_cast< iPath * >(argp1);
  delete_iPath(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iPath_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iPath, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_scfPath_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementationExt1< csPath,csObject,iPath > *arg1 = (scfImplementationExt1< csPath,csObject,iPath > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfPath_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfPath_IncRef" "', argument " "1"" of type '" "scfImplementationExt1< csPath,csObject,iPath > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementationExt1< csPath,csObject,iPath > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfPath_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementationExt1< csPath,csObject,iPath > *arg1 = (scfImplementationExt1< csPath,csObject,iPath > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfPath_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfPath_DecRef" "', argument " "1"" of type '" "scfImplementationExt1< csPath,csObject,iPath > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementationExt1< csPath,csObject,iPath > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfPath_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementationExt1< csPath,csObject,iPath > *arg1 = (scfImplementationExt1< csPath,csObject,iPath > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfPath_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfPath_GetRefCount" "', argument " "1"" of type '" "scfImplementationExt1< csPath,csObject,iPath > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementationExt1< csPath,csObject,iPath > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfPath_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementationExt1< csPath,csObject,iPath > *arg1 = (scfImplementationExt1< csPath,csObject,iPath > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfPath_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfPath_QueryInterface" "', argument " "1"" of type '" "scfImplementationExt1< csPath,csObject,iPath > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementationExt1< csPath,csObject,iPath > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfPath_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "scfPath_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfPath_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementationExt1< csPath,csObject,iPath > *arg1 = (scfImplementationExt1< csPath,csObject,iPath > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfPath_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfPath_AddRefOwner" "', argument " "1"" of type '" "scfImplementationExt1< csPath,csObject,iPath > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementationExt1< csPath,csObject,iPath > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfPath_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfPath_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementationExt1< csPath,csObject,iPath > *arg1 = (scfImplementationExt1< csPath,csObject,iPath > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfPath_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfPath_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementationExt1< csPath,csObject,iPath > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementationExt1< csPath,csObject,iPath > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfPath_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfPath_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementationExt1< csPath,csObject,iPath > *arg1 = (scfImplementationExt1< csPath,csObject,iPath > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfPath_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfPath_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementationExt1< csPath,csObject,iPath > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementationExt1< csPath,csObject,iPath > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *scfPath_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iTriangleMesh_GetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetVertexCount" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = (arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_GetVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetVertices" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = (csVector3 *)(arg1)->GetVertices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_GetTriangleCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetTriangleCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetTriangleCount" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = (arg1)->GetTriangleCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_GetTriangles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetTriangles",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetTriangles" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = (csTriangle *)(arg1)->GetTriangles();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_Lock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_Lock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_Lock" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  (arg1)->Lock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_Unlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_Unlock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_Unlock" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  (arg1)->Unlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_GetFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csFlags *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetFlags",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetFlags" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  {
    csFlags &_result_ref = (arg1)->GetFlags();
    result = (csFlags *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csFlags, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_GetChangeNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetChangeNumber",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetChangeNumber" "', argument " "1"" of type '" "iTriangleMesh const *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = ((iTriangleMesh const *)arg1)->GetChangeNumber();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_GetVertexByIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetVertexByIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetVertexByIndex" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iTriangleMesh_GetVertexByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csVector3 *)iTriangleMesh_GetVertexByIndex(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_GetTriangleByIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_GetTriangleByIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iTriangleMesh_GetTriangleByIndex" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iTriangleMesh_GetTriangleByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csTriangle *)iTriangleMesh_GetTriangleByIndex(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iTriangleMesh_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iTriangleMesh_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iTriangleMesh_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iTriangleMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iTriangleMesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iTriangleMesh" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  delete_iTriangleMesh(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iTriangleMesh_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iTriangleMesh, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iKeyComposer_HandleKey__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyComposer *arg1 = (iKeyComposer *) 0 ;
  csKeyEventData *arg2 = 0 ;
  utf32_char *arg3 = (utf32_char *) 0 ;
  size_t arg4 ;
  int *arg5 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  csKeyComposeResult result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyComposer_HandleKey",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyComposer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyComposer_HandleKey" "', argument " "1"" of type '" "iKeyComposer *""'"); 
  }
  arg1 = reinterpret_cast< iKeyComposer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csKeyEventData,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iKeyComposer_HandleKey" "', argument " "2"" of type '" "csKeyEventData const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iKeyComposer_HandleKey" "', argument " "2"" of type '" "csKeyEventData const &""'"); 
  }
  arg2 = reinterpret_cast< csKeyEventData * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_utf32_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iKeyComposer_HandleKey" "', argument " "3"" of type '" "utf32_char *""'"); 
  }
  arg3 = reinterpret_cast< utf32_char * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iKeyComposer_HandleKey" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iKeyComposer_HandleKey" "', argument " "5"" of type '" "int *""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  result = (csKeyComposeResult)(arg1)->HandleKey((csKeyEventData const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyComposer_HandleKey__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyComposer *arg1 = (iKeyComposer *) 0 ;
  csKeyEventData *arg2 = 0 ;
  utf32_char *arg3 = (utf32_char *) 0 ;
  size_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csKeyComposeResult result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyComposer_HandleKey",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyComposer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyComposer_HandleKey" "', argument " "1"" of type '" "iKeyComposer *""'"); 
  }
  arg1 = reinterpret_cast< iKeyComposer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csKeyEventData,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iKeyComposer_HandleKey" "', argument " "2"" of type '" "csKeyEventData const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iKeyComposer_HandleKey" "', argument " "2"" of type '" "csKeyEventData const &""'"); 
  }
  arg2 = reinterpret_cast< csKeyEventData * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_utf32_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iKeyComposer_HandleKey" "', argument " "3"" of type '" "utf32_char *""'"); 
  }
  arg3 = reinterpret_cast< utf32_char * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iKeyComposer_HandleKey" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  result = (csKeyComposeResult)(arg1)->HandleKey((csKeyEventData const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyComposer_HandleKey(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iKeyComposer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csKeyEventData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_utf32_char, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_size_t(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iKeyComposer_HandleKey__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iKeyComposer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csKeyEventData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_utf32_char, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_size_t(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_int, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_iKeyComposer_HandleKey__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iKeyComposer_HandleKey'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    HandleKey(iKeyComposer *,csKeyEventData const &,utf32_char *,size_t,int *)\n"
    "    HandleKey(iKeyComposer *,csKeyEventData const &,utf32_char *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyComposer_ResetState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyComposer *arg1 = (iKeyComposer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyComposer_ResetState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyComposer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyComposer_ResetState" "', argument " "1"" of type '" "iKeyComposer *""'"); 
  }
  arg1 = reinterpret_cast< iKeyComposer * >(argp1);
  (arg1)->ResetState();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iKeyComposer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyComposer *arg1 = (iKeyComposer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iKeyComposer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyComposer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iKeyComposer" "', argument " "1"" of type '" "iKeyComposer *""'"); 
  }
  arg1 = reinterpret_cast< iKeyComposer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iKeyComposer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iKeyComposer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iKeyboardDriver_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_Reset" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_DoKey__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  utf32_char arg2 ;
  utf32_char arg3 ;
  bool arg4 ;
  bool arg5 ;
  csKeyCharType arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_DoKey",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_DoKey" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iKeyboardDriver_DoKey" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iKeyboardDriver_DoKey" "', argument " "3"" of type '" "utf32_char""'");
  } 
  arg3 = static_cast< utf32_char >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iKeyboardDriver_DoKey" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iKeyboardDriver_DoKey" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "iKeyboardDriver_DoKey" "', argument " "6"" of type '" "csKeyCharType""'");
  } 
  arg6 = static_cast< csKeyCharType >(val6);
  (arg1)->DoKey(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_DoKey__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  utf32_char arg2 ;
  utf32_char arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_DoKey",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_DoKey" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iKeyboardDriver_DoKey" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iKeyboardDriver_DoKey" "', argument " "3"" of type '" "utf32_char""'");
  } 
  arg3 = static_cast< utf32_char >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iKeyboardDriver_DoKey" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iKeyboardDriver_DoKey" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->DoKey(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_DoKey__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  utf32_char arg2 ;
  utf32_char arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_DoKey",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_DoKey" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iKeyboardDriver_DoKey" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iKeyboardDriver_DoKey" "', argument " "3"" of type '" "utf32_char""'");
  } 
  arg3 = static_cast< utf32_char >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iKeyboardDriver_DoKey" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->DoKey(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_DoKey(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iKeyboardDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iKeyboardDriver_DoKey__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iKeyboardDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_iKeyboardDriver_DoKey__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iKeyboardDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_iKeyboardDriver_DoKey__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iKeyboardDriver_DoKey'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    DoKey(iKeyboardDriver *,utf32_char,utf32_char,bool,bool,csKeyCharType)\n"
    "    DoKey(iKeyboardDriver *,utf32_char,utf32_char,bool,bool)\n"
    "    DoKey(iKeyboardDriver *,utf32_char,utf32_char,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_GetKeyState__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  utf32_char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_GetKeyState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_GetKeyState" "', argument " "1"" of type '" "iKeyboardDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iKeyboardDriver_GetKeyState" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  result = (bool)((iKeyboardDriver const *)arg1)->GetKeyState(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_GetModifierState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  utf32_char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_GetModifierState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_GetModifierState" "', argument " "1"" of type '" "iKeyboardDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iKeyboardDriver_GetModifierState" "', argument " "2"" of type '" "utf32_char""'");
  } 
  arg2 = static_cast< utf32_char >(val2);
  result = ((iKeyboardDriver const *)arg1)->GetModifierState(arg2);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_CreateKeyComposer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iKeyComposer > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_CreateKeyComposer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_CreateKeyComposer" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  result = (arg1)->CreateKeyComposer();
  resultobj = SWIG_NewPointerObj((new csPtr< iKeyComposer >(static_cast< const csPtr< iKeyComposer >& >(result))), SWIGTYPE_p_csPtrT_iKeyComposer_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_SynthesizeCooked(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  iEvent *arg2 = (iEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csEventError result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_SynthesizeCooked",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_SynthesizeCooked" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iKeyboardDriver_SynthesizeCooked" "', argument " "2"" of type '" "iEvent *""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (csEventError)(arg1)->SynthesizeCooked(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_GetModifiersState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csKeyModifiers *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_GetModifiersState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_GetModifiersState" "', argument " "1"" of type '" "iKeyboardDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  {
    csKeyModifiers const &_result_ref = ((iKeyboardDriver const *)arg1)->GetModifiersState();
    result = (csKeyModifiers *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__csKeyModifiers, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_GetKeyState__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_GetKeyState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iKeyboardDriver_GetKeyState" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iKeyboardDriver_GetKeyState" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)iKeyboardDriver_GetKeyState__SWIG_1(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_GetKeyState(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iKeyboardDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iKeyboardDriver_GetKeyState__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iKeyboardDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iKeyboardDriver_GetKeyState__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iKeyboardDriver_GetKeyState'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetKeyState(iKeyboardDriver const *,utf32_char)\n"
    "    GetKeyState(iKeyboardDriver *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iKeyboardDriver_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iKeyboardDriver_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iKeyboardDriver_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iKeyboardDriver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iKeyboardDriver",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iKeyboardDriver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iKeyboardDriver" "', argument " "1"" of type '" "iKeyboardDriver *""'"); 
  }
  arg1 = reinterpret_cast< iKeyboardDriver * >(argp1);
  delete_iKeyboardDriver(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iKeyboardDriver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iKeyboardDriver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iMouseDriver_SetDoubleClickTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  int arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_SetDoubleClickTime",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_SetDoubleClickTime" "', argument " "1"" of type '" "iMouseDriver *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_SetDoubleClickTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iMouseDriver_SetDoubleClickTime" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->SetDoubleClickTime(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_Reset" "', argument " "1"" of type '" "iMouseDriver *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastX__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLastX",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLastX" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_GetLastX" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (int)((iMouseDriver const *)arg1)->GetLastX(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastX__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLastX",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLastX" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  result = (int)((iMouseDriver const *)arg1)->GetLastX();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastX(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iMouseDriver_GetLastX__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iMouseDriver_GetLastX__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iMouseDriver_GetLastX'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetLastX(iMouseDriver const *,uint)\n"
    "    GetLastX(iMouseDriver const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastY__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLastY",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLastY" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_GetLastY" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (int)((iMouseDriver const *)arg1)->GetLastY(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastY__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLastY",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLastY" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  result = (int)((iMouseDriver const *)arg1)->GetLastY();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastY(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iMouseDriver_GetLastY__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iMouseDriver_GetLastY__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iMouseDriver_GetLastY'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetLastY(iMouseDriver const *,uint)\n"
    "    GetLastY(iMouseDriver const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLast__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  uint arg2 ;
  uint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLast",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLast" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_GetLast" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iMouseDriver_GetLast" "', argument " "3"" of type '" "uint""'");
  } 
  arg3 = static_cast< uint >(val3);
  result = (int)((iMouseDriver const *)arg1)->GetLast(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLast__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int32 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLast" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_GetLast" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (int32 *)((iMouseDriver const *)arg1)->GetLast(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLast(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iMouseDriver_GetLast__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iMouseDriver_GetLast__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iMouseDriver_GetLast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetLast(iMouseDriver const *,uint,uint)\n"
    "    GetLast(iMouseDriver const *,uint)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastButton__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  uint arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLastButton",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLastButton" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_GetLastButton" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iMouseDriver_GetLastButton" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)((iMouseDriver const *)arg1)->GetLastButton(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastButton__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_GetLastButton",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_GetLastButton" "', argument " "1"" of type '" "iMouseDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_GetLastButton" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (bool)((iMouseDriver const *)arg1)->GetLastButton(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_GetLastButton(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iMouseDriver_GetLastButton__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iMouseDriver_GetLastButton__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iMouseDriver_GetLastButton'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetLastButton(iMouseDriver const *,uint,int)\n"
    "    GetLastButton(iMouseDriver const *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_DoButton__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  uint arg2 ;
  int arg3 ;
  bool arg4 ;
  int32 *arg5 = (int32 *) 0 ;
  uint arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  unsigned long val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_DoButton",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_DoButton" "', argument " "1"" of type '" "iMouseDriver *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_DoButton" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iMouseDriver_DoButton" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iMouseDriver_DoButton" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iMouseDriver_DoButton" "', argument " "5"" of type '" "int32 const *""'"); 
  }
  arg5 = reinterpret_cast< int32 * >(argp5);
  ecode6 = SWIG_AsVal_unsigned_SS_long(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "iMouseDriver_DoButton" "', argument " "6"" of type '" "uint""'");
  } 
  arg6 = static_cast< uint >(val6);
  (arg1)->DoButton(arg2,arg3,arg4,(int32 const *)arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_DoButton__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  int arg2 ;
  bool arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_DoButton",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_DoButton" "', argument " "1"" of type '" "iMouseDriver *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_DoButton" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iMouseDriver_DoButton" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iMouseDriver_DoButton" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iMouseDriver_DoButton" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->DoButton(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_DoButton(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_iMouseDriver_DoButton__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_int, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_long(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_iMouseDriver_DoButton__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iMouseDriver_DoButton'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    DoButton(iMouseDriver *,uint,int,bool,int32 const *,uint)\n"
    "    DoButton(iMouseDriver *,int,bool,int,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_DoMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  uint arg2 ;
  int32 *arg3 = (int32 *) 0 ;
  uint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_DoMotion",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_DoMotion" "', argument " "1"" of type '" "iMouseDriver *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_DoMotion" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iMouseDriver_DoMotion" "', argument " "3"" of type '" "int32 const *""'"); 
  }
  arg3 = reinterpret_cast< int32 * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iMouseDriver_DoMotion" "', argument " "4"" of type '" "uint""'");
  } 
  arg4 = static_cast< uint >(val4);
  (arg1)->DoMotion(arg2,(int32 const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_DoMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_DoMotion",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iMouseDriver_DoMotion" "', argument " "1"" of type '" "iMouseDriver *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iMouseDriver_DoMotion" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iMouseDriver_DoMotion" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->DoMotion(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_DoMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iMouseDriver_DoMotion__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iMouseDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iMouseDriver_DoMotion__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iMouseDriver_DoMotion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    DoMotion(iMouseDriver *,uint,int32 const *,uint)\n"
    "    DoMotion(iMouseDriver *,int,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iMouseDriver_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iMouseDriver_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iMouseDriver_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iMouseDriver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iMouseDriver *arg1 = (iMouseDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iMouseDriver",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iMouseDriver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iMouseDriver" "', argument " "1"" of type '" "iMouseDriver *""'"); 
  }
  arg1 = reinterpret_cast< iMouseDriver * >(argp1);
  delete_iMouseDriver(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iMouseDriver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iMouseDriver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iJoystickDriver_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iJoystickDriver_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iJoystickDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iJoystickDriver_Reset" "', argument " "1"" of type '" "iJoystickDriver *""'"); 
  }
  arg1 = reinterpret_cast< iJoystickDriver * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iJoystickDriver_GetLast__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int32 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iJoystickDriver_GetLast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iJoystickDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iJoystickDriver_GetLast" "', argument " "1"" of type '" "iJoystickDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iJoystickDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iJoystickDriver_GetLast" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (int32 *)((iJoystickDriver const *)arg1)->GetLast(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iJoystickDriver_GetLast__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
  uint arg2 ;
  uint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iJoystickDriver_GetLast",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iJoystickDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iJoystickDriver_GetLast" "', argument " "1"" of type '" "iJoystickDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iJoystickDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iJoystickDriver_GetLast" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iJoystickDriver_GetLast" "', argument " "3"" of type '" "uint""'");
  } 
  arg3 = static_cast< uint >(val3);
  result = (int)((iJoystickDriver const *)arg1)->GetLast(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iJoystickDriver_GetLast(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iJoystickDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iJoystickDriver_GetLast__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iJoystickDriver, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iJoystickDriver_GetLast__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iJoystickDriver_GetLast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetLast(iJoystickDriver const *,uint)\n"
    "    GetLast(iJoystickDriver const *,uint,uint)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iJoystickDriver_GetLastButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
  uint arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iJoystickDriver_GetLastButton",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iJoystickDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iJoystickDriver_GetLastButton" "', argument " "1"" of type '" "iJoystickDriver const *""'"); 
  }
  arg1 = reinterpret_cast< iJoystickDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iJoystickDriver_GetLastButton" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iJoystickDriver_GetLastButton" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)((iJoystickDriver const *)arg1)->GetLastButton(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iJoystickDriver_DoButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
  uint arg2 ;
  int arg3 ;
  bool arg4 ;
  int32 *arg5 = (int32 *) 0 ;
  uint arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  unsigned long val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iJoystickDriver_DoButton",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iJoystickDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iJoystickDriver_DoButton" "', argument " "1"" of type '" "iJoystickDriver *""'"); 
  }
  arg1 = reinterpret_cast< iJoystickDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iJoystickDriver_DoButton" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iJoystickDriver_DoButton" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iJoystickDriver_DoButton" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iJoystickDriver_DoButton" "', argument " "5"" of type '" "int32 const *""'"); 
  }
  arg5 = reinterpret_cast< int32 * >(argp5);
  ecode6 = SWIG_AsVal_unsigned_SS_long(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "iJoystickDriver_DoButton" "', argument " "6"" of type '" "uint""'");
  } 
  arg6 = static_cast< uint >(val6);
  (arg1)->DoButton(arg2,arg3,arg4,(int32 const *)arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iJoystickDriver_DoMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
  uint arg2 ;
  int32 *arg3 = (int32 *) 0 ;
  uint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iJoystickDriver_DoMotion",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iJoystickDriver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iJoystickDriver_DoMotion" "', argument " "1"" of type '" "iJoystickDriver *""'"); 
  }
  arg1 = reinterpret_cast< iJoystickDriver * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iJoystickDriver_DoMotion" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iJoystickDriver_DoMotion" "', argument " "3"" of type '" "int32 const *""'"); 
  }
  arg3 = reinterpret_cast< int32 * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iJoystickDriver_DoMotion" "', argument " "4"" of type '" "uint""'");
  } 
  arg4 = static_cast< uint >(val4);
  (arg1)->DoMotion(arg2,(int32 const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iJoystickDriver_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iJoystickDriver_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iJoystickDriver_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iJoystickDriver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iJoystickDriver",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iJoystickDriver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iJoystickDriver" "', argument " "1"" of type '" "iJoystickDriver *""'"); 
  }
  arg1 = reinterpret_cast< iJoystickDriver * >(argp1);
  delete_iJoystickDriver(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iJoystickDriver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iJoystickDriver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iConfigFile_GetFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetFileName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetFileName" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  result = (char *)((iConfigFile const *)arg1)->GetFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetVFS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iVFS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetVFS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetVFS" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  result = (iVFS *)((iConfigFile const *)arg1)->GetVFS();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iVFS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetFileName",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetFileName" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetFileName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_SetFileName" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  (arg1)->SetFileName((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Load__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Load",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Load" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_Load" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iConfigFile_Load" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iConfigFile_Load" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->Load((char const *)arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Load__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Load",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Load" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_Load" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iConfigFile_Load" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->Load((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Load__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Load",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Load" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_Load" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  result = (bool)(arg1)->Load((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Load__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Load",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Load" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->Load((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Load(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigFile_Load__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iConfigFile_Load__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iConfigFile_Load__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_iConfigFile_Load__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigFile_Load'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Load(iConfigFile *,char const *,iVFS *,bool,bool)\n"
    "    Load(iConfigFile *,char const *,iVFS *,bool)\n"
    "    Load(iConfigFile *,char const *,iVFS *)\n"
    "    Load(iConfigFile *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Save__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Save",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Save" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  result = (bool)(arg1)->Save();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Save__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Save",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Save" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_Save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_Save" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  result = (bool)(arg1)->Save((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Save__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Save",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Save" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_Save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->Save((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Save(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iConfigFile_Save__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigFile_Save__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iConfigFile_Save__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigFile_Save'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Save(iConfigFile *)\n"
    "    Save(iConfigFile *,char const *,iVFS *)\n"
    "    Save(iConfigFile *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Clear" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Enumerate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iConfigIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Enumerate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Enumerate" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_Enumerate" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->Enumerate((char const *)arg2);
  {
    csRef<iConfigIterator> ref((csPtr<iConfigIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iConfigIterator *)ref, SWIGTYPE_p_iConfigIterator, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Enumerate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iConfigIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_Enumerate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_Enumerate" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  result = (arg1)->Enumerate();
  {
    csRef<iConfigIterator> ref((csPtr<iConfigIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iConfigIterator *)ref, SWIGTYPE_p_iConfigIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_Enumerate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iConfigFile_Enumerate__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigFile_Enumerate__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigFile_Enumerate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Enumerate(iConfigFile *,char const *)\n"
    "    Enumerate(iConfigFile *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_KeyExists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_KeyExists",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_KeyExists" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_KeyExists" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)((iConfigFile const *)arg1)->KeyExists((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SubsectionExists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SubsectionExists",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SubsectionExists" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SubsectionExists" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)((iConfigFile const *)arg1)->SubsectionExists((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetInt",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetInt" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigFile_GetInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)((iConfigFile const *)arg1)->GetInt((char const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetInt",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetInt" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)((iConfigFile const *)arg1)->GetInt((char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetInt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigFile_GetInt__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iConfigFile_GetInt__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigFile_GetInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetInt(iConfigFile const *,char const *,int)\n"
    "    GetInt(iConfigFile const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetFloat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetFloat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetFloat" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigFile_GetFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (float)((iConfigFile const *)arg1)->GetFloat((char const *)arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetFloat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetFloat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetFloat" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (float)((iConfigFile const *)arg1)->GetFloat((char const *)arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetFloat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigFile_GetFloat__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iConfigFile_GetFloat__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigFile_GetFloat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetFloat(iConfigFile const *,char const *,float)\n"
    "    GetFloat(iConfigFile const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetStr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetStr",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetStr" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetStr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_GetStr" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)((iConfigFile const *)arg1)->GetStr((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetStr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetStr",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetStr" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetStr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)((iConfigFile const *)arg1)->GetStr((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetStr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigFile_GetStr__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iConfigFile_GetStr__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigFile_GetStr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetStr(iConfigFile const *,char const *,char const *)\n"
    "    GetStr(iConfigFile const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetBool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetBool" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigFile_GetBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)((iConfigFile const *)arg1)->GetBool((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetBool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetBool",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetBool" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)((iConfigFile const *)arg1)->GetBool((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetBool(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigFile_GetBool__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iConfigFile_GetBool__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigFile_GetBool'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetBool(iConfigFile const *,char const *,bool)\n"
    "    GetBool(iConfigFile const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetTuple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetTuple",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetTuple" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetTuple" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((iConfigFile const *)arg1)->GetTuple((char const *)arg2);
  {
    csRef<iStringArray> ref((csPtr<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetComment",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetComment" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_GetComment" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)((iConfigFile const *)arg1)->GetComment((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetStr",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetStr" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetStr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_SetStr" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->SetStr((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetInt",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetInt" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigFile_SetInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetInt((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetFloat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetFloat" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigFile_SetFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetFloat((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetBool" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigFile_SetBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->SetBool((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetTuple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iStringArray *arg3 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetTuple",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetTuple" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetTuple" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_SetTuple" "', argument " "3"" of type '" "iStringArray *""'"); 
  }
  arg3 = reinterpret_cast< iStringArray * >(argp3);
  (arg1)->SetTuple((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetComment",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetComment" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetComment" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigFile_SetComment" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->SetComment((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_DeleteKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_DeleteKey",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_DeleteKey" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_DeleteKey" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->DeleteKey((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_GetEOFComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_GetEOFComment",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_GetEOFComment" "', argument " "1"" of type '" "iConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  result = (char *)((iConfigFile const *)arg1)->GetEOFComment();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_SetEOFComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_SetEOFComment",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigFile_SetEOFComment" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigFile_SetEOFComment" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetEOFComment((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigFile_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigFile_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iConfigFile_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iConfigFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigFile *arg1 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iConfigFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigFile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iConfigFile" "', argument " "1"" of type '" "iConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< iConfigFile * >(argp1);
  delete_iConfigFile(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iConfigFile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iConfigFile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iConfigIterator_GetConfigFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iConfigFile *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetConfigFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetConfigFile" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (iConfigFile *)((iConfigIterator const *)arg1)->GetConfigFile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iConfigFile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetSubsection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetSubsection",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetSubsection" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (char *)((iConfigIterator const *)arg1)->GetSubsection();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_Rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_Rewind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_Rewind" "', argument " "1"" of type '" "iConfigIterator *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  (arg1)->Rewind();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_Next" "', argument " "1"" of type '" "iConfigIterator *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (bool)(arg1)->Next();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_HasNext" "', argument " "1"" of type '" "iConfigIterator *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (bool)(arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetKey__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetKey",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetKey" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iConfigIterator_GetKey" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (char *)((iConfigIterator const *)arg1)->GetKey(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetKey__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetKey",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetKey" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (char *)((iConfigIterator const *)arg1)->GetKey();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetKey(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iConfigIterator_GetKey__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iConfigIterator_GetKey__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigIterator_GetKey'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetKey(iConfigIterator const *,bool)\n"
    "    GetKey(iConfigIterator const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetInt",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetInt" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (int)((iConfigIterator const *)arg1)->GetInt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetFloat",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetFloat" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (float)((iConfigIterator const *)arg1)->GetFloat();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetStr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetStr" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (char *)((iConfigIterator const *)arg1)->GetStr();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetBool",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetBool" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (bool)((iConfigIterator const *)arg1)->GetBool();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetTuple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetTuple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetTuple" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = ((iConfigIterator const *)arg1)->GetTuple();
  {
    csRef<iStringArray> ref((csPtr<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_GetComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_GetComment",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigIterator_GetComment" "', argument " "1"" of type '" "iConfigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  result = (char *)((iConfigIterator const *)arg1)->GetComment();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigIterator_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigIterator_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iConfigIterator_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iConfigIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigIterator *arg1 = (iConfigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iConfigIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iConfigIterator" "', argument " "1"" of type '" "iConfigIterator *""'"); 
  }
  arg1 = reinterpret_cast< iConfigIterator * >(argp1);
  delete_iConfigIterator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iConfigIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iConfigIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iConfigManager_AddDomain__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  iConfigFile *arg2 = (iConfigFile *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_AddDomain",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_AddDomain" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_AddDomain" "', argument " "2"" of type '" "iConfigFile *""'"); 
  }
  arg2 = reinterpret_cast< iConfigFile * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigManager_AddDomain" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->AddDomain(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_AddDomain__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  iConfigFile *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_AddDomain",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_AddDomain" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_AddDomain" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iConfigManager_AddDomain" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iConfigManager_AddDomain" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (iConfigFile *)(arg1)->AddDomain((char const *)arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_AddDomain(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iConfigFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iConfigManager_AddDomain__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_iConfigManager_AddDomain__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigManager_AddDomain'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddDomain(iConfigManager *,iConfigFile *,int)\n"
    "    AddDomain(iConfigManager *,char const *,iVFS *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_RemoveDomain__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  iConfigFile *arg2 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_RemoveDomain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_RemoveDomain" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_RemoveDomain" "', argument " "2"" of type '" "iConfigFile *""'"); 
  }
  arg2 = reinterpret_cast< iConfigFile * >(argp2);
  (arg1)->RemoveDomain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_RemoveDomain__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_RemoveDomain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_RemoveDomain" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_RemoveDomain" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->RemoveDomain((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_RemoveDomain(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iConfigFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigManager_RemoveDomain__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigManager_RemoveDomain__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigManager_RemoveDomain'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RemoveDomain(iConfigManager *,iConfigFile *)\n"
    "    RemoveDomain(iConfigManager *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_LookupDomain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iConfigFile *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_LookupDomain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_LookupDomain" "', argument " "1"" of type '" "iConfigManager const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_LookupDomain" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (iConfigFile *)((iConfigManager const *)arg1)->LookupDomain((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_SetDomainPriority__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_SetDomainPriority",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_SetDomainPriority" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_SetDomainPriority" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigManager_SetDomainPriority" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetDomainPriority((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_SetDomainPriority__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  iConfigFile *arg2 = (iConfigFile *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_SetDomainPriority",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_SetDomainPriority" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_SetDomainPriority" "', argument " "2"" of type '" "iConfigFile *""'"); 
  }
  arg2 = reinterpret_cast< iConfigFile * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iConfigManager_SetDomainPriority" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetDomainPriority(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_SetDomainPriority(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iConfigFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iConfigManager_SetDomainPriority__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iConfigManager_SetDomainPriority__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigManager_SetDomainPriority'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetDomainPriority(iConfigManager *,char const *,int)\n"
    "    SetDomainPriority(iConfigManager *,iConfigFile *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_GetDomainPriority__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_GetDomainPriority",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_GetDomainPriority" "', argument " "1"" of type '" "iConfigManager const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_GetDomainPriority" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)((iConfigManager const *)arg1)->GetDomainPriority((char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_GetDomainPriority__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  iConfigFile *arg2 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_GetDomainPriority",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_GetDomainPriority" "', argument " "1"" of type '" "iConfigManager const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_GetDomainPriority" "', argument " "2"" of type '" "iConfigFile *""'"); 
  }
  arg2 = reinterpret_cast< iConfigFile * >(argp2);
  result = (int)((iConfigManager const *)arg1)->GetDomainPriority(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_GetDomainPriority(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iConfigFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigManager_GetDomainPriority__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iConfigManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iConfigManager_GetDomainPriority__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iConfigManager_GetDomainPriority'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetDomainPriority(iConfigManager const *,char const *)\n"
    "    GetDomainPriority(iConfigManager const *,iConfigFile *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_SetDynamicDomain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  iConfigFile *arg2 = (iConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_SetDynamicDomain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_SetDynamicDomain" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iConfigManager_SetDynamicDomain" "', argument " "2"" of type '" "iConfigFile *""'"); 
  }
  arg2 = reinterpret_cast< iConfigFile * >(argp2);
  result = (bool)(arg1)->SetDynamicDomain(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_GetDynamicDomain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iConfigFile *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_GetDynamicDomain",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_GetDynamicDomain" "', argument " "1"" of type '" "iConfigManager const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  result = (iConfigFile *)((iConfigManager const *)arg1)->GetDynamicDomain();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iConfigFile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_SetDynamicDomainPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_SetDynamicDomainPriority",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_SetDynamicDomainPriority" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iConfigManager_SetDynamicDomainPriority" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetDynamicDomainPriority(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_GetDynamicDomainPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_GetDynamicDomainPriority",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_GetDynamicDomainPriority" "', argument " "1"" of type '" "iConfigManager const *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  result = (int)((iConfigManager const *)arg1)->GetDynamicDomainPriority();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_FlushRemoved(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_FlushRemoved",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iConfigManager_FlushRemoved" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  (arg1)->FlushRemoved();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iConfigManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iConfigManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iConfigManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iConfigManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iConfigManager *arg1 = (iConfigManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iConfigManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iConfigManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iConfigManager" "', argument " "1"" of type '" "iConfigManager *""'"); 
  }
  arg1 = reinterpret_cast< iConfigManager * >(argp1);
  delete_iConfigManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iConfigManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iConfigManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iStringArray_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_GetSize" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  result = ((iStringArray const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Push" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray_Push" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->Push((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Pop" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  result = (char *)(arg1)->Pop();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Get" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iStringArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (char *)((iStringArray const *)arg1)->Get(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Find",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Find" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray_Find" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((iStringArray const *)arg1)->Find((char const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_FindCaseInsensitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_FindCaseInsensitive",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_FindCaseInsensitive" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray_FindCaseInsensitive" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((iStringArray const *)arg1)->FindCaseInsensitive((char const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_FindSortedKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_FindSortedKey",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_FindSortedKey" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray_FindSortedKey" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((iStringArray const *)arg1)->FindSortedKey((char const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Contains__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Contains",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Contains" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray_Contains" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iStringArray_Contains" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = ((iStringArray const *)arg1)->Contains((char const *)arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Contains__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Contains" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray_Contains" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((iStringArray const *)arg1)->Contains((char const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Contains(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringArray, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iStringArray_Contains__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringArray, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iStringArray_Contains__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iStringArray_Contains'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Contains(iStringArray const *,char const *,bool)\n"
    "    Contains(iStringArray const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Sort__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Sort",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Sort" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iStringArray_Sort" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Sort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Sort__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Sort",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Sort" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  (arg1)->Sort();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Sort(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringArray, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iStringArray_Sort__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iStringArray, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iStringArray_Sort__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iStringArray_Sort'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Sort(iStringArray *,bool)\n"
    "    Sort(iStringArray *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_DeleteIndex" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iStringArray_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Insert" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iStringArray_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iStringArray_Insert" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->Insert(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_Empty" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_IsEmpty" "', argument " "1"" of type '" "iStringArray const *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  result = (bool)((iStringArray const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray___getitem__" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iStringArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (char *)iStringArray___getitem__(arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray___contains__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray___contains__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray___contains__" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray___contains__" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)iStringArray___contains__(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray___delitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray___delitem__" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iStringArray___delitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)iStringArray___delitem__(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray___len__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray___len__" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  result = (int)iStringArray___len__(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_append",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iStringArray_append" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iStringArray_append" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  iStringArray_append(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iStringArray_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iStringArray_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iStringArray_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iStringArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iStringArray *arg1 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iStringArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iStringArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iStringArray" "', argument " "1"" of type '" "iStringArray *""'"); 
  }
  arg1 = reinterpret_cast< iStringArray * >(argp1);
  delete_iStringArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iStringArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iStringArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDocumentAttributeIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttributeIterator *arg1 = (iDocumentAttributeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttributeIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttributeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttributeIterator_HasNext" "', argument " "1"" of type '" "iDocumentAttributeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttributeIterator * >(argp1);
  result = (bool)(arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttributeIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttributeIterator *arg1 = (iDocumentAttributeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocumentAttribute > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttributeIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttributeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttributeIterator_Next" "', argument " "1"" of type '" "iDocumentAttributeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttributeIterator * >(argp1);
  result = (arg1)->Next();
  {
    csRef<iDocumentAttribute> ref((csRef<iDocumentAttribute>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentAttribute *)ref, SWIGTYPE_p_iDocumentAttribute, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttributeIterator_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttributeIterator_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDocumentAttributeIterator_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDocumentAttributeIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttributeIterator *arg1 = (iDocumentAttributeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDocumentAttributeIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttributeIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDocumentAttributeIterator" "', argument " "1"" of type '" "iDocumentAttributeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttributeIterator * >(argp1);
  delete_iDocumentAttributeIterator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDocumentAttributeIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDocumentAttributeIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDocumentAttribute_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_GetName" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  result = (char *)(arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_GetValue",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_GetValue" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  result = (char *)(arg1)->GetValue();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_GetValueAsInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_GetValueAsInt",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_GetValueAsInt" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  result = (int)(arg1)->GetValueAsInt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_GetValueAsFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_GetValueAsFloat",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_GetValueAsFloat" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  result = (float)(arg1)->GetValueAsFloat();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_GetValueAsBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_GetValueAsBool",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_GetValueAsBool" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  result = (bool)(arg1)->GetValueAsBool();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_SetName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_SetName" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentAttribute_SetName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetName((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_SetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_SetValue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_SetValue" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentAttribute_SetValue" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetValue((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_SetValueAsInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_SetValueAsInt",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_SetValueAsInt" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iDocumentAttribute_SetValueAsInt" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetValueAsInt(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_SetValueAsFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_SetValueAsFloat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentAttribute_SetValueAsFloat" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iDocumentAttribute_SetValueAsFloat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetValueAsFloat(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentAttribute_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentAttribute_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDocumentAttribute_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDocumentAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDocumentAttribute",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentAttribute, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDocumentAttribute" "', argument " "1"" of type '" "iDocumentAttribute *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentAttribute * >(argp1);
  delete_iDocumentAttribute(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDocumentAttribute_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDocumentAttribute, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDocumentNodeIterator_HasNext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNodeIterator_HasNext",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNodeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNodeIterator_HasNext" "', argument " "1"" of type '" "iDocumentNodeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNodeIterator * >(argp1);
  result = (bool)(arg1)->HasNext();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNodeIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocumentNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNodeIterator_Next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNodeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNodeIterator_Next" "', argument " "1"" of type '" "iDocumentNodeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNodeIterator * >(argp1);
  result = (arg1)->Next();
  {
    csRef<iDocumentNode> ref((csRef<iDocumentNode>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNode *)ref, SWIGTYPE_p_iDocumentNode, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNodeIterator_GetNextPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNodeIterator_GetNextPosition",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNodeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNodeIterator_GetNextPosition" "', argument " "1"" of type '" "iDocumentNodeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNodeIterator * >(argp1);
  result = (arg1)->GetNextPosition();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNodeIterator_GetEndPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNodeIterator_GetEndPosition",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNodeIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNodeIterator_GetEndPosition" "', argument " "1"" of type '" "iDocumentNodeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNodeIterator * >(argp1);
  result = (arg1)->GetEndPosition();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNodeIterator_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNodeIterator_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDocumentNodeIterator_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDocumentNodeIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDocumentNodeIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNodeIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDocumentNodeIterator" "', argument " "1"" of type '" "iDocumentNodeIterator *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNodeIterator * >(argp1);
  delete_iDocumentNodeIterator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDocumentNodeIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDocumentNodeIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDocumentNode_GetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csDocumentNodeType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetType" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (csDocumentNodeType)(arg1)->GetType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_Equals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  iDocumentNode *arg2 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_Equals",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_Equals" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_Equals" "', argument " "2"" of type '" "iDocumentNode *""'"); 
  }
  arg2 = reinterpret_cast< iDocumentNode * >(argp2);
  result = (bool)(arg1)->Equals(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetValue",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetValue" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (char *)(arg1)->GetValue();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_SetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_SetValue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_SetValue" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_SetValue" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetValue((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_SetValueAsInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_SetValueAsInt",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_SetValueAsInt" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iDocumentNode_SetValueAsInt" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetValueAsInt(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_SetValueAsFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_SetValueAsFloat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_SetValueAsFloat" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iDocumentNode_SetValueAsFloat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetValueAsFloat(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocumentNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetParent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetParent" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (arg1)->GetParent();
  {
    csRef<iDocumentNode> ref((csRef<iDocumentNode>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNode *)ref, SWIGTYPE_p_iDocumentNode, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetNodes__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocumentNodeIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetNodes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetNodes" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (arg1)->GetNodes();
  {
    csRef<iDocumentNodeIterator> ref((csRef<iDocumentNodeIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNodeIterator *)ref, SWIGTYPE_p_iDocumentNodeIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetNodes__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iDocumentNodeIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetNodes",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetNodes" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetNodes" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetNodes((char const *)arg2);
  {
    csRef<iDocumentNodeIterator> ref((csRef<iDocumentNodeIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNodeIterator *)ref, SWIGTYPE_p_iDocumentNodeIterator, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetNodes(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iDocumentNode_GetNodes__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDocumentNode_GetNodes__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iDocumentNode_GetNodes'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetNodes(iDocumentNode *)\n"
    "    GetNodes(iDocumentNode *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iDocumentNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetNode" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetNode((char const *)arg2);
  {
    csRef<iDocumentNode> ref((csRef<iDocumentNode>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNode *)ref, SWIGTYPE_p_iDocumentNode, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_RemoveNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  csRef< iDocumentNode > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_RemoveNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_RemoveNode" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iDocumentNode_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_RemoveNode" "', argument " "2"" of type '" "csRef< iDocumentNode > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iDocumentNode_RemoveNode" "', argument " "2"" of type '" "csRef< iDocumentNode > const &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iDocumentNode > * >(argp2);
  (arg1)->RemoveNode((csRef< iDocumentNode > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_RemoveNodes__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  SwigValueWrapper< csRef< iDocumentNodeIterator > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_RemoveNodes",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_RemoveNodes" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iDocumentNodeIterator_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_RemoveNodes" "', argument " "2"" of type '" "csRef< iDocumentNodeIterator >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iDocumentNode_RemoveNodes" "', argument " "2"" of type '" "csRef< iDocumentNodeIterator >""'");
    } else {
      csRef< iDocumentNodeIterator > * temp = reinterpret_cast< csRef< iDocumentNodeIterator > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->RemoveNodes(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_RemoveNodes__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_RemoveNodes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_RemoveNodes" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  (arg1)->RemoveNodes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_RemoveNodes(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iDocumentNode_RemoveNodes__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csRefT_iDocumentNodeIterator_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDocumentNode_RemoveNodes__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iDocumentNode_RemoveNodes'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RemoveNodes(iDocumentNode *,csRef< iDocumentNodeIterator >)\n"
    "    RemoveNodes(iDocumentNode *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_CreateNodeBefore__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  csDocumentNodeType arg2 ;
  iDocumentNode *arg3 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csRef< iDocumentNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_CreateNodeBefore",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_CreateNodeBefore" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iDocumentNode_CreateNodeBefore" "', argument " "2"" of type '" "csDocumentNodeType""'");
  } 
  arg2 = static_cast< csDocumentNodeType >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iDocumentNode_CreateNodeBefore" "', argument " "3"" of type '" "iDocumentNode *""'"); 
  }
  arg3 = reinterpret_cast< iDocumentNode * >(argp3);
  result = (arg1)->CreateNodeBefore(arg2,arg3);
  {
    csRef<iDocumentNode> ref((csRef<iDocumentNode>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNode *)ref, SWIGTYPE_p_iDocumentNode, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_CreateNodeBefore__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  csDocumentNodeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iDocumentNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_CreateNodeBefore",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_CreateNodeBefore" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iDocumentNode_CreateNodeBefore" "', argument " "2"" of type '" "csDocumentNodeType""'");
  } 
  arg2 = static_cast< csDocumentNodeType >(val2);
  result = (arg1)->CreateNodeBefore(arg2);
  {
    csRef<iDocumentNode> ref((csRef<iDocumentNode>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNode *)ref, SWIGTYPE_p_iDocumentNode, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_CreateNodeBefore(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iDocumentNode_CreateNodeBefore__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iDocumentNode, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iDocumentNode_CreateNodeBefore__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iDocumentNode_CreateNodeBefore'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CreateNodeBefore(iDocumentNode *,csDocumentNodeType,iDocumentNode *)\n"
    "    CreateNodeBefore(iDocumentNode *,csDocumentNodeType)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetContentsValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetContentsValue",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetContentsValue" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (char *)(arg1)->GetContentsValue();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetContentsValueAsInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetContentsValueAsInt",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetContentsValueAsInt" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (int)(arg1)->GetContentsValueAsInt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetContentsValueAsFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetContentsValueAsFloat",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetContentsValueAsFloat" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (float)(arg1)->GetContentsValueAsFloat();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttributes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocumentAttributeIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetAttributes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetAttributes" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  result = (arg1)->GetAttributes();
  {
    csRef<iDocumentAttributeIterator> ref((csRef<iDocumentAttributeIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentAttributeIterator *)ref, SWIGTYPE_p_iDocumentAttributeIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csRef< iDocumentAttribute > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetAttribute",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetAttribute" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetAttribute" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetAttribute((char const *)arg2);
  {
    csRef<iDocumentAttribute> ref((csRef<iDocumentAttribute>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentAttribute *)ref, SWIGTYPE_p_iDocumentAttribute, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttributeValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetAttributeValue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetAttributeValue" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetAttributeValue" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->GetAttributeValue((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttributeValueAsInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetAttributeValueAsInt",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetAttributeValueAsInt" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetAttributeValueAsInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)(arg1)->GetAttributeValueAsInt((char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttributeValueAsFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetAttributeValueAsFloat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetAttributeValueAsFloat" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetAttributeValueAsFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (float)(arg1)->GetAttributeValueAsFloat((char const *)arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttributeValueAsBool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetAttributeValueAsBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetAttributeValueAsBool" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetAttributeValueAsBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iDocumentNode_GetAttributeValueAsBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->GetAttributeValueAsBool((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttributeValueAsBool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_GetAttributeValueAsBool",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_GetAttributeValueAsBool" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_GetAttributeValueAsBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->GetAttributeValueAsBool((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_GetAttributeValueAsBool(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDocumentNode_GetAttributeValueAsBool__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocumentNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iDocumentNode_GetAttributeValueAsBool__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iDocumentNode_GetAttributeValueAsBool'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetAttributeValueAsBool(iDocumentNode *,char const *,bool)\n"
    "    GetAttributeValueAsBool(iDocumentNode *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_RemoveAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  csRef< iDocumentAttribute > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_RemoveAttribute",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_RemoveAttribute" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iDocumentAttribute_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_RemoveAttribute" "', argument " "2"" of type '" "csRef< iDocumentAttribute > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iDocumentNode_RemoveAttribute" "', argument " "2"" of type '" "csRef< iDocumentAttribute > const &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iDocumentAttribute > * >(argp2);
  (arg1)->RemoveAttribute((csRef< iDocumentAttribute > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_RemoveAttributes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_RemoveAttributes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_RemoveAttributes" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  (arg1)->RemoveAttributes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_SetAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_SetAttribute",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_SetAttribute" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_SetAttribute" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iDocumentNode_SetAttribute" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->SetAttribute((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_SetAttributeAsInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_SetAttributeAsInt",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_SetAttributeAsInt" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_SetAttributeAsInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iDocumentNode_SetAttributeAsInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetAttributeAsInt((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_SetAttributeAsFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_SetAttributeAsFloat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentNode_SetAttributeAsFloat" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocumentNode_SetAttributeAsFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iDocumentNode_SetAttributeAsFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetAttributeAsFloat((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDocumentNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDocumentNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentNode *arg1 = (iDocumentNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDocumentNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDocumentNode" "', argument " "1"" of type '" "iDocumentNode *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentNode * >(argp1);
  delete_iDocumentNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDocumentNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDocumentNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDocument_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Clear" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_CreateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocumentNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_CreateRoot",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_CreateRoot" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  result = (arg1)->CreateRoot();
  {
    csRef<iDocumentNode> ref((csRef<iDocumentNode>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNode *)ref, SWIGTYPE_p_iDocumentNode, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_GetRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocumentNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_GetRoot",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_GetRoot" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  result = (arg1)->GetRoot();
  {
    csRef<iDocumentNode> ref((csRef<iDocumentNode>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocumentNode *)ref, SWIGTYPE_p_iDocumentNode, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iFile *arg2 = (iFile *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Parse" "', argument " "2"" of type '" "iFile *""'"); 
  }
  arg2 = reinterpret_cast< iFile * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iDocument_Parse" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (char *)(arg1)->Parse(arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iFile *arg2 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Parse" "', argument " "2"" of type '" "iFile *""'"); 
  }
  arg2 = reinterpret_cast< iFile * >(argp2);
  result = (char *)(arg1)->Parse(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iDataBuffer *arg2 = (iDataBuffer *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iDataBuffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Parse" "', argument " "2"" of type '" "iDataBuffer *""'"); 
  }
  arg2 = reinterpret_cast< iDataBuffer * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iDocument_Parse" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (char *)(arg1)->Parse(arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iDataBuffer *arg2 = (iDataBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iDataBuffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Parse" "', argument " "2"" of type '" "iDataBuffer *""'"); 
  }
  arg2 = reinterpret_cast< iDataBuffer * >(argp2);
  result = (char *)(arg1)->Parse(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iString *arg2 = (iString *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  {
    arg2 = new scfString (PyString_AsString(obj1));
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iDocument_Parse" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (char *)(arg1)->Parse(arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iString *arg2 = (iString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  {
    arg2 = new scfString (PyString_AsString(obj1));
  }
  result = (char *)(arg1)->Parse(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Parse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iDocument_Parse" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (char *)(arg1)->Parse((char const *)arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Parse",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Parse" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Parse" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->Parse((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Parse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDocument_Parse__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iDataBuffer, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDocument_Parse__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyString_Check(argv[1]);
      }
      if (_v) {
        return _wrap_iDocument_Parse__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDocument_Parse__SWIG_7(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iDataBuffer, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iDocument_Parse__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iDocument_Parse__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyString_Check(argv[1]);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iDocument_Parse__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iDocument_Parse__SWIG_6(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iDocument_Parse'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Parse(iDocument *,iFile *,bool)\n"
    "    Parse(iDocument *,iFile *)\n"
    "    Parse(iDocument *,iDataBuffer *,bool)\n"
    "    Parse(iDocument *,iDataBuffer *)\n"
    "    Parse(iDocument *,iString *,bool)\n"
    "    Parse(iDocument *,iString *)\n"
    "    Parse(iDocument *,char const *,bool)\n"
    "    Parse(iDocument *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iFile *arg2 = (iFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Write",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Write" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Write" "', argument " "2"" of type '" "iFile *""'"); 
  }
  arg2 = reinterpret_cast< iFile * >(argp2);
  result = (char *)(arg1)->Write(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iString *arg2 = (iString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Write",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Write" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  {
    arg2 = new scfString (PyString_AsString(obj1));
  }
  result = (char *)(arg1)->Write(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Write__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  iVFS *arg2 = (iVFS *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Write",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Write" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iDocument_Write" "', argument " "2"" of type '" "iVFS *""'"); 
  }
  arg2 = reinterpret_cast< iVFS * >(argp2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iDocument_Write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)(arg1)->Write(arg2,(char const *)arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Changeable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Changeable",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Changeable" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  result = (int)(arg1)->Changeable();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Write__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfString *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_Write",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocument_Write" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  result = (scfString *)iDocument_Write__SWIG_3(arg1);
  {
    const char *res = result->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_Write(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iDocument_Write__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iDocument_Write__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PyString_Check(argv[1]);
      }
      if (_v) {
        return _wrap_iDocument_Write__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iVFS, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iDocument_Write__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iDocument_Write'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Write(iDocument *,iFile *)\n"
    "    Write(iDocument *,iString *)\n"
    "    Write(iDocument *,iVFS *,char const *)\n"
    "    Write(iDocument *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocument_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocument_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDocument_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocument *arg1 = (iDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDocument",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDocument" "', argument " "1"" of type '" "iDocument *""'"); 
  }
  arg1 = reinterpret_cast< iDocument * >(argp1);
  delete_iDocument(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDocument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDocument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDocumentSystem_CreateDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentSystem *arg1 = (iDocumentSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocument > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentSystem_CreateDocument",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDocumentSystem_CreateDocument" "', argument " "1"" of type '" "iDocumentSystem *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentSystem * >(argp1);
  result = (arg1)->CreateDocument();
  {
    csRef<iDocument> ref((csRef<iDocument>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocument *)ref, SWIGTYPE_p_iDocument, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDocumentSystem_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDocumentSystem_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDocumentSystem_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDocumentSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDocumentSystem *arg1 = (iDocumentSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDocumentSystem",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDocumentSystem, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDocumentSystem" "', argument " "1"" of type '" "iDocumentSystem *""'"); 
  }
  arg1 = reinterpret_cast< iDocumentSystem * >(argp1);
  delete_iDocumentSystem(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDocumentSystem_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDocumentSystem, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_scfConfigFile_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csConfigFile,iConfigFile > *arg1 = (scfImplementation1< csConfigFile,iConfigFile > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfConfigFile_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfConfigFile_IncRef" "', argument " "1"" of type '" "scfImplementation1< csConfigFile,iConfigFile > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csConfigFile,iConfigFile > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfConfigFile_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csConfigFile,iConfigFile > *arg1 = (scfImplementation1< csConfigFile,iConfigFile > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfConfigFile_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfConfigFile_DecRef" "', argument " "1"" of type '" "scfImplementation1< csConfigFile,iConfigFile > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csConfigFile,iConfigFile > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfConfigFile_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csConfigFile,iConfigFile > *arg1 = (scfImplementation1< csConfigFile,iConfigFile > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfConfigFile_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfConfigFile_GetRefCount" "', argument " "1"" of type '" "scfImplementation1< csConfigFile,iConfigFile > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csConfigFile,iConfigFile > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfConfigFile_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csConfigFile,iConfigFile > *arg1 = (scfImplementation1< csConfigFile,iConfigFile > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfConfigFile_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfConfigFile_QueryInterface" "', argument " "1"" of type '" "scfImplementation1< csConfigFile,iConfigFile > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csConfigFile,iConfigFile > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfConfigFile_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "scfConfigFile_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfConfigFile_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csConfigFile,iConfigFile > *arg1 = (scfImplementation1< csConfigFile,iConfigFile > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfConfigFile_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfConfigFile_AddRefOwner" "', argument " "1"" of type '" "scfImplementation1< csConfigFile,iConfigFile > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csConfigFile,iConfigFile > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfConfigFile_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfConfigFile_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csConfigFile,iConfigFile > *arg1 = (scfImplementation1< csConfigFile,iConfigFile > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfConfigFile_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfConfigFile_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementation1< csConfigFile,iConfigFile > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csConfigFile,iConfigFile > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfConfigFile_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfConfigFile_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csConfigFile,iConfigFile > *arg1 = (scfImplementation1< csConfigFile,iConfigFile > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfConfigFile_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfConfigFile_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementation1< csConfigFile,iConfigFile > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csConfigFile,iConfigFile > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *scfConfigFile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_csConfigFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csConfigFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csConfigFile" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_IsEmpty" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  result = (bool)((csConfigFile const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetFileName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetFileName" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  result = (char *)((csConfigFile const *)arg1)->GetFileName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetVFS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iVFS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetVFS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetVFS" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  result = (iVFS *)((csConfigFile const *)arg1)->GetVFS();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iVFS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetFileName",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetFileName" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetFileName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_SetFileName" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  (arg1)->SetFileName((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Load__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Load",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Load" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_Load" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csConfigFile_Load" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csConfigFile_Load" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->Load((char const *)arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Load__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Load",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Load" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_Load" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csConfigFile_Load" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->Load((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Load__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Load",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Load" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_Load" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  result = (bool)(arg1)->Load((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Load__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Load",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Load" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_Load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->Load((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Load(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csConfigFile_Load__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csConfigFile_Load__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csConfigFile_Load__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csConfigFile_Load__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csConfigFile_Load'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Load(csConfigFile *,char const *,iVFS *,bool,bool)\n"
    "    Load(csConfigFile *,char const *,iVFS *,bool)\n"
    "    Load(csConfigFile *,char const *,iVFS *)\n"
    "    Load(csConfigFile *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_LoadFromBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_LoadFromBuffer",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_LoadFromBuffer" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_LoadFromBuffer" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csConfigFile_LoadFromBuffer" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->LoadFromBuffer((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Save__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Save",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Save" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  result = (bool)(arg1)->Save();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Save__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Save",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Save" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_Save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_Save" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  result = (bool)(arg1)->Save((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Save__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Save",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Save" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_Save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->Save((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Save(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csConfigFile_Save__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csConfigFile_Save__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csConfigFile_Save__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csConfigFile_Save'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Save(csConfigFile *)\n"
    "    Save(csConfigFile *,char const *,iVFS *)\n"
    "    Save(csConfigFile *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Clear" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Enumerate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iConfigIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Enumerate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Enumerate" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_Enumerate" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->Enumerate((char const *)arg2);
  {
    csRef<iConfigIterator> ref((csPtr<iConfigIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iConfigIterator *)ref, SWIGTYPE_p_iConfigIterator, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Enumerate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< iConfigIterator > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_Enumerate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_Enumerate" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  result = (arg1)->Enumerate();
  {
    csRef<iConfigIterator> ref((csPtr<iConfigIterator>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iConfigIterator *)ref, SWIGTYPE_p_iConfigIterator, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_Enumerate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csConfigFile_Enumerate__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csConfigFile_Enumerate__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csConfigFile_Enumerate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Enumerate(csConfigFile *,char const *)\n"
    "    Enumerate(csConfigFile *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_KeyExists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_KeyExists",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_KeyExists" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_KeyExists" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)((csConfigFile const *)arg1)->KeyExists((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SubsectionExists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SubsectionExists",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SubsectionExists" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SubsectionExists" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)((csConfigFile const *)arg1)->SubsectionExists((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetInt",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetInt" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csConfigFile_GetInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)((csConfigFile const *)arg1)->GetInt((char const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetFloat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetFloat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetFloat" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csConfigFile_GetFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (float)((csConfigFile const *)arg1)->GetFloat((char const *)arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetFloat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetFloat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetFloat" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (float)((csConfigFile const *)arg1)->GetFloat((char const *)arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetFloat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csConfigFile_GetFloat__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csConfigFile_GetFloat__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csConfigFile_GetFloat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetFloat(csConfigFile const *,char const *,float)\n"
    "    GetFloat(csConfigFile const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetStr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetStr",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetStr" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetStr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_GetStr" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (char *)((csConfigFile const *)arg1)->GetStr((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetStr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetStr",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetStr" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetStr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)((csConfigFile const *)arg1)->GetStr((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetStr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csConfigFile_GetStr__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csConfigFile_GetStr__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csConfigFile_GetStr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetStr(csConfigFile const *,char const *,char const *)\n"
    "    GetStr(csConfigFile const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetBool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetBool" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csConfigFile_GetBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)((csConfigFile const *)arg1)->GetBool((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetBool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetBool",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetBool" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)((csConfigFile const *)arg1)->GetBool((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetBool(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csConfigFile_GetBool__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csConfigFile_GetBool__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csConfigFile_GetBool'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetBool(csConfigFile const *,char const *,bool)\n"
    "    GetBool(csConfigFile const *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetTuple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iStringArray > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetTuple",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetTuple" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetTuple" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((csConfigFile const *)arg1)->GetTuple((char const *)arg2);
  {
    csRef<iStringArray> ref((csPtr<iStringArray>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iStringArray *)ref, SWIGTYPE_p_iStringArray, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetComment",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetComment" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_GetComment" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)((csConfigFile const *)arg1)->GetComment((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetStr",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetStr" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetStr" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_SetStr" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->SetStr((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetInt",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetInt" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetInt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csConfigFile_SetInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetInt((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetFloat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetFloat" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetFloat" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csConfigFile_SetFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetFloat((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetBool",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetBool" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetBool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csConfigFile_SetBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->SetBool((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetTuple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  iStringArray *arg3 = (iStringArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetTuple",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetTuple" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetTuple" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iStringArray, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_SetTuple" "', argument " "3"" of type '" "iStringArray *""'"); 
  }
  arg3 = reinterpret_cast< iStringArray * >(argp3);
  (arg1)->SetTuple((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetComment",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetComment" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetComment" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_SetComment" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->SetComment((char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_DeleteKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_DeleteKey",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_DeleteKey" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_DeleteKey" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->DeleteKey((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_SetEOFComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_SetEOFComment",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_SetEOFComment" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_SetEOFComment" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->SetEOFComment((char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_GetEOFComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_GetEOFComment",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_GetEOFComment" "', argument " "1"" of type '" "csConfigFile const *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  result = (char *)((csConfigFile const *)arg1)->GetEOFComment();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_ParseCommandLine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  iCommandLineParser *arg2 = (iCommandLineParser *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_ParseCommandLine",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_ParseCommandLine" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_ParseCommandLine" "', argument " "2"" of type '" "iCommandLineParser *""'"); 
  }
  arg2 = reinterpret_cast< iCommandLineParser * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_ParseCommandLine" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csConfigFile_ParseCommandLine" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csConfigFile_ParseCommandLine" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->ParseCommandLine(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_ParseCommandLine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  iCommandLineParser *arg2 = (iCommandLineParser *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_ParseCommandLine",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_ParseCommandLine" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_ParseCommandLine" "', argument " "2"" of type '" "iCommandLineParser *""'"); 
  }
  arg2 = reinterpret_cast< iCommandLineParser * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_ParseCommandLine" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csConfigFile_ParseCommandLine" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->ParseCommandLine(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_ParseCommandLine__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csConfigFile *arg1 = (csConfigFile *) 0 ;
  iCommandLineParser *arg2 = (iCommandLineParser *) 0 ;
  iVFS *arg3 = (iVFS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csConfigFile_ParseCommandLine",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csConfigFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csConfigFile_ParseCommandLine" "', argument " "1"" of type '" "csConfigFile *""'"); 
  }
  arg1 = reinterpret_cast< csConfigFile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iCommandLineParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csConfigFile_ParseCommandLine" "', argument " "2"" of type '" "iCommandLineParser *""'"); 
  }
  arg2 = reinterpret_cast< iCommandLineParser * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iVFS, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csConfigFile_ParseCommandLine" "', argument " "3"" of type '" "iVFS *""'"); 
  }
  arg3 = reinterpret_cast< iVFS * >(argp3);
  (arg1)->ParseCommandLine(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csConfigFile_ParseCommandLine(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csConfigFile_ParseCommandLine__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csConfigFile_ParseCommandLine__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csConfigFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iCommandLineParser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iVFS, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csConfigFile_ParseCommandLine__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csConfigFile_ParseCommandLine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ParseCommandLine(csConfigFile *,iCommandLineParser *,iVFS *,bool,bool)\n"
    "    ParseCommandLine(csConfigFile *,iCommandLineParser *,iVFS *,bool)\n"
    "    ParseCommandLine(csConfigFile *,iCommandLineParser *,iVFS *)\n");
  return NULL;
}


SWIGINTERN PyObject *csConfigFile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csConfigFile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csRadixSorter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRadixSorter *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csRadixSorter",0,0)) SWIG_fail;
  result = (csRadixSorter *)new csRadixSorter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRadixSorter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csRadixSorter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRadixSorter *arg1 = (csRadixSorter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csRadixSorter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRadixSorter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csRadixSorter" "', argument " "1"" of type '" "csRadixSorter *""'"); 
  }
  arg1 = reinterpret_cast< csRadixSorter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRadixSorter_Sort__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRadixSorter *arg1 = (csRadixSorter *) 0 ;
  uint32 *arg2 = (uint32 *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRadixSorter_Sort",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRadixSorter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRadixSorter_Sort" "', argument " "1"" of type '" "csRadixSorter *""'"); 
  }
  arg1 = reinterpret_cast< csRadixSorter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_uint32_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRadixSorter_Sort" "', argument " "2"" of type '" "uint32 *""'"); 
  }
  arg2 = reinterpret_cast< uint32 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRadixSorter_Sort" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->Sort(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRadixSorter_Sort__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRadixSorter *arg1 = (csRadixSorter *) 0 ;
  int32 *arg2 = (int32 *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRadixSorter_Sort",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRadixSorter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRadixSorter_Sort" "', argument " "1"" of type '" "csRadixSorter *""'"); 
  }
  arg1 = reinterpret_cast< csRadixSorter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRadixSorter_Sort" "', argument " "2"" of type '" "int32 *""'"); 
  }
  arg2 = reinterpret_cast< int32 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRadixSorter_Sort" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->Sort(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRadixSorter_Sort__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRadixSorter *arg1 = (csRadixSorter *) 0 ;
  float *arg2 = (float *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRadixSorter_Sort",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRadixSorter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRadixSorter_Sort" "', argument " "1"" of type '" "csRadixSorter *""'"); 
  }
  arg1 = reinterpret_cast< csRadixSorter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRadixSorter_Sort" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRadixSorter_Sort" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->Sort(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRadixSorter_Sort(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRadixSorter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_uint32_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csRadixSorter_Sort__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRadixSorter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csRadixSorter_Sort__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRadixSorter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csRadixSorter_Sort__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csRadixSorter_Sort'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Sort(csRadixSorter *,uint32 *,size_t)\n"
    "    Sort(csRadixSorter *,int32 *,size_t)\n"
    "    Sort(csRadixSorter *,float *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRadixSorter_GetRanks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRadixSorter *arg1 = (csRadixSorter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRadixSorter_GetRanks",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRadixSorter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRadixSorter_GetRanks" "', argument " "1"" of type '" "csRadixSorter const *""'"); 
  }
  arg1 = reinterpret_cast< csRadixSorter * >(argp1);
  result = (size_t *)((csRadixSorter const *)arg1)->GetRanks();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_size_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csRadixSorter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csRadixSorter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csTinyDocumentSystem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTinyDocumentSystem *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTinyDocumentSystem",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csTinyDocumentSystem" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  result = (csTinyDocumentSystem *)new csTinyDocumentSystem(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTinyDocumentSystem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTinyDocumentSystem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTinyDocumentSystem *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTinyDocumentSystem",0,0)) SWIG_fail;
  result = (csTinyDocumentSystem *)new csTinyDocumentSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTinyDocumentSystem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTinyDocumentSystem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csTinyDocumentSystem__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csTinyDocumentSystem__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csTinyDocumentSystem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csTinyDocumentSystem(iBase *)\n"
    "    csTinyDocumentSystem()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTinyDocumentSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTinyDocumentSystem",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTinyDocumentSystem, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTinyDocumentSystem" "', argument " "1"" of type '" "csTinyDocumentSystem *""'"); 
  }
  arg1 = reinterpret_cast< csTinyDocumentSystem * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTinyDocumentSystem_CreateDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iDocument > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTinyDocumentSystem_CreateDocument",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTinyDocumentSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTinyDocumentSystem_CreateDocument" "', argument " "1"" of type '" "csTinyDocumentSystem *""'"); 
  }
  arg1 = reinterpret_cast< csTinyDocumentSystem * >(argp1);
  result = (arg1)->CreateDocument();
  {
    csRef<iDocument> ref((csRef<iDocument>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iDocument *)ref, SWIGTYPE_p_iDocument, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTinyDocumentSystem_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTinyDocumentSystem, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iDataBuffer_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDataBuffer *arg1 = (iDataBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDataBuffer_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDataBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDataBuffer_GetSize" "', argument " "1"" of type '" "iDataBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< iDataBuffer * >(argp1);
  result = ((iDataBuffer const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDataBuffer_GetData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDataBuffer *arg1 = (iDataBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDataBuffer_GetData",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDataBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDataBuffer_GetData" "', argument " "1"" of type '" "iDataBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< iDataBuffer * >(argp1);
  result = (char *)((iDataBuffer const *)arg1)->GetData();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDataBuffer_asString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDataBuffer *arg1 = (iDataBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDataBuffer_asString",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDataBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDataBuffer_asString" "', argument " "1"" of type '" "iDataBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< iDataBuffer * >(argp1);
  result = (char *)((iDataBuffer const *)arg1)->operator *();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDataBuffer_GetUint8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDataBuffer *arg1 = (iDataBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint8 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDataBuffer_GetUint8",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDataBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDataBuffer_GetUint8" "', argument " "1"" of type '" "iDataBuffer *""'"); 
  }
  arg1 = reinterpret_cast< iDataBuffer * >(argp1);
  result = (uint8 *)(arg1)->GetUint8();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDataBuffer_AsBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDataBuffer *arg1 = (iDataBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDataBuffer_AsBuffer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDataBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iDataBuffer_AsBuffer" "', argument " "1"" of type '" "iDataBuffer *""'"); 
  }
  arg1 = reinterpret_cast< iDataBuffer * >(argp1);
  result = (PyObject *)iDataBuffer_AsBuffer(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iDataBuffer_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iDataBuffer_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iDataBuffer_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iDataBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iDataBuffer *arg1 = (iDataBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iDataBuffer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iDataBuffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iDataBuffer" "', argument " "1"" of type '" "iDataBuffer *""'"); 
  }
  arg1 = reinterpret_cast< iDataBuffer * >(argp1);
  delete_iDataBuffer(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iDataBuffer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iDataBuffer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CSKEY_SHIFT_NUM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CSKEY_SHIFT_NUM",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CSKEY_SHIFT_NUM" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)CSKEY_SHIFT_NUM(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSKEY_CTRL_NUM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CSKEY_CTRL_NUM",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CSKEY_CTRL_NUM" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)CSKEY_CTRL_NUM(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSKEY_ALT_NUM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CSKEY_ALT_NUM",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CSKEY_ALT_NUM" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)CSKEY_ALT_NUM(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSKEY_SPECIAL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CSKEY_SPECIAL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CSKEY_SPECIAL" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)CSKEY_SPECIAL(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSKEY_SPECIAL_NUM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CSKEY_SPECIAL_NUM",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CSKEY_SPECIAL_NUM" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)CSKEY_SPECIAL_NUM(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSKEY_MODIFIER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CSKEY_MODIFIER",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CSKEY_MODIFIER" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSKEY_MODIFIER" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)CSKEY_MODIFIER(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_IS_KEYBOARD_EVENT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_IS_KEYBOARD_EVENT",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_IS_KEYBOARD_EVENT" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_IS_KEYBOARD_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CS_IS_KEYBOARD_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)CS_IS_KEYBOARD_EVENT(arg1,(iEvent const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_IS_MOUSE_EVENT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_IS_MOUSE_EVENT",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_IS_MOUSE_EVENT" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_IS_MOUSE_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CS_IS_MOUSE_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)CS_IS_MOUSE_EVENT(arg1,(iEvent const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_IS_JOYSTICK_EVENT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_IS_JOYSTICK_EVENT",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_IS_JOYSTICK_EVENT" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_IS_JOYSTICK_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CS_IS_JOYSTICK_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)CS_IS_JOYSTICK_EVENT(arg1,(iEvent const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_IS_INPUT_EVENT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_IS_INPUT_EVENT",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_IS_INPUT_EVENT" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_IS_INPUT_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CS_IS_INPUT_EVENT" "', argument " "2"" of type '" "iEvent const &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)CS_IS_INPUT_EVENT(arg1,(iEvent const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevAllEvents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevAllEvents",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevAllEvents" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevAllEvents(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevFrame",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevFrame" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevFrame(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevInput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevInput",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevInput" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevInput(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevQuit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevQuit",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevQuit" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevQuit(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevCanvasClose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iGraphics2D *arg2 = (iGraphics2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevCanvasClose",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevCanvasClose" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iGraphics2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csevCanvasClose" "', argument " "2"" of type '" "iGraphics2D *""'"); 
  }
  arg2 = reinterpret_cast< iGraphics2D * >(argp2);
  result = csevCanvasClose(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevCanvasExposed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iGraphics2D *arg2 = (iGraphics2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevCanvasExposed",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevCanvasExposed" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iGraphics2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csevCanvasExposed" "', argument " "2"" of type '" "iGraphics2D *""'"); 
  }
  arg2 = reinterpret_cast< iGraphics2D * >(argp2);
  result = csevCanvasExposed(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevCanvasHidden(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iGraphics2D *arg2 = (iGraphics2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevCanvasHidden",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevCanvasHidden" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iGraphics2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csevCanvasHidden" "', argument " "2"" of type '" "iGraphics2D *""'"); 
  }
  arg2 = reinterpret_cast< iGraphics2D * >(argp2);
  result = csevCanvasHidden(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevCanvasResize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iGraphics2D *arg2 = (iGraphics2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevCanvasResize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevCanvasResize" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iGraphics2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csevCanvasResize" "', argument " "2"" of type '" "iGraphics2D *""'"); 
  }
  arg2 = reinterpret_cast< iGraphics2D * >(argp2);
  result = csevCanvasResize(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevFocusChanged(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevFocusChanged",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevFocusChanged" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevFocusChanged(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevFocusGained(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevFocusGained",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevFocusGained" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevFocusGained(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevFocusLost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevFocusLost",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevFocusLost" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevFocusLost(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevKeyboardEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevKeyboardEvent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevKeyboardEvent" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevKeyboardEvent(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevKeyboardDown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevKeyboardDown",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevKeyboardDown" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevKeyboardDown(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevKeyboardUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevKeyboardUp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevKeyboardUp" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevKeyboardUp(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseEvent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseEvent" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevMouseEvent(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseButton",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseButton" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseButton" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouseButton(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseUp",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseUp" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseUp" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouseUp(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseDown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseDown",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseDown" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseDown" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouseDown(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseClick",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseClick" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseClick" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouseClick(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseDoubleClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseDoubleClick",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseDoubleClick" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseDoubleClick" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouseDoubleClick(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevMouseMove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevMouseMove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevMouseMove" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csevMouseMove" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = csevMouseMove(arg1,arg2);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csevJoystickEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csevJoystickEvent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csevJoystickEvent" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csevJoystickEvent(arg1);
  {
    csEventID stringid = result;
    resultobj = PyLong_FromUnsignedLong((unsigned long)stringid);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csEventHandlerRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csEventHandlerRegistry *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csEventHandlerRegistry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csEventHandlerRegistry" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (csEventHandlerRegistry *)new csEventHandlerRegistry(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEventHandlerRegistry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csEventHandlerRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csEventHandlerRegistry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csEventHandlerRegistry" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGenericID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGenericID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetGenericID((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGenericID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGenericID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = csEventHandlerRegistry::GetGenericID(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGenericID__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGenericID__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_GetGenericID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetGenericID(csEventHandlerRegistry *,char const *)\n"
    "    csEventHandlerRegistry::GetGenericID(iObjectRegistry *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericPreBoundID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGenericPreBoundID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGenericPreBoundID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGenericPreBoundID" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetGenericPreBoundID" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->GetGenericPreBoundID(arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericPreBoundID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGenericPreBoundID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGenericPreBoundID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGenericPreBoundID" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetGenericPreBoundID" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = csEventHandlerRegistry::GetGenericPreBoundID(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericPreBoundID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGenericPreBoundID__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGenericPreBoundID__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_GetGenericPreBoundID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetGenericPreBoundID(csEventHandlerRegistry *,csHandlerID)\n"
    "    csEventHandlerRegistry::GetGenericPreBoundID(iObjectRegistry *,csHandlerID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericPostBoundID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGenericPostBoundID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGenericPostBoundID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGenericPostBoundID" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetGenericPostBoundID" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->GetGenericPostBoundID(arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericPostBoundID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGenericPostBoundID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGenericPostBoundID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGenericPostBoundID" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetGenericPostBoundID" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = csEventHandlerRegistry::GetGenericPostBoundID(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGenericPostBoundID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGenericPostBoundID__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGenericPostBoundID__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_GetGenericPostBoundID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetGenericPostBoundID(csEventHandlerRegistry *,csHandlerID)\n"
    "    csEventHandlerRegistry::GetGenericPostBoundID(iObjectRegistry *,csHandlerID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetID" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  result = (arg1)->GetID(arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetID" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  result = csEventHandlerRegistry::GetID(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_RegisterID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_RegisterID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_RegisterID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_RegisterID" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  result = (arg1)->RegisterID(arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_RegisterID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_RegisterID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_RegisterID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_RegisterID" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  result = csEventHandlerRegistry::RegisterID(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_RegisterID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_RegisterID__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_RegisterID__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_RegisterID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RegisterID(csEventHandlerRegistry *,iEventHandler *)\n"
    "    csEventHandlerRegistry::RegisterID(iObjectRegistry *,iEventHandler *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetID__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->GetID((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetID__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetID" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = csEventHandlerRegistry::GetID(arg1,(char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetID__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetID__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetID__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetID__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_GetID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetID(csEventHandlerRegistry *,iEventHandler *)\n"
    "    GetID(iObjectRegistry *,iEventHandler *)\n"
    "    GetID(csEventHandlerRegistry *,char const *)\n"
    "    csEventHandlerRegistry::GetID(iObjectRegistry *,char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_ReleaseID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_ReleaseID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ReleaseID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_ReleaseID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_ReleaseID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  csEventHandlerRegistry::ReleaseID(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_ReleaseID__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_ReleaseID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  (arg1)->ReleaseID(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_ReleaseID__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  iEventHandler *arg2 = (iEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_ReleaseID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_ReleaseID" "', argument " "2"" of type '" "iEventHandler *""'"); 
  }
  arg2 = reinterpret_cast< iEventHandler * >(argp2);
  csEventHandlerRegistry::ReleaseID(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_ReleaseID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_ReleaseID__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_ReleaseID__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_ReleaseID__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iEventHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_ReleaseID__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_ReleaseID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ReleaseID(csEventHandlerRegistry *,csHandlerID)\n"
    "    ReleaseID(iObjectRegistry *,csHandlerID)\n"
    "    ReleaseID(csEventHandlerRegistry *,iEventHandler *)\n"
    "    csEventHandlerRegistry::ReleaseID(iObjectRegistry *,iEventHandler *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetHandler__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iEventHandler *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetHandler",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetHandler" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetHandler" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetHandler" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (iEventHandler *)(arg1)->GetHandler(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iEventHandler, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetHandler__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iEventHandler *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetHandler",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetHandler" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetHandler" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetHandler" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (iEventHandler *)csEventHandlerRegistry::GetHandler(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iEventHandler, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetHandler(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetHandler__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetHandler__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_GetHandler'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetHandler(csEventHandlerRegistry *,csHandlerID)\n"
    "    csEventHandlerRegistry::GetHandler(iObjectRegistry *,csHandlerID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_IsInstanceOf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  csHandlerID arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_IsInstanceOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "3"" of type '" "csHandlerID""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "3"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->IsInstanceOf(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_IsInstanceOf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  csHandlerID arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_IsInstanceOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "3"" of type '" "csHandlerID""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_IsInstanceOf" "', argument " "3"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)csEventHandlerRegistry::IsInstanceOf(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_IsInstanceOf(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csHandlerID, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csEventHandlerRegistry_IsInstanceOf__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csHandlerID, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csEventHandlerRegistry_IsInstanceOf__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_IsInstanceOf'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IsInstanceOf(csEventHandlerRegistry *,csHandlerID,csHandlerID)\n"
    "    csEventHandlerRegistry::IsInstanceOf(iObjectRegistry *,csHandlerID,csHandlerID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_IsInstance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_IsInstance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_IsInstance" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_IsInstance" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_IsInstance" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)(arg1)->IsInstance(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_IsInstance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_IsInstance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_IsInstance" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_IsInstance" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_IsInstance" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)csEventHandlerRegistry::IsInstance(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_IsInstance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_IsInstance__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_IsInstance__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_IsInstance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IsInstance(csEventHandlerRegistry *,csHandlerID)\n"
    "    csEventHandlerRegistry::IsInstance(iObjectRegistry *,csHandlerID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGeneric__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGeneric",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGeneric" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGeneric" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetGeneric" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->GetGeneric(arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGeneric__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetGeneric",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetGeneric" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetGeneric" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetGeneric" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = csEventHandlerRegistry::GetGeneric(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetGeneric(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGeneric__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetGeneric__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_GetGeneric'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetGeneric(csEventHandlerRegistry *,csHandlerID)\n"
    "    csEventHandlerRegistry::GetGeneric(iObjectRegistry *,csHandlerID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEventHandlerRegistry *arg1 = (csEventHandlerRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetString",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEventHandlerRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetString" "', argument " "1"" of type '" "csEventHandlerRegistry *""'"); 
  }
  arg1 = reinterpret_cast< csEventHandlerRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetString" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetString" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (char *)(arg1)->GetString(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csHandlerID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetString",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetString" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csHandlerID,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEventHandlerRegistry_GetString" "', argument " "2"" of type '" "csHandlerID""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEventHandlerRegistry_GetString" "', argument " "2"" of type '" "csHandlerID""'");
    } else {
      csHandlerID * temp = reinterpret_cast< csHandlerID * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (char *)csEventHandlerRegistry::GetString(arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetString(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csEventHandlerRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetString__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iObjectRegistry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csHandlerID, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csEventHandlerRegistry_GetString__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csEventHandlerRegistry_GetString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetString(csEventHandlerRegistry *,csHandlerID)\n"
    "    csEventHandlerRegistry::GetString(iObjectRegistry *,csHandlerID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEventHandlerRegistry_GetRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csRef< iEventHandlerRegistry > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEventHandlerRegistry_GetRegistry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEventHandlerRegistry_GetRegistry" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = csEventHandlerRegistry::GetRegistry(arg1);
  resultobj = SWIG_NewPointerObj((new csRef< iEventHandlerRegistry >(static_cast< const csRef< iEventHandlerRegistry >& >(result))), SWIGTYPE_p_csRefT_iEventHandlerRegistry_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csEventHandlerRegistry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csEventHandlerRegistry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_iFrameEventSignpost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFrameEventSignpost *arg1 = (iFrameEventSignpost *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iFrameEventSignpost",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFrameEventSignpost, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iFrameEventSignpost" "', argument " "1"" of type '" "iFrameEventSignpost *""'"); 
  }
  arg1 = reinterpret_cast< iFrameEventSignpost * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFrameEventSignpost_InstancePrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFrameEventSignpost *arg1 = (iFrameEventSignpost *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFrameEventSignpost_InstancePrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFrameEventSignpost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFrameEventSignpost_InstancePrec" "', argument " "1"" of type '" "iFrameEventSignpost const *""'"); 
  }
  arg1 = reinterpret_cast< iFrameEventSignpost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iFrameEventSignpost_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iFrameEventSignpost_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iFrameEventSignpost_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iFrameEventSignpost_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((iFrameEventSignpost const *)arg1)->InstancePrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFrameEventSignpost_InstanceSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFrameEventSignpost *arg1 = (iFrameEventSignpost *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFrameEventSignpost_InstanceSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFrameEventSignpost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFrameEventSignpost_InstanceSucc" "', argument " "1"" of type '" "iFrameEventSignpost const *""'"); 
  }
  arg1 = reinterpret_cast< iFrameEventSignpost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iFrameEventSignpost_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iFrameEventSignpost_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iFrameEventSignpost_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iFrameEventSignpost_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((iFrameEventSignpost const *)arg1)->InstanceSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iFrameEventSignpost_HandleEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iFrameEventSignpost *arg1 = (iFrameEventSignpost *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iFrameEventSignpost_HandleEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iFrameEventSignpost, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iFrameEventSignpost_HandleEvent" "', argument " "1"" of type '" "iFrameEventSignpost *""'"); 
  }
  arg1 = reinterpret_cast< iFrameEventSignpost * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iFrameEventSignpost_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iFrameEventSignpost_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)(arg1)->HandleEvent(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iFrameEventSignpost_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iFrameEventSignpost, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FrameSignpost_Logic3D_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_Logic3D_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)FrameSignpost_Logic3D::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_Logic3D_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_Logic3D_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_Logic3D_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_Logic3D_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = FrameSignpost_Logic3D::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_Logic3D_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_Logic3D *arg1 = (FrameSignpost_Logic3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_Logic3D_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_Logic3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_Logic3D_GenericName" "', argument " "1"" of type '" "FrameSignpost_Logic3D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_Logic3D * >(argp1);
  result = (char *)((FrameSignpost_Logic3D const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_Logic3D_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_Logic3D *arg1 = (FrameSignpost_Logic3D *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_Logic3D_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_Logic3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_Logic3D_GenericID" "', argument " "1"" of type '" "FrameSignpost_Logic3D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_Logic3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_Logic3D_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_Logic3D_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((FrameSignpost_Logic3D const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_Logic3D_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_Logic3D *arg1 = (FrameSignpost_Logic3D *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_Logic3D_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_Logic3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_Logic3D_GenericPrec" "', argument " "1"" of type '" "FrameSignpost_Logic3D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_Logic3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_Logic3D_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_Logic3D_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_Logic3D_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_Logic3D_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_Logic3D const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_Logic3D_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_Logic3D *arg1 = (FrameSignpost_Logic3D *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_Logic3D_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_Logic3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_Logic3D_GenericSucc" "', argument " "1"" of type '" "FrameSignpost_Logic3D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_Logic3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_Logic3D_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_Logic3D_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_Logic3D_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_Logic3D_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_Logic3D const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FrameSignpost_Logic3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_Logic3D *arg1 = (FrameSignpost_Logic3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FrameSignpost_Logic3D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_Logic3D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FrameSignpost_Logic3D" "', argument " "1"" of type '" "FrameSignpost_Logic3D *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_Logic3D * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FrameSignpost_Logic3D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FrameSignpost_Logic3D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FrameSignpost_3D2D_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_3D2D_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)FrameSignpost_3D2D::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_3D2D_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_3D2D_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_3D2D_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_3D2D_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = FrameSignpost_3D2D::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_3D2D_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_3D2D *arg1 = (FrameSignpost_3D2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_3D2D_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_3D2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_3D2D_GenericName" "', argument " "1"" of type '" "FrameSignpost_3D2D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_3D2D * >(argp1);
  result = (char *)((FrameSignpost_3D2D const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_3D2D_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_3D2D *arg1 = (FrameSignpost_3D2D *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_3D2D_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_3D2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_3D2D_GenericID" "', argument " "1"" of type '" "FrameSignpost_3D2D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_3D2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_3D2D_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_3D2D_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((FrameSignpost_3D2D const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_3D2D_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_3D2D *arg1 = (FrameSignpost_3D2D *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_3D2D_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_3D2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_3D2D_GenericPrec" "', argument " "1"" of type '" "FrameSignpost_3D2D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_3D2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_3D2D_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_3D2D_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_3D2D_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_3D2D_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_3D2D const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_3D2D_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_3D2D *arg1 = (FrameSignpost_3D2D *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_3D2D_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_3D2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_3D2D_GenericSucc" "', argument " "1"" of type '" "FrameSignpost_3D2D const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_3D2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_3D2D_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_3D2D_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_3D2D_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_3D2D_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_3D2D const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FrameSignpost_3D2D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_3D2D *arg1 = (FrameSignpost_3D2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FrameSignpost_3D2D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_3D2D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FrameSignpost_3D2D" "', argument " "1"" of type '" "FrameSignpost_3D2D *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_3D2D * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FrameSignpost_3D2D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FrameSignpost_3D2D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FrameSignpost_2DConsole_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_2DConsole_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)FrameSignpost_2DConsole::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_2DConsole_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_2DConsole_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_2DConsole_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_2DConsole_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = FrameSignpost_2DConsole::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_2DConsole_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_2DConsole *arg1 = (FrameSignpost_2DConsole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_2DConsole_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_2DConsole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_2DConsole_GenericName" "', argument " "1"" of type '" "FrameSignpost_2DConsole const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_2DConsole * >(argp1);
  result = (char *)((FrameSignpost_2DConsole const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_2DConsole_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_2DConsole *arg1 = (FrameSignpost_2DConsole *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_2DConsole_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_2DConsole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_2DConsole_GenericID" "', argument " "1"" of type '" "FrameSignpost_2DConsole const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_2DConsole * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_2DConsole_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_2DConsole_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((FrameSignpost_2DConsole const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_2DConsole_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_2DConsole *arg1 = (FrameSignpost_2DConsole *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_2DConsole_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_2DConsole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_2DConsole_GenericPrec" "', argument " "1"" of type '" "FrameSignpost_2DConsole const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_2DConsole * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_2DConsole_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_2DConsole_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_2DConsole_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_2DConsole_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_2DConsole const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_2DConsole_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_2DConsole *arg1 = (FrameSignpost_2DConsole *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_2DConsole_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_2DConsole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_2DConsole_GenericSucc" "', argument " "1"" of type '" "FrameSignpost_2DConsole const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_2DConsole * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_2DConsole_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_2DConsole_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_2DConsole_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_2DConsole_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_2DConsole const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FrameSignpost_2DConsole(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_2DConsole *arg1 = (FrameSignpost_2DConsole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FrameSignpost_2DConsole",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_2DConsole, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FrameSignpost_2DConsole" "', argument " "1"" of type '" "FrameSignpost_2DConsole *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_2DConsole * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FrameSignpost_2DConsole_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FrameSignpost_2DConsole, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FrameSignpost_ConsoleDebug_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_ConsoleDebug_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)FrameSignpost_ConsoleDebug::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_ConsoleDebug_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_ConsoleDebug_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_ConsoleDebug_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_ConsoleDebug_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = FrameSignpost_ConsoleDebug::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_ConsoleDebug_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_ConsoleDebug *arg1 = (FrameSignpost_ConsoleDebug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_ConsoleDebug_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_ConsoleDebug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_ConsoleDebug_GenericName" "', argument " "1"" of type '" "FrameSignpost_ConsoleDebug const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_ConsoleDebug * >(argp1);
  result = (char *)((FrameSignpost_ConsoleDebug const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_ConsoleDebug_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_ConsoleDebug *arg1 = (FrameSignpost_ConsoleDebug *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_ConsoleDebug_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_ConsoleDebug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_ConsoleDebug_GenericID" "', argument " "1"" of type '" "FrameSignpost_ConsoleDebug const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_ConsoleDebug * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_ConsoleDebug_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_ConsoleDebug_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((FrameSignpost_ConsoleDebug const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_ConsoleDebug_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_ConsoleDebug *arg1 = (FrameSignpost_ConsoleDebug *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_ConsoleDebug_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_ConsoleDebug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_ConsoleDebug_GenericPrec" "', argument " "1"" of type '" "FrameSignpost_ConsoleDebug const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_ConsoleDebug * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_ConsoleDebug_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_ConsoleDebug_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_ConsoleDebug_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_ConsoleDebug_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_ConsoleDebug const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_ConsoleDebug_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_ConsoleDebug *arg1 = (FrameSignpost_ConsoleDebug *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_ConsoleDebug_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_ConsoleDebug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_ConsoleDebug_GenericSucc" "', argument " "1"" of type '" "FrameSignpost_ConsoleDebug const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_ConsoleDebug * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_ConsoleDebug_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_ConsoleDebug_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_ConsoleDebug_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_ConsoleDebug_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_ConsoleDebug const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FrameSignpost_ConsoleDebug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_ConsoleDebug *arg1 = (FrameSignpost_ConsoleDebug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FrameSignpost_ConsoleDebug",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_ConsoleDebug, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FrameSignpost_ConsoleDebug" "', argument " "1"" of type '" "FrameSignpost_ConsoleDebug *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_ConsoleDebug * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FrameSignpost_ConsoleDebug_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FrameSignpost_ConsoleDebug, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FrameSignpost_DebugFrame_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_DebugFrame_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)FrameSignpost_DebugFrame::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_DebugFrame_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_DebugFrame_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_DebugFrame_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_DebugFrame_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = FrameSignpost_DebugFrame::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_DebugFrame_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_DebugFrame *arg1 = (FrameSignpost_DebugFrame *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_DebugFrame_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_DebugFrame, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_DebugFrame_GenericName" "', argument " "1"" of type '" "FrameSignpost_DebugFrame const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_DebugFrame * >(argp1);
  result = (char *)((FrameSignpost_DebugFrame const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_DebugFrame_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_DebugFrame *arg1 = (FrameSignpost_DebugFrame *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_DebugFrame_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_DebugFrame, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_DebugFrame_GenericID" "', argument " "1"" of type '" "FrameSignpost_DebugFrame const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_DebugFrame * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_DebugFrame_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_DebugFrame_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((FrameSignpost_DebugFrame const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_DebugFrame_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_DebugFrame *arg1 = (FrameSignpost_DebugFrame *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_DebugFrame_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_DebugFrame, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_DebugFrame_GenericPrec" "', argument " "1"" of type '" "FrameSignpost_DebugFrame const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_DebugFrame * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_DebugFrame_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_DebugFrame_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_DebugFrame_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_DebugFrame_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_DebugFrame const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameSignpost_DebugFrame_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_DebugFrame *arg1 = (FrameSignpost_DebugFrame *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameSignpost_DebugFrame_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_DebugFrame, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameSignpost_DebugFrame_GenericSucc" "', argument " "1"" of type '" "FrameSignpost_DebugFrame const *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_DebugFrame * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameSignpost_DebugFrame_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_DebugFrame_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameSignpost_DebugFrame_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameSignpost_DebugFrame_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameSignpost_DebugFrame const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FrameSignpost_DebugFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameSignpost_DebugFrame *arg1 = (FrameSignpost_DebugFrame *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FrameSignpost_DebugFrame",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameSignpost_DebugFrame, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FrameSignpost_DebugFrame" "', argument " "1"" of type '" "FrameSignpost_DebugFrame *""'"); 
  }
  arg1 = reinterpret_cast< FrameSignpost_DebugFrame * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FrameSignpost_DebugFrame_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FrameSignpost_DebugFrame, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_FrameBegin3DDraw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  csRef< iView > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  FrameBegin3DDraw *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_FrameBegin3DDraw",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FrameBegin3DDraw" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iView_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FrameBegin3DDraw" "', argument " "2"" of type '" "csRef< iView > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FrameBegin3DDraw" "', argument " "2"" of type '" "csRef< iView > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iView > * >(argp2);
  result = (FrameBegin3DDraw *)new FrameBegin3DDraw(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FrameBegin3DDraw, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FrameBegin3DDraw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FrameBegin3DDraw",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FrameBegin3DDraw" "', argument " "1"" of type '" "FrameBegin3DDraw *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_HandleEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_HandleEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_HandleEvent" "', argument " "1"" of type '" "FrameBegin3DDraw *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameBegin3DDraw_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)(arg1)->HandleEvent(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)FrameBegin3DDraw::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = FrameBegin3DDraw::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_GenericName" "', argument " "1"" of type '" "FrameBegin3DDraw const *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  result = (char *)((FrameBegin3DDraw const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_GenericID" "', argument " "1"" of type '" "FrameBegin3DDraw const *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameBegin3DDraw_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((FrameBegin3DDraw const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_InstancePrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_InstancePrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_InstancePrec" "', argument " "1"" of type '" "FrameBegin3DDraw const *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameBegin3DDraw_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameBegin3DDraw_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameBegin3DDraw const *)arg1)->InstancePrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_InstanceSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_InstanceSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_InstanceSucc" "', argument " "1"" of type '" "FrameBegin3DDraw const *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameBegin3DDraw_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameBegin3DDraw_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameBegin3DDraw const *)arg1)->InstanceSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_GenericPrec" "', argument " "1"" of type '" "FrameBegin3DDraw const *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameBegin3DDraw_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameBegin3DDraw_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameBegin3DDraw const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrameBegin3DDraw_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FrameBegin3DDraw *arg1 = (FrameBegin3DDraw *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FrameBegin3DDraw_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FrameBegin3DDraw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrameBegin3DDraw_GenericSucc" "', argument " "1"" of type '" "FrameBegin3DDraw const *""'"); 
  }
  arg1 = reinterpret_cast< FrameBegin3DDraw * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrameBegin3DDraw_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FrameBegin3DDraw_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrameBegin3DDraw_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FrameBegin3DDraw const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FrameBegin3DDraw_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FrameBegin3DDraw, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_FramePrinter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FramePrinter *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_FramePrinter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FramePrinter" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  result = (FramePrinter *)new FramePrinter(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FramePrinter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FramePrinter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FramePrinter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FramePrinter" "', argument " "1"" of type '" "FramePrinter *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_HandleEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_HandleEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_HandleEvent" "', argument " "1"" of type '" "FramePrinter *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FramePrinter_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)(arg1)->HandleEvent(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)FramePrinter::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = FramePrinter::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_GenericName" "', argument " "1"" of type '" "FramePrinter const *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  result = (char *)((FramePrinter const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_GenericID" "', argument " "1"" of type '" "FramePrinter const *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FramePrinter_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((FramePrinter const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_InstancePrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_InstancePrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_InstancePrec" "', argument " "1"" of type '" "FramePrinter const *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FramePrinter_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FramePrinter_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FramePrinter const *)arg1)->InstancePrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_InstanceSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_InstanceSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_InstanceSucc" "', argument " "1"" of type '" "FramePrinter const *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FramePrinter_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FramePrinter_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FramePrinter const *)arg1)->InstanceSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_GenericPrec" "', argument " "1"" of type '" "FramePrinter const *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FramePrinter_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FramePrinter_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FramePrinter const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FramePrinter_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FramePrinter *arg1 = (FramePrinter *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FramePrinter_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FramePrinter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FramePrinter_GenericSucc" "', argument " "1"" of type '" "FramePrinter const *""'"); 
  }
  arg1 = reinterpret_cast< FramePrinter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FramePrinter_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FramePrinter_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FramePrinter_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((FramePrinter const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FramePrinter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FramePrinter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CS_LOAD_PLUGIN_ALWAYS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< iBase > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_LOAD_PLUGIN_ALWAYS",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_LOAD_PLUGIN_ALWAYS" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_LOAD_PLUGIN_ALWAYS" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = CS_LOAD_PLUGIN_ALWAYS(arg1,(char const *)arg2);
  {
    csRef<iBase> ref((csPtr<iBase>&)result); /* explicit cast */
    
    if (!ref.IsValid())
    {
      Py_INCREF(Py_None);
      return Py_None;
    }
    ref->IncRef();
    resultobj = SWIG_NewPointerObj((void *)(iBase *)ref, SWIGTYPE_p_iBase, 1);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_QUERY_REGISTRY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_QUERY_REGISTRY",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_QUERY_REGISTRY" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = CS_QUERY_REGISTRY(arg1,(char const *)arg2,arg3);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_QUERY_REGISTRY_TAG_INTERFACE(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csString className3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_QUERY_REGISTRY_TAG_INTERFACE",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObjectRegistry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_QUERY_REGISTRY_TAG_INTERFACE" "', argument " "1"" of type '" "iObjectRegistry *""'"); 
  }
  arg1 = reinterpret_cast< iObjectRegistry * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_QUERY_REGISTRY_TAG_INTERFACE" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    PyObject *pyname = PyObject_GetAttrString(obj2, "__name__");
    className3 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg3 = (char*)className3.GetData(); // SWIG declares arg3 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj2, "scfGetVersion", NULL);
    arg4 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = CS_QUERY_REGISTRY_TAG_INTERFACE(arg1,(char const *)arg2,(char const *)arg3,arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCF_QUERY_INTERFACE(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCF_QUERY_INTERFACE",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCF_QUERY_INTERFACE" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = SCF_QUERY_INTERFACE(arg1,(char const *)arg2,arg3);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCF_QUERY_INTERFACE_SAFE(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iBase *arg1 = (iBase *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCF_QUERY_INTERFACE_SAFE",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCF_QUERY_INTERFACE_SAFE" "', argument " "1"" of type '" "iBase *""'"); 
  }
  arg1 = reinterpret_cast< iBase * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = SCF_QUERY_INTERFACE_SAFE(arg1,(char const *)arg2,arg3);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_QUERY_PLUGIN_CLASS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csString className3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_QUERY_PLUGIN_CLASS",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_QUERY_PLUGIN_CLASS" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_QUERY_PLUGIN_CLASS" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    PyObject *pyname = PyObject_GetAttrString(obj2, "__name__");
    className3 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg3 = (char*)className3.GetData(); // SWIG declares arg3 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj2, "scfGetVersion", NULL);
    arg4 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = CS_QUERY_PLUGIN_CLASS(arg1,(char const *)arg2,(char const *)arg3,arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_LOAD_PLUGIN(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iPluginManager *arg1 = (iPluginManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csString className3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_LOAD_PLUGIN",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iPluginManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_LOAD_PLUGIN" "', argument " "1"" of type '" "iPluginManager *""'"); 
  }
  arg1 = reinterpret_cast< iPluginManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CS_LOAD_PLUGIN" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    PyObject *pyname = PyObject_GetAttrString(obj2, "__name__");
    className3 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg3 = (char*)className3.GetData(); // SWIG declares arg3 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj2, "scfGetVersion", NULL);
    arg4 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = CS_LOAD_PLUGIN(arg1,(char const *)arg2,(char const *)arg3,arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_GET_CHILD_OBJECT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_GET_CHILD_OBJECT",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_GET_CHILD_OBJECT" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  result = CS_GET_CHILD_OBJECT(arg1,(char const *)arg2,arg3);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_GET_NAMED_CHILD_OBJECT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_GET_NAMED_CHILD_OBJECT",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_GET_NAMED_CHILD_OBJECT" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  res4 = SWIG_AsCharPtrAndSize(obj2, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CS_GET_NAMED_CHILD_OBJECT" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = CS_GET_NAMED_CHILD_OBJECT(arg1,(char const *)arg2,arg3,(char const *)arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CS_GET_FIRST_NAMED_CHILD_OBJECT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iObject *arg1 = (iObject *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csString className2 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csWrapPtr > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CS_GET_FIRST_NAMED_CHILD_OBJECT",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CS_GET_FIRST_NAMED_CHILD_OBJECT" "', argument " "1"" of type '" "iObject *""'"); 
  }
  arg1 = reinterpret_cast< iObject * >(argp1);
  {
    PyObject *pyname = PyObject_GetAttrString(obj1, "__name__");
    className2 = csString(PyString_AsString(pyname));
    Py_XDECREF(pyname);
    arg2 = (char*)className2.GetData(); // SWIG declares arg2 non-const for some reason
    PyObject *pyver = PyObject_CallMethod(obj1, "scfGetVersion", NULL);
    arg3 = PyInt_AsLong(pyver);
    Py_XDECREF(pyver);
  }
  res4 = SWIG_AsCharPtrAndSize(obj2, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CS_GET_FIRST_NAMED_CHILD_OBJECT" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = CS_GET_FIRST_NAMED_CHILD_OBJECT(arg1,(char const *)arg2,arg3,(char const *)arg4);
  {
    resultobj = _csWrapPtr_to_Python(result);
  }
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlugParent_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csPyEventPlug,iEventPlug > *arg1 = (scfImplementation1< csPyEventPlug,iEventPlug > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlugParent_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlugParent_IncRef" "', argument " "1"" of type '" "scfImplementation1< csPyEventPlug,iEventPlug > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csPyEventPlug,iEventPlug > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlugParent_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csPyEventPlug,iEventPlug > *arg1 = (scfImplementation1< csPyEventPlug,iEventPlug > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlugParent_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlugParent_DecRef" "', argument " "1"" of type '" "scfImplementation1< csPyEventPlug,iEventPlug > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csPyEventPlug,iEventPlug > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlugParent_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csPyEventPlug,iEventPlug > *arg1 = (scfImplementation1< csPyEventPlug,iEventPlug > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlugParent_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlugParent_GetRefCount" "', argument " "1"" of type '" "scfImplementation1< csPyEventPlug,iEventPlug > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csPyEventPlug,iEventPlug > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlugParent_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csPyEventPlug,iEventPlug > *arg1 = (scfImplementation1< csPyEventPlug,iEventPlug > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlugParent_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlugParent_QueryInterface" "', argument " "1"" of type '" "scfImplementation1< csPyEventPlug,iEventPlug > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csPyEventPlug,iEventPlug > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPyEventPlugParent_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPyEventPlugParent_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlugParent_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csPyEventPlug,iEventPlug > *arg1 = (scfImplementation1< csPyEventPlug,iEventPlug > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlugParent_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlugParent_AddRefOwner" "', argument " "1"" of type '" "scfImplementation1< csPyEventPlug,iEventPlug > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csPyEventPlug,iEventPlug > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPyEventPlugParent_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlugParent_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csPyEventPlug,iEventPlug > *arg1 = (scfImplementation1< csPyEventPlug,iEventPlug > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlugParent_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlugParent_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementation1< csPyEventPlug,iEventPlug > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csPyEventPlug,iEventPlug > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPyEventPlugParent_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlugParent_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csPyEventPlug,iEventPlug > *arg1 = (scfImplementation1< csPyEventPlug,iEventPlug > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlugParent_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlugParent_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementation1< csPyEventPlug,iEventPlug > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csPyEventPlug,iEventPlug > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPyEventPlugParent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csPyEventPlug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPyEventPlug *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPyEventPlug",0,0)) SWIG_fail;
  result = (csPyEventPlug *)new csPyEventPlug();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPyEventPlug, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPyEventPlug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPyEventPlug *arg1 = (csPyEventPlug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPyEventPlug",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPyEventPlug, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPyEventPlug" "', argument " "1"" of type '" "csPyEventPlug *""'"); 
  }
  arg1 = reinterpret_cast< csPyEventPlug * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlug_GetPotentiallyConflictingEvents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPyEventPlug *arg1 = (csPyEventPlug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlug_GetPotentiallyConflictingEvents",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPyEventPlug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlug_GetPotentiallyConflictingEvents" "', argument " "1"" of type '" "csPyEventPlug *""'"); 
  }
  arg1 = reinterpret_cast< csPyEventPlug * >(argp1);
  result = (unsigned int)(arg1)->GetPotentiallyConflictingEvents();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventPlug_QueryEventPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPyEventPlug *arg1 = (csPyEventPlug *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventPlug_QueryEventPriority",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPyEventPlug, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventPlug_QueryEventPriority" "', argument " "1"" of type '" "csPyEventPlug *""'"); 
  }
  arg1 = reinterpret_cast< csPyEventPlug * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPyEventPlug_QueryEventPriority" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)(arg1)->QueryEventPriority(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPyEventPlug_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPyEventPlug, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csPyEventHandlerParent_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< _csPyEventHandler,iEventHandler > *arg1 = (scfImplementation1< _csPyEventHandler,iEventHandler > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventHandlerParent_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventHandlerParent_IncRef" "', argument " "1"" of type '" "scfImplementation1< _csPyEventHandler,iEventHandler > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< _csPyEventHandler,iEventHandler > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventHandlerParent_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< _csPyEventHandler,iEventHandler > *arg1 = (scfImplementation1< _csPyEventHandler,iEventHandler > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventHandlerParent_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventHandlerParent_DecRef" "', argument " "1"" of type '" "scfImplementation1< _csPyEventHandler,iEventHandler > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< _csPyEventHandler,iEventHandler > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventHandlerParent_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< _csPyEventHandler,iEventHandler > *arg1 = (scfImplementation1< _csPyEventHandler,iEventHandler > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventHandlerParent_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventHandlerParent_GetRefCount" "', argument " "1"" of type '" "scfImplementation1< _csPyEventHandler,iEventHandler > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< _csPyEventHandler,iEventHandler > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventHandlerParent_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< _csPyEventHandler,iEventHandler > *arg1 = (scfImplementation1< _csPyEventHandler,iEventHandler > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventHandlerParent_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventHandlerParent_QueryInterface" "', argument " "1"" of type '" "scfImplementation1< _csPyEventHandler,iEventHandler > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< _csPyEventHandler,iEventHandler > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPyEventHandlerParent_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPyEventHandlerParent_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventHandlerParent_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< _csPyEventHandler,iEventHandler > *arg1 = (scfImplementation1< _csPyEventHandler,iEventHandler > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventHandlerParent_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventHandlerParent_AddRefOwner" "', argument " "1"" of type '" "scfImplementation1< _csPyEventHandler,iEventHandler > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< _csPyEventHandler,iEventHandler > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPyEventHandlerParent_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventHandlerParent_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< _csPyEventHandler,iEventHandler > *arg1 = (scfImplementation1< _csPyEventHandler,iEventHandler > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventHandlerParent_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventHandlerParent_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementation1< _csPyEventHandler,iEventHandler > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< _csPyEventHandler,iEventHandler > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPyEventHandlerParent_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPyEventHandlerParent_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< _csPyEventHandler,iEventHandler > *arg1 = (scfImplementation1< _csPyEventHandler,iEventHandler > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPyEventHandlerParent_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPyEventHandlerParent_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementation1< _csPyEventHandler,iEventHandler > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< _csPyEventHandler,iEventHandler > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPyEventHandlerParent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new__csPyEventHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  _csPyEventHandler *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new__csPyEventHandler",1,1,&obj0)) SWIG_fail;
  arg1 = obj0;
  result = (_csPyEventHandler *)new _csPyEventHandler(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__csPyEventHandler, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete__csPyEventHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete__csPyEventHandler",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete__csPyEventHandler" "', argument " "1"" of type '" "_csPyEventHandler *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_HandleEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  iEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_HandleEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_HandleEvent" "', argument " "1"" of type '" "_csPyEventHandler *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_iEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_csPyEventHandler_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_HandleEvent" "', argument " "2"" of type '" "iEvent &""'"); 
  }
  arg2 = reinterpret_cast< iEvent * >(argp2);
  result = (bool)(arg1)->HandleEvent(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_StaticHandlerName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_StaticHandlerName",0,0)) SWIG_fail;
  result = (char *)_csPyEventHandler::StaticHandlerName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_StaticID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRef< iEventHandlerRegistry > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_StaticID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_StaticID" "', argument " "1"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg1 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp1);
  result = _csPyEventHandler::StaticID(*arg1);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_GenericName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_GenericName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_GenericName" "', argument " "1"" of type '" "_csPyEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  result = (char *)((_csPyEventHandler const *)arg1)->GenericName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_GenericID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csHandlerID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_GenericID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_GenericID" "', argument " "1"" of type '" "_csPyEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_csPyEventHandler_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_GenericID" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  result = ((_csPyEventHandler const *)arg1)->GenericID(*arg2);
  resultobj = SWIG_NewPointerObj((new csHandlerID(static_cast< const csHandlerID& >(result))), SWIGTYPE_p_csHandlerID, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_GenericPrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_GenericPrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_GenericPrec" "', argument " "1"" of type '" "_csPyEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_csPyEventHandler_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_GenericPrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_csPyEventHandler_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_GenericPrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((_csPyEventHandler const *)arg1)->GenericPrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_GenericSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_GenericSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_GenericSucc" "', argument " "1"" of type '" "_csPyEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_csPyEventHandler_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_GenericSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_csPyEventHandler_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_GenericSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((_csPyEventHandler const *)arg1)->GenericSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_InstancePrec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_InstancePrec",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_InstancePrec" "', argument " "1"" of type '" "_csPyEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_csPyEventHandler_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_InstancePrec" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_csPyEventHandler_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_InstancePrec" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((_csPyEventHandler const *)arg1)->InstancePrec(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__csPyEventHandler_InstanceSucc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
  csRef< iEventHandlerRegistry > *arg2 = 0 ;
  csRef< iEventNameRegistry > *arg3 = 0 ;
  SwigValueWrapper< CS::StringID< CS::StringSetTag::General > > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csHandlerID *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_csPyEventHandler_InstanceSucc",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__csPyEventHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_csPyEventHandler_InstanceSucc" "', argument " "1"" of type '" "_csPyEventHandler const *""'"); 
  }
  arg1 = reinterpret_cast< _csPyEventHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRefT_iEventHandlerRegistry_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_csPyEventHandler_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_InstanceSucc" "', argument " "2"" of type '" "csRef< iEventHandlerRegistry > &""'"); 
  }
  arg2 = reinterpret_cast< csRef< iEventHandlerRegistry > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csRefT_iEventNameRegistry_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_csPyEventHandler_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_csPyEventHandler_InstanceSucc" "', argument " "3"" of type '" "csRef< iEventNameRegistry > &""'"); 
  }
  arg3 = reinterpret_cast< csRef< iEventNameRegistry > * >(argp3);
  {
    arg4 = (csEventID)PyLong_AsUnsignedLong(obj3);
  }
  result = (csHandlerID *)((_csPyEventHandler const *)arg1)->InstanceSucc(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csHandlerID, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_csPyEventHandler_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p__csPyEventHandler, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"csWrapPtr_Ref_set", _wrap_csWrapPtr_Ref_set, METH_VARARGS, NULL},
	 { (char *)"csWrapPtr_Ref_get", _wrap_csWrapPtr_Ref_get, METH_VARARGS, NULL},
	 { (char *)"csWrapPtr_Type_get", _wrap_csWrapPtr_Type_get, METH_VARARGS, NULL},
	 { (char *)"csWrapPtr_Version_set", _wrap_csWrapPtr_Version_set, METH_VARARGS, NULL},
	 { (char *)"csWrapPtr_Version_get", _wrap_csWrapPtr_Version_get, METH_VARARGS, NULL},
	 { (char *)"new_csWrapPtr", _wrap_new_csWrapPtr, METH_VARARGS, NULL},
	 { (char *)"delete_csWrapPtr", _wrap_delete_csWrapPtr, METH_VARARGS, NULL},
	 { (char *)"csWrapPtr_swigregister", csWrapPtr_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CustomAllocated", _wrap_new_CustomAllocated, METH_VARARGS, NULL},
	 { (char *)"delete_CustomAllocated", _wrap_delete_CustomAllocated, METH_VARARGS, NULL},
	 { (char *)"CustomAllocated_swigregister", CustomAllocated_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csArrayThresholdVariable", _wrap_new_csArrayThresholdVariable, METH_VARARGS, NULL},
	 { (char *)"csArrayThresholdVariable_GetThreshold", _wrap_csArrayThresholdVariable_GetThreshold, METH_VARARGS, NULL},
	 { (char *)"delete_csArrayThresholdVariable", _wrap_delete_csArrayThresholdVariable, METH_VARARGS, NULL},
	 { (char *)"csArrayThresholdVariable_swigregister", csArrayThresholdVariable_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csArrayThresholdVariableCapacityLinear", _wrap_new_csArrayThresholdVariableCapacityLinear, METH_VARARGS, NULL},
	 { (char *)"csArrayThresholdVariableCapacityLinear_IsCapacityExcessive", _wrap_csArrayThresholdVariableCapacityLinear_IsCapacityExcessive, METH_VARARGS, NULL},
	 { (char *)"csArrayThresholdVariableCapacityLinear_GetCapacity", _wrap_csArrayThresholdVariableCapacityLinear_GetCapacity, METH_VARARGS, NULL},
	 { (char *)"delete_csArrayThresholdVariableCapacityLinear", _wrap_delete_csArrayThresholdVariableCapacityLinear, METH_VARARGS, NULL},
	 { (char *)"csArrayThresholdVariableCapacityLinear_swigregister", csArrayThresholdVariableCapacityLinear_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csArrayCapacityVariableGrow", _wrap_new_csArrayCapacityVariableGrow, METH_VARARGS, NULL},
	 { (char *)"delete_csArrayCapacityVariableGrow", _wrap_delete_csArrayCapacityVariableGrow, METH_VARARGS, NULL},
	 { (char *)"csArrayCapacityVariableGrow_swigregister", csArrayCapacityVariableGrow_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Vector2Array", _wrap_delete_Vector2Array, METH_VARARGS, NULL},
	 { (char *)"new_Vector2Array", _wrap_new_Vector2Array, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_GetSize", _wrap_Vector2Array_GetSize, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Get", _wrap_Vector2Array_Get, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Put", _wrap_Vector2Array_Put, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Push", _wrap_Vector2Array_Push, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Merge", _wrap_Vector2Array_Merge, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_MergeSmart", _wrap_Vector2Array_MergeSmart, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Pop", _wrap_Vector2Array_Pop, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Top", _wrap_Vector2Array_Top, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Insert", _wrap_Vector2Array_Insert, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Contains", _wrap_Vector2Array_Contains, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_DeleteAll", _wrap_Vector2Array_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Truncate", _wrap_Vector2Array_Truncate, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_Empty", _wrap_Vector2Array_Empty, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_IsEmpty", _wrap_Vector2Array_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_SetMinimalCapacity", _wrap_Vector2Array_SetMinimalCapacity, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_DeleteIndex", _wrap_Vector2Array_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_DeleteIndexFast", _wrap_Vector2Array_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_DeleteRange", _wrap_Vector2Array_DeleteRange, METH_VARARGS, NULL},
	 { (char *)"Vector2Array___eq__", _wrap_Vector2Array___eq__, METH_VARARGS, NULL},
	 { (char *)"Vector2Array___ne__", _wrap_Vector2Array___ne__, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_GetAllocator", _wrap_Vector2Array_GetAllocator, METH_VARARGS, NULL},
	 { (char *)"Vector2Array_swigregister", Vector2Array_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Vector2DirtyAccessArray", _wrap_new_Vector2DirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"Vector2DirtyAccessArray_GetArray", _wrap_Vector2DirtyAccessArray_GetArray, METH_VARARGS, NULL},
	 { (char *)"Vector2DirtyAccessArray_GetArrayCopy", _wrap_Vector2DirtyAccessArray_GetArrayCopy, METH_VARARGS, NULL},
	 { (char *)"delete_Vector2DirtyAccessArray", _wrap_delete_Vector2DirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"Vector2DirtyAccessArray_swigregister", Vector2DirtyAccessArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Vector3Array", _wrap_delete_Vector3Array, METH_VARARGS, NULL},
	 { (char *)"new_Vector3Array", _wrap_new_Vector3Array, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_GetSize", _wrap_Vector3Array_GetSize, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Get", _wrap_Vector3Array_Get, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Put", _wrap_Vector3Array_Put, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Push", _wrap_Vector3Array_Push, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Merge", _wrap_Vector3Array_Merge, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_MergeSmart", _wrap_Vector3Array_MergeSmart, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Pop", _wrap_Vector3Array_Pop, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Top", _wrap_Vector3Array_Top, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Insert", _wrap_Vector3Array_Insert, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Contains", _wrap_Vector3Array_Contains, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_DeleteAll", _wrap_Vector3Array_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Truncate", _wrap_Vector3Array_Truncate, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_Empty", _wrap_Vector3Array_Empty, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_IsEmpty", _wrap_Vector3Array_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_SetMinimalCapacity", _wrap_Vector3Array_SetMinimalCapacity, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_DeleteIndex", _wrap_Vector3Array_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_DeleteIndexFast", _wrap_Vector3Array_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_DeleteRange", _wrap_Vector3Array_DeleteRange, METH_VARARGS, NULL},
	 { (char *)"Vector3Array___eq__", _wrap_Vector3Array___eq__, METH_VARARGS, NULL},
	 { (char *)"Vector3Array___ne__", _wrap_Vector3Array___ne__, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_GetAllocator", _wrap_Vector3Array_GetAllocator, METH_VARARGS, NULL},
	 { (char *)"Vector3Array_swigregister", Vector3Array_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Vector3DirtyAccessArray", _wrap_new_Vector3DirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"Vector3DirtyAccessArray_GetArray", _wrap_Vector3DirtyAccessArray_GetArray, METH_VARARGS, NULL},
	 { (char *)"Vector3DirtyAccessArray_GetArrayCopy", _wrap_Vector3DirtyAccessArray_GetArrayCopy, METH_VARARGS, NULL},
	 { (char *)"delete_Vector3DirtyAccessArray", _wrap_delete_Vector3DirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"Vector3DirtyAccessArray_swigregister", Vector3DirtyAccessArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Vector4Array", _wrap_delete_Vector4Array, METH_VARARGS, NULL},
	 { (char *)"new_Vector4Array", _wrap_new_Vector4Array, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_GetSize", _wrap_Vector4Array_GetSize, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Get", _wrap_Vector4Array_Get, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Put", _wrap_Vector4Array_Put, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Push", _wrap_Vector4Array_Push, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Merge", _wrap_Vector4Array_Merge, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_MergeSmart", _wrap_Vector4Array_MergeSmart, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Pop", _wrap_Vector4Array_Pop, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Top", _wrap_Vector4Array_Top, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Insert", _wrap_Vector4Array_Insert, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Contains", _wrap_Vector4Array_Contains, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_DeleteAll", _wrap_Vector4Array_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Truncate", _wrap_Vector4Array_Truncate, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_Empty", _wrap_Vector4Array_Empty, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_IsEmpty", _wrap_Vector4Array_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_SetMinimalCapacity", _wrap_Vector4Array_SetMinimalCapacity, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_DeleteIndex", _wrap_Vector4Array_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_DeleteIndexFast", _wrap_Vector4Array_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_DeleteRange", _wrap_Vector4Array_DeleteRange, METH_VARARGS, NULL},
	 { (char *)"Vector4Array___eq__", _wrap_Vector4Array___eq__, METH_VARARGS, NULL},
	 { (char *)"Vector4Array___ne__", _wrap_Vector4Array___ne__, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_GetAllocator", _wrap_Vector4Array_GetAllocator, METH_VARARGS, NULL},
	 { (char *)"Vector4Array_swigregister", Vector4Array_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Vector4DirtyAccessArray", _wrap_new_Vector4DirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"Vector4DirtyAccessArray_GetArray", _wrap_Vector4DirtyAccessArray_GetArray, METH_VARARGS, NULL},
	 { (char *)"Vector4DirtyAccessArray_GetArrayCopy", _wrap_Vector4DirtyAccessArray_GetArrayCopy, METH_VARARGS, NULL},
	 { (char *)"delete_Vector4DirtyAccessArray", _wrap_delete_Vector4DirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"Vector4DirtyAccessArray_swigregister", Vector4DirtyAccessArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_UIntArray", _wrap_delete_UIntArray, METH_VARARGS, NULL},
	 { (char *)"new_UIntArray", _wrap_new_UIntArray, METH_VARARGS, NULL},
	 { (char *)"UIntArray_GetSize", _wrap_UIntArray_GetSize, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Get", _wrap_UIntArray_Get, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Put", _wrap_UIntArray_Put, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Push", _wrap_UIntArray_Push, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Merge", _wrap_UIntArray_Merge, METH_VARARGS, NULL},
	 { (char *)"UIntArray_MergeSmart", _wrap_UIntArray_MergeSmart, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Pop", _wrap_UIntArray_Pop, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Top", _wrap_UIntArray_Top, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Insert", _wrap_UIntArray_Insert, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Contains", _wrap_UIntArray_Contains, METH_VARARGS, NULL},
	 { (char *)"UIntArray_DeleteAll", _wrap_UIntArray_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Truncate", _wrap_UIntArray_Truncate, METH_VARARGS, NULL},
	 { (char *)"UIntArray_Empty", _wrap_UIntArray_Empty, METH_VARARGS, NULL},
	 { (char *)"UIntArray_IsEmpty", _wrap_UIntArray_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"UIntArray_SetMinimalCapacity", _wrap_UIntArray_SetMinimalCapacity, METH_VARARGS, NULL},
	 { (char *)"UIntArray_DeleteIndex", _wrap_UIntArray_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"UIntArray_DeleteIndexFast", _wrap_UIntArray_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"UIntArray_DeleteRange", _wrap_UIntArray_DeleteRange, METH_VARARGS, NULL},
	 { (char *)"UIntArray___eq__", _wrap_UIntArray___eq__, METH_VARARGS, NULL},
	 { (char *)"UIntArray___ne__", _wrap_UIntArray___ne__, METH_VARARGS, NULL},
	 { (char *)"UIntArray_GetAllocator", _wrap_UIntArray_GetAllocator, METH_VARARGS, NULL},
	 { (char *)"UIntArray_swigregister", UIntArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_UIntDirtyAccessArray", _wrap_new_UIntDirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"UIntDirtyAccessArray_GetArray", _wrap_UIntDirtyAccessArray_GetArray, METH_VARARGS, NULL},
	 { (char *)"UIntDirtyAccessArray_GetArrayCopy", _wrap_UIntDirtyAccessArray_GetArrayCopy, METH_VARARGS, NULL},
	 { (char *)"delete_UIntDirtyAccessArray", _wrap_delete_UIntDirtyAccessArray, METH_VARARGS, NULL},
	 { (char *)"UIntDirtyAccessArray_swigregister", UIntDirtyAccessArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"SetCoreSCFPointer", _wrap_SetCoreSCFPointer, METH_VARARGS, NULL},
	 { (char *)"scfCompatibleVersion", _wrap_scfCompatibleVersion, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadata_interfaceName_get", _wrap_scfInterfaceMetadata_interfaceName_get, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadata_interfaceID_set", _wrap_scfInterfaceMetadata_interfaceID_set, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadata_interfaceID_get", _wrap_scfInterfaceMetadata_interfaceID_get, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadata_interfaceVersion_set", _wrap_scfInterfaceMetadata_interfaceVersion_set, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadata_interfaceVersion_get", _wrap_scfInterfaceMetadata_interfaceVersion_get, METH_VARARGS, NULL},
	 { (char *)"new_scfInterfaceMetadata", _wrap_new_scfInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"delete_scfInterfaceMetadata", _wrap_delete_scfInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadata_swigregister", scfInterfaceMetadata_swigregister, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadataList_metadata_set", _wrap_scfInterfaceMetadataList_metadata_set, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadataList_metadata_get", _wrap_scfInterfaceMetadataList_metadata_get, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadataList_metadataCount_set", _wrap_scfInterfaceMetadataList_metadataCount_set, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadataList_metadataCount_get", _wrap_scfInterfaceMetadataList_metadataCount_get, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadataList___len__", _wrap_scfInterfaceMetadataList___len__, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadataList___getitem__", _wrap_scfInterfaceMetadataList___getitem__, METH_VARARGS, NULL},
	 { (char *)"new_scfInterfaceMetadataList", _wrap_new_scfInterfaceMetadataList, METH_VARARGS, NULL},
	 { (char *)"delete_scfInterfaceMetadataList", _wrap_delete_scfInterfaceMetadataList, METH_VARARGS, NULL},
	 { (char *)"scfInterfaceMetadataList_swigregister", scfInterfaceMetadataList_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBase_IncRef", _wrap_iBase_IncRef, METH_VARARGS, NULL},
	 { (char *)"iBase_DecRef", _wrap_iBase_DecRef, METH_VARARGS, NULL},
	 { (char *)"iBase_GetRefCount", _wrap_iBase_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"iBase_AddRefOwner", _wrap_iBase_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"iBase_RemoveRefOwner", _wrap_iBase_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"iBase_GetInterfaceMetadata", _wrap_iBase_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"iBase_QueryInterface", _wrap_iBase_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"iBase_scfGetVersion", _wrap_iBase_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"iBase_swigregister", iBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSCF_SCF_get", _wrap_iSCF_SCF_get, METH_VARARGS, NULL},
	 { (char *)"iSCF_RegisterClasses", _wrap_iSCF_RegisterClasses, METH_VARARGS, NULL},
	 { (char *)"iSCF_ClassRegistered", _wrap_iSCF_ClassRegistered, METH_VARARGS, NULL},
	 { (char *)"iSCF_CreateInstance", _wrap_iSCF_CreateInstance, METH_VARARGS, NULL},
	 { (char *)"iSCF_GetClassDescription", _wrap_iSCF_GetClassDescription, METH_VARARGS, NULL},
	 { (char *)"iSCF_GetClassDependencies", _wrap_iSCF_GetClassDependencies, METH_VARARGS, NULL},
	 { (char *)"iSCF_GetPluginMetadata", _wrap_iSCF_GetPluginMetadata, METH_VARARGS, NULL},
	 { (char *)"iSCF_UnloadUnusedModules", _wrap_iSCF_UnloadUnusedModules, METH_VARARGS, NULL},
	 { (char *)"iSCF_RegisterClass", _wrap_iSCF_RegisterClass, METH_VARARGS, NULL},
	 { (char *)"iSCF_RegisterFactoryFunc", _wrap_iSCF_RegisterFactoryFunc, METH_VARARGS, NULL},
	 { (char *)"iSCF_UnregisterClass", _wrap_iSCF_UnregisterClass, METH_VARARGS, NULL},
	 { (char *)"iSCF_GetInterfaceName", _wrap_iSCF_GetInterfaceName, METH_VARARGS, NULL},
	 { (char *)"iSCF_GetInterfaceID", _wrap_iSCF_GetInterfaceID, METH_VARARGS, NULL},
	 { (char *)"iSCF_Finish", _wrap_iSCF_Finish, METH_VARARGS, NULL},
	 { (char *)"iSCF_QueryClassList", _wrap_iSCF_QueryClassList, METH_VARARGS, NULL},
	 { (char *)"iSCF_ScanPluginsPath", _wrap_iSCF_ScanPluginsPath, METH_VARARGS, NULL},
	 { (char *)"iSCF_RegisterPlugin", _wrap_iSCF_RegisterPlugin, METH_VARARGS, NULL},
	 { (char *)"iSCF_scfGetVersion", _wrap_iSCF_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSCF", _wrap_delete_iSCF, METH_VARARGS, NULL},
	 { (char *)"iSCF_swigregister", iSCF_swigregister, METH_VARARGS, NULL},
	 { (char *)"iFactory_CreateInstance", _wrap_iFactory_CreateInstance, METH_VARARGS, NULL},
	 { (char *)"iFactory_TryUnload", _wrap_iFactory_TryUnload, METH_VARARGS, NULL},
	 { (char *)"iFactory_QueryDescription", _wrap_iFactory_QueryDescription, METH_VARARGS, NULL},
	 { (char *)"iFactory_QueryDependencies", _wrap_iFactory_QueryDependencies, METH_VARARGS, NULL},
	 { (char *)"iFactory_QueryClassID", _wrap_iFactory_QueryClassID, METH_VARARGS, NULL},
	 { (char *)"iFactory_QueryModuleName", _wrap_iFactory_QueryModuleName, METH_VARARGS, NULL},
	 { (char *)"iFactory_scfGetVersion", _wrap_iFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iFactory", _wrap_delete_iFactory, METH_VARARGS, NULL},
	 { (char *)"iFactory_swigregister", iFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"scfRegisterStaticClass", _wrap_scfRegisterStaticClass, METH_VARARGS, NULL},
	 { (char *)"scfRegisterStaticClasses", _wrap_scfRegisterStaticClasses, METH_VARARGS, NULL},
	 { (char *)"scfRegisterStaticFactoryFunc", _wrap_scfRegisterStaticFactoryFunc, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_IsFinished", _wrap_iThreadReturn_IsFinished, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_WasSuccessful", _wrap_iThreadReturn_WasSuccessful, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_GetResultPtr", _wrap_iThreadReturn_GetResultPtr, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_GetResultRefPtr", _wrap_iThreadReturn_GetResultRefPtr, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_MarkFinished", _wrap_iThreadReturn_MarkFinished, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_MarkSuccessful", _wrap_iThreadReturn_MarkSuccessful, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_SetResult", _wrap_iThreadReturn_SetResult, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_Copy", _wrap_iThreadReturn_Copy, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_Wait", _wrap_iThreadReturn_Wait, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_SetWaitPtrs", _wrap_iThreadReturn_SetWaitPtrs, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_SetJob", _wrap_iThreadReturn_SetJob, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_GetJob", _wrap_iThreadReturn_GetJob, METH_VARARGS, NULL},
	 { (char *)"delete_iThreadReturn", _wrap_delete_iThreadReturn, METH_VARARGS, NULL},
	 { (char *)"iThreadReturn_swigregister", iThreadReturn_swigregister, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_Init", _wrap_iThreadManager_Init, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_Process", _wrap_iThreadManager_Process, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_PushToQueue", _wrap_iThreadManager_PushToQueue, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_Wait", _wrap_iThreadManager_Wait, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_RunNow", _wrap_iThreadManager_RunNow, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_GetThreadCount", _wrap_iThreadManager_GetThreadCount, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_SetAlwaysRunNow", _wrap_iThreadManager_SetAlwaysRunNow, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_GetAlwaysRunNow", _wrap_iThreadManager_GetAlwaysRunNow, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_Exiting", _wrap_iThreadManager_Exiting, METH_VARARGS, NULL},
	 { (char *)"delete_iThreadManager", _wrap_delete_iThreadManager, METH_VARARGS, NULL},
	 { (char *)"iThreadManager_swigregister", iThreadManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDebugHelper_GetSupportedTests", _wrap_iDebugHelper_GetSupportedTests, METH_VARARGS, NULL},
	 { (char *)"iDebugHelper_StateTest", _wrap_iDebugHelper_StateTest, METH_VARARGS, NULL},
	 { (char *)"iDebugHelper_Benchmark", _wrap_iDebugHelper_Benchmark, METH_VARARGS, NULL},
	 { (char *)"iDebugHelper_Dump", _wrap_iDebugHelper_Dump, METH_VARARGS, NULL},
	 { (char *)"iDebugHelper_DebugCommand", _wrap_iDebugHelper_DebugCommand, METH_VARARGS, NULL},
	 { (char *)"iDebugHelper_scfGetVersion", _wrap_iDebugHelper_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDebugHelper", _wrap_delete_iDebugHelper, METH_VARARGS, NULL},
	 { (char *)"iDebugHelper_swigregister", iDebugHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_Initialize", _wrap_iCommandLineParser_Initialize, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_Reset", _wrap_iCommandLineParser_Reset, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_GetName", _wrap_iCommandLineParser_GetName, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_AddOption", _wrap_iCommandLineParser_AddOption, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_AddName", _wrap_iCommandLineParser_AddName, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_ReplaceOption", _wrap_iCommandLineParser_ReplaceOption, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_ReplaceName", _wrap_iCommandLineParser_ReplaceName, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_GetBoolOption", _wrap_iCommandLineParser_GetBoolOption, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_GetResourceDir", _wrap_iCommandLineParser_GetResourceDir, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_GetAppDir", _wrap_iCommandLineParser_GetAppDir, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_GetAppPath", _wrap_iCommandLineParser_GetAppPath, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_GetOptionName", _wrap_iCommandLineParser_GetOptionName, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_GetOption", _wrap_iCommandLineParser_GetOption, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_scfGetVersion", _wrap_iCommandLineParser_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iCommandLineParser", _wrap_delete_iCommandLineParser, METH_VARARGS, NULL},
	 { (char *)"iCommandLineParser_swigregister", iCommandLineParser_swigregister, METH_VARARGS, NULL},
	 { (char *)"csColor_red_set", _wrap_csColor_red_set, METH_VARARGS, NULL},
	 { (char *)"csColor_red_get", _wrap_csColor_red_get, METH_VARARGS, NULL},
	 { (char *)"csColor_green_set", _wrap_csColor_green_set, METH_VARARGS, NULL},
	 { (char *)"csColor_green_get", _wrap_csColor_green_get, METH_VARARGS, NULL},
	 { (char *)"csColor_blue_set", _wrap_csColor_blue_set, METH_VARARGS, NULL},
	 { (char *)"csColor_blue_get", _wrap_csColor_blue_get, METH_VARARGS, NULL},
	 { (char *)"new_csColor", _wrap_new_csColor, METH_VARARGS, NULL},
	 { (char *)"csColor_Set", _wrap_csColor_Set, METH_VARARGS, NULL},
	 { (char *)"csColor_Clamp", _wrap_csColor_Clamp, METH_VARARGS, NULL},
	 { (char *)"csColor_ClampDown", _wrap_csColor_ClampDown, METH_VARARGS, NULL},
	 { (char *)"csColor_IsBlack", _wrap_csColor_IsBlack, METH_VARARGS, NULL},
	 { (char *)"csColor_assign", _wrap_csColor_assign, METH_VARARGS, NULL},
	 { (char *)"csColor___iadd__", _wrap_csColor___iadd__, METH_VARARGS, NULL},
	 { (char *)"csColor___isub__", _wrap_csColor___isub__, METH_VARARGS, NULL},
	 { (char *)"csColor___imul__", _wrap_csColor___imul__, METH_VARARGS, NULL},
	 { (char *)"csColor___mul__", _wrap_csColor___mul__, METH_VARARGS, NULL},
	 { (char *)"csColor___eq__", _wrap_csColor___eq__, METH_VARARGS, NULL},
	 { (char *)"csColor___ne__", _wrap_csColor___ne__, METH_VARARGS, NULL},
	 { (char *)"csColor_Add", _wrap_csColor_Add, METH_VARARGS, NULL},
	 { (char *)"csColor_Subtract", _wrap_csColor_Subtract, METH_VARARGS, NULL},
	 { (char *)"csColor_Luminance", _wrap_csColor_Luminance, METH_VARARGS, NULL},
	 { (char *)"csColor___add__", _wrap_csColor___add__, METH_VARARGS, NULL},
	 { (char *)"csColor___sub__", _wrap_csColor___sub__, METH_VARARGS, NULL},
	 { (char *)"csColor___rmul__", _wrap_csColor___rmul__, METH_VARARGS, NULL},
	 { (char *)"delete_csColor", _wrap_delete_csColor, METH_VARARGS, NULL},
	 { (char *)"csColor_swigregister", csColor_swigregister, METH_VARARGS, NULL},
	 { (char *)"csColor4_alpha_set", _wrap_csColor4_alpha_set, METH_VARARGS, NULL},
	 { (char *)"csColor4_alpha_get", _wrap_csColor4_alpha_get, METH_VARARGS, NULL},
	 { (char *)"new_csColor4", _wrap_new_csColor4, METH_VARARGS, NULL},
	 { (char *)"csColor4_Set", _wrap_csColor4_Set, METH_VARARGS, NULL},
	 { (char *)"csColor4_assign", _wrap_csColor4_assign, METH_VARARGS, NULL},
	 { (char *)"csColor4___imul__", _wrap_csColor4___imul__, METH_VARARGS, NULL},
	 { (char *)"csColor4___iadd__", _wrap_csColor4___iadd__, METH_VARARGS, NULL},
	 { (char *)"csColor4___isub__", _wrap_csColor4___isub__, METH_VARARGS, NULL},
	 { (char *)"csColor4___eq__", _wrap_csColor4___eq__, METH_VARARGS, NULL},
	 { (char *)"csColor4___ne__", _wrap_csColor4___ne__, METH_VARARGS, NULL},
	 { (char *)"delete_csColor4", _wrap_delete_csColor4, METH_VARARGS, NULL},
	 { (char *)"csColor4_swigregister", csColor4_swigregister, METH_VARARGS, NULL},
	 { (char *)"csCommandLineHelper_Help", _wrap_csCommandLineHelper_Help, METH_VARARGS, NULL},
	 { (char *)"csCommandLineHelper_CheckHelp", _wrap_csCommandLineHelper_CheckHelp, METH_VARARGS, NULL},
	 { (char *)"new_csCommandLineHelper", _wrap_new_csCommandLineHelper, METH_VARARGS, NULL},
	 { (char *)"delete_csCommandLineHelper", _wrap_delete_csCommandLineHelper, METH_VARARGS, NULL},
	 { (char *)"csCommandLineHelper_swigregister", csCommandLineHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csFlags", _wrap_new_csFlags, METH_VARARGS, NULL},
	 { (char *)"csFlags_SetAll", _wrap_csFlags_SetAll, METH_VARARGS, NULL},
	 { (char *)"csFlags_Reset", _wrap_csFlags_Reset, METH_VARARGS, NULL},
	 { (char *)"csFlags_Set", _wrap_csFlags_Set, METH_VARARGS, NULL},
	 { (char *)"csFlags_SetBool", _wrap_csFlags_SetBool, METH_VARARGS, NULL},
	 { (char *)"csFlags_Get", _wrap_csFlags_Get, METH_VARARGS, NULL},
	 { (char *)"csFlags_Check", _wrap_csFlags_Check, METH_VARARGS, NULL},
	 { (char *)"csFlags_CheckAll", _wrap_csFlags_CheckAll, METH_VARARGS, NULL},
	 { (char *)"csFlags___eq__", _wrap_csFlags___eq__, METH_VARARGS, NULL},
	 { (char *)"csFlags___ne__", _wrap_csFlags___ne__, METH_VARARGS, NULL},
	 { (char *)"csFlags___and__", _wrap_csFlags___and__, METH_VARARGS, NULL},
	 { (char *)"csFlags___invert__", _wrap_csFlags___invert__, METH_VARARGS, NULL},
	 { (char *)"delete_csFlags", _wrap_delete_csFlags, METH_VARARGS, NULL},
	 { (char *)"csFlags_swigregister", csFlags_swigregister, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_Request", _wrap_iGeneralStringSetBase_Request, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_Contains", _wrap_iGeneralStringSetBase_Contains, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_Delete", _wrap_iGeneralStringSetBase_Delete, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_Empty", _wrap_iGeneralStringSetBase_Empty, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_Clear", _wrap_iGeneralStringSetBase_Clear, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_GetSize", _wrap_iGeneralStringSetBase_GetSize, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_IsEmpty", _wrap_iGeneralStringSetBase_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"delete_iGeneralStringSetBase", _wrap_delete_iGeneralStringSetBase, METH_VARARGS, NULL},
	 { (char *)"iGeneralStringSetBase_swigregister", iGeneralStringSetBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"iStringSet_scfGetVersion", _wrap_iStringSet_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iStringSet", _wrap_delete_iStringSet, METH_VARARGS, NULL},
	 { (char *)"iStringSet_swigregister", iStringSet_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csStringIDSet", _wrap_new_csStringIDSet, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_Add", _wrap_csStringIDSet_Add, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_AddNoTest", _wrap_csStringIDSet_AddNoTest, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_Contains", _wrap_csStringIDSet_Contains, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_In", _wrap_csStringIDSet_In, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_DeleteAll", _wrap_csStringIDSet_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_Empty", _wrap_csStringIDSet_Empty, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_Delete", _wrap_csStringIDSet_Delete, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_GetSize", _wrap_csStringIDSet_GetSize, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_IsEmpty", _wrap_csStringIDSet_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet___len__", _wrap_csStringIDSet___len__, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet___contains__", _wrap_csStringIDSet___contains__, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_append", _wrap_csStringIDSet_append, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet___delitem__", _wrap_csStringIDSet___delitem__, METH_VARARGS, NULL},
	 { (char *)"delete_csStringIDSet", _wrap_delete_csStringIDSet, METH_VARARGS, NULL},
	 { (char *)"csStringIDSet_swigregister", csStringIDSet_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csRefCount", _wrap_new_csRefCount, METH_VARARGS, NULL},
	 { (char *)"csRefCount_IncRef", _wrap_csRefCount_IncRef, METH_VARARGS, NULL},
	 { (char *)"csRefCount_DecRef", _wrap_csRefCount_DecRef, METH_VARARGS, NULL},
	 { (char *)"csRefCount_GetRefCount", _wrap_csRefCount_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"csRefCount_swigregister", csRefCount_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_InternalRefCount", _wrap_new_InternalRefCount, METH_VARARGS, NULL},
	 { (char *)"InternalRefCount_InternalIncRef", _wrap_InternalRefCount_InternalIncRef, METH_VARARGS, NULL},
	 { (char *)"InternalRefCount_InternalDecRef", _wrap_InternalRefCount_InternalDecRef, METH_VARARGS, NULL},
	 { (char *)"InternalRefCount_GetInternalRefCount", _wrap_InternalRefCount_GetInternalRefCount, METH_VARARGS, NULL},
	 { (char *)"InternalRefCount_swigregister", InternalRefCount_swigregister, METH_VARARGS, NULL},
	 { (char *)"csDefaultRunLoop", _wrap_csDefaultRunLoop, METH_VARARGS, NULL},
	 { (char *)"csPlatformStartup", _wrap_csPlatformStartup, METH_VARARGS, NULL},
	 { (char *)"csPlatformShutdown", _wrap_csPlatformShutdown, METH_VARARGS, NULL},
	 { (char *)"csPrintf", _wrap_csPrintf, METH_VARARGS, NULL},
	 { (char *)"csFPrintf", _wrap_csFPrintf, METH_VARARGS, NULL},
	 { (char *)"csPrintfErr", _wrap_csPrintfErr, METH_VARARGS, NULL},
	 { (char *)"csGetTicks", _wrap_csGetTicks, METH_VARARGS, NULL},
	 { (char *)"csGetMicroTicks", _wrap_csGetMicroTicks, METH_VARARGS, NULL},
	 { (char *)"csSleep", _wrap_csSleep, METH_VARARGS, NULL},
	 { (char *)"csGetUsername", _wrap_csGetUsername, METH_VARARGS, NULL},
	 { (char *)"csGetPlatformConfigPath", _wrap_csGetPlatformConfigPath, METH_VARARGS, NULL},
	 { (char *)"new_csPluginRequest", _wrap_new_csPluginRequest, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest_assign", _wrap_csPluginRequest_assign, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest___eq__", _wrap_csPluginRequest___eq__, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest___ne__", _wrap_csPluginRequest___ne__, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest_GetClassName", _wrap_csPluginRequest_GetClassName, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest_GetInterfaceName", _wrap_csPluginRequest_GetInterfaceName, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest_GetInterfaceID", _wrap_csPluginRequest_GetInterfaceID, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest_GetInterfaceVersion", _wrap_csPluginRequest_GetInterfaceVersion, METH_VARARGS, NULL},
	 { (char *)"delete_csPluginRequest", _wrap_delete_csPluginRequest, METH_VARARGS, NULL},
	 { (char *)"csPluginRequest_swigregister", csPluginRequest_swigregister, METH_VARARGS, NULL},
	 { (char *)"csInitializer__CreateEnvironment2", _wrap_csInitializer__CreateEnvironment2, METH_VARARGS, NULL},
	 { (char *)"csInitializer__CreateEnvironment", _wrap_csInitializer__CreateEnvironment, METH_VARARGS, NULL},
	 { (char *)"csInitializer__InitializeSCF", _wrap_csInitializer__InitializeSCF, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateObjectRegistry", _wrap_csInitializer_CreateObjectRegistry, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreatePluginManager", _wrap_csInitializer_CreatePluginManager, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateEventQueue", _wrap_csInitializer_CreateEventQueue, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateThreadManager", _wrap_csInitializer_CreateThreadManager, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateVirtualClock", _wrap_csInitializer_CreateVirtualClock, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateCommandLineParser", _wrap_csInitializer_CreateCommandLineParser, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateVerbosityManager", _wrap_csInitializer_CreateVerbosityManager, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateConfigManager", _wrap_csInitializer_CreateConfigManager, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateInputDrivers", _wrap_csInitializer_CreateInputDrivers, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateStringSet", _wrap_csInitializer_CreateStringSet, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CreateSystemOpenManager", _wrap_csInitializer_CreateSystemOpenManager, METH_VARARGS, NULL},
	 { (char *)"csInitializer_SetupConfigManager", _wrap_csInitializer_SetupConfigManager, METH_VARARGS, NULL},
	 { (char *)"csInitializer_SetupVFS", _wrap_csInitializer_SetupVFS, METH_VARARGS, NULL},
	 { (char *)"csInitializer__RequestPlugins", _wrap_csInitializer__RequestPlugins, METH_VARARGS, NULL},
	 { (char *)"csInitializer_OpenApplication", _wrap_csInitializer_OpenApplication, METH_VARARGS, NULL},
	 { (char *)"csInitializer_CloseApplication", _wrap_csInitializer_CloseApplication, METH_VARARGS, NULL},
	 { (char *)"csInitializer__SetupEventHandler", _wrap_csInitializer__SetupEventHandler, METH_VARARGS, NULL},
	 { (char *)"csInitializer_DestroyApplication", _wrap_csInitializer_DestroyApplication, METH_VARARGS, NULL},
	 { (char *)"csInitializer_GetDefaultAppID", _wrap_csInitializer_GetDefaultAppID, METH_VARARGS, NULL},
	 { (char *)"new_csInitializer", _wrap_new_csInitializer, METH_VARARGS, NULL},
	 { (char *)"delete_csInitializer", _wrap_delete_csInitializer, METH_VARARGS, NULL},
	 { (char *)"csInitializer_swigregister", csInitializer_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csPluginRequestArray", _wrap_delete_csPluginRequestArray, METH_VARARGS, NULL},
	 { (char *)"new_csPluginRequestArray", _wrap_new_csPluginRequestArray, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_GetSize", _wrap_csPluginRequestArray_GetSize, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Get", _wrap_csPluginRequestArray_Get, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Push", _wrap_csPluginRequestArray_Push, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Merge", _wrap_csPluginRequestArray_Merge, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_MergeSmart", _wrap_csPluginRequestArray_MergeSmart, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Pop", _wrap_csPluginRequestArray_Pop, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Top", _wrap_csPluginRequestArray_Top, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Insert", _wrap_csPluginRequestArray_Insert, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Contains", _wrap_csPluginRequestArray_Contains, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Truncate", _wrap_csPluginRequestArray_Truncate, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_Empty", _wrap_csPluginRequestArray_Empty, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_IsEmpty", _wrap_csPluginRequestArray_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_SetMinimalCapacity", _wrap_csPluginRequestArray_SetMinimalCapacity, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_DeleteIndex", _wrap_csPluginRequestArray_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_DeleteIndexFast", _wrap_csPluginRequestArray_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_DeleteRange", _wrap_csPluginRequestArray_DeleteRange, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray___eq__", _wrap_csPluginRequestArray___eq__, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray___ne__", _wrap_csPluginRequestArray___ne__, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_GetAllocator", _wrap_csPluginRequestArray_GetAllocator, METH_VARARGS, NULL},
	 { (char *)"csPluginRequestArray_swigregister", csPluginRequestArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"iReporterListener_Report", _wrap_iReporterListener_Report, METH_VARARGS, NULL},
	 { (char *)"iReporterListener_ReportWait", _wrap_iReporterListener_ReportWait, METH_VARARGS, NULL},
	 { (char *)"iReporterListener_scfGetVersion", _wrap_iReporterListener_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iReporterListener", _wrap_delete_iReporterListener, METH_VARARGS, NULL},
	 { (char *)"iReporterListener_swigregister", iReporterListener_swigregister, METH_VARARGS, NULL},
	 { (char *)"iReporterIterator_HasNext", _wrap_iReporterIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iReporterIterator_Next", _wrap_iReporterIterator_Next, METH_VARARGS, NULL},
	 { (char *)"iReporterIterator_GetMessageSeverity", _wrap_iReporterIterator_GetMessageSeverity, METH_VARARGS, NULL},
	 { (char *)"iReporterIterator_GetMessageId", _wrap_iReporterIterator_GetMessageId, METH_VARARGS, NULL},
	 { (char *)"iReporterIterator_GetMessageDescription", _wrap_iReporterIterator_GetMessageDescription, METH_VARARGS, NULL},
	 { (char *)"iReporterIterator_scfGetVersion", _wrap_iReporterIterator_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iReporterIterator", _wrap_delete_iReporterIterator, METH_VARARGS, NULL},
	 { (char *)"iReporterIterator_swigregister", iReporterIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"iReporter_Report", _wrap_iReporter_Report, METH_VARARGS, NULL},
	 { (char *)"iReporter_Clear", _wrap_iReporter_Clear, METH_VARARGS, NULL},
	 { (char *)"iReporter_GetMessageIterator", _wrap_iReporter_GetMessageIterator, METH_VARARGS, NULL},
	 { (char *)"iReporter_AddReporterListener", _wrap_iReporter_AddReporterListener, METH_VARARGS, NULL},
	 { (char *)"iReporter_RemoveReporterListener", _wrap_iReporter_RemoveReporterListener, METH_VARARGS, NULL},
	 { (char *)"iReporter_FindReporterListener", _wrap_iReporter_FindReporterListener, METH_VARARGS, NULL},
	 { (char *)"iReporter_ReportError", _wrap_iReporter_ReportError, METH_VARARGS, NULL},
	 { (char *)"iReporter_ReportWarning", _wrap_iReporter_ReportWarning, METH_VARARGS, NULL},
	 { (char *)"iReporter_ReportNotify", _wrap_iReporter_ReportNotify, METH_VARARGS, NULL},
	 { (char *)"iReporter_ReportBug", _wrap_iReporter_ReportBug, METH_VARARGS, NULL},
	 { (char *)"iReporter_ReportDebug", _wrap_iReporter_ReportDebug, METH_VARARGS, NULL},
	 { (char *)"iReporter_scfGetVersion", _wrap_iReporter_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iReporter", _wrap_delete_iReporter, METH_VARARGS, NULL},
	 { (char *)"iReporter_swigregister", iReporter_swigregister, METH_VARARGS, NULL},
	 { (char *)"csReporterHelper_Report", _wrap_csReporterHelper_Report, METH_VARARGS, NULL},
	 { (char *)"new_csReporterHelper", _wrap_new_csReporterHelper, METH_VARARGS, NULL},
	 { (char *)"delete_csReporterHelper", _wrap_delete_csReporterHelper, METH_VARARGS, NULL},
	 { (char *)"csReporterHelper_swigregister", csReporterHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"iComponent_Initialize", _wrap_iComponent_Initialize, METH_VARARGS, NULL},
	 { (char *)"iComponent_scfGetVersion", _wrap_iComponent_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iComponent", _wrap_delete_iComponent, METH_VARARGS, NULL},
	 { (char *)"iComponent_swigregister", iComponent_swigregister, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_SetReadOnly", _wrap_iCacheManager_SetReadOnly, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_IsReadOnly", _wrap_iCacheManager_IsReadOnly, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_SetCurrentType", _wrap_iCacheManager_SetCurrentType, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_GetCurrentType", _wrap_iCacheManager_GetCurrentType, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_SetCurrentScope", _wrap_iCacheManager_SetCurrentScope, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_GetCurrentScope", _wrap_iCacheManager_GetCurrentScope, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_CacheData", _wrap_iCacheManager_CacheData, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_ReadCache", _wrap_iCacheManager_ReadCache, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_ClearCache", _wrap_iCacheManager_ClearCache, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_Flush", _wrap_iCacheManager_Flush, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_scfGetVersion", _wrap_iCacheManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iCacheManager", _wrap_delete_iCacheManager, METH_VARARGS, NULL},
	 { (char *)"iCacheManager_swigregister", iCacheManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"csFileTime_sec_set", _wrap_csFileTime_sec_set, METH_VARARGS, NULL},
	 { (char *)"csFileTime_sec_get", _wrap_csFileTime_sec_get, METH_VARARGS, NULL},
	 { (char *)"csFileTime_min_set", _wrap_csFileTime_min_set, METH_VARARGS, NULL},
	 { (char *)"csFileTime_min_get", _wrap_csFileTime_min_get, METH_VARARGS, NULL},
	 { (char *)"csFileTime_hour_set", _wrap_csFileTime_hour_set, METH_VARARGS, NULL},
	 { (char *)"csFileTime_hour_get", _wrap_csFileTime_hour_get, METH_VARARGS, NULL},
	 { (char *)"csFileTime_day_set", _wrap_csFileTime_day_set, METH_VARARGS, NULL},
	 { (char *)"csFileTime_day_get", _wrap_csFileTime_day_get, METH_VARARGS, NULL},
	 { (char *)"csFileTime_mon_set", _wrap_csFileTime_mon_set, METH_VARARGS, NULL},
	 { (char *)"csFileTime_mon_get", _wrap_csFileTime_mon_get, METH_VARARGS, NULL},
	 { (char *)"csFileTime_year_set", _wrap_csFileTime_year_set, METH_VARARGS, NULL},
	 { (char *)"csFileTime_year_get", _wrap_csFileTime_year_get, METH_VARARGS, NULL},
	 { (char *)"new_csFileTime", _wrap_new_csFileTime, METH_VARARGS, NULL},
	 { (char *)"delete_csFileTime", _wrap_delete_csFileTime, METH_VARARGS, NULL},
	 { (char *)"csFileTime_swigregister", csFileTime_swigregister, METH_VARARGS, NULL},
	 { (char *)"iFile_GetName", _wrap_iFile_GetName, METH_VARARGS, NULL},
	 { (char *)"iFile_GetSize", _wrap_iFile_GetSize, METH_VARARGS, NULL},
	 { (char *)"iFile_GetStatus", _wrap_iFile_GetStatus, METH_VARARGS, NULL},
	 { (char *)"iFile_Read", _wrap_iFile_Read, METH_VARARGS, NULL},
	 { (char *)"iFile_Write", _wrap_iFile_Write, METH_VARARGS, NULL},
	 { (char *)"iFile_Flush", _wrap_iFile_Flush, METH_VARARGS, NULL},
	 { (char *)"iFile_AtEOF", _wrap_iFile_AtEOF, METH_VARARGS, NULL},
	 { (char *)"iFile_GetPos", _wrap_iFile_GetPos, METH_VARARGS, NULL},
	 { (char *)"iFile_SetPos", _wrap_iFile_SetPos, METH_VARARGS, NULL},
	 { (char *)"iFile_GetAllData", _wrap_iFile_GetAllData, METH_VARARGS, NULL},
	 { (char *)"iFile_scfGetVersion", _wrap_iFile_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iFile", _wrap_delete_iFile, METH_VARARGS, NULL},
	 { (char *)"iFile_swigregister", iFile_swigregister, METH_VARARGS, NULL},
	 { (char *)"iVFS_ChDir", _wrap_iVFS_ChDir, METH_VARARGS, NULL},
	 { (char *)"iVFS_GetCwd", _wrap_iVFS_GetCwd, METH_VARARGS, NULL},
	 { (char *)"iVFS_PushDir", _wrap_iVFS_PushDir, METH_VARARGS, NULL},
	 { (char *)"iVFS_PopDir", _wrap_iVFS_PopDir, METH_VARARGS, NULL},
	 { (char *)"iVFS_ExpandPath", _wrap_iVFS_ExpandPath, METH_VARARGS, NULL},
	 { (char *)"iVFS_Exists", _wrap_iVFS_Exists, METH_VARARGS, NULL},
	 { (char *)"iVFS_FindFiles", _wrap_iVFS_FindFiles, METH_VARARGS, NULL},
	 { (char *)"iVFS_Open", _wrap_iVFS_Open, METH_VARARGS, NULL},
	 { (char *)"iVFS_ReadFile", _wrap_iVFS_ReadFile, METH_VARARGS, NULL},
	 { (char *)"iVFS_WriteFile", _wrap_iVFS_WriteFile, METH_VARARGS, NULL},
	 { (char *)"iVFS_DeleteFile", _wrap_iVFS_DeleteFile, METH_VARARGS, NULL},
	 { (char *)"iVFS_Sync", _wrap_iVFS_Sync, METH_VARARGS, NULL},
	 { (char *)"iVFS_SymbolicLink", _wrap_iVFS_SymbolicLink, METH_VARARGS, NULL},
	 { (char *)"iVFS_Mount", _wrap_iVFS_Mount, METH_VARARGS, NULL},
	 { (char *)"iVFS_Unmount", _wrap_iVFS_Unmount, METH_VARARGS, NULL},
	 { (char *)"iVFS_MountRoot", _wrap_iVFS_MountRoot, METH_VARARGS, NULL},
	 { (char *)"iVFS_SaveMounts", _wrap_iVFS_SaveMounts, METH_VARARGS, NULL},
	 { (char *)"iVFS_LoadMountsFromFile", _wrap_iVFS_LoadMountsFromFile, METH_VARARGS, NULL},
	 { (char *)"iVFS_ChDirAuto", _wrap_iVFS_ChDirAuto, METH_VARARGS, NULL},
	 { (char *)"iVFS_GetFileTime", _wrap_iVFS_GetFileTime, METH_VARARGS, NULL},
	 { (char *)"iVFS_SetFileTime", _wrap_iVFS_SetFileTime, METH_VARARGS, NULL},
	 { (char *)"iVFS_GetFileSize", _wrap_iVFS_GetFileSize, METH_VARARGS, NULL},
	 { (char *)"iVFS_GetRealPath", _wrap_iVFS_GetRealPath, METH_VARARGS, NULL},
	 { (char *)"iVFS_GetMounts", _wrap_iVFS_GetMounts, METH_VARARGS, NULL},
	 { (char *)"iVFS_GetRealMountPaths", _wrap_iVFS_GetRealMountPaths, METH_VARARGS, NULL},
	 { (char *)"iVFS_scfGetVersion", _wrap_iVFS_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iVFS", _wrap_delete_iVFS, METH_VARARGS, NULL},
	 { (char *)"iVFS_swigregister", iVFS_swigregister, METH_VARARGS, NULL},
	 { (char *)"iObjectNameChangeListener_NameChanged", _wrap_iObjectNameChangeListener_NameChanged, METH_VARARGS, NULL},
	 { (char *)"delete_iObjectNameChangeListener", _wrap_delete_iObjectNameChangeListener, METH_VARARGS, NULL},
	 { (char *)"iObjectNameChangeListener_swigregister", iObjectNameChangeListener_swigregister, METH_VARARGS, NULL},
	 { (char *)"iObject_SetName", _wrap_iObject_SetName, METH_VARARGS, NULL},
	 { (char *)"iObject_GetName", _wrap_iObject_GetName, METH_VARARGS, NULL},
	 { (char *)"iObject_GetID", _wrap_iObject_GetID, METH_VARARGS, NULL},
	 { (char *)"iObject_SetObjectParent", _wrap_iObject_SetObjectParent, METH_VARARGS, NULL},
	 { (char *)"iObject_GetObjectParent", _wrap_iObject_GetObjectParent, METH_VARARGS, NULL},
	 { (char *)"iObject_ObjAdd", _wrap_iObject_ObjAdd, METH_VARARGS, NULL},
	 { (char *)"iObject_ObjRemove", _wrap_iObject_ObjRemove, METH_VARARGS, NULL},
	 { (char *)"iObject_ObjRemoveAll", _wrap_iObject_ObjRemoveAll, METH_VARARGS, NULL},
	 { (char *)"iObject_ObjAddChildren", _wrap_iObject_ObjAddChildren, METH_VARARGS, NULL},
	 { (char *)"iObject_GetChildByName", _wrap_iObject_GetChildByName, METH_VARARGS, NULL},
	 { (char *)"iObject_GetIterator", _wrap_iObject_GetIterator, METH_VARARGS, NULL},
	 { (char *)"iObject_ObjReleaseOld", _wrap_iObject_ObjReleaseOld, METH_VARARGS, NULL},
	 { (char *)"iObject_AddNameChangeListener", _wrap_iObject_AddNameChangeListener, METH_VARARGS, NULL},
	 { (char *)"iObject_RemoveNameChangeListener", _wrap_iObject_RemoveNameChangeListener, METH_VARARGS, NULL},
	 { (char *)"iObject_GetChild", _wrap_iObject_GetChild, METH_VARARGS, NULL},
	 { (char *)"iObject_scfGetVersion", _wrap_iObject_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iObject", _wrap_delete_iObject, METH_VARARGS, NULL},
	 { (char *)"iObject_swigregister", iObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"iObjectIterator_Next", _wrap_iObjectIterator_Next, METH_VARARGS, NULL},
	 { (char *)"iObjectIterator_Reset", _wrap_iObjectIterator_Reset, METH_VARARGS, NULL},
	 { (char *)"iObjectIterator_GetParentObj", _wrap_iObjectIterator_GetParentObj, METH_VARARGS, NULL},
	 { (char *)"iObjectIterator_HasNext", _wrap_iObjectIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iObjectIterator_FindName", _wrap_iObjectIterator_FindName, METH_VARARGS, NULL},
	 { (char *)"iObjectIterator_scfGetVersion", _wrap_iObjectIterator_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iObjectIterator", _wrap_delete_iObjectIterator, METH_VARARGS, NULL},
	 { (char *)"iObjectIterator_swigregister", iObjectIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistry_Clear", _wrap_iObjectRegistry_Clear, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistry_Register", _wrap_iObjectRegistry_Register, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistry_Unregister", _wrap_iObjectRegistry_Unregister, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistry_Get", _wrap_iObjectRegistry_Get, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistry_scfGetVersion", _wrap_iObjectRegistry_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iObjectRegistry", _wrap_delete_iObjectRegistry, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistry_swigregister", iObjectRegistry_swigregister, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistryIterator_Reset", _wrap_iObjectRegistryIterator_Reset, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistryIterator_GetCurrentTag", _wrap_iObjectRegistryIterator_GetCurrentTag, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistryIterator_HasNext", _wrap_iObjectRegistryIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistryIterator_Next", _wrap_iObjectRegistryIterator_Next, METH_VARARGS, NULL},
	 { (char *)"delete_iObjectRegistryIterator", _wrap_delete_iObjectRegistryIterator, METH_VARARGS, NULL},
	 { (char *)"iObjectRegistryIterator_swigregister", iObjectRegistryIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"csQueryRegistryTag", _wrap_csQueryRegistryTag, METH_VARARGS, NULL},
	 { (char *)"iVirtualClock_Advance", _wrap_iVirtualClock_Advance, METH_VARARGS, NULL},
	 { (char *)"iVirtualClock_Suspend", _wrap_iVirtualClock_Suspend, METH_VARARGS, NULL},
	 { (char *)"iVirtualClock_Resume", _wrap_iVirtualClock_Resume, METH_VARARGS, NULL},
	 { (char *)"iVirtualClock_GetElapsedTicks", _wrap_iVirtualClock_GetElapsedTicks, METH_VARARGS, NULL},
	 { (char *)"iVirtualClock_GetCurrentTicks", _wrap_iVirtualClock_GetCurrentTicks, METH_VARARGS, NULL},
	 { (char *)"iVirtualClock_scfGetVersion", _wrap_iVirtualClock_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iVirtualClock", _wrap_delete_iVirtualClock, METH_VARARGS, NULL},
	 { (char *)"iVirtualClock_swigregister", iVirtualClock_swigregister, METH_VARARGS, NULL},
	 { (char *)"iEventAttributeIterator_HasNext", _wrap_iEventAttributeIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iEventAttributeIterator_Next", _wrap_iEventAttributeIterator_Next, METH_VARARGS, NULL},
	 { (char *)"iEventAttributeIterator_Reset", _wrap_iEventAttributeIterator_Reset, METH_VARARGS, NULL},
	 { (char *)"iEventAttributeIterator_scfGetVersion", _wrap_iEventAttributeIterator_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iEventAttributeIterator", _wrap_delete_iEventAttributeIterator, METH_VARARGS, NULL},
	 { (char *)"iEventAttributeIterator_swigregister", iEventAttributeIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_eventType_set", _wrap_csKeyEventData_eventType_set, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_eventType_get", _wrap_csKeyEventData_eventType_get, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_codeRaw_set", _wrap_csKeyEventData_codeRaw_set, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_codeRaw_get", _wrap_csKeyEventData_codeRaw_get, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_codeCooked_set", _wrap_csKeyEventData_codeCooked_set, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_codeCooked_get", _wrap_csKeyEventData_codeCooked_get, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_modifiers_set", _wrap_csKeyEventData_modifiers_set, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_modifiers_get", _wrap_csKeyEventData_modifiers_get, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_autoRepeat_set", _wrap_csKeyEventData_autoRepeat_set, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_autoRepeat_get", _wrap_csKeyEventData_autoRepeat_get, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_charType_set", _wrap_csKeyEventData_charType_set, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_charType_get", _wrap_csKeyEventData_charType_get, METH_VARARGS, NULL},
	 { (char *)"new_csKeyEventData", _wrap_new_csKeyEventData, METH_VARARGS, NULL},
	 { (char *)"delete_csKeyEventData", _wrap_delete_csKeyEventData, METH_VARARGS, NULL},
	 { (char *)"csKeyEventData_swigregister", csKeyEventData_swigregister, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_x_set", _wrap_csMouseEventData_x_set, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_x_get", _wrap_csMouseEventData_x_get, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_y_set", _wrap_csMouseEventData_y_set, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_y_get", _wrap_csMouseEventData_y_get, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_axes_set", _wrap_csMouseEventData_axes_set, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_axes_get", _wrap_csMouseEventData_axes_get, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_numAxes_set", _wrap_csMouseEventData_numAxes_set, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_numAxes_get", _wrap_csMouseEventData_numAxes_get, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_Button_set", _wrap_csMouseEventData_Button_set, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_Button_get", _wrap_csMouseEventData_Button_get, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_Modifiers_set", _wrap_csMouseEventData_Modifiers_set, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_Modifiers_get", _wrap_csMouseEventData_Modifiers_get, METH_VARARGS, NULL},
	 { (char *)"new_csMouseEventData", _wrap_new_csMouseEventData, METH_VARARGS, NULL},
	 { (char *)"delete_csMouseEventData", _wrap_delete_csMouseEventData, METH_VARARGS, NULL},
	 { (char *)"csMouseEventData_swigregister", csMouseEventData_swigregister, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_number_set", _wrap_csJoystickEventData_number_set, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_number_get", _wrap_csJoystickEventData_number_get, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_axes_set", _wrap_csJoystickEventData_axes_set, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_axes_get", _wrap_csJoystickEventData_axes_get, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_numAxes_set", _wrap_csJoystickEventData_numAxes_set, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_numAxes_get", _wrap_csJoystickEventData_numAxes_get, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_axesChanged_set", _wrap_csJoystickEventData_axesChanged_set, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_axesChanged_get", _wrap_csJoystickEventData_axesChanged_get, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_Button_set", _wrap_csJoystickEventData_Button_set, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_Button_get", _wrap_csJoystickEventData_Button_get, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_Modifiers_set", _wrap_csJoystickEventData_Modifiers_set, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_Modifiers_get", _wrap_csJoystickEventData_Modifiers_get, METH_VARARGS, NULL},
	 { (char *)"new_csJoystickEventData", _wrap_new_csJoystickEventData, METH_VARARGS, NULL},
	 { (char *)"delete_csJoystickEventData", _wrap_delete_csJoystickEventData, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventData_swigregister", csJoystickEventData_swigregister, METH_VARARGS, NULL},
	 { (char *)"csCommandEventData_Code_set", _wrap_csCommandEventData_Code_set, METH_VARARGS, NULL},
	 { (char *)"csCommandEventData_Code_get", _wrap_csCommandEventData_Code_get, METH_VARARGS, NULL},
	 { (char *)"csCommandEventData_Info_set", _wrap_csCommandEventData_Info_set, METH_VARARGS, NULL},
	 { (char *)"csCommandEventData_Info_get", _wrap_csCommandEventData_Info_get, METH_VARARGS, NULL},
	 { (char *)"new_csCommandEventData", _wrap_new_csCommandEventData, METH_VARARGS, NULL},
	 { (char *)"delete_csCommandEventData", _wrap_delete_csCommandEventData, METH_VARARGS, NULL},
	 { (char *)"csCommandEventData_swigregister", csCommandEventData_swigregister, METH_VARARGS, NULL},
	 { (char *)"iEvent_GetName", _wrap_iEvent_GetName, METH_VARARGS, NULL},
	 { (char *)"iEvent_Time_set", _wrap_iEvent_Time_set, METH_VARARGS, NULL},
	 { (char *)"iEvent_Time_get", _wrap_iEvent_Time_get, METH_VARARGS, NULL},
	 { (char *)"iEvent_Broadcast_set", _wrap_iEvent_Broadcast_set, METH_VARARGS, NULL},
	 { (char *)"iEvent_Broadcast_get", _wrap_iEvent_Broadcast_get, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddInt8", _wrap_iEvent_AddInt8, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddUInt8", _wrap_iEvent_AddUInt8, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddInt16", _wrap_iEvent_AddInt16, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddUInt16", _wrap_iEvent_AddUInt16, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddInt32", _wrap_iEvent_AddInt32, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddUInt32", _wrap_iEvent_AddUInt32, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddFloat", _wrap_iEvent_AddFloat, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddDouble", _wrap_iEvent_AddDouble, METH_VARARGS, NULL},
	 { (char *)"iEvent_AddBool", _wrap_iEvent_AddBool, METH_VARARGS, NULL},
	 { (char *)"iEvent_Add", _wrap_iEvent_Add, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveInt8", _wrap_iEvent_RetrieveInt8, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveUInt8", _wrap_iEvent_RetrieveUInt8, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveInt16", _wrap_iEvent_RetrieveInt16, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveUInt16", _wrap_iEvent_RetrieveUInt16, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveInt32", _wrap_iEvent_RetrieveInt32, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveUInt32", _wrap_iEvent_RetrieveUInt32, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveFloat", _wrap_iEvent_RetrieveFloat, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveDouble", _wrap_iEvent_RetrieveDouble, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveBool", _wrap_iEvent_RetrieveBool, METH_VARARGS, NULL},
	 { (char *)"iEvent_Retrieve", _wrap_iEvent_Retrieve, METH_VARARGS, NULL},
	 { (char *)"iEvent_AttributeExists", _wrap_iEvent_AttributeExists, METH_VARARGS, NULL},
	 { (char *)"iEvent_GetAttributeType", _wrap_iEvent_GetAttributeType, METH_VARARGS, NULL},
	 { (char *)"iEvent_Remove", _wrap_iEvent_Remove, METH_VARARGS, NULL},
	 { (char *)"iEvent_RemoveAll", _wrap_iEvent_RemoveAll, METH_VARARGS, NULL},
	 { (char *)"iEvent_GetAttributeIterator", _wrap_iEvent_GetAttributeIterator, METH_VARARGS, NULL},
	 { (char *)"iEvent_RetrieveString", _wrap_iEvent_RetrieveString, METH_VARARGS, NULL},
	 { (char *)"iEvent_Mouse_get", _wrap_iEvent_Mouse_get, METH_VARARGS, NULL},
	 { (char *)"iEvent_Joystick_get", _wrap_iEvent_Joystick_get, METH_VARARGS, NULL},
	 { (char *)"iEvent_Command_get", _wrap_iEvent_Command_get, METH_VARARGS, NULL},
	 { (char *)"iEvent_scfGetVersion", _wrap_iEvent_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iEvent", _wrap_delete_iEvent, METH_VARARGS, NULL},
	 { (char *)"iEvent_swigregister", iEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"iEventPlug_GetPotentiallyConflictingEvents", _wrap_iEventPlug_GetPotentiallyConflictingEvents, METH_VARARGS, NULL},
	 { (char *)"iEventPlug_QueryEventPriority", _wrap_iEventPlug_QueryEventPriority, METH_VARARGS, NULL},
	 { (char *)"iEventPlug_EnableEvents", _wrap_iEventPlug_EnableEvents, METH_VARARGS, NULL},
	 { (char *)"iEventPlug_scfGetVersion", _wrap_iEventPlug_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iEventPlug", _wrap_delete_iEventPlug, METH_VARARGS, NULL},
	 { (char *)"iEventPlug_swigregister", iEventPlug_swigregister, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_CreateEvent", _wrap_iEventOutlet_CreateEvent, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_Post", _wrap_iEventOutlet_Post, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_Key", _wrap_iEventOutlet_Key, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_Mouse", _wrap_iEventOutlet_Mouse, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_Joystick", _wrap_iEventOutlet_Joystick, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_Broadcast", _wrap_iEventOutlet_Broadcast, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_ImmediateBroadcast", _wrap_iEventOutlet_ImmediateBroadcast, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_scfGetVersion", _wrap_iEventOutlet_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iEventOutlet", _wrap_delete_iEventOutlet, METH_VARARGS, NULL},
	 { (char *)"iEventOutlet_swigregister", iEventOutlet_swigregister, METH_VARARGS, NULL},
	 { (char *)"iEventCord_Insert", _wrap_iEventCord_Insert, METH_VARARGS, NULL},
	 { (char *)"iEventCord_Remove", _wrap_iEventCord_Remove, METH_VARARGS, NULL},
	 { (char *)"iEventCord_GetPass", _wrap_iEventCord_GetPass, METH_VARARGS, NULL},
	 { (char *)"iEventCord_SetPass", _wrap_iEventCord_SetPass, METH_VARARGS, NULL},
	 { (char *)"iEventCord_GetName", _wrap_iEventCord_GetName, METH_VARARGS, NULL},
	 { (char *)"delete_iEventCord", _wrap_delete_iEventCord, METH_VARARGS, NULL},
	 { (char *)"iEventCord_swigregister", iEventCord_swigregister, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetRawCode", _wrap_csKeyEventHelper_GetRawCode, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetCookedCode", _wrap_csKeyEventHelper_GetCookedCode, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetEventType", _wrap_csKeyEventHelper_GetEventType, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetAutoRepeat", _wrap_csKeyEventHelper_GetAutoRepeat, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetCharacterType", _wrap_csKeyEventHelper_GetCharacterType, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetEventData", _wrap_csKeyEventHelper_GetEventData, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetModifiersBits", _wrap_csKeyEventHelper_GetModifiersBits, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_GetModifiers", _wrap_csKeyEventHelper_GetModifiers, METH_VARARGS, NULL},
	 { (char *)"new_csKeyEventHelper", _wrap_new_csKeyEventHelper, METH_VARARGS, NULL},
	 { (char *)"delete_csKeyEventHelper", _wrap_delete_csKeyEventHelper, METH_VARARGS, NULL},
	 { (char *)"csKeyEventHelper_swigregister", csKeyEventHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_NewEvent", _wrap_csMouseEventHelper_NewEvent, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetEventType", _wrap_csMouseEventHelper_GetEventType, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetNumber", _wrap_csMouseEventHelper_GetNumber, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetX", _wrap_csMouseEventHelper_GetX, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetY", _wrap_csMouseEventHelper_GetY, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetAxis", _wrap_csMouseEventHelper_GetAxis, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetNumAxes", _wrap_csMouseEventHelper_GetNumAxes, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetButton", _wrap_csMouseEventHelper_GetButton, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetButtonState", _wrap_csMouseEventHelper_GetButtonState, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetButtonMask", _wrap_csMouseEventHelper_GetButtonMask, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetModifiers", _wrap_csMouseEventHelper_GetModifiers, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_GetEventData", _wrap_csMouseEventHelper_GetEventData, METH_VARARGS, NULL},
	 { (char *)"new_csMouseEventHelper", _wrap_new_csMouseEventHelper, METH_VARARGS, NULL},
	 { (char *)"delete_csMouseEventHelper", _wrap_delete_csMouseEventHelper, METH_VARARGS, NULL},
	 { (char *)"csMouseEventHelper_swigregister", csMouseEventHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_NewEvent", _wrap_csJoystickEventHelper_NewEvent, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetNumber", _wrap_csJoystickEventHelper_GetNumber, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetAxis", _wrap_csJoystickEventHelper_GetAxis, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetNumAxes", _wrap_csJoystickEventHelper_GetNumAxes, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetButton", _wrap_csJoystickEventHelper_GetButton, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetButtonState", _wrap_csJoystickEventHelper_GetButtonState, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetButtonMask", _wrap_csJoystickEventHelper_GetButtonMask, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetModifiers", _wrap_csJoystickEventHelper_GetModifiers, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_GetEventData", _wrap_csJoystickEventHelper_GetEventData, METH_VARARGS, NULL},
	 { (char *)"new_csJoystickEventHelper", _wrap_new_csJoystickEventHelper, METH_VARARGS, NULL},
	 { (char *)"delete_csJoystickEventHelper", _wrap_delete_csJoystickEventHelper, METH_VARARGS, NULL},
	 { (char *)"csJoystickEventHelper_swigregister", csJoystickEventHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"csInputEventHelper_GetButton", _wrap_csInputEventHelper_GetButton, METH_VARARGS, NULL},
	 { (char *)"csInputEventHelper_GetButtonState", _wrap_csInputEventHelper_GetButtonState, METH_VARARGS, NULL},
	 { (char *)"new_csInputEventHelper", _wrap_new_csInputEventHelper, METH_VARARGS, NULL},
	 { (char *)"delete_csInputEventHelper", _wrap_delete_csInputEventHelper, METH_VARARGS, NULL},
	 { (char *)"csInputEventHelper_swigregister", csInputEventHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"csCommandEventHelper_NewEvent", _wrap_csCommandEventHelper_NewEvent, METH_VARARGS, NULL},
	 { (char *)"csCommandEventHelper_GetCode", _wrap_csCommandEventHelper_GetCode, METH_VARARGS, NULL},
	 { (char *)"csCommandEventHelper_GetInfo", _wrap_csCommandEventHelper_GetInfo, METH_VARARGS, NULL},
	 { (char *)"csCommandEventHelper_GetEventData", _wrap_csCommandEventHelper_GetEventData, METH_VARARGS, NULL},
	 { (char *)"new_csCommandEventHelper", _wrap_new_csCommandEventHelper, METH_VARARGS, NULL},
	 { (char *)"delete_csCommandEventHelper", _wrap_delete_csCommandEventHelper, METH_VARARGS, NULL},
	 { (char *)"csCommandEventHelper_swigregister", csCommandEventHelper_swigregister, METH_VARARGS, NULL},
	 { (char *)"RegisterWeakListener", _wrap_RegisterWeakListener, METH_VARARGS, NULL},
	 { (char *)"RemoveWeakListener", _wrap_RemoveWeakListener, METH_VARARGS, NULL},
	 { (char *)"csKeyModifiers_modifiers_set", _wrap_csKeyModifiers_modifiers_set, METH_VARARGS, NULL},
	 { (char *)"csKeyModifiers_modifiers_get", _wrap_csKeyModifiers_modifiers_get, METH_VARARGS, NULL},
	 { (char *)"csKeyModifiers___getitem__", _wrap_csKeyModifiers___getitem__, METH_VARARGS, NULL},
	 { (char *)"new_csKeyModifiers", _wrap_new_csKeyModifiers, METH_VARARGS, NULL},
	 { (char *)"delete_csKeyModifiers", _wrap_delete_csKeyModifiers, METH_VARARGS, NULL},
	 { (char *)"csKeyModifiers_swigregister", csKeyModifiers_swigregister, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_Process", _wrap_iEventQueue_Process, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_Dispatch", _wrap_iEventQueue_Dispatch, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_Subscribe", _wrap_iEventQueue_Subscribe, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_Unsubscribe", _wrap_iEventQueue_Unsubscribe, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_RegisterListener", _wrap_iEventQueue_RegisterListener, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_RemoveListener", _wrap_iEventQueue_RemoveListener, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_CreateEventOutlet", _wrap_iEventQueue_CreateEventOutlet, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_GetEventOutlet", _wrap_iEventQueue_GetEventOutlet, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_GetEventCord", _wrap_iEventQueue_GetEventCord, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_CreateEvent", _wrap_iEventQueue_CreateEvent, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_CreateBroadcastEvent", _wrap_iEventQueue_CreateBroadcastEvent, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_Post", _wrap_iEventQueue_Post, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_Get", _wrap_iEventQueue_Get, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_Clear", _wrap_iEventQueue_Clear, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_IsEmpty", _wrap_iEventQueue_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_RemoveAllListeners", _wrap_iEventQueue_RemoveAllListeners, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_scfGetVersion", _wrap_iEventQueue_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iEventQueue", _wrap_delete_iEventQueue, METH_VARARGS, NULL},
	 { (char *)"iEventQueue_swigregister", iEventQueue_swigregister, METH_VARARGS, NULL},
	 { (char *)"iEventNameRegistry_GetID", _wrap_iEventNameRegistry_GetID, METH_VARARGS, NULL},
	 { (char *)"iEventNameRegistry_GetString", _wrap_iEventNameRegistry_GetString, METH_VARARGS, NULL},
	 { (char *)"iEventNameRegistry_GetParentID", _wrap_iEventNameRegistry_GetParentID, METH_VARARGS, NULL},
	 { (char *)"iEventNameRegistry_IsImmediateChildOf", _wrap_iEventNameRegistry_IsImmediateChildOf, METH_VARARGS, NULL},
	 { (char *)"iEventNameRegistry_IsKindOf", _wrap_iEventNameRegistry_IsKindOf, METH_VARARGS, NULL},
	 { (char *)"iEventNameRegistry_scfGetVersion", _wrap_iEventNameRegistry_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iEventNameRegistry", _wrap_delete_iEventNameRegistry, METH_VARARGS, NULL},
	 { (char *)"iEventNameRegistry_swigregister", iEventNameRegistry_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csEventNameRegistry", _wrap_delete_csEventNameRegistry, METH_VARARGS, NULL},
	 { (char *)"csEventNameRegistry_GetString", _wrap_csEventNameRegistry_GetString, METH_VARARGS, NULL},
	 { (char *)"csEventNameRegistry_GetParentID", _wrap_csEventNameRegistry_GetParentID, METH_VARARGS, NULL},
	 { (char *)"csEventNameRegistry_IsImmediateChildOf", _wrap_csEventNameRegistry_IsImmediateChildOf, METH_VARARGS, NULL},
	 { (char *)"csEventNameRegistry_GetRegistry", _wrap_csEventNameRegistry_GetRegistry, METH_VARARGS, NULL},
	 { (char *)"csEventNameRegistry_GetID", _wrap_csEventNameRegistry_GetID, METH_VARARGS, NULL},
	 { (char *)"csEventNameRegistry_IsKindOf", _wrap_csEventNameRegistry_IsKindOf, METH_VARARGS, NULL},
	 { (char *)"csEventNameRegistry_swigregister", csEventNameRegistry_swigregister, METH_VARARGS, NULL},
	 { (char *)"csevMouse", _wrap_csevMouse, METH_VARARGS, NULL},
	 { (char *)"csevMouseOp", _wrap_csevMouseOp, METH_VARARGS, NULL},
	 { (char *)"csevJoystick", _wrap_csevJoystick, METH_VARARGS, NULL},
	 { (char *)"csevJoystickOp", _wrap_csevJoystickOp, METH_VARARGS, NULL},
	 { (char *)"csevCanvasOp", _wrap_csevCanvasOp, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_HandleEvent", _wrap_iEventHandler_HandleEvent, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_GenericName", _wrap_iEventHandler_GenericName, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_GenericID", _wrap_iEventHandler_GenericID, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_GenericPrec", _wrap_iEventHandler_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_GenericSucc", _wrap_iEventHandler_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_InstancePrec", _wrap_iEventHandler_InstancePrec, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_InstanceSucc", _wrap_iEventHandler_InstanceSucc, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_scfGetVersion", _wrap_iEventHandler_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iEventHandler", _wrap_delete_iEventHandler, METH_VARARGS, NULL},
	 { (char *)"iEventHandler_swigregister", iEventHandler_swigregister, METH_VARARGS, NULL},
	 { (char *)"iPluginIterator_HasNext", _wrap_iPluginIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iPluginIterator_Next", _wrap_iPluginIterator_Next, METH_VARARGS, NULL},
	 { (char *)"iPluginIterator_scfGetVersion", _wrap_iPluginIterator_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iPluginIterator", _wrap_delete_iPluginIterator, METH_VARARGS, NULL},
	 { (char *)"iPluginIterator_swigregister", iPluginIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_LoadPluginInstance", _wrap_iPluginManager_LoadPluginInstance, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_LoadPluginAlways", _wrap_iPluginManager_LoadPluginAlways, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_QueryPluginInstance", _wrap_iPluginManager_QueryPluginInstance, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_UnloadPluginInstance", _wrap_iPluginManager_UnloadPluginInstance, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_UnloadPlugin", _wrap_iPluginManager_UnloadPlugin, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_RegisterPluginInstance", _wrap_iPluginManager_RegisterPluginInstance, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_RegisterPlugin", _wrap_iPluginManager_RegisterPlugin, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_GetPluginInstances", _wrap_iPluginManager_GetPluginInstances, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_GetPlugins", _wrap_iPluginManager_GetPlugins, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_Clear", _wrap_iPluginManager_Clear, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_QueryOptions", _wrap_iPluginManager_QueryOptions, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_SetTagClassIDMapping", _wrap_iPluginManager_SetTagClassIDMapping, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_UnsetTagClassIDMapping", _wrap_iPluginManager_UnsetTagClassIDMapping, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_GetTagClassIDMapping", _wrap_iPluginManager_GetTagClassIDMapping, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_GetClassIDTags", _wrap_iPluginManager_GetClassIDTags, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_LoadTagPluginInstance", _wrap_iPluginManager_LoadTagPluginInstance, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_QueryTagPluginInstance", _wrap_iPluginManager_QueryTagPluginInstance, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_LoadPlugin", _wrap_iPluginManager_LoadPlugin, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_scfGetVersion", _wrap_iPluginManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iPluginManager", _wrap_delete_iPluginManager, METH_VARARGS, NULL},
	 { (char *)"iPluginManager_swigregister", iPluginManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"csLoadPluginAlways", _wrap_csLoadPluginAlways, METH_VARARGS, NULL},
	 { (char *)"scfObject_IncRef", _wrap_scfObject_IncRef, METH_VARARGS, NULL},
	 { (char *)"scfObject_DecRef", _wrap_scfObject_DecRef, METH_VARARGS, NULL},
	 { (char *)"scfObject_GetRefCount", _wrap_scfObject_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"scfObject_QueryInterface", _wrap_scfObject_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"scfObject_AddRefOwner", _wrap_scfObject_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfObject_RemoveRefOwner", _wrap_scfObject_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfObject_GetInterfaceMetadata", _wrap_scfObject_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"scfObject_swigregister", scfObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csObject", _wrap_new_csObject, METH_VARARGS, NULL},
	 { (char *)"delete_csObject", _wrap_delete_csObject, METH_VARARGS, NULL},
	 { (char *)"csObject_SetName", _wrap_csObject_SetName, METH_VARARGS, NULL},
	 { (char *)"csObject_GetName", _wrap_csObject_GetName, METH_VARARGS, NULL},
	 { (char *)"csObject_GetID", _wrap_csObject_GetID, METH_VARARGS, NULL},
	 { (char *)"csObject_SetObjectParent", _wrap_csObject_SetObjectParent, METH_VARARGS, NULL},
	 { (char *)"csObject_GetObjectParent", _wrap_csObject_GetObjectParent, METH_VARARGS, NULL},
	 { (char *)"csObject_ObjAdd", _wrap_csObject_ObjAdd, METH_VARARGS, NULL},
	 { (char *)"csObject_ObjRemove", _wrap_csObject_ObjRemove, METH_VARARGS, NULL},
	 { (char *)"csObject_ObjRemoveAll", _wrap_csObject_ObjRemoveAll, METH_VARARGS, NULL},
	 { (char *)"csObject_ObjAddChildren", _wrap_csObject_ObjAddChildren, METH_VARARGS, NULL},
	 { (char *)"csObject_GetChildByName", _wrap_csObject_GetChildByName, METH_VARARGS, NULL},
	 { (char *)"csObject_GetIterator", _wrap_csObject_GetIterator, METH_VARARGS, NULL},
	 { (char *)"csObject_AddNameChangeListener", _wrap_csObject_AddNameChangeListener, METH_VARARGS, NULL},
	 { (char *)"csObject_RemoveNameChangeListener", _wrap_csObject_RemoveNameChangeListener, METH_VARARGS, NULL},
	 { (char *)"csObject_ObjReleaseOld", _wrap_csObject_ObjReleaseOld, METH_VARARGS, NULL},
	 { (char *)"csObject_swigregister", csObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"csVertexStatus_Type_set", _wrap_csVertexStatus_Type_set, METH_VARARGS, NULL},
	 { (char *)"csVertexStatus_Type_get", _wrap_csVertexStatus_Type_get, METH_VARARGS, NULL},
	 { (char *)"csVertexStatus_Vertex_set", _wrap_csVertexStatus_Vertex_set, METH_VARARGS, NULL},
	 { (char *)"csVertexStatus_Vertex_get", _wrap_csVertexStatus_Vertex_get, METH_VARARGS, NULL},
	 { (char *)"csVertexStatus_Pos_set", _wrap_csVertexStatus_Pos_set, METH_VARARGS, NULL},
	 { (char *)"csVertexStatus_Pos_get", _wrap_csVertexStatus_Pos_get, METH_VARARGS, NULL},
	 { (char *)"new_csVertexStatus", _wrap_new_csVertexStatus, METH_VARARGS, NULL},
	 { (char *)"delete_csVertexStatus", _wrap_delete_csVertexStatus, METH_VARARGS, NULL},
	 { (char *)"csVertexStatus_swigregister", csVertexStatus_swigregister, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_Clip", _wrap_iClipper2D_Clip, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_ClipInPlace", _wrap_iClipper2D_ClipInPlace, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_ClassifyBox", _wrap_iClipper2D_ClassifyBox, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_IsInside", _wrap_iClipper2D_IsInside, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_GetVertexCount", _wrap_iClipper2D_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_GetClipPoly", _wrap_iClipper2D_GetClipPoly, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_GetClipperType", _wrap_iClipper2D_GetClipperType, METH_VARARGS, NULL},
	 { (char *)"delete_iClipper2D", _wrap_delete_iClipper2D, METH_VARARGS, NULL},
	 { (char *)"iClipper2D_swigregister", iClipper2D_swigregister, METH_VARARGS, NULL},
	 { (char *)"iPath_Length", _wrap_iPath_Length, METH_VARARGS, NULL},
	 { (char *)"iPath_CalculateAtTime", _wrap_iPath_CalculateAtTime, METH_VARARGS, NULL},
	 { (char *)"iPath_GetCurrentIndex", _wrap_iPath_GetCurrentIndex, METH_VARARGS, NULL},
	 { (char *)"iPath_SetPositionVectors", _wrap_iPath_SetPositionVectors, METH_VARARGS, NULL},
	 { (char *)"iPath_SetUpVectors", _wrap_iPath_SetUpVectors, METH_VARARGS, NULL},
	 { (char *)"iPath_SetForwardVectors", _wrap_iPath_SetForwardVectors, METH_VARARGS, NULL},
	 { (char *)"iPath_SetPositionVector", _wrap_iPath_SetPositionVector, METH_VARARGS, NULL},
	 { (char *)"iPath_SetUpVector", _wrap_iPath_SetUpVector, METH_VARARGS, NULL},
	 { (char *)"iPath_SetForwardVector", _wrap_iPath_SetForwardVector, METH_VARARGS, NULL},
	 { (char *)"iPath_GetPositionVector", _wrap_iPath_GetPositionVector, METH_VARARGS, NULL},
	 { (char *)"iPath_GetUpVector", _wrap_iPath_GetUpVector, METH_VARARGS, NULL},
	 { (char *)"iPath_GetForwardVector", _wrap_iPath_GetForwardVector, METH_VARARGS, NULL},
	 { (char *)"iPath_GetTime", _wrap_iPath_GetTime, METH_VARARGS, NULL},
	 { (char *)"iPath_SetTime", _wrap_iPath_SetTime, METH_VARARGS, NULL},
	 { (char *)"iPath_GetInterpolatedPosition", _wrap_iPath_GetInterpolatedPosition, METH_VARARGS, NULL},
	 { (char *)"iPath_GetInterpolatedUp", _wrap_iPath_GetInterpolatedUp, METH_VARARGS, NULL},
	 { (char *)"iPath_GetInterpolatedForward", _wrap_iPath_GetInterpolatedForward, METH_VARARGS, NULL},
	 { (char *)"iPath_QueryObject", _wrap_iPath_QueryObject, METH_VARARGS, NULL},
	 { (char *)"iPath_scfGetVersion", _wrap_iPath_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iPath", _wrap_delete_iPath, METH_VARARGS, NULL},
	 { (char *)"iPath_swigregister", iPath_swigregister, METH_VARARGS, NULL},
	 { (char *)"scfPath_IncRef", _wrap_scfPath_IncRef, METH_VARARGS, NULL},
	 { (char *)"scfPath_DecRef", _wrap_scfPath_DecRef, METH_VARARGS, NULL},
	 { (char *)"scfPath_GetRefCount", _wrap_scfPath_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"scfPath_QueryInterface", _wrap_scfPath_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"scfPath_AddRefOwner", _wrap_scfPath_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfPath_RemoveRefOwner", _wrap_scfPath_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfPath_GetInterfaceMetadata", _wrap_scfPath_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"scfPath_swigregister", scfPath_swigregister, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetVertexCount", _wrap_iTriangleMesh_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetVertices", _wrap_iTriangleMesh_GetVertices, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetTriangleCount", _wrap_iTriangleMesh_GetTriangleCount, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetTriangles", _wrap_iTriangleMesh_GetTriangles, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_Lock", _wrap_iTriangleMesh_Lock, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_Unlock", _wrap_iTriangleMesh_Unlock, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetFlags", _wrap_iTriangleMesh_GetFlags, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetChangeNumber", _wrap_iTriangleMesh_GetChangeNumber, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetVertexByIndex", _wrap_iTriangleMesh_GetVertexByIndex, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_GetTriangleByIndex", _wrap_iTriangleMesh_GetTriangleByIndex, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_scfGetVersion", _wrap_iTriangleMesh_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iTriangleMesh", _wrap_delete_iTriangleMesh, METH_VARARGS, NULL},
	 { (char *)"iTriangleMesh_swigregister", iTriangleMesh_swigregister, METH_VARARGS, NULL},
	 { (char *)"iKeyComposer_HandleKey", _wrap_iKeyComposer_HandleKey, METH_VARARGS, NULL},
	 { (char *)"iKeyComposer_ResetState", _wrap_iKeyComposer_ResetState, METH_VARARGS, NULL},
	 { (char *)"delete_iKeyComposer", _wrap_delete_iKeyComposer, METH_VARARGS, NULL},
	 { (char *)"iKeyComposer_swigregister", iKeyComposer_swigregister, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_Reset", _wrap_iKeyboardDriver_Reset, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_DoKey", _wrap_iKeyboardDriver_DoKey, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_GetModifierState", _wrap_iKeyboardDriver_GetModifierState, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_CreateKeyComposer", _wrap_iKeyboardDriver_CreateKeyComposer, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_SynthesizeCooked", _wrap_iKeyboardDriver_SynthesizeCooked, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_GetModifiersState", _wrap_iKeyboardDriver_GetModifiersState, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_GetKeyState", _wrap_iKeyboardDriver_GetKeyState, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_scfGetVersion", _wrap_iKeyboardDriver_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iKeyboardDriver", _wrap_delete_iKeyboardDriver, METH_VARARGS, NULL},
	 { (char *)"iKeyboardDriver_swigregister", iKeyboardDriver_swigregister, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_SetDoubleClickTime", _wrap_iMouseDriver_SetDoubleClickTime, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_Reset", _wrap_iMouseDriver_Reset, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_GetLastX", _wrap_iMouseDriver_GetLastX, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_GetLastY", _wrap_iMouseDriver_GetLastY, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_GetLast", _wrap_iMouseDriver_GetLast, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_GetLastButton", _wrap_iMouseDriver_GetLastButton, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_DoButton", _wrap_iMouseDriver_DoButton, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_DoMotion", _wrap_iMouseDriver_DoMotion, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_scfGetVersion", _wrap_iMouseDriver_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iMouseDriver", _wrap_delete_iMouseDriver, METH_VARARGS, NULL},
	 { (char *)"iMouseDriver_swigregister", iMouseDriver_swigregister, METH_VARARGS, NULL},
	 { (char *)"iJoystickDriver_Reset", _wrap_iJoystickDriver_Reset, METH_VARARGS, NULL},
	 { (char *)"iJoystickDriver_GetLast", _wrap_iJoystickDriver_GetLast, METH_VARARGS, NULL},
	 { (char *)"iJoystickDriver_GetLastButton", _wrap_iJoystickDriver_GetLastButton, METH_VARARGS, NULL},
	 { (char *)"iJoystickDriver_DoButton", _wrap_iJoystickDriver_DoButton, METH_VARARGS, NULL},
	 { (char *)"iJoystickDriver_DoMotion", _wrap_iJoystickDriver_DoMotion, METH_VARARGS, NULL},
	 { (char *)"iJoystickDriver_scfGetVersion", _wrap_iJoystickDriver_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iJoystickDriver", _wrap_delete_iJoystickDriver, METH_VARARGS, NULL},
	 { (char *)"iJoystickDriver_swigregister", iJoystickDriver_swigregister, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetFileName", _wrap_iConfigFile_GetFileName, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetVFS", _wrap_iConfigFile_GetVFS, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetFileName", _wrap_iConfigFile_SetFileName, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_Load", _wrap_iConfigFile_Load, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_Save", _wrap_iConfigFile_Save, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_Clear", _wrap_iConfigFile_Clear, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_Enumerate", _wrap_iConfigFile_Enumerate, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_KeyExists", _wrap_iConfigFile_KeyExists, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SubsectionExists", _wrap_iConfigFile_SubsectionExists, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetInt", _wrap_iConfigFile_GetInt, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetFloat", _wrap_iConfigFile_GetFloat, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetStr", _wrap_iConfigFile_GetStr, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetBool", _wrap_iConfigFile_GetBool, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetTuple", _wrap_iConfigFile_GetTuple, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetComment", _wrap_iConfigFile_GetComment, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetStr", _wrap_iConfigFile_SetStr, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetInt", _wrap_iConfigFile_SetInt, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetFloat", _wrap_iConfigFile_SetFloat, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetBool", _wrap_iConfigFile_SetBool, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetTuple", _wrap_iConfigFile_SetTuple, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetComment", _wrap_iConfigFile_SetComment, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_DeleteKey", _wrap_iConfigFile_DeleteKey, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_GetEOFComment", _wrap_iConfigFile_GetEOFComment, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_SetEOFComment", _wrap_iConfigFile_SetEOFComment, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_scfGetVersion", _wrap_iConfigFile_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iConfigFile", _wrap_delete_iConfigFile, METH_VARARGS, NULL},
	 { (char *)"iConfigFile_swigregister", iConfigFile_swigregister, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetConfigFile", _wrap_iConfigIterator_GetConfigFile, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetSubsection", _wrap_iConfigIterator_GetSubsection, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_Rewind", _wrap_iConfigIterator_Rewind, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_Next", _wrap_iConfigIterator_Next, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_HasNext", _wrap_iConfigIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetKey", _wrap_iConfigIterator_GetKey, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetInt", _wrap_iConfigIterator_GetInt, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetFloat", _wrap_iConfigIterator_GetFloat, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetStr", _wrap_iConfigIterator_GetStr, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetBool", _wrap_iConfigIterator_GetBool, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetTuple", _wrap_iConfigIterator_GetTuple, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_GetComment", _wrap_iConfigIterator_GetComment, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_scfGetVersion", _wrap_iConfigIterator_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iConfigIterator", _wrap_delete_iConfigIterator, METH_VARARGS, NULL},
	 { (char *)"iConfigIterator_swigregister", iConfigIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_AddDomain", _wrap_iConfigManager_AddDomain, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_RemoveDomain", _wrap_iConfigManager_RemoveDomain, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_LookupDomain", _wrap_iConfigManager_LookupDomain, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_SetDomainPriority", _wrap_iConfigManager_SetDomainPriority, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_GetDomainPriority", _wrap_iConfigManager_GetDomainPriority, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_SetDynamicDomain", _wrap_iConfigManager_SetDynamicDomain, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_GetDynamicDomain", _wrap_iConfigManager_GetDynamicDomain, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_SetDynamicDomainPriority", _wrap_iConfigManager_SetDynamicDomainPriority, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_GetDynamicDomainPriority", _wrap_iConfigManager_GetDynamicDomainPriority, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_FlushRemoved", _wrap_iConfigManager_FlushRemoved, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_scfGetVersion", _wrap_iConfigManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iConfigManager", _wrap_delete_iConfigManager, METH_VARARGS, NULL},
	 { (char *)"iConfigManager_swigregister", iConfigManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iStringArray_GetSize", _wrap_iStringArray_GetSize, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Push", _wrap_iStringArray_Push, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Pop", _wrap_iStringArray_Pop, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Get", _wrap_iStringArray_Get, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Find", _wrap_iStringArray_Find, METH_VARARGS, NULL},
	 { (char *)"iStringArray_FindCaseInsensitive", _wrap_iStringArray_FindCaseInsensitive, METH_VARARGS, NULL},
	 { (char *)"iStringArray_FindSortedKey", _wrap_iStringArray_FindSortedKey, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Contains", _wrap_iStringArray_Contains, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Sort", _wrap_iStringArray_Sort, METH_VARARGS, NULL},
	 { (char *)"iStringArray_DeleteIndex", _wrap_iStringArray_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Insert", _wrap_iStringArray_Insert, METH_VARARGS, NULL},
	 { (char *)"iStringArray_Empty", _wrap_iStringArray_Empty, METH_VARARGS, NULL},
	 { (char *)"iStringArray_IsEmpty", _wrap_iStringArray_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"iStringArray___getitem__", _wrap_iStringArray___getitem__, METH_VARARGS, NULL},
	 { (char *)"iStringArray___contains__", _wrap_iStringArray___contains__, METH_VARARGS, NULL},
	 { (char *)"iStringArray___delitem__", _wrap_iStringArray___delitem__, METH_VARARGS, NULL},
	 { (char *)"iStringArray___len__", _wrap_iStringArray___len__, METH_VARARGS, NULL},
	 { (char *)"iStringArray_append", _wrap_iStringArray_append, METH_VARARGS, NULL},
	 { (char *)"iStringArray_scfGetVersion", _wrap_iStringArray_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iStringArray", _wrap_delete_iStringArray, METH_VARARGS, NULL},
	 { (char *)"iStringArray_swigregister", iStringArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttributeIterator_HasNext", _wrap_iDocumentAttributeIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttributeIterator_Next", _wrap_iDocumentAttributeIterator_Next, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttributeIterator_scfGetVersion", _wrap_iDocumentAttributeIterator_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDocumentAttributeIterator", _wrap_delete_iDocumentAttributeIterator, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttributeIterator_swigregister", iDocumentAttributeIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_GetName", _wrap_iDocumentAttribute_GetName, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_GetValue", _wrap_iDocumentAttribute_GetValue, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_GetValueAsInt", _wrap_iDocumentAttribute_GetValueAsInt, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_GetValueAsFloat", _wrap_iDocumentAttribute_GetValueAsFloat, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_GetValueAsBool", _wrap_iDocumentAttribute_GetValueAsBool, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_SetName", _wrap_iDocumentAttribute_SetName, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_SetValue", _wrap_iDocumentAttribute_SetValue, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_SetValueAsInt", _wrap_iDocumentAttribute_SetValueAsInt, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_SetValueAsFloat", _wrap_iDocumentAttribute_SetValueAsFloat, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_scfGetVersion", _wrap_iDocumentAttribute_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDocumentAttribute", _wrap_delete_iDocumentAttribute, METH_VARARGS, NULL},
	 { (char *)"iDocumentAttribute_swigregister", iDocumentAttribute_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDocumentNodeIterator_HasNext", _wrap_iDocumentNodeIterator_HasNext, METH_VARARGS, NULL},
	 { (char *)"iDocumentNodeIterator_Next", _wrap_iDocumentNodeIterator_Next, METH_VARARGS, NULL},
	 { (char *)"iDocumentNodeIterator_GetNextPosition", _wrap_iDocumentNodeIterator_GetNextPosition, METH_VARARGS, NULL},
	 { (char *)"iDocumentNodeIterator_GetEndPosition", _wrap_iDocumentNodeIterator_GetEndPosition, METH_VARARGS, NULL},
	 { (char *)"iDocumentNodeIterator_scfGetVersion", _wrap_iDocumentNodeIterator_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDocumentNodeIterator", _wrap_delete_iDocumentNodeIterator, METH_VARARGS, NULL},
	 { (char *)"iDocumentNodeIterator_swigregister", iDocumentNodeIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetType", _wrap_iDocumentNode_GetType, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_Equals", _wrap_iDocumentNode_Equals, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetValue", _wrap_iDocumentNode_GetValue, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_SetValue", _wrap_iDocumentNode_SetValue, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_SetValueAsInt", _wrap_iDocumentNode_SetValueAsInt, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_SetValueAsFloat", _wrap_iDocumentNode_SetValueAsFloat, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetParent", _wrap_iDocumentNode_GetParent, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetNodes", _wrap_iDocumentNode_GetNodes, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetNode", _wrap_iDocumentNode_GetNode, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_RemoveNode", _wrap_iDocumentNode_RemoveNode, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_RemoveNodes", _wrap_iDocumentNode_RemoveNodes, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_CreateNodeBefore", _wrap_iDocumentNode_CreateNodeBefore, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetContentsValue", _wrap_iDocumentNode_GetContentsValue, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetContentsValueAsInt", _wrap_iDocumentNode_GetContentsValueAsInt, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetContentsValueAsFloat", _wrap_iDocumentNode_GetContentsValueAsFloat, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetAttributes", _wrap_iDocumentNode_GetAttributes, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetAttribute", _wrap_iDocumentNode_GetAttribute, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetAttributeValue", _wrap_iDocumentNode_GetAttributeValue, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetAttributeValueAsInt", _wrap_iDocumentNode_GetAttributeValueAsInt, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetAttributeValueAsFloat", _wrap_iDocumentNode_GetAttributeValueAsFloat, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_GetAttributeValueAsBool", _wrap_iDocumentNode_GetAttributeValueAsBool, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_RemoveAttribute", _wrap_iDocumentNode_RemoveAttribute, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_RemoveAttributes", _wrap_iDocumentNode_RemoveAttributes, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_SetAttribute", _wrap_iDocumentNode_SetAttribute, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_SetAttributeAsInt", _wrap_iDocumentNode_SetAttributeAsInt, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_SetAttributeAsFloat", _wrap_iDocumentNode_SetAttributeAsFloat, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_scfGetVersion", _wrap_iDocumentNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDocumentNode", _wrap_delete_iDocumentNode, METH_VARARGS, NULL},
	 { (char *)"iDocumentNode_swigregister", iDocumentNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDocument_Clear", _wrap_iDocument_Clear, METH_VARARGS, NULL},
	 { (char *)"iDocument_CreateRoot", _wrap_iDocument_CreateRoot, METH_VARARGS, NULL},
	 { (char *)"iDocument_GetRoot", _wrap_iDocument_GetRoot, METH_VARARGS, NULL},
	 { (char *)"iDocument_Parse", _wrap_iDocument_Parse, METH_VARARGS, NULL},
	 { (char *)"iDocument_Changeable", _wrap_iDocument_Changeable, METH_VARARGS, NULL},
	 { (char *)"iDocument_Write", _wrap_iDocument_Write, METH_VARARGS, NULL},
	 { (char *)"iDocument_scfGetVersion", _wrap_iDocument_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDocument", _wrap_delete_iDocument, METH_VARARGS, NULL},
	 { (char *)"iDocument_swigregister", iDocument_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDocumentSystem_CreateDocument", _wrap_iDocumentSystem_CreateDocument, METH_VARARGS, NULL},
	 { (char *)"iDocumentSystem_scfGetVersion", _wrap_iDocumentSystem_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDocumentSystem", _wrap_delete_iDocumentSystem, METH_VARARGS, NULL},
	 { (char *)"iDocumentSystem_swigregister", iDocumentSystem_swigregister, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_IncRef", _wrap_scfConfigFile_IncRef, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_DecRef", _wrap_scfConfigFile_DecRef, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_GetRefCount", _wrap_scfConfigFile_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_QueryInterface", _wrap_scfConfigFile_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_AddRefOwner", _wrap_scfConfigFile_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_RemoveRefOwner", _wrap_scfConfigFile_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_GetInterfaceMetadata", _wrap_scfConfigFile_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"scfConfigFile_swigregister", scfConfigFile_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csConfigFile", _wrap_delete_csConfigFile, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_IsEmpty", _wrap_csConfigFile_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetFileName", _wrap_csConfigFile_GetFileName, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetVFS", _wrap_csConfigFile_GetVFS, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetFileName", _wrap_csConfigFile_SetFileName, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_Load", _wrap_csConfigFile_Load, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_LoadFromBuffer", _wrap_csConfigFile_LoadFromBuffer, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_Save", _wrap_csConfigFile_Save, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_Clear", _wrap_csConfigFile_Clear, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_Enumerate", _wrap_csConfigFile_Enumerate, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_KeyExists", _wrap_csConfigFile_KeyExists, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SubsectionExists", _wrap_csConfigFile_SubsectionExists, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetInt", _wrap_csConfigFile_GetInt, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetFloat", _wrap_csConfigFile_GetFloat, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetStr", _wrap_csConfigFile_GetStr, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetBool", _wrap_csConfigFile_GetBool, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetTuple", _wrap_csConfigFile_GetTuple, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetComment", _wrap_csConfigFile_GetComment, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetStr", _wrap_csConfigFile_SetStr, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetInt", _wrap_csConfigFile_SetInt, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetFloat", _wrap_csConfigFile_SetFloat, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetBool", _wrap_csConfigFile_SetBool, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetTuple", _wrap_csConfigFile_SetTuple, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetComment", _wrap_csConfigFile_SetComment, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_DeleteKey", _wrap_csConfigFile_DeleteKey, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_SetEOFComment", _wrap_csConfigFile_SetEOFComment, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_GetEOFComment", _wrap_csConfigFile_GetEOFComment, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_ParseCommandLine", _wrap_csConfigFile_ParseCommandLine, METH_VARARGS, NULL},
	 { (char *)"csConfigFile_swigregister", csConfigFile_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csRadixSorter", _wrap_new_csRadixSorter, METH_VARARGS, NULL},
	 { (char *)"delete_csRadixSorter", _wrap_delete_csRadixSorter, METH_VARARGS, NULL},
	 { (char *)"csRadixSorter_Sort", _wrap_csRadixSorter_Sort, METH_VARARGS, NULL},
	 { (char *)"csRadixSorter_GetRanks", _wrap_csRadixSorter_GetRanks, METH_VARARGS, NULL},
	 { (char *)"csRadixSorter_swigregister", csRadixSorter_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csTinyDocumentSystem", _wrap_new_csTinyDocumentSystem, METH_VARARGS, NULL},
	 { (char *)"delete_csTinyDocumentSystem", _wrap_delete_csTinyDocumentSystem, METH_VARARGS, NULL},
	 { (char *)"csTinyDocumentSystem_CreateDocument", _wrap_csTinyDocumentSystem_CreateDocument, METH_VARARGS, NULL},
	 { (char *)"csTinyDocumentSystem_swigregister", csTinyDocumentSystem_swigregister, METH_VARARGS, NULL},
	 { (char *)"iDataBuffer_GetSize", _wrap_iDataBuffer_GetSize, METH_VARARGS, NULL},
	 { (char *)"iDataBuffer_GetData", _wrap_iDataBuffer_GetData, METH_VARARGS, NULL},
	 { (char *)"iDataBuffer_asString", _wrap_iDataBuffer_asString, METH_VARARGS, NULL},
	 { (char *)"iDataBuffer_GetUint8", _wrap_iDataBuffer_GetUint8, METH_VARARGS, NULL},
	 { (char *)"iDataBuffer_AsBuffer", _wrap_iDataBuffer_AsBuffer, METH_VARARGS, NULL},
	 { (char *)"iDataBuffer_scfGetVersion", _wrap_iDataBuffer_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iDataBuffer", _wrap_delete_iDataBuffer, METH_VARARGS, NULL},
	 { (char *)"iDataBuffer_swigregister", iDataBuffer_swigregister, METH_VARARGS, NULL},
	 { (char *)"CSKEY_SHIFT_NUM", _wrap_CSKEY_SHIFT_NUM, METH_VARARGS, NULL},
	 { (char *)"CSKEY_CTRL_NUM", _wrap_CSKEY_CTRL_NUM, METH_VARARGS, NULL},
	 { (char *)"CSKEY_ALT_NUM", _wrap_CSKEY_ALT_NUM, METH_VARARGS, NULL},
	 { (char *)"CSKEY_SPECIAL", _wrap_CSKEY_SPECIAL, METH_VARARGS, NULL},
	 { (char *)"CSKEY_SPECIAL_NUM", _wrap_CSKEY_SPECIAL_NUM, METH_VARARGS, NULL},
	 { (char *)"CSKEY_MODIFIER", _wrap_CSKEY_MODIFIER, METH_VARARGS, NULL},
	 { (char *)"CS_IS_KEYBOARD_EVENT", _wrap_CS_IS_KEYBOARD_EVENT, METH_VARARGS, NULL},
	 { (char *)"CS_IS_MOUSE_EVENT", _wrap_CS_IS_MOUSE_EVENT, METH_VARARGS, NULL},
	 { (char *)"CS_IS_JOYSTICK_EVENT", _wrap_CS_IS_JOYSTICK_EVENT, METH_VARARGS, NULL},
	 { (char *)"CS_IS_INPUT_EVENT", _wrap_CS_IS_INPUT_EVENT, METH_VARARGS, NULL},
	 { (char *)"csevAllEvents", _wrap_csevAllEvents, METH_VARARGS, NULL},
	 { (char *)"csevFrame", _wrap_csevFrame, METH_VARARGS, NULL},
	 { (char *)"csevInput", _wrap_csevInput, METH_VARARGS, NULL},
	 { (char *)"csevQuit", _wrap_csevQuit, METH_VARARGS, NULL},
	 { (char *)"csevCanvasClose", _wrap_csevCanvasClose, METH_VARARGS, NULL},
	 { (char *)"csevCanvasExposed", _wrap_csevCanvasExposed, METH_VARARGS, NULL},
	 { (char *)"csevCanvasHidden", _wrap_csevCanvasHidden, METH_VARARGS, NULL},
	 { (char *)"csevCanvasResize", _wrap_csevCanvasResize, METH_VARARGS, NULL},
	 { (char *)"csevFocusChanged", _wrap_csevFocusChanged, METH_VARARGS, NULL},
	 { (char *)"csevFocusGained", _wrap_csevFocusGained, METH_VARARGS, NULL},
	 { (char *)"csevFocusLost", _wrap_csevFocusLost, METH_VARARGS, NULL},
	 { (char *)"csevKeyboardEvent", _wrap_csevKeyboardEvent, METH_VARARGS, NULL},
	 { (char *)"csevKeyboardDown", _wrap_csevKeyboardDown, METH_VARARGS, NULL},
	 { (char *)"csevKeyboardUp", _wrap_csevKeyboardUp, METH_VARARGS, NULL},
	 { (char *)"csevMouseEvent", _wrap_csevMouseEvent, METH_VARARGS, NULL},
	 { (char *)"csevMouseButton", _wrap_csevMouseButton, METH_VARARGS, NULL},
	 { (char *)"csevMouseUp", _wrap_csevMouseUp, METH_VARARGS, NULL},
	 { (char *)"csevMouseDown", _wrap_csevMouseDown, METH_VARARGS, NULL},
	 { (char *)"csevMouseClick", _wrap_csevMouseClick, METH_VARARGS, NULL},
	 { (char *)"csevMouseDoubleClick", _wrap_csevMouseDoubleClick, METH_VARARGS, NULL},
	 { (char *)"csevMouseMove", _wrap_csevMouseMove, METH_VARARGS, NULL},
	 { (char *)"csevJoystickEvent", _wrap_csevJoystickEvent, METH_VARARGS, NULL},
	 { (char *)"new_csEventHandlerRegistry", _wrap_new_csEventHandlerRegistry, METH_VARARGS, NULL},
	 { (char *)"delete_csEventHandlerRegistry", _wrap_delete_csEventHandlerRegistry, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetGenericID", _wrap_csEventHandlerRegistry_GetGenericID, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetGenericPreBoundID", _wrap_csEventHandlerRegistry_GetGenericPreBoundID, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetGenericPostBoundID", _wrap_csEventHandlerRegistry_GetGenericPostBoundID, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_RegisterID", _wrap_csEventHandlerRegistry_RegisterID, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetID", _wrap_csEventHandlerRegistry_GetID, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_ReleaseID", _wrap_csEventHandlerRegistry_ReleaseID, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetHandler", _wrap_csEventHandlerRegistry_GetHandler, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_IsInstanceOf", _wrap_csEventHandlerRegistry_IsInstanceOf, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_IsInstance", _wrap_csEventHandlerRegistry_IsInstance, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetGeneric", _wrap_csEventHandlerRegistry_GetGeneric, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetString", _wrap_csEventHandlerRegistry_GetString, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_GetRegistry", _wrap_csEventHandlerRegistry_GetRegistry, METH_VARARGS, NULL},
	 { (char *)"csEventHandlerRegistry_swigregister", csEventHandlerRegistry_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_iFrameEventSignpost", _wrap_delete_iFrameEventSignpost, METH_VARARGS, NULL},
	 { (char *)"iFrameEventSignpost_InstancePrec", _wrap_iFrameEventSignpost_InstancePrec, METH_VARARGS, NULL},
	 { (char *)"iFrameEventSignpost_InstanceSucc", _wrap_iFrameEventSignpost_InstanceSucc, METH_VARARGS, NULL},
	 { (char *)"iFrameEventSignpost_HandleEvent", _wrap_iFrameEventSignpost_HandleEvent, METH_VARARGS, NULL},
	 { (char *)"iFrameEventSignpost_swigregister", iFrameEventSignpost_swigregister, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_Logic3D_StaticHandlerName", _wrap_FrameSignpost_Logic3D_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_Logic3D_StaticID", _wrap_FrameSignpost_Logic3D_StaticID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_Logic3D_GenericName", _wrap_FrameSignpost_Logic3D_GenericName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_Logic3D_GenericID", _wrap_FrameSignpost_Logic3D_GenericID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_Logic3D_GenericPrec", _wrap_FrameSignpost_Logic3D_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_Logic3D_GenericSucc", _wrap_FrameSignpost_Logic3D_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"delete_FrameSignpost_Logic3D", _wrap_delete_FrameSignpost_Logic3D, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_Logic3D_swigregister", FrameSignpost_Logic3D_swigregister, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_3D2D_StaticHandlerName", _wrap_FrameSignpost_3D2D_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_3D2D_StaticID", _wrap_FrameSignpost_3D2D_StaticID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_3D2D_GenericName", _wrap_FrameSignpost_3D2D_GenericName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_3D2D_GenericID", _wrap_FrameSignpost_3D2D_GenericID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_3D2D_GenericPrec", _wrap_FrameSignpost_3D2D_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_3D2D_GenericSucc", _wrap_FrameSignpost_3D2D_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"delete_FrameSignpost_3D2D", _wrap_delete_FrameSignpost_3D2D, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_3D2D_swigregister", FrameSignpost_3D2D_swigregister, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_2DConsole_StaticHandlerName", _wrap_FrameSignpost_2DConsole_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_2DConsole_StaticID", _wrap_FrameSignpost_2DConsole_StaticID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_2DConsole_GenericName", _wrap_FrameSignpost_2DConsole_GenericName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_2DConsole_GenericID", _wrap_FrameSignpost_2DConsole_GenericID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_2DConsole_GenericPrec", _wrap_FrameSignpost_2DConsole_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_2DConsole_GenericSucc", _wrap_FrameSignpost_2DConsole_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"delete_FrameSignpost_2DConsole", _wrap_delete_FrameSignpost_2DConsole, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_2DConsole_swigregister", FrameSignpost_2DConsole_swigregister, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_ConsoleDebug_StaticHandlerName", _wrap_FrameSignpost_ConsoleDebug_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_ConsoleDebug_StaticID", _wrap_FrameSignpost_ConsoleDebug_StaticID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_ConsoleDebug_GenericName", _wrap_FrameSignpost_ConsoleDebug_GenericName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_ConsoleDebug_GenericID", _wrap_FrameSignpost_ConsoleDebug_GenericID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_ConsoleDebug_GenericPrec", _wrap_FrameSignpost_ConsoleDebug_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_ConsoleDebug_GenericSucc", _wrap_FrameSignpost_ConsoleDebug_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"delete_FrameSignpost_ConsoleDebug", _wrap_delete_FrameSignpost_ConsoleDebug, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_ConsoleDebug_swigregister", FrameSignpost_ConsoleDebug_swigregister, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_DebugFrame_StaticHandlerName", _wrap_FrameSignpost_DebugFrame_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_DebugFrame_StaticID", _wrap_FrameSignpost_DebugFrame_StaticID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_DebugFrame_GenericName", _wrap_FrameSignpost_DebugFrame_GenericName, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_DebugFrame_GenericID", _wrap_FrameSignpost_DebugFrame_GenericID, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_DebugFrame_GenericPrec", _wrap_FrameSignpost_DebugFrame_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_DebugFrame_GenericSucc", _wrap_FrameSignpost_DebugFrame_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"delete_FrameSignpost_DebugFrame", _wrap_delete_FrameSignpost_DebugFrame, METH_VARARGS, NULL},
	 { (char *)"FrameSignpost_DebugFrame_swigregister", FrameSignpost_DebugFrame_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_FrameBegin3DDraw", _wrap_new_FrameBegin3DDraw, METH_VARARGS, NULL},
	 { (char *)"delete_FrameBegin3DDraw", _wrap_delete_FrameBegin3DDraw, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_HandleEvent", _wrap_FrameBegin3DDraw_HandleEvent, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_StaticHandlerName", _wrap_FrameBegin3DDraw_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_StaticID", _wrap_FrameBegin3DDraw_StaticID, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_GenericName", _wrap_FrameBegin3DDraw_GenericName, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_GenericID", _wrap_FrameBegin3DDraw_GenericID, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_InstancePrec", _wrap_FrameBegin3DDraw_InstancePrec, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_InstanceSucc", _wrap_FrameBegin3DDraw_InstanceSucc, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_GenericPrec", _wrap_FrameBegin3DDraw_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_GenericSucc", _wrap_FrameBegin3DDraw_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"FrameBegin3DDraw_swigregister", FrameBegin3DDraw_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_FramePrinter", _wrap_new_FramePrinter, METH_VARARGS, NULL},
	 { (char *)"delete_FramePrinter", _wrap_delete_FramePrinter, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_HandleEvent", _wrap_FramePrinter_HandleEvent, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_StaticHandlerName", _wrap_FramePrinter_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_StaticID", _wrap_FramePrinter_StaticID, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_GenericName", _wrap_FramePrinter_GenericName, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_GenericID", _wrap_FramePrinter_GenericID, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_InstancePrec", _wrap_FramePrinter_InstancePrec, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_InstanceSucc", _wrap_FramePrinter_InstanceSucc, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_GenericPrec", _wrap_FramePrinter_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_GenericSucc", _wrap_FramePrinter_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"FramePrinter_swigregister", FramePrinter_swigregister, METH_VARARGS, NULL},
	 { (char *)"CS_LOAD_PLUGIN_ALWAYS", _wrap_CS_LOAD_PLUGIN_ALWAYS, METH_VARARGS, NULL},
	 { (char *)"CS_QUERY_REGISTRY", _wrap_CS_QUERY_REGISTRY, METH_VARARGS, NULL},
	 { (char *)"CS_QUERY_REGISTRY_TAG_INTERFACE", _wrap_CS_QUERY_REGISTRY_TAG_INTERFACE, METH_VARARGS, NULL},
	 { (char *)"SCF_QUERY_INTERFACE", _wrap_SCF_QUERY_INTERFACE, METH_VARARGS, NULL},
	 { (char *)"SCF_QUERY_INTERFACE_SAFE", _wrap_SCF_QUERY_INTERFACE_SAFE, METH_VARARGS, NULL},
	 { (char *)"CS_QUERY_PLUGIN_CLASS", _wrap_CS_QUERY_PLUGIN_CLASS, METH_VARARGS, NULL},
	 { (char *)"CS_LOAD_PLUGIN", _wrap_CS_LOAD_PLUGIN, METH_VARARGS, NULL},
	 { (char *)"CS_GET_CHILD_OBJECT", _wrap_CS_GET_CHILD_OBJECT, METH_VARARGS, NULL},
	 { (char *)"CS_GET_NAMED_CHILD_OBJECT", _wrap_CS_GET_NAMED_CHILD_OBJECT, METH_VARARGS, NULL},
	 { (char *)"CS_GET_FIRST_NAMED_CHILD_OBJECT", _wrap_CS_GET_FIRST_NAMED_CHILD_OBJECT, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_IncRef", _wrap_csPyEventPlugParent_IncRef, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_DecRef", _wrap_csPyEventPlugParent_DecRef, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_GetRefCount", _wrap_csPyEventPlugParent_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_QueryInterface", _wrap_csPyEventPlugParent_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_AddRefOwner", _wrap_csPyEventPlugParent_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_RemoveRefOwner", _wrap_csPyEventPlugParent_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_GetInterfaceMetadata", _wrap_csPyEventPlugParent_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlugParent_swigregister", csPyEventPlugParent_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csPyEventPlug", _wrap_new_csPyEventPlug, METH_VARARGS, NULL},
	 { (char *)"delete_csPyEventPlug", _wrap_delete_csPyEventPlug, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlug_GetPotentiallyConflictingEvents", _wrap_csPyEventPlug_GetPotentiallyConflictingEvents, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlug_QueryEventPriority", _wrap_csPyEventPlug_QueryEventPriority, METH_VARARGS, NULL},
	 { (char *)"csPyEventPlug_swigregister", csPyEventPlug_swigregister, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_IncRef", _wrap_csPyEventHandlerParent_IncRef, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_DecRef", _wrap_csPyEventHandlerParent_DecRef, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_GetRefCount", _wrap_csPyEventHandlerParent_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_QueryInterface", _wrap_csPyEventHandlerParent_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_AddRefOwner", _wrap_csPyEventHandlerParent_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_RemoveRefOwner", _wrap_csPyEventHandlerParent_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_GetInterfaceMetadata", _wrap_csPyEventHandlerParent_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"csPyEventHandlerParent_swigregister", csPyEventHandlerParent_swigregister, METH_VARARGS, NULL},
	 { (char *)"new__csPyEventHandler", _wrap_new__csPyEventHandler, METH_VARARGS, NULL},
	 { (char *)"delete__csPyEventHandler", _wrap_delete__csPyEventHandler, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_HandleEvent", _wrap__csPyEventHandler_HandleEvent, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_StaticHandlerName", _wrap__csPyEventHandler_StaticHandlerName, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_StaticID", _wrap__csPyEventHandler_StaticID, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_GenericName", _wrap__csPyEventHandler_GenericName, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_GenericID", _wrap__csPyEventHandler_GenericID, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_GenericPrec", _wrap__csPyEventHandler_GenericPrec, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_GenericSucc", _wrap__csPyEventHandler_GenericSucc, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_InstancePrec", _wrap__csPyEventHandler_InstancePrec, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_InstanceSucc", _wrap__csPyEventHandler_InstanceSucc, METH_VARARGS, NULL},
	 { (char *)"_csPyEventHandler_swigregister", _csPyEventHandler_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_csPyEventPlugTo_p_iEventPlug(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iEventPlug *) (scfImplementation1< csPyEventPlug,iEventPlug > *) ((csPyEventPlug *) x));
}
static void *_p_scfImplementation1T_csPyEventPlug_iEventPlug_tTo_p_iEventPlug(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iEventPlug *)  ((scfImplementation1< csPyEventPlug,iEventPlug > *) x));
}
static void *_p_csStringTo_p_csStringFastT_36_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csStringFast< 36 > *)  ((csString *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iPath(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iPath *)  ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p__csPyEventHandlerTo_p_scfImplementation1T__csPyEventHandler_iEventHandler_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< _csPyEventHandler,iEventHandler > *)  ((_csPyEventHandler *) x));
}
static void *_p_scfImplementation1T_csObject_iObject_tTo_p_iObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iObject *)  ((scfImplementation1< csObject,iObject > *) x));
}
static void *_p_csObjectTo_p_iObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iObject *) (scfImplementation1< csObject,iObject > *) ((csObject *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iObject *) (scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_csObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csObject *)  ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_csStringFastT_36_tTo_p_csStringBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csStringBase *)  ((csStringFast< 36 > *) x));
}
static void *_p_csStringTo_p_csStringBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csStringBase *) (csStringFast< 36 > *) ((csString *) x));
}
static void *_p_iConfigManagerTo_p_iConfigFile(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iConfigFile *)  ((iConfigManager *) x));
}
static void *_p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iConfigFile(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iConfigFile *)  ((scfImplementation1< csConfigFile,iConfigFile > *) x));
}
static void *_p_csConfigFileTo_p_iConfigFile(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iConfigFile *) (scfImplementation1< csConfigFile,iConfigFile > *) ((csConfigFile *) x));
}
static void *_p_iEventOutletTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventOutlet *) x));
}
static void *_p_iPathTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPath *) x));
}
static void *_p_iKeyComposerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyComposer *) x));
}
static void *_p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringSetBase< CS::StringSetTag::General > *) x));
}
static void *_p_iFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFactory *) x));
}
static void *_p_iStringArrayTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringArray *) x));
}
static void *_p_iFrameEventSignpostTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iEventHandler *) ((iFrameEventSignpost *) x));
}
static void *_p_iEventNameRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventNameRegistry *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistry *) x));
}
static void *_p_iVFSTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVFS *) x));
}
static void *_p_iSCFTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSCF *) x));
}
static void *_p_iFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFile *) x));
}
static void *_p_iEventQueueTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventQueue *) x));
}
static void *_p_iDocumentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocument *) x));
}
static void *_p_iObjectNameChangeListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectNameChangeListener *) x));
}
static void *_p_iReporterListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterListener *) x));
}
static void *_p_iKeyboardDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyboardDriver *) x));
}
static void *_p_iReporterTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporter *) x));
}
static void *_p_iDocumentSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentSystem *) x));
}
static void *_p_iPluginIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginIterator *) x));
}
static void *_p_iEventAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventAttributeIterator *) x));
}
static void *_p_iObjectRegistryIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistryIterator *) x));
}
static void *_p_iObjectIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectIterator *) x));
}
static void *_p_iReporterIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterIterator *) x));
}
static void *_p_iClipper2DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iClipper2D *) x));
}
static void *_p_iConfigIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigIterator *) x));
}
static void *_p_iDocumentAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttributeIterator *) x));
}
static void *_p_iDocumentNodeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNodeIterator *) x));
}
static void *_p_scfImplementation1T_csPyEventPlug_iEventPlug_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iEventPlug *) ((scfImplementation1< csPyEventPlug,iEventPlug > *) x));
}
static void *_p_iCommandLineParserTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCommandLineParser *) x));
}
static void *_p_iDataBufferTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDataBuffer *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventHandler *) x));
}
static void *_p__csPyEventHandlerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iEventHandler *)(scfImplementation1< _csPyEventHandler,iEventHandler > *) ((_csPyEventHandler *) x));
}
static void *_p_iComponentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iComponent *) x));
}
static void *_p_iThreadReturnTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadReturn *) x));
}
static void *_p_iEventTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEvent *) x));
}
static void *_p_iMouseDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMouseDriver *) x));
}
static void *_p_iJoystickDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iJoystickDriver *) x));
}
static void *_p_iConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigFile *) x));
}
static void *_p_csConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *)(scfImplementation1< csConfigFile,iConfigFile > *) ((csConfigFile *) x));
}
static void *_p_iEventPlugTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventPlug *) x));
}
static void *_p_csObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *) ((csObject *) x));
}
static void *_p_iObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObject *) x));
}
static void *_p_iDocumentAttributeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttribute *) x));
}
static void *_p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((scfImplementation1< csConfigFile,iConfigFile > *) x));
}
static void *_p_csPyEventPlugTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iEventPlug *)(scfImplementation1< csPyEventPlug,iEventPlug > *) ((csPyEventPlug *) x));
}
static void *_p_iDocumentNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNode *) x));
}
static void *_p_iStringTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iString *) x));
}
static void *_p_scfImplementation1T_csObject_iObject_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *) ((scfImplementation1< csObject,iObject > *) x));
}
static void *_p_iStringSetTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iStringSetBase< CS::StringSetTag::General > *) ((iStringSet *) x));
}
static void *_p_iVirtualClockTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVirtualClock *) x));
}
static void *_p_scfImplementation1T__csPyEventHandler_iEventHandler_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iEventHandler *) ((scfImplementation1< _csPyEventHandler,iEventHandler > *) x));
}
static void *_p_iDebugHelperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDebugHelper *) x));
}
static void *_p_iTriangleMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTriangleMesh *) x));
}
static void *_p_iEventCordTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventCord *) x));
}
static void *_p_iPluginManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginManager *) x));
}
static void *_p_iThreadManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadManager *) x));
}
static void *_p_iCacheManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCacheManager *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_iConfigManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((iConfigManager *) x));
}
static void *_p_f_p_iBase__p_iEventOutletTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEventOutlet *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iPathTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iPath *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iKeyComposerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iKeyComposer *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iStringSetBase< CS::StringSetTag::General > *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iFactoryTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iFactory *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iStringArrayTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iStringArray *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iFrameEventSignpostTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iEventHandler *) ((iFrameEventSignpost *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iEventNameRegistryTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEventNameRegistry *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iObjectRegistryTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iObjectRegistry *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iVFSTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iVFS *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iSCFTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iSCF *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iFileTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iFile *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iEventQueueTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEventQueue *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDocumentTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDocument *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iObjectNameChangeListenerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iObjectNameChangeListener *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iReporterListenerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iReporterListener *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iKeyboardDriverTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iKeyboardDriver *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iReporterTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iReporter *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDocumentSystemTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDocumentSystem *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iPluginIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iPluginIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iEventAttributeIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEventAttributeIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iObjectRegistryIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iObjectRegistryIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iObjectIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iObjectIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iReporterIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iReporterIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iClipper2DTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iClipper2D *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iConfigIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iConfigIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDocumentAttributeIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDocumentAttributeIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDocumentNodeIteratorTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDocumentNodeIterator *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_tTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iEventPlug *) ((scfImplementation1< csPyEventPlug,iEventPlug > *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iCommandLineParserTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iCommandLineParser *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDataBufferTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDataBuffer *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iEventHandlerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEventHandler *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p__csPyEventHandlerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iEventHandler *)(scfImplementation1< _csPyEventHandler,iEventHandler > *) ((_csPyEventHandler *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iComponentTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iComponent *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iThreadReturnTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iThreadReturn *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iEventTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEvent *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iMouseDriverTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iMouseDriver *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iJoystickDriverTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iJoystickDriver *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iConfigFileTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iConfigFile *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_csConfigFileTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iConfigFile *)(scfImplementation1< csConfigFile,iConfigFile > *) ((csConfigFile *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iEventPlugTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEventPlug *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_csObjectTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iObject *)(scfImplementation1< csObject,iObject > *) ((csObject *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iObjectTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iObject *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDocumentAttributeTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDocumentAttribute *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iConfigFile *) ((scfImplementation1< csConfigFile,iConfigFile > *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_csPyEventPlugTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iEventPlug *)(scfImplementation1< csPyEventPlug,iEventPlug > *) ((csPyEventPlug *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDocumentNodeTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDocumentNode *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iStringTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iString *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_scfImplementation1T_csObject_iObject_tTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iObject *) ((scfImplementation1< csObject,iObject > *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iStringSetTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iStringSetBase< CS::StringSetTag::General > *) ((iStringSet *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iVirtualClockTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iVirtualClock *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_tTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iEventHandler *) ((scfImplementation1< _csPyEventHandler,iEventHandler > *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iDebugHelperTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iDebugHelper *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iTriangleMeshTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iTriangleMesh *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iEventCordTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iEventCord *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iPluginManagerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iPluginManager *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iThreadManagerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iThreadManager *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iCacheManagerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *))  ((iCacheManager *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *(*)(iBase *)) x));
}
static void *_p_f_p_iBase__p_iConfigManagerTo_p_f_p_iBase__p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *(*)(iBase *)) (iConfigFile *) ((iConfigManager *(*)(iBase *)) x));
}
static void *_p_csObjectTo_p_scfImplementation1T_csObject_iObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csObject,iObject > *)  ((csObject *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_scfImplementation1T_csObject_iObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csObject,iObject > *) (csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_scfImplementation1T__csPyEventHandler_iEventHandler_tTo_p_iEventHandler(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iEventHandler *)  ((scfImplementation1< _csPyEventHandler,iEventHandler > *) x));
}
static void *_p__csPyEventHandlerTo_p_iEventHandler(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iEventHandler *) (scfImplementation1< _csPyEventHandler,iEventHandler > *) ((_csPyEventHandler *) x));
}
static void *_p_iFrameEventSignpostTo_p_iEventHandler(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iEventHandler *)  ((iFrameEventSignpost *) x));
}
static void *_p_csArrayCapacityVariableGrowTo_p_csArrayCapacityLinearT_csArrayThresholdVariable_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csArrayCapacityLinear< csArrayThresholdVariable > *)  ((csArrayCapacityVariableGrow *) x));
}
static void *_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csVector2 > *) x));
}
static void *_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csVector3 > *) x));
}
static void *_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< unsigned int > *) x));
}
static void *_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csVector4 > *) x));
}
static void *_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csPluginRequest > *) x));
}
static void *_p_csPyEventPlugTo_p_scfImplementation1T_csPyEventPlug_iEventPlug_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csPyEventPlug,iEventPlug > *)  ((csPyEventPlug *) x));
}
static void *_p_csArrayCapacityVariableGrowTo_p_csArrayThresholdVariable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csArrayThresholdVariable *) (csArrayCapacityLinear< csArrayThresholdVariable > *) ((csArrayCapacityVariableGrow *) x));
}
static void *_p_csArrayCapacityLinearT_csArrayThresholdVariable_tTo_p_csArrayThresholdVariable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csArrayThresholdVariable *)  ((csArrayCapacityLinear< csArrayThresholdVariable > *) x));
}
static void *_p_csConfigFileTo_p_scfImplementation1T_csConfigFile_iConfigFile_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csConfigFile,iConfigFile > *)  ((csConfigFile *) x));
}
static void *_p_csColor4To_p_csColor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csColor *)  ((csColor4 *) x));
}
static void *_p_csObjectTo_p_CS__Utility__InternalRefCount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Utility::InternalRefCount *)  ((csObject *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_CS__Utility__InternalRefCount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Utility::InternalRefCount *) (csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_iStringSetTo_p_iStringSetBaseT_CS__StringSetTag__General_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iStringSetBase< CS::StringSetTag::General > *)  ((iStringSet *) x));
}
static swig_type_info _swigt__p_AllocatorType = {"_p_AllocatorType", "AllocatorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Memory__AllocatorMalloc = {"_p_CS__Memory__AllocatorMalloc", "CS::Container::ArrayAllocDefault *|CS::Memory::AllocatorMalloc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Memory__CustomAllocated = {"_p_CS__Memory__CustomAllocated", "CS::Memory::CustomAllocated *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__StringIDT_CS__StringSetTag__General_t = {"_p_CS__StringIDT_CS__StringSetTag__General_t", "csStringID *|csEventID *|CS::StringID< CS::StringSetTag::General > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Threading__Condition = {"_p_CS__Threading__Condition", "CS::Threading::Condition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Threading__Mutex = {"_p_CS__Threading__Mutex", "CS::Threading::Mutex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Utility__InternalRefCount = {"_p_CS__Utility__InternalRefCount", "CS::Utility::InternalRefCount *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t = {"_p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t", "csStringSet *|CS::Utility::StringSet< CS::StringSetTag::General,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CapacityHandlerType = {"_p_CapacityHandlerType", "CapacityHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ElementHandlerType = {"_p_ElementHandlerType", "ElementHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FILE = {"_p_FILE", "FILE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FrameBegin3DDraw = {"_p_FrameBegin3DDraw", "FrameBegin3DDraw *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FramePrinter = {"_p_FramePrinter", "FramePrinter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FrameSignpost_2DConsole = {"_p_FrameSignpost_2DConsole", "FrameSignpost_2DConsole *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FrameSignpost_3D2D = {"_p_FrameSignpost_3D2D", "FrameSignpost_3D2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FrameSignpost_ConsoleDebug = {"_p_FrameSignpost_ConsoleDebug", "FrameSignpost_ConsoleDebug *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FrameSignpost_DebugFrame = {"_p_FrameSignpost_DebugFrame", "FrameSignpost_DebugFrame *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FrameSignpost_Logic3D = {"_p_FrameSignpost_Logic3D", "FrameSignpost_Logic3D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HashType = {"_p_HashType", "HashType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TagType = {"_p_TagType", "TagType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ThisType = {"_p_ThisType", "ThisType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ValueType = {"_p_ValueType", "ValueType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__1_basetype = {"_p__1_basetype", "$1_basetype *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyCharType = {"_p__csKeyCharType", "enum _csKeyCharType *|csKeyCharType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyEventType = {"_p__csKeyEventType", "enum _csKeyEventType *|csKeyEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierNumType = {"_p__csKeyModifierNumType", "enum _csKeyModifierNumType *|csKeyModifierNumType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierType = {"_p__csKeyModifierType", "enum _csKeyModifierType *|csKeyModifierType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifiers = {"_p__csKeyModifiers", "_csKeyModifiers *|csKeyModifiers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csMouseEventType = {"_p__csMouseEventType", "enum _csMouseEventType *|csMouseEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csPyEventHandler = {"_p__csPyEventHandler", "_csPyEventHandler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityFixedGrowT_16_t = {"_p_csArrayCapacityFixedGrowT_16_t", "CS::Container::ArrayCapacityDefault *|csArrayCapacityFixedGrow< 16 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityLinearT_csArrayThresholdVariable_t = {"_p_csArrayCapacityLinearT_csArrayThresholdVariable_t", "csArrayCapacityLinear< csArrayThresholdVariable > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityVariableGrow = {"_p_csArrayCapacityVariableGrow", "csArrayCapacityDefault *|csArrayCapacityVariableGrow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csPluginRequest > *|csArray< csPluginRequest,csArrayElementHandler< csPluginRequest >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csVector2,csArrayElementHandler< csVector2 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csArray< csVector2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csVector3,csArrayElementHandler< csVector3 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csArray< csVector3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csVector4,csArrayElementHandler< csVector4 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csArray< csVector4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< unsigned int,csArrayElementHandler< unsigned int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csArray< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayThresholdVariable = {"_p_csArrayThresholdVariable", "csArrayThresholdVariable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csBox2 = {"_p_csBox2", "csBox2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csColor = {"_p_csColor", "csColor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csColor4 = {"_p_csColor4", "csColor4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csCommandEventData = {"_p_csCommandEventData", "csCommandEventData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csCommandEventHelper = {"_p_csCommandEventHelper", "csCommandEventHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csCommandLineHelper = {"_p_csCommandLineHelper", "csCommandLineHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csConfigFile = {"_p_csConfigFile", "csConfigFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csDirtyAccessArray< csVector2,csArrayElementHandler< csVector2 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csDirtyAccessArray< csVector2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csDirtyAccessArray< csVector3,csArrayElementHandler< csVector3 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csDirtyAccessArray< csVector3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csDirtyAccessArray< csVector4,csArrayElementHandler< csVector4 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csDirtyAccessArray< csVector4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csDirtyAccessArray< unsigned int,csArrayElementHandler< unsigned int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csDirtyAccessArray< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csEvent = {"_p_csEvent", "csEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csEventHandlerRegistry = {"_p_csEventHandlerRegistry", "csEventHandlerRegistry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csEventNameRegistry = {"_p_csEventNameRegistry", "csEventNameRegistry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csFileTime = {"_p_csFileTime", "csFileTime *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csFlags = {"_p_csFlags", "csFlags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csHandlerID = {"_p_csHandlerID", "csHandlerID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csInitializer = {"_p_csInitializer", "csInitializer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csInputEventHelper = {"_p_csInputEventHelper", "csInputEventHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csJoystickEventData = {"_p_csJoystickEventData", "csJoystickEventData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csJoystickEventHelper = {"_p_csJoystickEventHelper", "csJoystickEventHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csKeyEventData = {"_p_csKeyEventData", "csKeyEventData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csKeyEventHelper = {"_p_csKeyEventHelper", "csKeyEventHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csMouseEventData = {"_p_csMouseEventData", "csMouseEventData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csMouseEventHelper = {"_p_csMouseEventHelper", "csMouseEventHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csObject = {"_p_csObject", "csObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPluginRequest = {"_p_csPluginRequest", "csPluginRequest *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_iBase_t = {"_p_csPtrT_iBase_t", "csPtr< iBase > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_iKeyComposer_t = {"_p_csPtrT_iKeyComposer_t", "csPtr< iKeyComposer > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_iObjectRegistryIterator_t = {"_p_csPtrT_iObjectRegistryIterator_t", "csPtr< iObjectRegistryIterator > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPyEventPlug = {"_p_csPyEventPlug", "csPyEventPlug *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRadixSorter = {"_p_csRadixSorter", "csRadixSorter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefArrayT_iObject_t = {"_p_csRefArrayT_iObject_t", "csRefArray< iObject > *|csObjectContainer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefArrayT_iThreadReturn_t = {"_p_csRefArrayT_iThreadReturn_t", "csRefArray< iThreadReturn > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefCount = {"_p_csRefCount", "csRefCount *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iBase_t = {"_p_csRefT_iBase_t", "csRef< iBase > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iDocumentAttribute_t = {"_p_csRefT_iDocumentAttribute_t", "csRef< iDocumentAttribute > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iDocumentNodeIterator_t = {"_p_csRefT_iDocumentNodeIterator_t", "csRef< iDocumentNodeIterator > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iDocumentNode_t = {"_p_csRefT_iDocumentNode_t", "csRef< iDocumentNode > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iEventHandlerRegistry_t = {"_p_csRefT_iEventHandlerRegistry_t", "csRef< iEventHandlerRegistry > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iEventHandler_t = {"_p_csRefT_iEventHandler_t", "csRef< iEventHandler > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iEventNameRegistry_t = {"_p_csRefT_iEventNameRegistry_t", "csRef< iEventNameRegistry > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iEvent_t = {"_p_csRefT_iEvent_t", "csRef< iEvent > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iThreadReturn_t = {"_p_csRefT_iThreadReturn_t", "csRef< iThreadReturn > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefT_iView_t = {"_p_csRefT_iView_t", "csRef< iView > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csReporterHelper = {"_p_csReporterHelper", "csReporterHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t = {"_p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t", "csSet< csStringID > *|csSet< CS::StringID< CS::StringSetTag::General >,CS::Memory::AllocatorMalloc > *|csSet< CS::StringID< CS::StringSetTag::General > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csString = {"_p_csString", "csString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csStringArray = {"_p_csStringArray", "csStringArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csStringBase = {"_p_csStringBase", "csStringBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csStringFastT_36_t = {"_p_csStringFastT_36_t", "csStringFast< 36 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTinyDocumentSystem = {"_p_csTinyDocumentSystem", "csTinyDocumentSystem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangle = {"_p_csTriangle", "csTriangle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector2 = {"_p_csVector2", "csVector2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector3 = {"_p_csVector3", "csVector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector4 = {"_p_csVector4", "csVector4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVertexStatus = {"_p_csVertexStatus", "csVertexStatus *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csWrapPtr = {"_p_csWrapPtr", "csWrapPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iBase = {"_p_f_p_iBase__p_iBase", "iBase *(*)(iBase *)|scfFactoryFunc", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iFile = {"_p_f_p_iBase__p_iFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEventOutlet = {"_p_f_p_iBase__p_iEventOutlet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iKeyComposer = {"_p_f_p_iBase__p_iKeyComposer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iStringArray = {"_p_f_p_iBase__p_iStringArray", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iFactory = {"_p_f_p_iBase__p_iFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iFrameEventSignpost = {"_p_f_p_iBase__p_iFrameEventSignpost", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t = {"_p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t = {"_p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEventNameRegistry = {"_p_f_p_iBase__p_iEventNameRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iObjectRegistry = {"_p_f_p_iBase__p_iObjectRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDocument = {"_p_f_p_iBase__p_iDocument", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEventQueue = {"_p_f_p_iBase__p_iEventQueue", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iKeyboardDriver = {"_p_f_p_iBase__p_iKeyboardDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iObjectNameChangeListener = {"_p_f_p_iBase__p_iObjectNameChangeListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iReporterListener = {"_p_f_p_iBase__p_iReporterListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEvent = {"_p_f_p_iBase__p_iEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t = {"_p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iReporter = {"_p_f_p_iBase__p_iReporter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDocumentSystem = {"_p_f_p_iBase__p_iDocumentSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t = {"_p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iPluginIterator = {"_p_f_p_iBase__p_iPluginIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEventAttributeIterator = {"_p_f_p_iBase__p_iEventAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iObjectRegistryIterator = {"_p_f_p_iBase__p_iObjectRegistryIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iObjectIterator = {"_p_f_p_iBase__p_iObjectIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iReporterIterator = {"_p_f_p_iBase__p_iReporterIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iConfigIterator = {"_p_f_p_iBase__p_iConfigIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDocumentAttributeIterator = {"_p_f_p_iBase__p_iDocumentAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDocumentNodeIterator = {"_p_f_p_iBase__p_iDocumentNodeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iClipper2D = {"_p_f_p_iBase__p_iClipper2D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iCommandLineParser = {"_p_f_p_iBase__p_iCommandLineParser", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDataBuffer = {"_p_f_p_iBase__p_iDataBuffer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEventHandler = {"_p_f_p_iBase__p_iEventHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p__csPyEventHandler = {"_p_f_p_iBase__p__csPyEventHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iVFS = {"_p_f_p_iBase__p_iVFS", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iComponent = {"_p_f_p_iBase__p_iComponent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iThreadReturn = {"_p_f_p_iBase__p_iThreadReturn", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iSCF = {"_p_f_p_iBase__p_iSCF", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iMouseDriver = {"_p_f_p_iBase__p_iMouseDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iJoystickDriver = {"_p_f_p_iBase__p_iJoystickDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t = {"_p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t = {"_p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iConfigFile = {"_p_f_p_iBase__p_iConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_csConfigFile = {"_p_f_p_iBase__p_csConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEventPlug = {"_p_f_p_iBase__p_iEventPlug", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_csObject = {"_p_f_p_iBase__p_csObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iObject = {"_p_f_p_iBase__p_iObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDocumentAttribute = {"_p_f_p_iBase__p_iDocumentAttribute", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_csPyEventPlug = {"_p_f_p_iBase__p_csPyEventPlug", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDocumentNode = {"_p_f_p_iBase__p_iDocumentNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iString = {"_p_f_p_iBase__p_iString", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iPath = {"_p_f_p_iBase__p_iPath", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iStringSet = {"_p_f_p_iBase__p_iStringSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iVirtualClock = {"_p_f_p_iBase__p_iVirtualClock", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iDebugHelper = {"_p_f_p_iBase__p_iDebugHelper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iTriangleMesh = {"_p_f_p_iBase__p_iTriangleMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iEventCord = {"_p_f_p_iBase__p_iEventCord", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iPluginManager = {"_p_f_p_iBase__p_iPluginManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iThreadManager = {"_p_f_p_iBase__p_iThreadManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iCacheManager = {"_p_f_p_iBase__p_iCacheManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_iBase__p_iConfigManager = {"_p_f_p_iBase__p_iConfigManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iBase = {"_p_iBase", "iBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iString = {"_p_iString", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCacheManager = {"_p_iCacheManager", "iCacheManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iClipper2D = {"_p_iClipper2D", "iClipper2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iCommandLineParser = {"_p_iCommandLineParser", "iCommandLineParser *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iComponent = {"_p_iComponent", "iComponent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iConfigFile = {"_p_iConfigFile", "iConfigFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iConfigIterator = {"_p_iConfigIterator", "iConfigIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iConfigManager = {"_p_iConfigManager", "iConfigManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDataBuffer = {"_p_iDataBuffer", "iDataBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDebugHelper = {"_p_iDebugHelper", "iDebugHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDocument = {"_p_iDocument", "iDocument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDocumentAttribute = {"_p_iDocumentAttribute", "iDocumentAttribute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDocumentAttributeIterator = {"_p_iDocumentAttributeIterator", "iDocumentAttributeIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDocumentNode = {"_p_iDocumentNode", "iDocumentNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDocumentNodeIterator = {"_p_iDocumentNodeIterator", "iDocumentNodeIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDocumentSystem = {"_p_iDocumentSystem", "iDocumentSystem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEvent = {"_p_iEvent", "iEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEventAttributeIterator = {"_p_iEventAttributeIterator", "iEventAttributeIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEventCord = {"_p_iEventCord", "iEventCord *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEventHandler = {"_p_iEventHandler", "iEventHandler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEventNameRegistry = {"_p_iEventNameRegistry", "iEventNameRegistry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEventOutlet = {"_p_iEventOutlet", "iEventOutlet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEventPlug = {"_p_iEventPlug", "iEventPlug *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iEventQueue = {"_p_iEventQueue", "iEventQueue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iFactory = {"_p_iFactory", "iFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iFile = {"_p_iFile", "iFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iFrameEventSignpost = {"_p_iFrameEventSignpost", "iFrameEventSignpost *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iGraphics2D = {"_p_iGraphics2D", "iGraphics2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iGraphics3D = {"_p_iGraphics3D", "iGraphics3D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iJob = {"_p_iJob", "iJob *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iJoystickDriver = {"_p_iJoystickDriver", "iJoystickDriver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iKeyComposer = {"_p_iKeyComposer", "iKeyComposer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iKeyboardDriver = {"_p_iKeyboardDriver", "iKeyboardDriver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iMouseDriver = {"_p_iMouseDriver", "iMouseDriver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iObject = {"_p_iObject", "iObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iObjectIterator = {"_p_iObjectIterator", "iObjectIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iObjectNameChangeListener = {"_p_iObjectNameChangeListener", "iObjectNameChangeListener *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iObjectRegistry = {"_p_iObjectRegistry", "iObjectRegistry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iObjectRegistryIterator = {"_p_iObjectRegistryIterator", "iObjectRegistryIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iPath = {"_p_iPath", "iPath *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iPluginIterator = {"_p_iPluginIterator", "iPluginIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iPluginManager = {"_p_iPluginManager", "iPluginManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iReporter = {"_p_iReporter", "iReporter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iReporterIterator = {"_p_iReporterIterator", "iReporterIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iReporterListener = {"_p_iReporterListener", "iReporterListener *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iSCF = {"_p_iSCF", "iSCF *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iStringArray = {"_p_iStringArray", "iStringArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iStringSet = {"_p_iStringSet", "iStringSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iStringSetBaseT_CS__StringSetTag__General_t = {"_p_iStringSetBaseT_CS__StringSetTag__General_t", "iStringSetBase< CS::StringSetTag::General > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iSystemOpenManager = {"_p_iSystemOpenManager", "iSystemOpenManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iThreadManager = {"_p_iThreadManager", "iThreadManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iThreadReturn = {"_p_iThreadReturn", "iThreadReturn *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iTriangleMesh = {"_p_iTriangleMesh", "iTriangleMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iVFS = {"_p_iVFS", "iVFS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iVerbosityManager = {"_p_iVerbosityManager", "iVerbosityManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iVirtualClock = {"_p_iVirtualClock", "iVirtualClock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|int32 *|scfInterfaceVersion *|int32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int16_t = {"_p_int16_t", "int16 *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *|int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int8_t = {"_p_int8_t", "int8 *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_intptr_t = {"_p_intptr_t", "intptr_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "longlong *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T__csPyEventHandler_iEventHandler_t = {"_p_scfImplementation1T__csPyEventHandler_iEventHandler_t", "scfImplementation1< _csPyEventHandler,iEventHandler > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t = {"_p_scfImplementation1T_csConfigFile_iConfigFile_t", "scfImplementation1< csConfigFile,iConfigFile > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csObject_iObject_t = {"_p_scfImplementation1T_csObject_iObject_t", "scfImplementation1< csObject,iObject > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csPyEventPlug_iEventPlug_t = {"_p_scfImplementation1T_csPyEventPlug_iEventPlug_t", "scfImplementation1< csPyEventPlug,iEventPlug > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t = {"_p_scfImplementationExt1T_csPath_csObject_iPath_t", "scfImplementationExt1< csPath,csObject,iPath > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfInterfaceMetadata = {"_p_scfInterfaceMetadata", "scfInterfaceMetadata *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfInterfaceMetadataList = {"_p_scfInterfaceMetadataList", "scfInterfaceMetadataList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint16_t = {"_p_uint16_t", "uint16 *|uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *|uint32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *|uint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "uint8 *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "CS::StringIDValue *|unsigned int *|uint *|csTicks *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|scfInterfaceID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "ulonglong *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_utf32_char = {"_p_utf32_char", "utf32_char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_AllocatorType,
  &_swigt__p_CS__Memory__AllocatorMalloc,
  &_swigt__p_CS__Memory__CustomAllocated,
  &_swigt__p_CS__StringIDT_CS__StringSetTag__General_t,
  &_swigt__p_CS__Threading__Condition,
  &_swigt__p_CS__Threading__Mutex,
  &_swigt__p_CS__Utility__InternalRefCount,
  &_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t,
  &_swigt__p_CapacityHandlerType,
  &_swigt__p_ElementHandlerType,
  &_swigt__p_FILE,
  &_swigt__p_FrameBegin3DDraw,
  &_swigt__p_FramePrinter,
  &_swigt__p_FrameSignpost_2DConsole,
  &_swigt__p_FrameSignpost_3D2D,
  &_swigt__p_FrameSignpost_ConsoleDebug,
  &_swigt__p_FrameSignpost_DebugFrame,
  &_swigt__p_FrameSignpost_Logic3D,
  &_swigt__p_HashType,
  &_swigt__p_TagType,
  &_swigt__p_ThisType,
  &_swigt__p_ValueType,
  &_swigt__p__1_basetype,
  &_swigt__p__csKeyCharType,
  &_swigt__p__csKeyEventType,
  &_swigt__p__csKeyModifierNumType,
  &_swigt__p__csKeyModifierType,
  &_swigt__p__csKeyModifiers,
  &_swigt__p__csMouseEventType,
  &_swigt__p__csPyEventHandler,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_csArrayCapacityFixedGrowT_16_t,
  &_swigt__p_csArrayCapacityLinearT_csArrayThresholdVariable_t,
  &_swigt__p_csArrayCapacityVariableGrow,
  &_swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayThresholdVariable,
  &_swigt__p_csBox2,
  &_swigt__p_csColor,
  &_swigt__p_csColor4,
  &_swigt__p_csCommandEventData,
  &_swigt__p_csCommandEventHelper,
  &_swigt__p_csCommandLineHelper,
  &_swigt__p_csConfigFile,
  &_swigt__p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csEvent,
  &_swigt__p_csEventHandlerRegistry,
  &_swigt__p_csEventNameRegistry,
  &_swigt__p_csFileTime,
  &_swigt__p_csFlags,
  &_swigt__p_csHandlerID,
  &_swigt__p_csInitializer,
  &_swigt__p_csInputEventHelper,
  &_swigt__p_csJoystickEventData,
  &_swigt__p_csJoystickEventHelper,
  &_swigt__p_csKeyEventData,
  &_swigt__p_csKeyEventHelper,
  &_swigt__p_csMouseEventData,
  &_swigt__p_csMouseEventHelper,
  &_swigt__p_csObject,
  &_swigt__p_csPluginRequest,
  &_swigt__p_csPtrT_iBase_t,
  &_swigt__p_csPtrT_iKeyComposer_t,
  &_swigt__p_csPtrT_iObjectRegistryIterator_t,
  &_swigt__p_csPyEventPlug,
  &_swigt__p_csRadixSorter,
  &_swigt__p_csRefArrayT_iObject_t,
  &_swigt__p_csRefArrayT_iThreadReturn_t,
  &_swigt__p_csRefCount,
  &_swigt__p_csRefT_iBase_t,
  &_swigt__p_csRefT_iDocumentAttribute_t,
  &_swigt__p_csRefT_iDocumentNodeIterator_t,
  &_swigt__p_csRefT_iDocumentNode_t,
  &_swigt__p_csRefT_iEventHandlerRegistry_t,
  &_swigt__p_csRefT_iEventHandler_t,
  &_swigt__p_csRefT_iEventNameRegistry_t,
  &_swigt__p_csRefT_iEvent_t,
  &_swigt__p_csRefT_iThreadReturn_t,
  &_swigt__p_csRefT_iView_t,
  &_swigt__p_csReporterHelper,
  &_swigt__p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t,
  &_swigt__p_csString,
  &_swigt__p_csStringArray,
  &_swigt__p_csStringBase,
  &_swigt__p_csStringFastT_36_t,
  &_swigt__p_csTinyDocumentSystem,
  &_swigt__p_csTriangle,
  &_swigt__p_csVector2,
  &_swigt__p_csVector3,
  &_swigt__p_csVector4,
  &_swigt__p_csVertexStatus,
  &_swigt__p_csWrapPtr,
  &_swigt__p_double,
  &_swigt__p_f_p_iBase__p__csPyEventHandler,
  &_swigt__p_f_p_iBase__p_csConfigFile,
  &_swigt__p_f_p_iBase__p_csObject,
  &_swigt__p_f_p_iBase__p_csPyEventPlug,
  &_swigt__p_f_p_iBase__p_iBase,
  &_swigt__p_f_p_iBase__p_iCacheManager,
  &_swigt__p_f_p_iBase__p_iClipper2D,
  &_swigt__p_f_p_iBase__p_iCommandLineParser,
  &_swigt__p_f_p_iBase__p_iComponent,
  &_swigt__p_f_p_iBase__p_iConfigFile,
  &_swigt__p_f_p_iBase__p_iConfigIterator,
  &_swigt__p_f_p_iBase__p_iConfigManager,
  &_swigt__p_f_p_iBase__p_iDataBuffer,
  &_swigt__p_f_p_iBase__p_iDebugHelper,
  &_swigt__p_f_p_iBase__p_iDocument,
  &_swigt__p_f_p_iBase__p_iDocumentAttribute,
  &_swigt__p_f_p_iBase__p_iDocumentAttributeIterator,
  &_swigt__p_f_p_iBase__p_iDocumentNode,
  &_swigt__p_f_p_iBase__p_iDocumentNodeIterator,
  &_swigt__p_f_p_iBase__p_iDocumentSystem,
  &_swigt__p_f_p_iBase__p_iEvent,
  &_swigt__p_f_p_iBase__p_iEventAttributeIterator,
  &_swigt__p_f_p_iBase__p_iEventCord,
  &_swigt__p_f_p_iBase__p_iEventHandler,
  &_swigt__p_f_p_iBase__p_iEventNameRegistry,
  &_swigt__p_f_p_iBase__p_iEventOutlet,
  &_swigt__p_f_p_iBase__p_iEventPlug,
  &_swigt__p_f_p_iBase__p_iEventQueue,
  &_swigt__p_f_p_iBase__p_iFactory,
  &_swigt__p_f_p_iBase__p_iFile,
  &_swigt__p_f_p_iBase__p_iFrameEventSignpost,
  &_swigt__p_f_p_iBase__p_iJoystickDriver,
  &_swigt__p_f_p_iBase__p_iKeyComposer,
  &_swigt__p_f_p_iBase__p_iKeyboardDriver,
  &_swigt__p_f_p_iBase__p_iMouseDriver,
  &_swigt__p_f_p_iBase__p_iObject,
  &_swigt__p_f_p_iBase__p_iObjectIterator,
  &_swigt__p_f_p_iBase__p_iObjectNameChangeListener,
  &_swigt__p_f_p_iBase__p_iObjectRegistry,
  &_swigt__p_f_p_iBase__p_iObjectRegistryIterator,
  &_swigt__p_f_p_iBase__p_iPath,
  &_swigt__p_f_p_iBase__p_iPluginIterator,
  &_swigt__p_f_p_iBase__p_iPluginManager,
  &_swigt__p_f_p_iBase__p_iReporter,
  &_swigt__p_f_p_iBase__p_iReporterIterator,
  &_swigt__p_f_p_iBase__p_iReporterListener,
  &_swigt__p_f_p_iBase__p_iSCF,
  &_swigt__p_f_p_iBase__p_iString,
  &_swigt__p_f_p_iBase__p_iStringArray,
  &_swigt__p_f_p_iBase__p_iStringSet,
  &_swigt__p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t,
  &_swigt__p_f_p_iBase__p_iThreadManager,
  &_swigt__p_f_p_iBase__p_iThreadReturn,
  &_swigt__p_f_p_iBase__p_iTriangleMesh,
  &_swigt__p_f_p_iBase__p_iVFS,
  &_swigt__p_f_p_iBase__p_iVirtualClock,
  &_swigt__p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t,
  &_swigt__p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  &_swigt__p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t,
  &_swigt__p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t,
  &_swigt__p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  &_swigt__p_float,
  &_swigt__p_iBase,
  &_swigt__p_iCacheManager,
  &_swigt__p_iClipper2D,
  &_swigt__p_iCommandLineParser,
  &_swigt__p_iComponent,
  &_swigt__p_iConfigFile,
  &_swigt__p_iConfigIterator,
  &_swigt__p_iConfigManager,
  &_swigt__p_iDataBuffer,
  &_swigt__p_iDebugHelper,
  &_swigt__p_iDocument,
  &_swigt__p_iDocumentAttribute,
  &_swigt__p_iDocumentAttributeIterator,
  &_swigt__p_iDocumentNode,
  &_swigt__p_iDocumentNodeIterator,
  &_swigt__p_iDocumentSystem,
  &_swigt__p_iEvent,
  &_swigt__p_iEventAttributeIterator,
  &_swigt__p_iEventCord,
  &_swigt__p_iEventHandler,
  &_swigt__p_iEventNameRegistry,
  &_swigt__p_iEventOutlet,
  &_swigt__p_iEventPlug,
  &_swigt__p_iEventQueue,
  &_swigt__p_iFactory,
  &_swigt__p_iFile,
  &_swigt__p_iFrameEventSignpost,
  &_swigt__p_iGraphics2D,
  &_swigt__p_iGraphics3D,
  &_swigt__p_iJob,
  &_swigt__p_iJoystickDriver,
  &_swigt__p_iKeyComposer,
  &_swigt__p_iKeyboardDriver,
  &_swigt__p_iMouseDriver,
  &_swigt__p_iObject,
  &_swigt__p_iObjectIterator,
  &_swigt__p_iObjectNameChangeListener,
  &_swigt__p_iObjectRegistry,
  &_swigt__p_iObjectRegistryIterator,
  &_swigt__p_iPath,
  &_swigt__p_iPluginIterator,
  &_swigt__p_iPluginManager,
  &_swigt__p_iReporter,
  &_swigt__p_iReporterIterator,
  &_swigt__p_iReporterListener,
  &_swigt__p_iSCF,
  &_swigt__p_iString,
  &_swigt__p_iStringArray,
  &_swigt__p_iStringSet,
  &_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t,
  &_swigt__p_iSystemOpenManager,
  &_swigt__p_iThreadManager,
  &_swigt__p_iThreadReturn,
  &_swigt__p_iTriangleMesh,
  &_swigt__p_iVFS,
  &_swigt__p_iVerbosityManager,
  &_swigt__p_iVirtualClock,
  &_swigt__p_int,
  &_swigt__p_int16_t,
  &_swigt__p_int64_t,
  &_swigt__p_int8_t,
  &_swigt__p_intptr_t,
  &_swigt__p_long_long,
  &_swigt__p_p_char,
  &_swigt__p_p_void,
  &_swigt__p_scfImplementation1T__csPyEventHandler_iEventHandler_t,
  &_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  &_swigt__p_scfImplementation1T_csObject_iObject_t,
  &_swigt__p_scfImplementation1T_csPyEventPlug_iEventPlug_t,
  &_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  &_swigt__p_scfInterfaceMetadata,
  &_swigt__p_scfInterfaceMetadataList,
  &_swigt__p_size_t,
  &_swigt__p_uint16_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_uint8_t,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_utf32_char,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_AllocatorType[] = {  {&_swigt__p_AllocatorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Memory__AllocatorMalloc[] = {  {&_swigt__p_CS__Memory__AllocatorMalloc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Memory__CustomAllocated[] = {  {&_swigt__p_CS__Memory__CustomAllocated, 0, 0, 0},  {&_swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__StringIDT_CS__StringSetTag__General_t[] = {  {&_swigt__p_CS__StringIDT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Threading__Condition[] = {  {&_swigt__p_CS__Threading__Condition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Threading__Mutex[] = {  {&_swigt__p_CS__Threading__Mutex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Utility__InternalRefCount[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_CS__Utility__InternalRefCount, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_CS__Utility__InternalRefCount, 0, 0},  {&_swigt__p_CS__Utility__InternalRefCount, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t[] = {  {&_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CapacityHandlerType[] = {  {&_swigt__p_CapacityHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ElementHandlerType[] = {  {&_swigt__p_ElementHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FILE[] = {  {&_swigt__p_FILE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FrameBegin3DDraw[] = {  {&_swigt__p_FrameBegin3DDraw, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FramePrinter[] = {  {&_swigt__p_FramePrinter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FrameSignpost_2DConsole[] = {  {&_swigt__p_FrameSignpost_2DConsole, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FrameSignpost_3D2D[] = {  {&_swigt__p_FrameSignpost_3D2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FrameSignpost_ConsoleDebug[] = {  {&_swigt__p_FrameSignpost_ConsoleDebug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FrameSignpost_DebugFrame[] = {  {&_swigt__p_FrameSignpost_DebugFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FrameSignpost_Logic3D[] = {  {&_swigt__p_FrameSignpost_Logic3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HashType[] = {  {&_swigt__p_HashType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TagType[] = {  {&_swigt__p_TagType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ThisType[] = {  {&_swigt__p_ThisType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ValueType[] = {  {&_swigt__p_ValueType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__1_basetype[] = {  {&_swigt__p__1_basetype, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyCharType[] = {  {&_swigt__p__csKeyCharType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyEventType[] = {  {&_swigt__p__csKeyEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierNumType[] = {  {&_swigt__p__csKeyModifierNumType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierType[] = {  {&_swigt__p__csKeyModifierType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifiers[] = {  {&_swigt__p__csKeyModifiers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csMouseEventType[] = {  {&_swigt__p__csMouseEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csPyEventHandler[] = {  {&_swigt__p__csPyEventHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityFixedGrowT_16_t[] = {  {&_swigt__p_csArrayCapacityFixedGrowT_16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityLinearT_csArrayThresholdVariable_t[] = {  {&_swigt__p_csArrayCapacityLinearT_csArrayThresholdVariable_t, 0, 0, 0},  {&_swigt__p_csArrayCapacityVariableGrow, _p_csArrayCapacityVariableGrowTo_p_csArrayCapacityLinearT_csArrayThresholdVariable_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityVariableGrow[] = {  {&_swigt__p_csArrayCapacityVariableGrow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayThresholdVariable[] = {  {&_swigt__p_csArrayThresholdVariable, 0, 0, 0},  {&_swigt__p_csArrayCapacityLinearT_csArrayThresholdVariable_t, _p_csArrayCapacityLinearT_csArrayThresholdVariable_tTo_p_csArrayThresholdVariable, 0, 0},  {&_swigt__p_csArrayCapacityVariableGrow, _p_csArrayCapacityVariableGrowTo_p_csArrayThresholdVariable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csBox2[] = {  {&_swigt__p_csBox2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csColor[] = {  {&_swigt__p_csColor, 0, 0, 0},  {&_swigt__p_csColor4, _p_csColor4To_p_csColor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csColor4[] = {  {&_swigt__p_csColor4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csCommandEventData[] = {  {&_swigt__p_csCommandEventData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csCommandEventHelper[] = {  {&_swigt__p_csCommandEventHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csCommandLineHelper[] = {  {&_swigt__p_csCommandLineHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csConfigFile[] = {  {&_swigt__p_csConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csEvent[] = {  {&_swigt__p_csEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csEventHandlerRegistry[] = {  {&_swigt__p_csEventHandlerRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csEventNameRegistry[] = {  {&_swigt__p_csEventNameRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csFileTime[] = {  {&_swigt__p_csFileTime, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csFlags[] = {  {&_swigt__p_csFlags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csHandlerID[] = {  {&_swigt__p_csHandlerID, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csInitializer[] = {  {&_swigt__p_csInitializer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csInputEventHelper[] = {  {&_swigt__p_csInputEventHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csJoystickEventData[] = {  {&_swigt__p_csJoystickEventData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csJoystickEventHelper[] = {  {&_swigt__p_csJoystickEventHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csKeyEventData[] = {  {&_swigt__p_csKeyEventData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csKeyEventHelper[] = {  {&_swigt__p_csKeyEventHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csMouseEventData[] = {  {&_swigt__p_csMouseEventData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csMouseEventHelper[] = {  {&_swigt__p_csMouseEventHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csObject[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_csObject, 0, 0},  {&_swigt__p_csObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPluginRequest[] = {  {&_swigt__p_csPluginRequest, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_iBase_t[] = {  {&_swigt__p_csPtrT_iBase_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_iKeyComposer_t[] = {  {&_swigt__p_csPtrT_iKeyComposer_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_iObjectRegistryIterator_t[] = {  {&_swigt__p_csPtrT_iObjectRegistryIterator_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPyEventPlug[] = {  {&_swigt__p_csPyEventPlug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRadixSorter[] = {  {&_swigt__p_csRadixSorter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefArrayT_iObject_t[] = {  {&_swigt__p_csRefArrayT_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefArrayT_iThreadReturn_t[] = {  {&_swigt__p_csRefArrayT_iThreadReturn_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefCount[] = {  {&_swigt__p_csRefCount, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iBase_t[] = {  {&_swigt__p_csRefT_iBase_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iDocumentAttribute_t[] = {  {&_swigt__p_csRefT_iDocumentAttribute_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iDocumentNodeIterator_t[] = {  {&_swigt__p_csRefT_iDocumentNodeIterator_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iDocumentNode_t[] = {  {&_swigt__p_csRefT_iDocumentNode_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iEventHandlerRegistry_t[] = {  {&_swigt__p_csRefT_iEventHandlerRegistry_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iEventHandler_t[] = {  {&_swigt__p_csRefT_iEventHandler_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iEventNameRegistry_t[] = {  {&_swigt__p_csRefT_iEventNameRegistry_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iEvent_t[] = {  {&_swigt__p_csRefT_iEvent_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iThreadReturn_t[] = {  {&_swigt__p_csRefT_iThreadReturn_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefT_iView_t[] = {  {&_swigt__p_csRefT_iView_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csReporterHelper[] = {  {&_swigt__p_csReporterHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t[] = {  {&_swigt__p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csString[] = {  {&_swigt__p_csString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csStringArray[] = {  {&_swigt__p_csStringArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csStringBase[] = {  {&_swigt__p_csStringBase, 0, 0, 0},  {&_swigt__p_csStringFastT_36_t, _p_csStringFastT_36_tTo_p_csStringBase, 0, 0},  {&_swigt__p_csString, _p_csStringTo_p_csStringBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csStringFastT_36_t[] = {  {&_swigt__p_csStringFastT_36_t, 0, 0, 0},  {&_swigt__p_csString, _p_csStringTo_p_csStringFastT_36_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTinyDocumentSystem[] = {  {&_swigt__p_csTinyDocumentSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangle[] = {  {&_swigt__p_csTriangle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector2[] = {  {&_swigt__p_csVector2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector3[] = {  {&_swigt__p_csVector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector4[] = {  {&_swigt__p_csVector4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVertexStatus[] = {  {&_swigt__p_csVertexStatus, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csWrapPtr[] = {  {&_swigt__p_csWrapPtr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iFile[] = {{&_swigt__p_f_p_iBase__p_iFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEventOutlet[] = {{&_swigt__p_f_p_iBase__p_iEventOutlet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iKeyComposer[] = {{&_swigt__p_f_p_iBase__p_iKeyComposer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iStringArray[] = {{&_swigt__p_f_p_iBase__p_iStringArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iFactory[] = {{&_swigt__p_f_p_iBase__p_iFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iFrameEventSignpost[] = {{&_swigt__p_f_p_iBase__p_iFrameEventSignpost, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t[] = {{&_swigt__p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t[] = {{&_swigt__p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEventNameRegistry[] = {{&_swigt__p_f_p_iBase__p_iEventNameRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iObjectRegistry[] = {{&_swigt__p_f_p_iBase__p_iObjectRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDocument[] = {{&_swigt__p_f_p_iBase__p_iDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEventQueue[] = {{&_swigt__p_f_p_iBase__p_iEventQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iKeyboardDriver[] = {{&_swigt__p_f_p_iBase__p_iKeyboardDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iObjectNameChangeListener[] = {{&_swigt__p_f_p_iBase__p_iObjectNameChangeListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iReporterListener[] = {{&_swigt__p_f_p_iBase__p_iReporterListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEvent[] = {{&_swigt__p_f_p_iBase__p_iEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t[] = {{&_swigt__p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iReporter[] = {{&_swigt__p_f_p_iBase__p_iReporter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDocumentSystem[] = {{&_swigt__p_f_p_iBase__p_iDocumentSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t[] = {{&_swigt__p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iPluginIterator[] = {{&_swigt__p_f_p_iBase__p_iPluginIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEventAttributeIterator[] = {{&_swigt__p_f_p_iBase__p_iEventAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iObjectRegistryIterator[] = {{&_swigt__p_f_p_iBase__p_iObjectRegistryIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iObjectIterator[] = {{&_swigt__p_f_p_iBase__p_iObjectIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iReporterIterator[] = {{&_swigt__p_f_p_iBase__p_iReporterIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iConfigIterator[] = {{&_swigt__p_f_p_iBase__p_iConfigIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDocumentAttributeIterator[] = {{&_swigt__p_f_p_iBase__p_iDocumentAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDocumentNodeIterator[] = {{&_swigt__p_f_p_iBase__p_iDocumentNodeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iClipper2D[] = {{&_swigt__p_f_p_iBase__p_iClipper2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iCommandLineParser[] = {{&_swigt__p_f_p_iBase__p_iCommandLineParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDataBuffer[] = {{&_swigt__p_f_p_iBase__p_iDataBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEventHandler[] = {{&_swigt__p_f_p_iBase__p_iEventHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p__csPyEventHandler[] = {{&_swigt__p_f_p_iBase__p__csPyEventHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iVFS[] = {{&_swigt__p_f_p_iBase__p_iVFS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iComponent[] = {{&_swigt__p_f_p_iBase__p_iComponent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iThreadReturn[] = {{&_swigt__p_f_p_iBase__p_iThreadReturn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iSCF[] = {{&_swigt__p_f_p_iBase__p_iSCF, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iMouseDriver[] = {{&_swigt__p_f_p_iBase__p_iMouseDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iJoystickDriver[] = {{&_swigt__p_f_p_iBase__p_iJoystickDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t[] = {{&_swigt__p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t[] = {{&_swigt__p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iConfigFile[] = {{&_swigt__p_f_p_iBase__p_iConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_csConfigFile[] = {{&_swigt__p_f_p_iBase__p_csConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEventPlug[] = {{&_swigt__p_f_p_iBase__p_iEventPlug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_csObject[] = {{&_swigt__p_f_p_iBase__p_csObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iObject[] = {{&_swigt__p_f_p_iBase__p_iObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDocumentAttribute[] = {{&_swigt__p_f_p_iBase__p_iDocumentAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_csPyEventPlug[] = {{&_swigt__p_f_p_iBase__p_csPyEventPlug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDocumentNode[] = {{&_swigt__p_f_p_iBase__p_iDocumentNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iString[] = {{&_swigt__p_f_p_iBase__p_iString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iPath[] = {{&_swigt__p_f_p_iBase__p_iPath, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iStringSet[] = {{&_swigt__p_f_p_iBase__p_iStringSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iVirtualClock[] = {{&_swigt__p_f_p_iBase__p_iVirtualClock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iDebugHelper[] = {{&_swigt__p_f_p_iBase__p_iDebugHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iTriangleMesh[] = {{&_swigt__p_f_p_iBase__p_iTriangleMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iEventCord[] = {{&_swigt__p_f_p_iBase__p_iEventCord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iPluginManager[] = {{&_swigt__p_f_p_iBase__p_iPluginManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iThreadManager[] = {{&_swigt__p_f_p_iBase__p_iThreadManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iCacheManager[] = {{&_swigt__p_f_p_iBase__p_iCacheManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iConfigManager[] = {{&_swigt__p_f_p_iBase__p_iConfigManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_iBase__p_iBase[] = {  {&_swigt__p_f_p_iBase__p_iFile, _p_f_p_iBase__p_iFileTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iEventOutlet, _p_f_p_iBase__p_iEventOutletTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iKeyComposer, _p_f_p_iBase__p_iKeyComposerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iStringArray, _p_f_p_iBase__p_iStringArrayTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iFactory, _p_f_p_iBase__p_iFactoryTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iFrameEventSignpost, _p_f_p_iBase__p_iFrameEventSignpostTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t, _p_f_p_iBase__p_scfImplementation1T_csObject_iObject_tTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t, _p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_tTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iBase, 0, 0, 0},  {&_swigt__p_f_p_iBase__p_iEventNameRegistry, _p_f_p_iBase__p_iEventNameRegistryTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iObjectRegistry, _p_f_p_iBase__p_iObjectRegistryTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDocument, _p_f_p_iBase__p_iDocumentTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iEventQueue, _p_f_p_iBase__p_iEventQueueTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iKeyboardDriver, _p_f_p_iBase__p_iKeyboardDriverTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iObjectNameChangeListener, _p_f_p_iBase__p_iObjectNameChangeListenerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iReporterListener, _p_f_p_iBase__p_iReporterListenerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iEvent, _p_f_p_iBase__p_iEventTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t, _p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_tTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iReporter, _p_f_p_iBase__p_iReporterTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDocumentSystem, _p_f_p_iBase__p_iDocumentSystemTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t, _p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iPluginIterator, _p_f_p_iBase__p_iPluginIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iEventAttributeIterator, _p_f_p_iBase__p_iEventAttributeIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iObjectRegistryIterator, _p_f_p_iBase__p_iObjectRegistryIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iObjectIterator, _p_f_p_iBase__p_iObjectIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iReporterIterator, _p_f_p_iBase__p_iReporterIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iConfigIterator, _p_f_p_iBase__p_iConfigIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDocumentAttributeIterator, _p_f_p_iBase__p_iDocumentAttributeIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDocumentNodeIterator, _p_f_p_iBase__p_iDocumentNodeIteratorTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iClipper2D, _p_f_p_iBase__p_iClipper2DTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iCommandLineParser, _p_f_p_iBase__p_iCommandLineParserTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDataBuffer, _p_f_p_iBase__p_iDataBufferTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iEventHandler, _p_f_p_iBase__p_iEventHandlerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p__csPyEventHandler, _p_f_p_iBase__p__csPyEventHandlerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iVFS, _p_f_p_iBase__p_iVFSTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iComponent, _p_f_p_iBase__p_iComponentTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iThreadReturn, _p_f_p_iBase__p_iThreadReturnTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iSCF, _p_f_p_iBase__p_iSCFTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iMouseDriver, _p_f_p_iBase__p_iMouseDriverTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iJoystickDriver, _p_f_p_iBase__p_iJoystickDriverTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t, _p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iConfigFile, _p_f_p_iBase__p_iConfigFileTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_csConfigFile, _p_f_p_iBase__p_csConfigFileTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iEventPlug, _p_f_p_iBase__p_iEventPlugTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_csObject, _p_f_p_iBase__p_csObjectTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iObject, _p_f_p_iBase__p_iObjectTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDocumentAttribute, _p_f_p_iBase__p_iDocumentAttributeTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_csPyEventPlug, _p_f_p_iBase__p_csPyEventPlugTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDocumentNode, _p_f_p_iBase__p_iDocumentNodeTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iString, _p_f_p_iBase__p_iStringTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iPath, _p_f_p_iBase__p_iPathTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iStringSet, _p_f_p_iBase__p_iStringSetTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iVirtualClock, _p_f_p_iBase__p_iVirtualClockTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iDebugHelper, _p_f_p_iBase__p_iDebugHelperTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iTriangleMesh, _p_f_p_iBase__p_iTriangleMeshTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iEventCord, _p_f_p_iBase__p_iEventCordTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iPluginManager, _p_f_p_iBase__p_iPluginManagerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iThreadManager, _p_f_p_iBase__p_iThreadManagerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iCacheManager, _p_f_p_iBase__p_iCacheManagerTo_p_f_p_iBase__p_iBase, 0, 0},  {&_swigt__p_f_p_iBase__p_iConfigManager, _p_f_p_iBase__p_iConfigManagerTo_p_f_p_iBase__p_iBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iString[] = {{&_swigt__p_iString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBase[] = {  {&_swigt__p_iFile, _p_iFileTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, _p_scfImplementation1T_csObject_iObject_tTo_p_iBase, 0, 0},  {&_swigt__p_iEventOutlet, _p_iEventOutletTo_p_iBase, 0, 0},  {&_swigt__p_iKeyComposer, _p_iKeyComposerTo_p_iBase, 0, 0},  {&_swigt__p_iStringArray, _p_iStringArrayTo_p_iBase, 0, 0},  {&_swigt__p_iFactory, _p_iFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iFrameEventSignpost, _p_iFrameEventSignpostTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase, 0, 0},  {&_swigt__p_iBase, 0, 0, 0},  {&_swigt__p_iEventNameRegistry, _p_iEventNameRegistryTo_p_iBase, 0, 0},  {&_swigt__p_iObjectRegistry, _p_iObjectRegistryTo_p_iBase, 0, 0},  {&_swigt__p_iDocument, _p_iDocumentTo_p_iBase, 0, 0},  {&_swigt__p_iEventQueue, _p_iEventQueueTo_p_iBase, 0, 0},  {&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, _p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase, 0, 0},  {&_swigt__p_iKeyboardDriver, _p_iKeyboardDriverTo_p_iBase, 0, 0},  {&_swigt__p_iObjectNameChangeListener, _p_iObjectNameChangeListenerTo_p_iBase, 0, 0},  {&_swigt__p_iReporterListener, _p_iReporterListenerTo_p_iBase, 0, 0},  {&_swigt__p_iEvent, _p_iEventTo_p_iBase, 0, 0},  {&_swigt__p_iReporter, _p_iReporterTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentSystem, _p_iDocumentSystemTo_p_iBase, 0, 0},  {&_swigt__p_iPluginIterator, _p_iPluginIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iEventAttributeIterator, _p_iEventAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectRegistryIterator, _p_iObjectRegistryIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectIterator, _p_iObjectIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iReporterIterator, _p_iReporterIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iConfigIterator, _p_iConfigIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttributeIterator, _p_iDocumentAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNodeIterator, _p_iDocumentNodeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iClipper2D, _p_iClipper2DTo_p_iBase, 0, 0},  {&_swigt__p_iCommandLineParser, _p_iCommandLineParserTo_p_iBase, 0, 0},  {&_swigt__p_iDataBuffer, _p_iDataBufferTo_p_iBase, 0, 0},  {&_swigt__p__csPyEventHandler, _p__csPyEventHandlerTo_p_iBase, 0, 0},  {&_swigt__p_iEventHandler, _p_iEventHandlerTo_p_iBase, 0, 0},  {&_swigt__p_iVFS, _p_iVFSTo_p_iBase, 0, 0},  {&_swigt__p_iComponent, _p_iComponentTo_p_iBase, 0, 0},  {&_swigt__p_iThreadReturn, _p_iThreadReturnTo_p_iBase, 0, 0},  {&_swigt__p_iSCF, _p_iSCFTo_p_iBase, 0, 0},  {&_swigt__p_iMouseDriver, _p_iMouseDriverTo_p_iBase, 0, 0},  {&_swigt__p_iJoystickDriver, _p_iJoystickDriverTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csPyEventPlug_iEventPlug_t, _p_scfImplementation1T_csPyEventPlug_iEventPlug_tTo_p_iBase, 0, 0},  {&_swigt__p_iConfigFile, _p_iConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_csConfigFile, _p_csConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_iBase, 0, 0},  {&_swigt__p_csPyEventPlug, _p_csPyEventPlugTo_p_iBase, 0, 0},  {&_swigt__p_iEventPlug, _p_iEventPlugTo_p_iBase, 0, 0},  {&_swigt__p_iObject, _p_iObjectTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttribute, _p_iDocumentAttributeTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T__csPyEventHandler_iEventHandler_t, _p_scfImplementation1T__csPyEventHandler_iEventHandler_tTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNode, _p_iDocumentNodeTo_p_iBase, 0, 0},  {&_swigt__p_iString, _p_iStringTo_p_iBase, 0, 0},  {&_swigt__p_iPath, _p_iPathTo_p_iBase, 0, 0},  {&_swigt__p_iStringSet, _p_iStringSetTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, _p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase, 0, 0},  {&_swigt__p_iVirtualClock, _p_iVirtualClockTo_p_iBase, 0, 0},  {&_swigt__p_iDebugHelper, _p_iDebugHelperTo_p_iBase, 0, 0},  {&_swigt__p_iTriangleMesh, _p_iTriangleMeshTo_p_iBase, 0, 0},  {&_swigt__p_iConfigManager, _p_iConfigManagerTo_p_iBase, 0, 0},  {&_swigt__p_iEventCord, _p_iEventCordTo_p_iBase, 0, 0},  {&_swigt__p_iPluginManager, _p_iPluginManagerTo_p_iBase, 0, 0},  {&_swigt__p_iThreadManager, _p_iThreadManagerTo_p_iBase, 0, 0},  {&_swigt__p_iCacheManager, _p_iCacheManagerTo_p_iBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCacheManager[] = {  {&_swigt__p_iCacheManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iClipper2D[] = {  {&_swigt__p_iClipper2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCommandLineParser[] = {  {&_swigt__p_iCommandLineParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iComponent[] = {  {&_swigt__p_iComponent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigFile[] = {  {&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, _p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iConfigFile, 0, 0},  {&_swigt__p_iConfigManager, _p_iConfigManagerTo_p_iConfigFile, 0, 0},  {&_swigt__p_iConfigFile, 0, 0, 0},  {&_swigt__p_csConfigFile, _p_csConfigFileTo_p_iConfigFile, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigIterator[] = {  {&_swigt__p_iConfigIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigManager[] = {  {&_swigt__p_iConfigManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDataBuffer[] = {  {&_swigt__p_iDataBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDebugHelper[] = {  {&_swigt__p_iDebugHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocument[] = {  {&_swigt__p_iDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttribute[] = {  {&_swigt__p_iDocumentAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttributeIterator[] = {  {&_swigt__p_iDocumentAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNode[] = {  {&_swigt__p_iDocumentNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNodeIterator[] = {  {&_swigt__p_iDocumentNodeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentSystem[] = {  {&_swigt__p_iDocumentSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEvent[] = {  {&_swigt__p_iEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventAttributeIterator[] = {  {&_swigt__p_iEventAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventCord[] = {  {&_swigt__p_iEventCord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventHandler[] = {  {&_swigt__p_iEventHandler, 0, 0, 0},  {&_swigt__p__csPyEventHandler, _p__csPyEventHandlerTo_p_iEventHandler, 0, 0},  {&_swigt__p_scfImplementation1T__csPyEventHandler_iEventHandler_t, _p_scfImplementation1T__csPyEventHandler_iEventHandler_tTo_p_iEventHandler, 0, 0},  {&_swigt__p_iFrameEventSignpost, _p_iFrameEventSignpostTo_p_iEventHandler, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventNameRegistry[] = {  {&_swigt__p_iEventNameRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventOutlet[] = {  {&_swigt__p_iEventOutlet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventPlug[] = {  {&_swigt__p_iEventPlug, 0, 0, 0},  {&_swigt__p_csPyEventPlug, _p_csPyEventPlugTo_p_iEventPlug, 0, 0},  {&_swigt__p_scfImplementation1T_csPyEventPlug_iEventPlug_t, _p_scfImplementation1T_csPyEventPlug_iEventPlug_tTo_p_iEventPlug, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventQueue[] = {  {&_swigt__p_iEventQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFactory[] = {  {&_swigt__p_iFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFile[] = {  {&_swigt__p_iFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFrameEventSignpost[] = {  {&_swigt__p_iFrameEventSignpost, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGraphics2D[] = {  {&_swigt__p_iGraphics2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGraphics3D[] = {  {&_swigt__p_iGraphics3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iJob[] = {  {&_swigt__p_iJob, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iJoystickDriver[] = {  {&_swigt__p_iJoystickDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyComposer[] = {  {&_swigt__p_iKeyComposer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyboardDriver[] = {  {&_swigt__p_iKeyboardDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMouseDriver[] = {  {&_swigt__p_iMouseDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObject[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iObject, 0, 0},  {&_swigt__p_iObject, 0, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_iObject, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, _p_scfImplementation1T_csObject_iObject_tTo_p_iObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectIterator[] = {  {&_swigt__p_iObjectIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectNameChangeListener[] = {  {&_swigt__p_iObjectNameChangeListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistry[] = {  {&_swigt__p_iObjectRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistryIterator[] = {  {&_swigt__p_iObjectRegistryIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPath[] = {  {&_swigt__p_iPath, 0, 0, 0},  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iPath, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginIterator[] = {  {&_swigt__p_iPluginIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginManager[] = {  {&_swigt__p_iPluginManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporter[] = {  {&_swigt__p_iReporter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterIterator[] = {  {&_swigt__p_iReporterIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterListener[] = {  {&_swigt__p_iReporterListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSCF[] = {  {&_swigt__p_iSCF, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringArray[] = {  {&_swigt__p_iStringArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSet[] = {  {&_swigt__p_iStringSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t[] = {  {&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, 0, 0, 0},  {&_swigt__p_iStringSet, _p_iStringSetTo_p_iStringSetBaseT_CS__StringSetTag__General_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSystemOpenManager[] = {  {&_swigt__p_iSystemOpenManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadManager[] = {  {&_swigt__p_iThreadManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadReturn[] = {  {&_swigt__p_iThreadReturn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTriangleMesh[] = {  {&_swigt__p_iTriangleMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVFS[] = {  {&_swigt__p_iVFS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVerbosityManager[] = {  {&_swigt__p_iVerbosityManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVirtualClock[] = {  {&_swigt__p_iVirtualClock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int16_t[] = {  {&_swigt__p_int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int8_t[] = {  {&_swigt__p_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_intptr_t[] = {  {&_swigt__p_intptr_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T__csPyEventHandler_iEventHandler_t[] = {  {&_swigt__p__csPyEventHandler, _p__csPyEventHandlerTo_p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0, 0},  {&_swigt__p_scfImplementation1T__csPyEventHandler_iEventHandler_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t[] = {  {&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, 0, 0, 0},  {&_swigt__p_csConfigFile, _p_csConfigFileTo_p_scfImplementation1T_csConfigFile_iConfigFile_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csObject_iObject_t[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_scfImplementation1T_csObject_iObject_t, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_scfImplementation1T_csObject_iObject_t, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csPyEventPlug_iEventPlug_t[] = {  {&_swigt__p_csPyEventPlug, _p_csPyEventPlugTo_p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0, 0},  {&_swigt__p_scfImplementation1T_csPyEventPlug_iEventPlug_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfInterfaceMetadata[] = {  {&_swigt__p_scfInterfaceMetadata, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfInterfaceMetadataList[] = {  {&_swigt__p_scfInterfaceMetadataList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint16_t[] = {  {&_swigt__p_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_utf32_char[] = {  {&_swigt__p_utf32_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_AllocatorType,
  _swigc__p_CS__Memory__AllocatorMalloc,
  _swigc__p_CS__Memory__CustomAllocated,
  _swigc__p_CS__StringIDT_CS__StringSetTag__General_t,
  _swigc__p_CS__Threading__Condition,
  _swigc__p_CS__Threading__Mutex,
  _swigc__p_CS__Utility__InternalRefCount,
  _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t,
  _swigc__p_CapacityHandlerType,
  _swigc__p_ElementHandlerType,
  _swigc__p_FILE,
  _swigc__p_FrameBegin3DDraw,
  _swigc__p_FramePrinter,
  _swigc__p_FrameSignpost_2DConsole,
  _swigc__p_FrameSignpost_3D2D,
  _swigc__p_FrameSignpost_ConsoleDebug,
  _swigc__p_FrameSignpost_DebugFrame,
  _swigc__p_FrameSignpost_Logic3D,
  _swigc__p_HashType,
  _swigc__p_TagType,
  _swigc__p_ThisType,
  _swigc__p_ValueType,
  _swigc__p__1_basetype,
  _swigc__p__csKeyCharType,
  _swigc__p__csKeyEventType,
  _swigc__p__csKeyModifierNumType,
  _swigc__p__csKeyModifierType,
  _swigc__p__csKeyModifiers,
  _swigc__p__csMouseEventType,
  _swigc__p__csPyEventHandler,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_csArrayCapacityFixedGrowT_16_t,
  _swigc__p_csArrayCapacityLinearT_csArrayThresholdVariable_t,
  _swigc__p_csArrayCapacityVariableGrow,
  _swigc__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayThresholdVariable,
  _swigc__p_csBox2,
  _swigc__p_csColor,
  _swigc__p_csColor4,
  _swigc__p_csCommandEventData,
  _swigc__p_csCommandEventHelper,
  _swigc__p_csCommandLineHelper,
  _swigc__p_csConfigFile,
  _swigc__p_csDirtyAccessArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csDirtyAccessArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csDirtyAccessArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csDirtyAccessArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csEvent,
  _swigc__p_csEventHandlerRegistry,
  _swigc__p_csEventNameRegistry,
  _swigc__p_csFileTime,
  _swigc__p_csFlags,
  _swigc__p_csHandlerID,
  _swigc__p_csInitializer,
  _swigc__p_csInputEventHelper,
  _swigc__p_csJoystickEventData,
  _swigc__p_csJoystickEventHelper,
  _swigc__p_csKeyEventData,
  _swigc__p_csKeyEventHelper,
  _swigc__p_csMouseEventData,
  _swigc__p_csMouseEventHelper,
  _swigc__p_csObject,
  _swigc__p_csPluginRequest,
  _swigc__p_csPtrT_iBase_t,
  _swigc__p_csPtrT_iKeyComposer_t,
  _swigc__p_csPtrT_iObjectRegistryIterator_t,
  _swigc__p_csPyEventPlug,
  _swigc__p_csRadixSorter,
  _swigc__p_csRefArrayT_iObject_t,
  _swigc__p_csRefArrayT_iThreadReturn_t,
  _swigc__p_csRefCount,
  _swigc__p_csRefT_iBase_t,
  _swigc__p_csRefT_iDocumentAttribute_t,
  _swigc__p_csRefT_iDocumentNodeIterator_t,
  _swigc__p_csRefT_iDocumentNode_t,
  _swigc__p_csRefT_iEventHandlerRegistry_t,
  _swigc__p_csRefT_iEventHandler_t,
  _swigc__p_csRefT_iEventNameRegistry_t,
  _swigc__p_csRefT_iEvent_t,
  _swigc__p_csRefT_iThreadReturn_t,
  _swigc__p_csRefT_iView_t,
  _swigc__p_csReporterHelper,
  _swigc__p_csSetT_CS__StringIDT_CS__StringSetTag__General_t_CS__Memory__AllocatorMalloc_t,
  _swigc__p_csString,
  _swigc__p_csStringArray,
  _swigc__p_csStringBase,
  _swigc__p_csStringFastT_36_t,
  _swigc__p_csTinyDocumentSystem,
  _swigc__p_csTriangle,
  _swigc__p_csVector2,
  _swigc__p_csVector3,
  _swigc__p_csVector4,
  _swigc__p_csVertexStatus,
  _swigc__p_csWrapPtr,
  _swigc__p_double,
  _swigc__p_f_p_iBase__p__csPyEventHandler,
  _swigc__p_f_p_iBase__p_csConfigFile,
  _swigc__p_f_p_iBase__p_csObject,
  _swigc__p_f_p_iBase__p_csPyEventPlug,
  _swigc__p_f_p_iBase__p_iBase,
  _swigc__p_f_p_iBase__p_iCacheManager,
  _swigc__p_f_p_iBase__p_iClipper2D,
  _swigc__p_f_p_iBase__p_iCommandLineParser,
  _swigc__p_f_p_iBase__p_iComponent,
  _swigc__p_f_p_iBase__p_iConfigFile,
  _swigc__p_f_p_iBase__p_iConfigIterator,
  _swigc__p_f_p_iBase__p_iConfigManager,
  _swigc__p_f_p_iBase__p_iDataBuffer,
  _swigc__p_f_p_iBase__p_iDebugHelper,
  _swigc__p_f_p_iBase__p_iDocument,
  _swigc__p_f_p_iBase__p_iDocumentAttribute,
  _swigc__p_f_p_iBase__p_iDocumentAttributeIterator,
  _swigc__p_f_p_iBase__p_iDocumentNode,
  _swigc__p_f_p_iBase__p_iDocumentNodeIterator,
  _swigc__p_f_p_iBase__p_iDocumentSystem,
  _swigc__p_f_p_iBase__p_iEvent,
  _swigc__p_f_p_iBase__p_iEventAttributeIterator,
  _swigc__p_f_p_iBase__p_iEventCord,
  _swigc__p_f_p_iBase__p_iEventHandler,
  _swigc__p_f_p_iBase__p_iEventNameRegistry,
  _swigc__p_f_p_iBase__p_iEventOutlet,
  _swigc__p_f_p_iBase__p_iEventPlug,
  _swigc__p_f_p_iBase__p_iEventQueue,
  _swigc__p_f_p_iBase__p_iFactory,
  _swigc__p_f_p_iBase__p_iFile,
  _swigc__p_f_p_iBase__p_iFrameEventSignpost,
  _swigc__p_f_p_iBase__p_iJoystickDriver,
  _swigc__p_f_p_iBase__p_iKeyComposer,
  _swigc__p_f_p_iBase__p_iKeyboardDriver,
  _swigc__p_f_p_iBase__p_iMouseDriver,
  _swigc__p_f_p_iBase__p_iObject,
  _swigc__p_f_p_iBase__p_iObjectIterator,
  _swigc__p_f_p_iBase__p_iObjectNameChangeListener,
  _swigc__p_f_p_iBase__p_iObjectRegistry,
  _swigc__p_f_p_iBase__p_iObjectRegistryIterator,
  _swigc__p_f_p_iBase__p_iPath,
  _swigc__p_f_p_iBase__p_iPluginIterator,
  _swigc__p_f_p_iBase__p_iPluginManager,
  _swigc__p_f_p_iBase__p_iReporter,
  _swigc__p_f_p_iBase__p_iReporterIterator,
  _swigc__p_f_p_iBase__p_iReporterListener,
  _swigc__p_f_p_iBase__p_iSCF,
  _swigc__p_f_p_iBase__p_iString,
  _swigc__p_f_p_iBase__p_iStringArray,
  _swigc__p_f_p_iBase__p_iStringSet,
  _swigc__p_f_p_iBase__p_iStringSetBaseT_CS__StringSetTag__General_t,
  _swigc__p_f_p_iBase__p_iThreadManager,
  _swigc__p_f_p_iBase__p_iThreadReturn,
  _swigc__p_f_p_iBase__p_iTriangleMesh,
  _swigc__p_f_p_iBase__p_iVFS,
  _swigc__p_f_p_iBase__p_iVirtualClock,
  _swigc__p_f_p_iBase__p_scfImplementation1T__csPyEventHandler_iEventHandler_t,
  _swigc__p_f_p_iBase__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  _swigc__p_f_p_iBase__p_scfImplementation1T_csObject_iObject_t,
  _swigc__p_f_p_iBase__p_scfImplementation1T_csPyEventPlug_iEventPlug_t,
  _swigc__p_f_p_iBase__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  _swigc__p_float,
  _swigc__p_iBase,
  _swigc__p_iCacheManager,
  _swigc__p_iClipper2D,
  _swigc__p_iCommandLineParser,
  _swigc__p_iComponent,
  _swigc__p_iConfigFile,
  _swigc__p_iConfigIterator,
  _swigc__p_iConfigManager,
  _swigc__p_iDataBuffer,
  _swigc__p_iDebugHelper,
  _swigc__p_iDocument,
  _swigc__p_iDocumentAttribute,
  _swigc__p_iDocumentAttributeIterator,
  _swigc__p_iDocumentNode,
  _swigc__p_iDocumentNodeIterator,
  _swigc__p_iDocumentSystem,
  _swigc__p_iEvent,
  _swigc__p_iEventAttributeIterator,
  _swigc__p_iEventCord,
  _swigc__p_iEventHandler,
  _swigc__p_iEventNameRegistry,
  _swigc__p_iEventOutlet,
  _swigc__p_iEventPlug,
  _swigc__p_iEventQueue,
  _swigc__p_iFactory,
  _swigc__p_iFile,
  _swigc__p_iFrameEventSignpost,
  _swigc__p_iGraphics2D,
  _swigc__p_iGraphics3D,
  _swigc__p_iJob,
  _swigc__p_iJoystickDriver,
  _swigc__p_iKeyComposer,
  _swigc__p_iKeyboardDriver,
  _swigc__p_iMouseDriver,
  _swigc__p_iObject,
  _swigc__p_iObjectIterator,
  _swigc__p_iObjectNameChangeListener,
  _swigc__p_iObjectRegistry,
  _swigc__p_iObjectRegistryIterator,
  _swigc__p_iPath,
  _swigc__p_iPluginIterator,
  _swigc__p_iPluginManager,
  _swigc__p_iReporter,
  _swigc__p_iReporterIterator,
  _swigc__p_iReporterListener,
  _swigc__p_iSCF,
  _swigc__p_iString,
  _swigc__p_iStringArray,
  _swigc__p_iStringSet,
  _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t,
  _swigc__p_iSystemOpenManager,
  _swigc__p_iThreadManager,
  _swigc__p_iThreadReturn,
  _swigc__p_iTriangleMesh,
  _swigc__p_iVFS,
  _swigc__p_iVerbosityManager,
  _swigc__p_iVirtualClock,
  _swigc__p_int,
  _swigc__p_int16_t,
  _swigc__p_int64_t,
  _swigc__p_int8_t,
  _swigc__p_intptr_t,
  _swigc__p_long_long,
  _swigc__p_p_char,
  _swigc__p_p_void,
  _swigc__p_scfImplementation1T__csPyEventHandler_iEventHandler_t,
  _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  _swigc__p_scfImplementation1T_csObject_iObject_t,
  _swigc__p_scfImplementation1T_csPyEventPlug_iEventPlug_t,
  _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  _swigc__p_scfInterfaceMetadata,
  _swigc__p_scfInterfaceMetadataList,
  _swigc__p_size_t,
  _swigc__p_uint16_t,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_uint8_t,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_long_long,
  _swigc__p_utf32_char,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  SWIG_Python_SetConstant(d, "CS_COMPILER_NAME",SWIG_FromCharPtr("GCC"));
  SWIG_Python_SetConstant(d, "CS_PLATFORM_NAME",SWIG_FromCharPtr("Unix"));
  SWIG_Python_SetConstant(d, "CS_PROCESSOR_SIZE",SWIG_From_int(static_cast< int >(32)));
  SWIG_Python_SetConstant(d, "CS_LONG_SIZE",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "CS_PROCESSOR_NAME",SWIG_FromCharPtr("x86"));
  SWIG_Python_SetConstant(d, "CS_WCHAR_T_SIZE",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "CS_PACKAGE_NAME",SWIG_FromCharPtr("crystalspace"));
  SWIG_Python_SetConstant(d, "CS_PACKAGE_VERSION",SWIG_FromCharPtr("1.9"));
  PyDict_SetItemString(d,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"csArrayItemNotFound",Swig_var_csArrayItemNotFound_get, Swig_var_csArrayItemNotFound_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"iSCF_SCF",Swig_var_iSCF_SCF_get, Swig_var_iSCF_SCF_set);
  SWIG_Python_SetConstant(d, "SCF_STATIC_CLASS_CONTEXT",SWIG_FromCharPtr("*static*"));
  SWIG_Python_SetConstant(d, "SCF_VERBOSE_NONE",SWIG_From_int(static_cast< int >(SCF_VERBOSE_NONE)));
  SWIG_Python_SetConstant(d, "SCF_VERBOSE_PLUGIN_SCAN",SWIG_From_int(static_cast< int >(SCF_VERBOSE_PLUGIN_SCAN)));
  SWIG_Python_SetConstant(d, "SCF_VERBOSE_PLUGIN_LOAD",SWIG_From_int(static_cast< int >(SCF_VERBOSE_PLUGIN_LOAD)));
  SWIG_Python_SetConstant(d, "SCF_VERBOSE_PLUGIN_REGISTER",SWIG_From_int(static_cast< int >(SCF_VERBOSE_PLUGIN_REGISTER)));
  SWIG_Python_SetConstant(d, "SCF_VERBOSE_CLASS_REGISTER",SWIG_From_int(static_cast< int >(SCF_VERBOSE_CLASS_REGISTER)));
  SWIG_Python_SetConstant(d, "SCF_VERBOSE_ALL",SWIG_From_int(static_cast< int >(SCF_VERBOSE_ALL)));
  SWIG_Python_SetConstant(d, "THREADED",SWIG_From_int(static_cast< int >(THREADED)));
  SWIG_Python_SetConstant(d, "THREADEDL",SWIG_From_int(static_cast< int >(THREADEDL)));
  SWIG_Python_SetConstant(d, "HIGH",SWIG_From_int(static_cast< int >(HIGH)));
  SWIG_Python_SetConstant(d, "MED",SWIG_From_int(static_cast< int >(MED)));
  SWIG_Python_SetConstant(d, "LOW",SWIG_From_int(static_cast< int >(LOW)));
  SWIG_Python_SetConstant(d, "CS_DBGHELP_BENCHMARK",SWIG_From_int(static_cast< int >(CS_DBGHELP_BENCHMARK)));
  SWIG_Python_SetConstant(d, "CS_DBGHELP_TXTDUMP",SWIG_From_int(static_cast< int >(CS_DBGHELP_TXTDUMP)));
  SWIG_Python_SetConstant(d, "CS_DBGHELP_GFXDUMP",SWIG_From_int(static_cast< int >(CS_DBGHELP_GFXDUMP)));
  SWIG_Python_SetConstant(d, "CS_DBGHELP_STATETEST",SWIG_From_int(static_cast< int >(CS_DBGHELP_STATETEST)));
  SWIG_Python_SetConstant(d, "CS_REPORTER_SEVERITY_BUG",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CS_REPORTER_SEVERITY_ERROR",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "CS_REPORTER_SEVERITY_WARNING",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "CS_REPORTER_SEVERITY_NOTIFY",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "CS_REPORTER_SEVERITY_DEBUG",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "VFS_PATH_DIVIDER",SWIG_From_char(static_cast< char >(',')));
  SWIG_Python_SetConstant(d, "VFS_PATH_SEPARATOR",SWIG_From_char(static_cast< char >('/')));
  SWIG_Python_SetConstant(d, "VFS_MAX_PATH_LEN",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "VFS_FILE_MODE",SWIG_From_int(static_cast< int >(0x0000000f)));
  SWIG_Python_SetConstant(d, "VFS_FILE_READ",SWIG_From_int(static_cast< int >(0x00000000)));
  SWIG_Python_SetConstant(d, "VFS_FILE_WRITE",SWIG_From_int(static_cast< int >(0x00000001)));
  SWIG_Python_SetConstant(d, "VFS_FILE_APPEND",SWIG_From_int(static_cast< int >(0x00000002)));
  SWIG_Python_SetConstant(d, "VFS_FILE_UNCOMPRESSED",SWIG_From_int(static_cast< int >(0x80000000)));
  SWIG_Python_SetConstant(d, "VFS_STATUS_OK",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "VFS_STATUS_OTHER",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "VFS_STATUS_NOSPACE",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "VFS_STATUS_RESOURCES",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "VFS_STATUS_ACCESSDENIED",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "VFS_STATUS_IOERROR",SWIG_From_int(static_cast< int >(5)));
  SWIG_Python_SetConstant(d, "CS_MAX_MOUSE_COUNT",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "CS_MAX_MOUSE_AXES",SWIG_From_int(static_cast< int >(8)));
  SWIG_Python_SetConstant(d, "CS_MAX_MOUSE_BUTTONS",SWIG_From_int(static_cast< int >(10)));
  SWIG_Python_SetConstant(d, "CS_MAX_JOYSTICK_COUNT",SWIG_From_int(static_cast< int >(16)));
  SWIG_Python_SetConstant(d, "CS_MAX_JOYSTICK_BUTTONS",SWIG_From_int(static_cast< int >(32)));
  SWIG_Python_SetConstant(d, "CS_MAX_JOYSTICK_AXES",SWIG_From_int(static_cast< int >(8)));
  SWIG_Python_SetConstant(d, "csEventErrNone",SWIG_From_int(static_cast< int >(csEventErrNone)));
  SWIG_Python_SetConstant(d, "csEventErrLossy",SWIG_From_int(static_cast< int >(csEventErrLossy)));
  SWIG_Python_SetConstant(d, "csEventErrNotFound",SWIG_From_int(static_cast< int >(csEventErrNotFound)));
  SWIG_Python_SetConstant(d, "csEventErrMismatchInt",SWIG_From_int(static_cast< int >(csEventErrMismatchInt)));
  SWIG_Python_SetConstant(d, "csEventErrMismatchUInt",SWIG_From_int(static_cast< int >(csEventErrMismatchUInt)));
  SWIG_Python_SetConstant(d, "csEventErrMismatchFloat",SWIG_From_int(static_cast< int >(csEventErrMismatchFloat)));
  SWIG_Python_SetConstant(d, "csEventErrMismatchBuffer",SWIG_From_int(static_cast< int >(csEventErrMismatchBuffer)));
  SWIG_Python_SetConstant(d, "csEventErrMismatchEvent",SWIG_From_int(static_cast< int >(csEventErrMismatchEvent)));
  SWIG_Python_SetConstant(d, "csEventErrMismatchIBase",SWIG_From_int(static_cast< int >(csEventErrMismatchIBase)));
  SWIG_Python_SetConstant(d, "csEventErrUhOhUnknown",SWIG_From_int(static_cast< int >(csEventErrUhOhUnknown)));
  SWIG_Python_SetConstant(d, "csEventAttrUnknown",SWIG_From_int(static_cast< int >(csEventAttrUnknown)));
  SWIG_Python_SetConstant(d, "csEventAttrInt",SWIG_From_int(static_cast< int >(csEventAttrInt)));
  SWIG_Python_SetConstant(d, "csEventAttrUInt",SWIG_From_int(static_cast< int >(csEventAttrUInt)));
  SWIG_Python_SetConstant(d, "csEventAttrFloat",SWIG_From_int(static_cast< int >(csEventAttrFloat)));
  SWIG_Python_SetConstant(d, "csEventAttrDatabuffer",SWIG_From_int(static_cast< int >(csEventAttrDatabuffer)));
  SWIG_Python_SetConstant(d, "csEventAttrEvent",SWIG_From_int(static_cast< int >(csEventAttrEvent)));
  SWIG_Python_SetConstant(d, "csEventAttriBase",SWIG_From_int(static_cast< int >(csEventAttriBase)));
  SWIG_Python_SetConstant(d, "csKeyEventTypeUp",SWIG_From_int(static_cast< int >(csKeyEventTypeUp)));
  SWIG_Python_SetConstant(d, "csKeyEventTypeDown",SWIG_From_int(static_cast< int >(csKeyEventTypeDown)));
  SWIG_Python_SetConstant(d, "csMouseEventTypeMove",SWIG_From_int(static_cast< int >(csMouseEventTypeMove)));
  SWIG_Python_SetConstant(d, "csMouseEventTypeUp",SWIG_From_int(static_cast< int >(csMouseEventTypeUp)));
  SWIG_Python_SetConstant(d, "csMouseEventTypeDown",SWIG_From_int(static_cast< int >(csMouseEventTypeDown)));
  SWIG_Python_SetConstant(d, "csMouseEventTypeClick",SWIG_From_int(static_cast< int >(csMouseEventTypeClick)));
  SWIG_Python_SetConstant(d, "csMouseEventTypeDoubleClick",SWIG_From_int(static_cast< int >(csMouseEventTypeDoubleClick)));
  SWIG_Python_SetConstant(d, "csmbNone",SWIG_From_int(static_cast< int >(csmbNone)));
  SWIG_Python_SetConstant(d, "csmbLeft",SWIG_From_int(static_cast< int >(csmbLeft)));
  SWIG_Python_SetConstant(d, "csmbRight",SWIG_From_int(static_cast< int >(csmbRight)));
  SWIG_Python_SetConstant(d, "csmbMiddle",SWIG_From_int(static_cast< int >(csmbMiddle)));
  SWIG_Python_SetConstant(d, "csmbWheelUp",SWIG_From_int(static_cast< int >(csmbWheelUp)));
  SWIG_Python_SetConstant(d, "csmbWheelDown",SWIG_From_int(static_cast< int >(csmbWheelDown)));
  SWIG_Python_SetConstant(d, "csmbExtra1",SWIG_From_int(static_cast< int >(csmbExtra1)));
  SWIG_Python_SetConstant(d, "csmbExtra2",SWIG_From_int(static_cast< int >(csmbExtra2)));
  SWIG_Python_SetConstant(d, "csKeyModifierTypeShift",SWIG_From_int(static_cast< int >(csKeyModifierTypeShift)));
  SWIG_Python_SetConstant(d, "csKeyModifierTypeCtrl",SWIG_From_int(static_cast< int >(csKeyModifierTypeCtrl)));
  SWIG_Python_SetConstant(d, "csKeyModifierTypeAlt",SWIG_From_int(static_cast< int >(csKeyModifierTypeAlt)));
  SWIG_Python_SetConstant(d, "csKeyModifierTypeCapsLock",SWIG_From_int(static_cast< int >(csKeyModifierTypeCapsLock)));
  SWIG_Python_SetConstant(d, "csKeyModifierTypeNumLock",SWIG_From_int(static_cast< int >(csKeyModifierTypeNumLock)));
  SWIG_Python_SetConstant(d, "csKeyModifierTypeScrollLock",SWIG_From_int(static_cast< int >(csKeyModifierTypeScrollLock)));
  SWIG_Python_SetConstant(d, "csKeyModifierTypeLast",SWIG_From_int(static_cast< int >(csKeyModifierTypeLast)));
  SWIG_Python_SetConstant(d, "csKeyModifierNumLeft",SWIG_From_int(static_cast< int >(csKeyModifierNumLeft)));
  SWIG_Python_SetConstant(d, "csKeyModifierNumRight",SWIG_From_int(static_cast< int >(csKeyModifierNumRight)));
  SWIG_Python_SetConstant(d, "csKeyModifierNumAny",SWIG_From_int(static_cast< int >(csKeyModifierNumAny)));
  SWIG_Python_SetConstant(d, "CSKEY_ESC",SWIG_From_int(static_cast< int >(27)));
  SWIG_Python_SetConstant(d, "CSKEY_ENTER",SWIG_From_char(static_cast< char >('\n')));
  SWIG_Python_SetConstant(d, "CSKEY_TAB",SWIG_From_char(static_cast< char >('\t')));
  SWIG_Python_SetConstant(d, "CSKEY_BACKSPACE",SWIG_From_char(static_cast< char >('\10')));
  SWIG_Python_SetConstant(d, "CSKEY_SPACE",SWIG_From_char(static_cast< char >(' ')));
  SWIG_Python_SetConstant(d, "CSKEY_SPECIAL_FIRST",SWIG_From_int(static_cast< int >(0x108000)));
  SWIG_Python_SetConstant(d, "CSKEY_SPECIAL_LAST",SWIG_From_int(static_cast< int >(0x10fffd)));
  SWIG_Python_SetConstant(d, "CSKEY_UP",SWIG_From_int(static_cast< int >((0x108000+(0x00)))));
  SWIG_Python_SetConstant(d, "CSKEY_DOWN",SWIG_From_int(static_cast< int >((0x108000+(0x01)))));
  SWIG_Python_SetConstant(d, "CSKEY_LEFT",SWIG_From_int(static_cast< int >((0x108000+(0x02)))));
  SWIG_Python_SetConstant(d, "CSKEY_RIGHT",SWIG_From_int(static_cast< int >((0x108000+(0x03)))));
  SWIG_Python_SetConstant(d, "CSKEY_PGUP",SWIG_From_int(static_cast< int >((0x108000+(0x04)))));
  SWIG_Python_SetConstant(d, "CSKEY_PGDN",SWIG_From_int(static_cast< int >((0x108000+(0x05)))));
  SWIG_Python_SetConstant(d, "CSKEY_HOME",SWIG_From_int(static_cast< int >((0x108000+(0x06)))));
  SWIG_Python_SetConstant(d, "CSKEY_END",SWIG_From_int(static_cast< int >((0x108000+(0x07)))));
  SWIG_Python_SetConstant(d, "CSKEY_INS",SWIG_From_int(static_cast< int >((0x108000+(0x08)))));
  SWIG_Python_SetConstant(d, "CSKEY_DEL",SWIG_From_int(static_cast< int >((0x108000+(0x09)))));
  SWIG_Python_SetConstant(d, "CSKEY_CONTEXT",SWIG_From_int(static_cast< int >((0x108000+(0x0a)))));
  SWIG_Python_SetConstant(d, "CSKEY_PRINTSCREEN",SWIG_From_int(static_cast< int >((0x108000+(0x0b)))));
  SWIG_Python_SetConstant(d, "CSKEY_PAUSE",SWIG_From_int(static_cast< int >((0x108000+(0x0c)))));
  SWIG_Python_SetConstant(d, "CSKEY_F1",SWIG_From_int(static_cast< int >((0x108000+(0x10)))));
  SWIG_Python_SetConstant(d, "CSKEY_F2",SWIG_From_int(static_cast< int >((0x108000+(0x11)))));
  SWIG_Python_SetConstant(d, "CSKEY_F3",SWIG_From_int(static_cast< int >((0x108000+(0x12)))));
  SWIG_Python_SetConstant(d, "CSKEY_F4",SWIG_From_int(static_cast< int >((0x108000+(0x13)))));
  SWIG_Python_SetConstant(d, "CSKEY_F5",SWIG_From_int(static_cast< int >((0x108000+(0x14)))));
  SWIG_Python_SetConstant(d, "CSKEY_F6",SWIG_From_int(static_cast< int >((0x108000+(0x15)))));
  SWIG_Python_SetConstant(d, "CSKEY_F7",SWIG_From_int(static_cast< int >((0x108000+(0x16)))));
  SWIG_Python_SetConstant(d, "CSKEY_F8",SWIG_From_int(static_cast< int >((0x108000+(0x17)))));
  SWIG_Python_SetConstant(d, "CSKEY_F9",SWIG_From_int(static_cast< int >((0x108000+(0x18)))));
  SWIG_Python_SetConstant(d, "CSKEY_F10",SWIG_From_int(static_cast< int >((0x108000+(0x19)))));
  SWIG_Python_SetConstant(d, "CSKEY_F11",SWIG_From_int(static_cast< int >((0x108000+(0x1a)))));
  SWIG_Python_SetConstant(d, "CSKEY_F12",SWIG_From_int(static_cast< int >((0x108000+(0x1b)))));
  SWIG_Python_SetConstant(d, "CSKEY_MODIFIER_FIRST",SWIG_From_int(static_cast< int >(0x2000)));
  SWIG_Python_SetConstant(d, "CSKEY_MODIFIER_LAST",SWIG_From_int(static_cast< int >(0x3fff)));
  SWIG_Python_SetConstant(d, "CSKEY_MODIFIERTYPE_SHIFT",SWIG_From_int(static_cast< int >(5)));
  SWIG_Python_SetConstant(d, "CSKEY_PAD_FLAG",SWIG_From_int(static_cast< int >(0x4000)));
  SWIG_Python_SetConstant(d, "csKeyCharTypeNormal",SWIG_From_int(static_cast< int >(csKeyCharTypeNormal)));
  SWIG_Python_SetConstant(d, "csKeyCharTypeDead",SWIG_From_int(static_cast< int >(csKeyCharTypeDead)));
  SWIG_Python_SetConstant(d, "CSEVTYPE_Keyboard",SWIG_From_int(static_cast< int >(0x00000001)));
  SWIG_Python_SetConstant(d, "CSEVTYPE_Mouse",SWIG_From_int(static_cast< int >(0x00000002)));
  SWIG_Python_SetConstant(d, "CSEVTYPE_Joystick",SWIG_From_int(static_cast< int >(0x00000004)));
  SWIG_Python_SetConstant(d, "iPluginManager_lpiInitialize",SWIG_From_int(static_cast< int >(iPluginManager::lpiInitialize)));
  SWIG_Python_SetConstant(d, "iPluginManager_lpiReportErrors",SWIG_From_int(static_cast< int >(iPluginManager::lpiReportErrors)));
  SWIG_Python_SetConstant(d, "iPluginManager_lpiLoadDependencies",SWIG_From_int(static_cast< int >(iPluginManager::lpiLoadDependencies)));
  SWIG_Python_SetConstant(d, "iPluginManager_lpiReturnLoadedInstance",SWIG_From_int(static_cast< int >(iPluginManager::lpiReturnLoadedInstance)));
  SWIG_Python_SetConstant(d, "MAX_OUTPUT_VERTICES",SWIG_From_int(static_cast< int >(64)));
  SWIG_Python_SetConstant(d, "CS_CLIP_OUTSIDE",SWIG_From_int(static_cast< int >(CS_CLIP_OUTSIDE)));
  SWIG_Python_SetConstant(d, "CS_CLIP_CLIPPED",SWIG_From_int(static_cast< int >(CS_CLIP_CLIPPED)));
  SWIG_Python_SetConstant(d, "CS_CLIP_INSIDE",SWIG_From_int(static_cast< int >(CS_CLIP_INSIDE)));
  SWIG_Python_SetConstant(d, "CS_VERTEX_ORIGINAL",SWIG_From_int(static_cast< int >(CS_VERTEX_ORIGINAL)));
  SWIG_Python_SetConstant(d, "CS_VERTEX_ONEDGE",SWIG_From_int(static_cast< int >(CS_VERTEX_ONEDGE)));
  SWIG_Python_SetConstant(d, "CS_VERTEX_INSIDE",SWIG_From_int(static_cast< int >(CS_VERTEX_INSIDE)));
  SWIG_Python_SetConstant(d, "iClipper2D_clipperPoly",SWIG_From_int(static_cast< int >(iClipper2D::clipperPoly)));
  SWIG_Python_SetConstant(d, "iClipper2D_clipperBox",SWIG_From_int(static_cast< int >(iClipper2D::clipperBox)));
  SWIG_Python_SetConstant(d, "CS_TRIMESH_CLOSED",SWIG_From_int(static_cast< int >(CS_TRIMESH_CLOSED)));
  SWIG_Python_SetConstant(d, "CS_TRIMESH_NOTCLOSED",SWIG_From_int(static_cast< int >(CS_TRIMESH_NOTCLOSED)));
  SWIG_Python_SetConstant(d, "CS_TRIMESH_CONVEX",SWIG_From_int(static_cast< int >(CS_TRIMESH_CONVEX)));
  SWIG_Python_SetConstant(d, "CS_TRIMESH_NOTCONVEX",SWIG_From_int(static_cast< int >(CS_TRIMESH_NOTCONVEX)));
  SWIG_Python_SetConstant(d, "CS_TRIMESH_DEFORMABLE",SWIG_From_int(static_cast< int >(CS_TRIMESH_DEFORMABLE)));
  SWIG_Python_SetConstant(d, "csComposeNoChar",SWIG_From_int(static_cast< int >(csComposeNoChar)));
  SWIG_Python_SetConstant(d, "csComposeNormalChar",SWIG_From_int(static_cast< int >(csComposeNormalChar)));
  SWIG_Python_SetConstant(d, "csComposeComposedChar",SWIG_From_int(static_cast< int >(csComposeComposedChar)));
  SWIG_Python_SetConstant(d, "csComposeUncomposeable",SWIG_From_int(static_cast< int >(csComposeUncomposeable)));
  SWIG_Python_SetConstant(d, "iConfigManager_PriorityMin",SWIG_From_int(static_cast< int >(iConfigManager::PriorityMin)));
  SWIG_Python_SetConstant(d, "iConfigManager_PriorityVeryLow",SWIG_From_int(static_cast< int >(iConfigManager::PriorityVeryLow)));
  SWIG_Python_SetConstant(d, "iConfigManager_PriorityLow",SWIG_From_int(static_cast< int >(iConfigManager::PriorityLow)));
  SWIG_Python_SetConstant(d, "iConfigManager_PriorityMedium",SWIG_From_int(static_cast< int >(iConfigManager::PriorityMedium)));
  SWIG_Python_SetConstant(d, "iConfigManager_PriorityHigh",SWIG_From_int(static_cast< int >(iConfigManager::PriorityHigh)));
  SWIG_Python_SetConstant(d, "iConfigManager_PriorityVeryHigh",SWIG_From_int(static_cast< int >(iConfigManager::PriorityVeryHigh)));
  SWIG_Python_SetConstant(d, "iConfigManager_PriorityMax",SWIG_From_int(static_cast< int >(iConfigManager::PriorityMax)));
  SWIG_Python_SetConstant(d, "iConfigManager_ConfigPriorityPlugin",SWIG_From_int(static_cast< int >(iConfigManager::ConfigPriorityPlugin)));
  SWIG_Python_SetConstant(d, "iConfigManager_ConfigPriorityApplication",SWIG_From_int(static_cast< int >(iConfigManager::ConfigPriorityApplication)));
  SWIG_Python_SetConstant(d, "iConfigManager_ConfigPriorityUserGlobal",SWIG_From_int(static_cast< int >(iConfigManager::ConfigPriorityUserGlobal)));
  SWIG_Python_SetConstant(d, "iConfigManager_ConfigPriorityUserApp",SWIG_From_int(static_cast< int >(iConfigManager::ConfigPriorityUserApp)));
  SWIG_Python_SetConstant(d, "iConfigManager_ConfigPriorityCmdLine",SWIG_From_int(static_cast< int >(iConfigManager::ConfigPriorityCmdLine)));
  SWIG_Python_SetConstant(d, "CS_NODE_DOCUMENT",SWIG_From_int(static_cast< int >(CS_NODE_DOCUMENT)));
  SWIG_Python_SetConstant(d, "CS_NODE_ELEMENT",SWIG_From_int(static_cast< int >(CS_NODE_ELEMENT)));
  SWIG_Python_SetConstant(d, "CS_NODE_COMMENT",SWIG_From_int(static_cast< int >(CS_NODE_COMMENT)));
  SWIG_Python_SetConstant(d, "CS_NODE_UNKNOWN",SWIG_From_int(static_cast< int >(CS_NODE_UNKNOWN)));
  SWIG_Python_SetConstant(d, "CS_NODE_TEXT",SWIG_From_int(static_cast< int >(CS_NODE_TEXT)));
  SWIG_Python_SetConstant(d, "CS_NODE_DECLARATION",SWIG_From_int(static_cast< int >(CS_NODE_DECLARATION)));
  SWIG_Python_SetConstant(d, "CS_CHANGEABLE_NEVER",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CS_CHANGEABLE_NEWROOT",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "CS_CHANGEABLE_YES",SWIG_From_int(static_cast< int >(2)));
}

