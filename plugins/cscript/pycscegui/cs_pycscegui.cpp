/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<typename T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */

    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifdef _MSC_VER
    #include <io.h>
    #include <stdarg.h>
    #if defined(_DEBUG) && !defined(DEBUG_PYTHON)
    #undef _DEBUG
    #define RESTORE__DEBUG
    #endif
    #endif
    #include <Python.h>
    #ifdef RESTORE__DEBUG
    #define _DEBUG
    #undef RESTORE__DEBUG
    #endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_AllocatorType swig_types[0]
#define SWIGTYPE_p_CEGUI__FontManager swig_types[1]
#define SWIGTYPE_p_CEGUI__GlobalEventSet swig_types[2]
#define SWIGTYPE_p_CEGUI__ImagesetManager swig_types[3]
#define SWIGTYPE_p_CEGUI__Logger swig_types[4]
#define SWIGTYPE_p_CEGUI__MouseCursor swig_types[5]
#define SWIGTYPE_p_CEGUI__SchemeManager swig_types[6]
#define SWIGTYPE_p_CEGUI__System swig_types[7]
#define SWIGTYPE_p_CEGUI__Texture swig_types[8]
#define SWIGTYPE_p_CEGUI__WindowFactoryManager swig_types[9]
#define SWIGTYPE_p_CEGUI__WindowManager swig_types[10]
#define SWIGTYPE_p_CS__Graphics__CoreRenderMesh swig_types[11]
#define SWIGTYPE_p_CS__Graphics__RenderMesh swig_types[12]
#define SWIGTYPE_p_CS__Graphics__RenderMeshModes swig_types[13]
#define SWIGTYPE_p_CS__Memory__AllocatorMalloc swig_types[14]
#define SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t swig_types[15]
#define SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__ShaderVar_t swig_types[16]
#define SWIGTYPE_p_CS__Utility__StringSetT_CS__StringSetTag__General_t swig_types[17]
#define SWIGTYPE_p_CapacityHandlerType swig_types[18]
#define SWIGTYPE_p_ContainedType swig_types[19]
#define SWIGTYPE_p_ElementHandlerType swig_types[20]
#define SWIGTYPE_p_FileFormatDescription swig_types[21]
#define SWIGTYPE_p_HashType swig_types[22]
#define SWIGTYPE_p_KeyType swig_types[23]
#define SWIGTYPE_p_SndSysFilterLocation swig_types[24]
#define SWIGTYPE_p_TagType swig_types[25]
#define SWIGTYPE_p_ThisType swig_types[26]
#define SWIGTYPE_p_ValueType swig_types[27]
#define SWIGTYPE_p__1_basetype swig_types[28]
#define SWIGTYPE_p__csKeyCharType swig_types[29]
#define SWIGTYPE_p__csKeyEventType swig_types[30]
#define SWIGTYPE_p__csKeyModifierNumType swig_types[31]
#define SWIGTYPE_p__csKeyModifierType swig_types[32]
#define SWIGTYPE_p__csKeyModifiers swig_types[33]
#define SWIGTYPE_p__csMouseCursorID swig_types[34]
#define SWIGTYPE_p__csMouseEventType swig_types[35]
#define SWIGTYPE_p_char swig_types[36]
#define SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t swig_types[37]
#define SWIGTYPE_p_csArrayCapacityVariableGrow swig_types[38]
#define SWIGTYPE_p_csArrayT_csImageIOFileFormatDescription_const_p_csArrayElementHandlerT_csImageIOFileFormatDescription_const_p_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[39]
#define SWIGTYPE_p_csColliderWrapper swig_types[40]
#define SWIGTYPE_p_csConfigFile swig_types[41]
#define SWIGTYPE_p_csImageBase swig_types[42]
#define SWIGTYPE_p_csImageMemory swig_types[43]
#define SWIGTYPE_p_csObject swig_types[44]
#define SWIGTYPE_p_csPath swig_types[45]
#define SWIGTYPE_p_csProcAnimated swig_types[46]
#define SWIGTYPE_p_csProcTexture swig_types[47]
#define SWIGTYPE_p_csRefArrayT_iMaterialWrapper_t swig_types[48]
#define SWIGTYPE_p_csRefArrayT_iObject_t swig_types[49]
#define SWIGTYPE_p_csTriangleMesh swig_types[50]
#define SWIGTYPE_p_csTriangleMeshBox swig_types[51]
#define SWIGTYPE_p_csTriangleMeshPointer swig_types[52]
#define SWIGTYPE_p_csView swig_types[53]
#define SWIGTYPE_p_iAnimTimeUpdateHandler swig_types[54]
#define SWIGTYPE_p_iAnimatedImage swig_types[55]
#define SWIGTYPE_p_iAnimatedMesh swig_types[56]
#define SWIGTYPE_p_iAnimatedMeshFactory swig_types[57]
#define SWIGTYPE_p_iAnimatedMeshFactorySubMesh swig_types[58]
#define SWIGTYPE_p_iAnimatedMeshMorphTarget swig_types[59]
#define SWIGTYPE_p_iAnimatedMeshSocket swig_types[60]
#define SWIGTYPE_p_iAnimatedMeshSocketFactory swig_types[61]
#define SWIGTYPE_p_iAnimatedMeshSubMesh swig_types[62]
#define SWIGTYPE_p_iArrayChangeAllT_csCollisionPair_t swig_types[63]
#define SWIGTYPE_p_iArrayChangeAllT_csShaderVariable_p_t swig_types[64]
#define SWIGTYPE_p_iArrayChangeAllT_csSprite2DVertex_t swig_types[65]
#define SWIGTYPE_p_iArrayChangeAllT_csVector3_t swig_types[66]
#define SWIGTYPE_p_iArrayChangeElementsT_csCollisionPair_t swig_types[67]
#define SWIGTYPE_p_iArrayChangeElementsT_csShaderVariable_p_t swig_types[68]
#define SWIGTYPE_p_iArrayChangeElementsT_csSprite2DVertex_t swig_types[69]
#define SWIGTYPE_p_iArrayChangeElementsT_csVector3_t swig_types[70]
#define SWIGTYPE_p_iArrayReadOnlyT_csCollisionPair_t swig_types[71]
#define SWIGTYPE_p_iArrayReadOnlyT_csShaderVariable_p_t swig_types[72]
#define SWIGTYPE_p_iArrayReadOnlyT_csSprite2DVertex_t swig_types[73]
#define SWIGTYPE_p_iArrayReadOnlyT_csVector3_t swig_types[74]
#define SWIGTYPE_p_iArrayReadOnlyT_iCollection_p_t swig_types[75]
#define SWIGTYPE_p_iArrayReadOnlyT_iSceneNode_p_t swig_types[76]
#define SWIGTYPE_p_iBase swig_types[77]
#define SWIGTYPE_p_iBinaryLoaderPlugin swig_types[78]
#define SWIGTYPE_p_iBodyGroup swig_types[79]
#define SWIGTYPE_p_iBugPlug swig_types[80]
#define SWIGTYPE_p_iBugPlugRenderObject swig_types[81]
#define SWIGTYPE_p_iCEGUI swig_types[82]
#define SWIGTYPE_p_iCacheManager swig_types[83]
#define SWIGTYPE_p_iCamera swig_types[84]
#define SWIGTYPE_p_iCameraListener swig_types[85]
#define SWIGTYPE_p_iCameraPosition swig_types[86]
#define SWIGTYPE_p_iCameraPositionList swig_types[87]
#define SWIGTYPE_p_iCameraSectorListener swig_types[88]
#define SWIGTYPE_p_iCamposLoaderIterator swig_types[89]
#define SWIGTYPE_p_iClipper2D swig_types[90]
#define SWIGTYPE_p_iCollection swig_types[91]
#define SWIGTYPE_p_iCollideSystem swig_types[92]
#define SWIGTYPE_p_iCollider swig_types[93]
#define SWIGTYPE_p_iColoredVertices swig_types[94]
#define SWIGTYPE_p_iCommandLineParser swig_types[95]
#define SWIGTYPE_p_iComponent swig_types[96]
#define SWIGTYPE_p_iConfigFile swig_types[97]
#define SWIGTYPE_p_iConfigIterator swig_types[98]
#define SWIGTYPE_p_iConfigManager swig_types[99]
#define SWIGTYPE_p_iConsoleExecCallback swig_types[100]
#define SWIGTYPE_p_iConsoleInput swig_types[101]
#define SWIGTYPE_p_iConsoleOutput swig_types[102]
#define SWIGTYPE_p_iConsoleWatcher swig_types[103]
#define SWIGTYPE_p_iCustomMatrixCamera swig_types[104]
#define SWIGTYPE_p_iDataBuffer swig_types[105]
#define SWIGTYPE_p_iDebugHelper swig_types[106]
#define SWIGTYPE_p_iDecalManager swig_types[107]
#define SWIGTYPE_p_iDecalTemplate swig_types[108]
#define SWIGTYPE_p_iDocument swig_types[109]
#define SWIGTYPE_p_iDocumentAttribute swig_types[110]
#define SWIGTYPE_p_iDocumentAttributeIterator swig_types[111]
#define SWIGTYPE_p_iDocumentNode swig_types[112]
#define SWIGTYPE_p_iDocumentNodeIterator swig_types[113]
#define SWIGTYPE_p_iDocumentSystem swig_types[114]
#define SWIGTYPE_p_iDynamicSystem swig_types[115]
#define SWIGTYPE_p_iDynamics swig_types[116]
#define SWIGTYPE_p_iDynamicsColliderCollisionCallback swig_types[117]
#define SWIGTYPE_p_iDynamicsCollisionCallback swig_types[118]
#define SWIGTYPE_p_iDynamicsMoveCallback swig_types[119]
#define SWIGTYPE_p_iDynamicsStepCallback swig_types[120]
#define SWIGTYPE_p_iDynamicsSystemCollider swig_types[121]
#define SWIGTYPE_p_iEngine swig_types[122]
#define SWIGTYPE_p_iEngineFrameCallback swig_types[123]
#define SWIGTYPE_p_iEngineSectorCallback swig_types[124]
#define SWIGTYPE_p_iEngineSequenceManager swig_types[125]
#define SWIGTYPE_p_iEngineSequenceParameters swig_types[126]
#define SWIGTYPE_p_iEvent swig_types[127]
#define SWIGTYPE_p_iEventAttributeIterator swig_types[128]
#define SWIGTYPE_p_iEventCord swig_types[129]
#define SWIGTYPE_p_iEventHandler swig_types[130]
#define SWIGTYPE_p_iEventNameRegistry swig_types[131]
#define SWIGTYPE_p_iEventOutlet swig_types[132]
#define SWIGTYPE_p_iEventPlug swig_types[133]
#define SWIGTYPE_p_iEventQueue swig_types[134]
#define SWIGTYPE_p_iFactory swig_types[135]
#define SWIGTYPE_p_iFile swig_types[136]
#define SWIGTYPE_p_iFont swig_types[137]
#define SWIGTYPE_p_iFontDeleteNotify swig_types[138]
#define SWIGTYPE_p_iFontServer swig_types[139]
#define SWIGTYPE_p_iGenMeshAnimationControl swig_types[140]
#define SWIGTYPE_p_iGenMeshAnimationControlFactory swig_types[141]
#define SWIGTYPE_p_iGenMeshAnimationControlType swig_types[142]
#define SWIGTYPE_p_iGenMeshSkeletonControlState swig_types[143]
#define SWIGTYPE_p_iGeneralFactoryState swig_types[144]
#define SWIGTYPE_p_iGeneralMeshCommonState swig_types[145]
#define SWIGTYPE_p_iGeneralMeshState swig_types[146]
#define SWIGTYPE_p_iGeneralMeshSubMesh swig_types[147]
#define SWIGTYPE_p_iGraphics2D swig_types[148]
#define SWIGTYPE_p_iGraphics3D swig_types[149]
#define SWIGTYPE_p_iHalo swig_types[150]
#define SWIGTYPE_p_iImage swig_types[151]
#define SWIGTYPE_p_iImageIO swig_types[152]
#define SWIGTYPE_p_iJoint swig_types[153]
#define SWIGTYPE_p_iJoystickDriver swig_types[154]
#define SWIGTYPE_p_iKeyComposer swig_types[155]
#define SWIGTYPE_p_iKeyboardDriver swig_types[156]
#define SWIGTYPE_p_iLODControl swig_types[157]
#define SWIGTYPE_p_iLight swig_types[158]
#define SWIGTYPE_p_iLightCallback swig_types[159]
#define SWIGTYPE_p_iLightIterator swig_types[160]
#define SWIGTYPE_p_iLightList swig_types[161]
#define SWIGTYPE_p_iLightVisibleCallback swig_types[162]
#define SWIGTYPE_p_iLoader swig_types[163]
#define SWIGTYPE_p_iLoaderPlugin swig_types[164]
#define SWIGTYPE_p_iMapNode swig_types[165]
#define SWIGTYPE_p_iMaterial swig_types[166]
#define SWIGTYPE_p_iMaterialEngine swig_types[167]
#define SWIGTYPE_p_iMaterialList swig_types[168]
#define SWIGTYPE_p_iMaterialLoaderIterator swig_types[169]
#define SWIGTYPE_p_iMaterialWrapper swig_types[170]
#define SWIGTYPE_p_iMeshDrawCallback swig_types[171]
#define SWIGTYPE_p_iMeshFactLoaderIterator swig_types[172]
#define SWIGTYPE_p_iMeshFactoryList swig_types[173]
#define SWIGTYPE_p_iMeshFactoryWrapper swig_types[174]
#define SWIGTYPE_p_iMeshFactoryWrapperIterator swig_types[175]
#define SWIGTYPE_p_iMeshList swig_types[176]
#define SWIGTYPE_p_iMeshLoaderIterator swig_types[177]
#define SWIGTYPE_p_iMeshObject swig_types[178]
#define SWIGTYPE_p_iMeshObjectDrawCallback swig_types[179]
#define SWIGTYPE_p_iMeshObjectFactory swig_types[180]
#define SWIGTYPE_p_iMeshObjectType swig_types[181]
#define SWIGTYPE_p_iMeshWrapper swig_types[182]
#define SWIGTYPE_p_iMeshWrapperIterator swig_types[183]
#define SWIGTYPE_p_iMissingLoaderData swig_types[184]
#define SWIGTYPE_p_iMouseDriver swig_types[185]
#define SWIGTYPE_p_iMovable swig_types[186]
#define SWIGTYPE_p_iMovableListener swig_types[187]
#define SWIGTYPE_p_iMovieRecorder swig_types[188]
#define SWIGTYPE_p_iNativeWindow swig_types[189]
#define SWIGTYPE_p_iNativeWindowManager swig_types[190]
#define SWIGTYPE_p_iODEAMotorJoint swig_types[191]
#define SWIGTYPE_p_iODEBallJoint swig_types[192]
#define SWIGTYPE_p_iODEDynamicState swig_types[193]
#define SWIGTYPE_p_iODEDynamicSystemState swig_types[194]
#define SWIGTYPE_p_iODEFrameUpdateCallback swig_types[195]
#define SWIGTYPE_p_iODEGeneralJointState swig_types[196]
#define SWIGTYPE_p_iODEHinge2Joint swig_types[197]
#define SWIGTYPE_p_iODEHingeJoint swig_types[198]
#define SWIGTYPE_p_iODEJointState swig_types[199]
#define SWIGTYPE_p_iODESliderJoint swig_types[200]
#define SWIGTYPE_p_iODEUniversalJoint swig_types[201]
#define SWIGTYPE_p_iObject swig_types[202]
#define SWIGTYPE_p_iObjectIterator swig_types[203]
#define SWIGTYPE_p_iObjectModel swig_types[204]
#define SWIGTYPE_p_iObjectModelListener swig_types[205]
#define SWIGTYPE_p_iObjectNameChangeListener swig_types[206]
#define SWIGTYPE_p_iObjectRegistry swig_types[207]
#define SWIGTYPE_p_iObjectRegistryIterator swig_types[208]
#define SWIGTYPE_p_iParameterESM swig_types[209]
#define SWIGTYPE_p_iParticleBuiltinEffectorFactory swig_types[210]
#define SWIGTYPE_p_iParticleBuiltinEffectorForce swig_types[211]
#define SWIGTYPE_p_iParticleBuiltinEffectorLinColor swig_types[212]
#define SWIGTYPE_p_iParticleBuiltinEffectorLinear swig_types[213]
#define SWIGTYPE_p_iParticleBuiltinEffectorVelocityField swig_types[214]
#define SWIGTYPE_p_iParticleBuiltinEmitterBase swig_types[215]
#define SWIGTYPE_p_iParticleBuiltinEmitterBox swig_types[216]
#define SWIGTYPE_p_iParticleBuiltinEmitterCone swig_types[217]
#define SWIGTYPE_p_iParticleBuiltinEmitterCylinder swig_types[218]
#define SWIGTYPE_p_iParticleBuiltinEmitterFactory swig_types[219]
#define SWIGTYPE_p_iParticleBuiltinEmitterSphere swig_types[220]
#define SWIGTYPE_p_iParticleEffector swig_types[221]
#define SWIGTYPE_p_iParticleEmitter swig_types[222]
#define SWIGTYPE_p_iParticleSystem swig_types[223]
#define SWIGTYPE_p_iParticleSystemBase swig_types[224]
#define SWIGTYPE_p_iParticleSystemFactory swig_types[225]
#define SWIGTYPE_p_iPath swig_types[226]
#define SWIGTYPE_p_iPerspectiveCamera swig_types[227]
#define SWIGTYPE_p_iPluginIterator swig_types[228]
#define SWIGTYPE_p_iPluginManager swig_types[229]
#define SWIGTYPE_p_iPortal swig_types[230]
#define SWIGTYPE_p_iPortalCallback swig_types[231]
#define SWIGTYPE_p_iPortalContainer swig_types[232]
#define SWIGTYPE_p_iProcTexCallback swig_types[233]
#define SWIGTYPE_p_iProcTexture swig_types[234]
#define SWIGTYPE_p_iRenderLoop swig_types[235]
#define SWIGTYPE_p_iRenderLoopManager swig_types[236]
#define SWIGTYPE_p_iRenderManager swig_types[237]
#define SWIGTYPE_p_iRenderManagerPostEffects swig_types[238]
#define SWIGTYPE_p_iRenderManagerTargets swig_types[239]
#define SWIGTYPE_p_iRenderStepContainer swig_types[240]
#define SWIGTYPE_p_iReporter swig_types[241]
#define SWIGTYPE_p_iReporterIterator swig_types[242]
#define SWIGTYPE_p_iReporterListener swig_types[243]
#define SWIGTYPE_p_iRigidBody swig_types[244]
#define SWIGTYPE_p_iSCF swig_types[245]
#define SWIGTYPE_p_iSaver swig_types[246]
#define SWIGTYPE_p_iSceneNode swig_types[247]
#define SWIGTYPE_p_iSceneNodeArray swig_types[248]
#define SWIGTYPE_p_iScript swig_types[249]
#define SWIGTYPE_p_iScriptObject swig_types[250]
#define SWIGTYPE_p_iScriptValue swig_types[251]
#define SWIGTYPE_p_iSector swig_types[252]
#define SWIGTYPE_p_iSectorCallback swig_types[253]
#define SWIGTYPE_p_iSectorIterator swig_types[254]
#define SWIGTYPE_p_iSectorList swig_types[255]
#define SWIGTYPE_p_iSectorLoaderIterator swig_types[256]
#define SWIGTYPE_p_iSectorMeshCallback swig_types[257]
#define SWIGTYPE_p_iSequence swig_types[258]
#define SWIGTYPE_p_iSequenceCondition swig_types[259]
#define SWIGTYPE_p_iSequenceManager swig_types[260]
#define SWIGTYPE_p_iSequenceOperation swig_types[261]
#define SWIGTYPE_p_iSequenceTimedOperation swig_types[262]
#define SWIGTYPE_p_iSequenceTrigger swig_types[263]
#define SWIGTYPE_p_iSequenceWrapper swig_types[264]
#define SWIGTYPE_p_iShader swig_types[265]
#define SWIGTYPE_p_iShaderCompiler swig_types[266]
#define SWIGTYPE_p_iShaderManager swig_types[267]
#define SWIGTYPE_p_iShaderPriorityList swig_types[268]
#define SWIGTYPE_p_iShaderVarStringSet swig_types[269]
#define SWIGTYPE_p_iShaderVariableAccessor swig_types[270]
#define SWIGTYPE_p_iShaderVariableContext swig_types[271]
#define SWIGTYPE_p_iSharedVarLoaderIterator swig_types[272]
#define SWIGTYPE_p_iSimpleFormerState swig_types[273]
#define SWIGTYPE_p_iSkeleton swig_types[274]
#define SWIGTYPE_p_iSkeleton2 swig_types[275]
#define SWIGTYPE_p_iSkeletonAnimCallback2 swig_types[276]
#define SWIGTYPE_p_iSkeletonAnimNode2 swig_types[277]
#define SWIGTYPE_p_iSkeletonAnimNodeFactory2 swig_types[278]
#define SWIGTYPE_p_iSkeletonAnimPacket2 swig_types[279]
#define SWIGTYPE_p_iSkeletonAnimPacketFactory2 swig_types[280]
#define SWIGTYPE_p_iSkeletonAnimation swig_types[281]
#define SWIGTYPE_p_iSkeletonAnimation2 swig_types[282]
#define SWIGTYPE_p_iSkeletonAnimationCallback swig_types[283]
#define SWIGTYPE_p_iSkeletonAnimationInstance swig_types[284]
#define SWIGTYPE_p_iSkeletonAnimationKeyFrame swig_types[285]
#define SWIGTYPE_p_iSkeletonAnimationNode2 swig_types[286]
#define SWIGTYPE_p_iSkeletonAnimationNodeFactory2 swig_types[287]
#define SWIGTYPE_p_iSkeletonBlendNode2 swig_types[288]
#define SWIGTYPE_p_iSkeletonBlendNodeFactory2 swig_types[289]
#define SWIGTYPE_p_iSkeletonBone swig_types[290]
#define SWIGTYPE_p_iSkeletonBoneFactory swig_types[291]
#define SWIGTYPE_p_iSkeletonBoneRagdollInfo swig_types[292]
#define SWIGTYPE_p_iSkeletonBoneUpdateCallback swig_types[293]
#define SWIGTYPE_p_iSkeletonFSMNode2 swig_types[294]
#define SWIGTYPE_p_iSkeletonFSMNodeFactory2 swig_types[295]
#define SWIGTYPE_p_iSkeletonFactory swig_types[296]
#define SWIGTYPE_p_iSkeletonFactory2 swig_types[297]
#define SWIGTYPE_p_iSkeletonGraveyard swig_types[298]
#define SWIGTYPE_p_iSkeletonManager2 swig_types[299]
#define SWIGTYPE_p_iSkeletonPriorityNode2 swig_types[300]
#define SWIGTYPE_p_iSkeletonPriorityNodeFactory2 swig_types[301]
#define SWIGTYPE_p_iSkeletonRandomNode2 swig_types[302]
#define SWIGTYPE_p_iSkeletonRandomNodeFactory2 swig_types[303]
#define SWIGTYPE_p_iSkeletonSocket swig_types[304]
#define SWIGTYPE_p_iSkeletonSocketFactory swig_types[305]
#define SWIGTYPE_p_iSkeletonUpdateCallback swig_types[306]
#define SWIGTYPE_p_iSndSysData swig_types[307]
#define SWIGTYPE_p_iSndSysListener swig_types[308]
#define SWIGTYPE_p_iSndSysListenerDoppler swig_types[309]
#define SWIGTYPE_p_iSndSysLoader swig_types[310]
#define SWIGTYPE_p_iSndSysManager swig_types[311]
#define SWIGTYPE_p_iSndSysRenderer swig_types[312]
#define SWIGTYPE_p_iSndSysRendererCallback swig_types[313]
#define SWIGTYPE_p_iSndSysRendererOpenAL swig_types[314]
#define SWIGTYPE_p_iSndSysRendererSoftware swig_types[315]
#define SWIGTYPE_p_iSndSysSoftwareDriver swig_types[316]
#define SWIGTYPE_p_iSndSysSoftwareFilter3D swig_types[317]
#define SWIGTYPE_p_iSndSysSoftwareOutputFilter swig_types[318]
#define SWIGTYPE_p_iSndSysSource swig_types[319]
#define SWIGTYPE_p_iSndSysSource3D swig_types[320]
#define SWIGTYPE_p_iSndSysSource3DDirectional swig_types[321]
#define SWIGTYPE_p_iSndSysSource3DDirectionalSimple swig_types[322]
#define SWIGTYPE_p_iSndSysSource3DDoppler swig_types[323]
#define SWIGTYPE_p_iSndSysSourceOpenAL swig_types[324]
#define SWIGTYPE_p_iSndSysSourceSoftware swig_types[325]
#define SWIGTYPE_p_iSndSysStream swig_types[326]
#define SWIGTYPE_p_iSndSysStreamCallback swig_types[327]
#define SWIGTYPE_p_iSndSysWrapper swig_types[328]
#define SWIGTYPE_p_iSprite2DFactoryState swig_types[329]
#define SWIGTYPE_p_iSprite2DState swig_types[330]
#define SWIGTYPE_p_iSprite2DUVAnimation swig_types[331]
#define SWIGTYPE_p_iSprite2DUVAnimationFrame swig_types[332]
#define SWIGTYPE_p_iSprite3DFactoryState swig_types[333]
#define SWIGTYPE_p_iSprite3DState swig_types[334]
#define SWIGTYPE_p_iSpriteAction swig_types[335]
#define SWIGTYPE_p_iSpriteCal3DFactoryState swig_types[336]
#define SWIGTYPE_p_iSpriteCal3DSocket swig_types[337]
#define SWIGTYPE_p_iSpriteCal3DState swig_types[338]
#define SWIGTYPE_p_iSpriteFrame swig_types[339]
#define SWIGTYPE_p_iSpriteSocket swig_types[340]
#define SWIGTYPE_p_iStandardReporterListener swig_types[341]
#define SWIGTYPE_p_iString swig_types[342]
#define SWIGTYPE_p_iStringArray swig_types[343]
#define SWIGTYPE_p_iStringSet swig_types[344]
#define SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t swig_types[345]
#define SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t swig_types[346]
#define SWIGTYPE_p_iTerraFormer swig_types[347]
#define SWIGTYPE_p_iTerraSampler swig_types[348]
#define SWIGTYPE_p_iTerrainCell swig_types[349]
#define SWIGTYPE_p_iTerrainCellCollisionProperties swig_types[350]
#define SWIGTYPE_p_iTerrainCellFeederProperties swig_types[351]
#define SWIGTYPE_p_iTerrainCellHeightDataCallback swig_types[352]
#define SWIGTYPE_p_iTerrainCellLoadCallback swig_types[353]
#define SWIGTYPE_p_iTerrainCellRenderProperties swig_types[354]
#define SWIGTYPE_p_iTerrainCollider swig_types[355]
#define SWIGTYPE_p_iTerrainCollisionPairArray swig_types[356]
#define SWIGTYPE_p_iTerrainDataFeeder swig_types[357]
#define SWIGTYPE_p_iTerrainFactory swig_types[358]
#define SWIGTYPE_p_iTerrainFactoryCell swig_types[359]
#define SWIGTYPE_p_iTerrainFactoryState swig_types[360]
#define SWIGTYPE_p_iTerrainObjectState swig_types[361]
#define SWIGTYPE_p_iTerrainRenderer swig_types[362]
#define SWIGTYPE_p_iTerrainSystem swig_types[363]
#define SWIGTYPE_p_iTerrainVector3Array swig_types[364]
#define SWIGTYPE_p_iTextureCallback swig_types[365]
#define SWIGTYPE_p_iTextureHandle swig_types[366]
#define SWIGTYPE_p_iTextureList swig_types[367]
#define SWIGTYPE_p_iTextureLoaderIterator swig_types[368]
#define SWIGTYPE_p_iTextureManager swig_types[369]
#define SWIGTYPE_p_iTextureWrapper swig_types[370]
#define SWIGTYPE_p_iThreadManager swig_types[371]
#define SWIGTYPE_p_iThreadReturn swig_types[372]
#define SWIGTYPE_p_iThreadedLoader swig_types[373]
#define SWIGTYPE_p_iTranslator swig_types[374]
#define SWIGTYPE_p_iTriangleMesh swig_types[375]
#define SWIGTYPE_p_iTriangleMeshIterator swig_types[376]
#define SWIGTYPE_p_iVFS swig_types[377]
#define SWIGTYPE_p_iView swig_types[378]
#define SWIGTYPE_p_iVirtualClock swig_types[379]
#define SWIGTYPE_p_iVisibilityCuller swig_types[380]
#define SWIGTYPE_p_iVisibilityCullerListener swig_types[381]
#define SWIGTYPE_p_iVisibilityObject swig_types[382]
#define SWIGTYPE_p_iVisibilityObjectIterator swig_types[383]
#define SWIGTYPE_p_int swig_types[384]
#define SWIGTYPE_p_int16_t swig_types[385]
#define SWIGTYPE_p_int64_t swig_types[386]
#define SWIGTYPE_p_int8_t swig_types[387]
#define SWIGTYPE_p_long_long swig_types[388]
#define SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t swig_types[389]
#define SWIGTYPE_p_scfImplementation1T_csImageBase_iImage_t swig_types[390]
#define SWIGTYPE_p_scfImplementation1T_csObject_iObject_t swig_types[391]
#define SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t swig_types[392]
#define SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t swig_types[393]
#define SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t swig_types[394]
#define SWIGTYPE_p_scfImplementation1T_csView_iView_t swig_types[395]
#define SWIGTYPE_p_scfImplementationExt0T_csImageMemory_csImageBase_t swig_types[396]
#define SWIGTYPE_p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t swig_types[397]
#define SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t swig_types[398]
#define SWIGTYPE_p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t swig_types[399]
#define SWIGTYPE_p_uint16_t swig_types[400]
#define SWIGTYPE_p_uint32_t swig_types[401]
#define SWIGTYPE_p_uint64_t swig_types[402]
#define SWIGTYPE_p_uint8_t swig_types[403]
#define SWIGTYPE_p_unsigned_int swig_types[404]
#define SWIGTYPE_p_unsigned_long swig_types[405]
#define SWIGTYPE_p_unsigned_long_long swig_types[406]
static swig_type_info *swig_types[408];
static swig_module_info swig_module = {swig_types, 407, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _pycscegui.so
  ------------------------------------------------*/
#define SWIG_init SWIG_init_pycscegui

#define SWIG_name    "_pycscegui"

#define SWIGVERSION 0x010336 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include "crystalspace.h"
#include "ivaria/icegui.h"


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}

SWIGINTERN int iCEGUI_scfGetVersion(){ return scfInterfaceTraits<iCEGUI>::GetVersion(); }

  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}

SWIGINTERN void delete_iCEGUI(iCEGUI *self){ if (self) self->DecRef (); }
#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_iCEGUI_Initialize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  iScript *arg2 = (iScript *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_Initialize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_Initialize" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iScript, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCEGUI_Initialize" "', argument " "2"" of type '" "iScript *""'"); 
  }
  arg2 = reinterpret_cast< iScript * >(argp2);
  result = (bool)(arg1)->Initialize(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_Initialize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_Initialize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_Initialize" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (bool)(arg1)->Initialize();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_Initialize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCEGUI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iCEGUI_Initialize__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iCEGUI, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iScript, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iCEGUI_Initialize__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iCEGUI_Initialize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Initialize(iCEGUI *,iScript *)\n"
    "    Initialize(iCEGUI *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_IsInitialized(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_IsInitialized",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_IsInitialized" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (bool)(arg1)->IsInitialized();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_Render(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_Render",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_Render" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  ((iCEGUI const *)arg1)->Render();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetSystemPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::System *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetSystemPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetSystemPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::System *)((iCEGUI const *)arg1)->GetSystemPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__System, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetFontManagerPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::FontManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetFontManagerPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetFontManagerPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::FontManager *)((iCEGUI const *)arg1)->GetFontManagerPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__FontManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetGlobalEventSetPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::GlobalEventSet *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetGlobalEventSetPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetGlobalEventSetPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::GlobalEventSet *)((iCEGUI const *)arg1)->GetGlobalEventSetPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__GlobalEventSet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetImagesetManagerPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::ImagesetManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetImagesetManagerPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetImagesetManagerPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::ImagesetManager *)((iCEGUI const *)arg1)->GetImagesetManagerPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__ImagesetManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetLoggerPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::Logger *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetLoggerPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetLoggerPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::Logger *)((iCEGUI const *)arg1)->GetLoggerPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__Logger, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetMouseCursorPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::MouseCursor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetMouseCursorPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetMouseCursorPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::MouseCursor *)((iCEGUI const *)arg1)->GetMouseCursorPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__MouseCursor, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetSchemeManagerPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::SchemeManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetSchemeManagerPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetSchemeManagerPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::SchemeManager *)((iCEGUI const *)arg1)->GetSchemeManagerPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__SchemeManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetWindowFactoryManagerPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::WindowFactoryManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetWindowFactoryManagerPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetWindowFactoryManagerPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::WindowFactoryManager *)((iCEGUI const *)arg1)->GetWindowFactoryManagerPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__WindowFactoryManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_GetWindowManagerPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CEGUI::WindowManager *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_GetWindowManagerPtr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_GetWindowManagerPtr" "', argument " "1"" of type '" "iCEGUI const *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  result = (CEGUI::WindowManager *)((iCEGUI const *)arg1)->GetWindowManagerPtr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__WindowManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_EnableMouseCapture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_EnableMouseCapture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_EnableMouseCapture" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  (arg1)->EnableMouseCapture();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_DisableMouseCapture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_DisableMouseCapture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_DisableMouseCapture" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  (arg1)->DisableMouseCapture();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_EnableKeyboardCapture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_EnableKeyboardCapture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_EnableKeyboardCapture" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  (arg1)->EnableKeyboardCapture();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_DisableKeyboardCapture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_DisableKeyboardCapture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_DisableKeyboardCapture" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  (arg1)->DisableKeyboardCapture();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_CreateTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  iTextureHandle *arg2 = (iTextureHandle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CEGUI::Texture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_CreateTexture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iCEGUI_CreateTexture" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iTextureHandle, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iCEGUI_CreateTexture" "', argument " "2"" of type '" "iTextureHandle *""'"); 
  }
  arg2 = reinterpret_cast< iTextureHandle * >(argp2);
  {
    CEGUI::Texture &_result_ref = (arg1)->CreateTexture(arg2);
    result = (CEGUI::Texture *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CEGUI__Texture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iCEGUI_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iCEGUI_scfGetVersion",0,0)) SWIG_fail;
  result = (int)iCEGUI_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iCEGUI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iCEGUI *arg1 = (iCEGUI *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iCEGUI",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iCEGUI, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iCEGUI" "', argument " "1"" of type '" "iCEGUI *""'"); 
  }
  arg1 = reinterpret_cast< iCEGUI * >(argp1);
  delete_iCEGUI(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iCEGUI_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iCEGUI, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"iCEGUI_Initialize", _wrap_iCEGUI_Initialize, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_IsInitialized", _wrap_iCEGUI_IsInitialized, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_Render", _wrap_iCEGUI_Render, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetSystemPtr", _wrap_iCEGUI_GetSystemPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetFontManagerPtr", _wrap_iCEGUI_GetFontManagerPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetGlobalEventSetPtr", _wrap_iCEGUI_GetGlobalEventSetPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetImagesetManagerPtr", _wrap_iCEGUI_GetImagesetManagerPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetLoggerPtr", _wrap_iCEGUI_GetLoggerPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetMouseCursorPtr", _wrap_iCEGUI_GetMouseCursorPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetSchemeManagerPtr", _wrap_iCEGUI_GetSchemeManagerPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetWindowFactoryManagerPtr", _wrap_iCEGUI_GetWindowFactoryManagerPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_GetWindowManagerPtr", _wrap_iCEGUI_GetWindowManagerPtr, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_EnableMouseCapture", _wrap_iCEGUI_EnableMouseCapture, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_DisableMouseCapture", _wrap_iCEGUI_DisableMouseCapture, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_EnableKeyboardCapture", _wrap_iCEGUI_EnableKeyboardCapture, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_DisableKeyboardCapture", _wrap_iCEGUI_DisableKeyboardCapture, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_CreateTexture", _wrap_iCEGUI_CreateTexture, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_scfGetVersion", _wrap_iCEGUI_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iCEGUI", _wrap_delete_iCEGUI, METH_VARARGS, NULL},
	 { (char *)"iCEGUI_swigregister", iCEGUI_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_CS__Graphics__RenderMeshTo_p_CS__Graphics__RenderMeshModes(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Graphics::RenderMeshModes *)  ((CS::Graphics::RenderMesh *) x));
}
static void *_p_CS__Graphics__RenderMeshTo_p_CS__Graphics__CoreRenderMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Graphics::CoreRenderMesh *)  ((CS::Graphics::RenderMesh *) x));
}
static void *_p_iSaverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSaver *) x));
}
static void *_p_iODEDynamicSystemStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iODEDynamicSystemState *) x));
}
static void *_p_iTerrainVector3ArrayTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csVector3 > *)(iArrayChangeElements< csVector3 > *)(iArrayChangeAll< csVector3 > *) ((iTerrainVector3Array *) x));
}
static void *_p_iFontTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFont *) x));
}
static void *_p_scfImplementation1T_csObject_iObject_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *) ((scfImplementation1< csObject,iObject > *) x));
}
static void *_p_iEventQueueTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventQueue *) x));
}
static void *_p_iShaderVariableContextTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iShaderVariableContext *) x));
}
static void *_p_iSequenceConditionTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSequenceCondition *) x));
}
static void *_p_iCameraPositionListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCameraPositionList *) x));
}
static void *_p_iSkeletonBlendNode2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNode2 *) ((iSkeletonBlendNode2 *) x));
}
static void *_p_iSceneNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSceneNode *) x));
}
static void *_p_iParticleBuiltinEffectorLinColorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEffector *) ((iParticleBuiltinEffectorLinColor *) x));
}
static void *_p_iSkeletonPriorityNode2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNode2 *) ((iSkeletonPriorityNode2 *) x));
}
static void *_p_iClipper2DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iClipper2D *) x));
}
static void *_p_csTriangleMeshPointerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *)(scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) ((csTriangleMeshPointer *) x));
}
static void *_p_iConsoleOutputTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConsoleOutput *) x));
}
static void *_p_iSkeletonAnimationNode2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNode2 *) ((iSkeletonAnimationNode2 *) x));
}
static void *_p_iArrayReadOnlyT_iCollection_p_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iArrayReadOnly< iCollection * > *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistry *) x));
}
static void *_p_iEventNameRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventNameRegistry *) x));
}
static void *_p_iSkeletonBoneTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonBone *) x));
}
static void *_p_iSectorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSector *) x));
}
static void *_p_iStringSetTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iStringSetBase< CS::StringSetTag::General > *) ((iStringSet *) x));
}
static void *_p_iShaderVarStringSetTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iStringSetBase< CS::StringSetTag::ShaderVar > *) ((iShaderVarStringSet *) x));
}
static void *_p_iGenMeshSkeletonControlStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGenMeshSkeletonControlState *) x));
}
static void *_p_iTerrainCollisionPairArrayTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csCollisionPair > *)(iArrayChangeElements< csCollisionPair > *)(iArrayChangeAll< csCollisionPair > *) ((iTerrainCollisionPairArray *) x));
}
static void *_p_iRenderManagerPostEffectsTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iRenderManagerPostEffects *) x));
}
static void *_p_iTerrainCellFeederPropertiesTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainCellFeederProperties *) x));
}
static void *_p_iTerrainCellRenderPropertiesTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iTerrainCellRenderProperties *) x));
}
static void *_p_iTerrainCellCollisionPropertiesTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainCellCollisionProperties *) x));
}
static void *_p_iLightListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLightList *) x));
}
static void *_p_iCameraSectorListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iCameraListener *) ((iCameraSectorListener *) x));
}
static void *_p_iCameraListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCameraListener *) x));
}
static void *_p_iObjectModelListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectModelListener *) x));
}
static void *_p_iSndSysListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysListener *) x));
}
static void *_p_iReporterListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterListener *) x));
}
static void *_p_iObjectNameChangeListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectNameChangeListener *) x));
}
static void *_p_iStandardReporterListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStandardReporterListener *) x));
}
static void *_p_iMovableListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMovableListener *) x));
}
static void *_p_iVisibilityCullerListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVisibilityCullerListener *) x));
}
static void *_p_iMovieRecorderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMovieRecorder *) x));
}
static void *_p_iMeshDrawCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshDrawCallback *) x));
}
static void *_p_iTextureCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTextureCallback *) x));
}
static void *_p_iEngineSectorCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEngineSectorCallback *) x));
}
static void *_p_iEngineFrameCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEngineFrameCallback *) x));
}
static void *_p_iLightVisibleCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLightVisibleCallback *) x));
}
static void *_p_iSectorMeshCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSectorMeshCallback *) x));
}
static void *_p_iSectorCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSectorCallback *) x));
}
static void *_p_iLightCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLightCallback *) x));
}
static void *_p_iTerrainCellLoadCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainCellLoadCallback *) x));
}
static void *_p_iTerrainCellHeightDataCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainCellHeightDataCallback *) x));
}
static void *_p_iMeshObjectDrawCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshObjectDrawCallback *) x));
}
static void *_p_iSkeletonUpdateCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonUpdateCallback *) x));
}
static void *_p_iSkeletonAnimationCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimationCallback *) x));
}
static void *_p_iSkeletonBoneUpdateCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonBoneUpdateCallback *) x));
}
static void *_p_iSndSysStreamCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysStreamCallback *) x));
}
static void *_p_iSndSysRendererCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysRendererCallback *) x));
}
static void *_p_iConsoleExecCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConsoleExecCallback *) x));
}
static void *_p_iDynamicsStepCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDynamicsStepCallback *) x));
}
static void *_p_iDynamicsMoveCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDynamicsMoveCallback *) x));
}
static void *_p_iDynamicsCollisionCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDynamicsCollisionCallback *) x));
}
static void *_p_iDynamicsColliderCollisionCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDynamicsColliderCollisionCallback *) x));
}
static void *_p_iODEFrameUpdateCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iODEFrameUpdateCallback *) x));
}
static void *_p_iPortalCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPortalCallback *) x));
}
static void *_p_iProcTexCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iProcTexCallback *) x));
}
static void *_p_iImageTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iImage *) x));
}
static void *_p_iTerrainSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainSystem *) x));
}
static void *_p_iDocumentSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentSystem *) x));
}
static void *_p_iParticleSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleSystemBase *) ((iParticleSystem *) x));
}
static void *_p_iCollideSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCollideSystem *) x));
}
static void *_p_iDynamicSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDynamicSystem *) x));
}
static void *_p_iStringArrayTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringArray *) x));
}
static void *_p_iSCFTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSCF *) x));
}
static void *_p_iMeshWrapperIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshWrapperIterator *) x));
}
static void *_p_iMeshFactoryWrapperIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshFactoryWrapperIterator *) x));
}
static void *_p_iSectorIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSectorIterator *) x));
}
static void *_p_iLightIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLightIterator *) x));
}
static void *_p_iTriangleMeshIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTriangleMeshIterator *) x));
}
static void *_p_iSharedVarLoaderIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSharedVarLoaderIterator *) x));
}
static void *_p_iMaterialLoaderIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMaterialLoaderIterator *) x));
}
static void *_p_iTextureLoaderIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTextureLoaderIterator *) x));
}
static void *_p_iCamposLoaderIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCamposLoaderIterator *) x));
}
static void *_p_iMeshLoaderIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshLoaderIterator *) x));
}
static void *_p_iMeshFactLoaderIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshFactLoaderIterator *) x));
}
static void *_p_iSectorLoaderIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSectorLoaderIterator *) x));
}
static void *_p_iDocumentNodeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNodeIterator *) x));
}
static void *_p_iDocumentAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttributeIterator *) x));
}
static void *_p_iConfigIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigIterator *) x));
}
static void *_p_iReporterIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterIterator *) x));
}
static void *_p_iObjectIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectIterator *) x));
}
static void *_p_iObjectRegistryIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistryIterator *) x));
}
static void *_p_iEventAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventAttributeIterator *) x));
}
static void *_p_iPluginIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginIterator *) x));
}
static void *_p_iVisibilityObjectIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVisibilityObjectIterator *) x));
}
static void *_p_iEventOutletTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventOutlet *) x));
}
static void *_p_iColoredVerticesTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csSprite2DVertex > *)(iArrayChangeElements< csSprite2DVertex > *)(iArrayChangeAll< csSprite2DVertex > *) ((iColoredVertices *) x));
}
static void *_p_iAnimatedMeshMorphTargetTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedMeshMorphTarget *) x));
}
static void *_p_iSndSysSoftwareFilter3DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSoftwareFilter3D *) x));
}
static void *_p_iMeshObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshObject *) x));
}
static void *_p_iBugPlugRenderObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iBugPlugRenderObject *) x));
}
static void *_p_iScriptObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iScriptObject *) x));
}
static void *_p_iArrayChangeAllT_csSprite2DVertex_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csSprite2DVertex > *)(iArrayChangeElements< csSprite2DVertex > *) ((iArrayChangeAll< csSprite2DVertex > *) x));
}
static void *_p_iArrayChangeElementsT_csSprite2DVertex_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csSprite2DVertex > *) ((iArrayChangeElements< csSprite2DVertex > *) x));
}
static void *_p_iArrayReadOnlyT_csSprite2DVertex_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iArrayReadOnly< csSprite2DVertex > *) x));
}
static void *_p_iObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObject *) x));
}
static void *_p_csObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *) ((csObject *) x));
}
static void *_p_iVisibilityObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVisibilityObject *) x));
}
static void *_p_iSkeletonRandomNode2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNode2 *) ((iSkeletonRandomNode2 *) x));
}
static void *_p_iSkeletonAnimNode2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimNode2 *) x));
}
static void *_p_iSkeletonFSMNode2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNode2 *) ((iSkeletonFSMNode2 *) x));
}
static void *_p_iAnimTimeUpdateHandlerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimTimeUpdateHandler *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventHandler *) x));
}
static void *_p_iMeshFactoryWrapperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshFactoryWrapper *) x));
}
static void *_p_iMeshWrapperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshWrapper *) x));
}
static void *_p_iMaterialWrapperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMaterialWrapper *) x));
}
static void *_p_iTextureWrapperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTextureWrapper *) x));
}
static void *_p_iSndSysWrapperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysWrapper *) x));
}
static void *_p_iSequenceWrapperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSequenceWrapper *) x));
}
static void *_p_csColliderWrapperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *)(scfImplementationExt1< csColliderWrapper,csObject,scfFakeInterface< csColliderWrapper > > *) ((csColliderWrapper *) x));
}
static void *_p_iODEUniversalJointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEUniversalJoint *) x));
}
static void *_p_iODEBallJointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iODEBallJoint *) x));
}
static void *_p_iMapNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMapNode *) x));
}
static void *_p_iAnimatedMeshSubMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedMeshSubMesh *) x));
}
static void *_p_iAnimatedMeshFactorySubMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedMeshFactorySubMesh *) x));
}
static void *_p_iGeneralMeshSubMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGeneralMeshSubMesh *) x));
}
static void *_p_iFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFile *) x));
}
static void *_p_iSkeletonGraveyardTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonGraveyard *) x));
}
static void *_p_iPathTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPath *) x));
}
static void *_p_iDecalTemplateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDecalTemplate *) x));
}
static void *_p_iMeshListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshList *) x));
}
static void *_p_iConsoleWatcherTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConsoleWatcher *) x));
}
static void *_p_iTerraSamplerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerraSampler *) x));
}
static void *_p_iScriptValueTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iScriptValue *) x));
}
static void *_p_iParticleEmitterTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iParticleEmitter *) x));
}
static void *_p_csProcAnimatedTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *)(scfImplementationExt2< csProcTexture,csObject,iTextureWrapper,iProcTexture > *)(csProcTexture *) ((csProcAnimated *) x));
}
static void *_p_iArrayReadOnlyT_iSceneNode_p_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iArrayReadOnly< iSceneNode * > *) x));
}
static void *_p_iFontServerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFontServer *) x));
}
static void *_p_iSndSysSourceSoftwareTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSndSysSource *) ((iSndSysSourceSoftware *) x));
}
static void *_p_iSndSysRendererSoftwareTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysRendererSoftware *) x));
}
static void *_p_iSndSysRendererOpenALTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysRendererOpenAL *) x));
}
static void *_p_iSndSysSourceOpenALTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSourceOpenAL *) x));
}
static void *_p_iConsoleInputTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConsoleInput *) x));
}
static void *_p_iParticleBuiltinEmitterBoxTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEmitter *)(iParticleBuiltinEmitterBase *) ((iParticleBuiltinEmitterBox *) x));
}
static void *_p_csViewTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iView *)(scfImplementation1< csView,iView > *) ((csView *) x));
}
static void *_p_iParticleSystemBaseTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iParticleSystemBase *) x));
}
static void *_p_iSndSysSource3DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSource3D *) x));
}
static void *_p_iVisibilityCullerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVisibilityCuller *) x));
}
static void *_p_iParticleEffectorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iParticleEffector *) x));
}
static void *_p_iScriptTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iScript *) x));
}
static void *_p_iThreadedLoaderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadedLoader *) x));
}
static void *_p_iSpriteCal3DSocketTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSpriteSocket *) ((iSpriteCal3DSocket *) x));
}
static void *_p_iAnimatedMeshSocketTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedMeshSocket *) x));
}
static void *_p_iSkeletonSocketTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonSocket *) x));
}
static void *_p_iSceneNodeArrayTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< iSceneNode * > *) ((iSceneNodeArray *) x));
}
static void *_p_iSndSysLoaderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysLoader *) x));
}
static void *_p_iLoaderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLoader *) x));
}
static void *_p_iSpriteSocketTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSpriteSocket *) x));
}
static void *_p_iLODControlTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLODControl *) x));
}
static void *_p_iGenMeshAnimationControlTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGenMeshAnimationControl *) x));
}
static void *_p_iDocumentAttributeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttribute *) x));
}
static void *_p_iSpriteFrameTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSpriteFrame *) x));
}
static void *_p_iShaderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iShader *) x));
}
static void *_p_iTerrainObjectStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainObjectState *) x));
}
static void *_p_iODEJointStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iODEJointState *) x));
}
static void *_p_iODEGeneralJointStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iODEGeneralJointState *) x));
}
static void *_p_iMaterialEngineTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMaterialEngine *) x));
}
static void *_p_iVirtualClockTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVirtualClock *) x));
}
static void *_p_iEngineTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEngine *) x));
}
static void *_p_iGenMeshAnimationControlTypeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGenMeshAnimationControlType *) x));
}
static void *_p_csTriangleMeshBoxTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *)(scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) ((csTriangleMeshBox *) x));
}
static void *_p_iReporterTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporter *) x));
}
static void *_p_iTranslatorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTranslator *) x));
}
static void *_p_iStringTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iString *) x));
}
static void *_p_iKeyboardDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyboardDriver *) x));
}
static void *_p_iJoystickDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iJoystickDriver *) x));
}
static void *_p_iMouseDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMouseDriver *) x));
}
static void *_p_iSndSysSoftwareDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSoftwareDriver *) x));
}
static void *_p_iShaderVariableAccessorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iShaderVariableAccessor *) x));
}
static void *_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *) ((scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) x));
}
static void *_p_iSkeletonAnimationKeyFrameTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimationKeyFrame *) x));
}
static void *_p_csImageMemoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iImage *)(scfImplementation1< csImageBase,iImage > *)(csImageBase *)(scfImplementationExt0< csImageMemory,csImageBase > *) ((csImageMemory *) x));
}
static void *_p_iGeneralMeshStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iGeneralMeshCommonState *) ((iGeneralMeshState *) x));
}
static void *_p_iSequenceTimedOperationTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSequenceTimedOperation *) x));
}
static void *_p_iSequenceOperationTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSequenceOperation *) x));
}
static void *_p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringSetBase< CS::StringSetTag::General > *) x));
}
static void *_p_iJointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iJoint *) x));
}
static void *_p_iHaloTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iHalo *) x));
}
static void *_p_iEngineSequenceParametersTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEngineSequenceParameters *) x));
}
static void *_p_iKeyComposerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyComposer *) x));
}
static void *_p_iBodyGroupTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iBodyGroup *) x));
}
static void *_p_iTerrainRendererTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainRenderer *) x));
}
static void *_p_iSndSysRendererTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysRenderer *) x));
}
static void *_p_iShaderPriorityListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iShaderPriorityList *) x));
}
static void *_p_iSprite2DUVAnimationFrameTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSprite2DUVAnimationFrame *) x));
}
static void *_p_iThreadReturnTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadReturn *) x));
}
static void *_p_iCollectionTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCollection *) x));
}
static void *_p_iDocumentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocument *) x));
}
static void *_p_iAnimatedMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedMesh *) x));
}
static void *_p_iStringSetBaseT_CS__StringSetTag__ShaderVar_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringSetBase< CS::StringSetTag::ShaderVar > *) x));
}
static void *_p_iMaterialListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMaterialList *) x));
}
static void *_p_iSimpleFormerStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSimpleFormerState *) x));
}
static void *_p_iViewTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iView *) x));
}
static void *_p_iLightTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLight *) x));
}
static void *_p_iTerrainCellTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainCell *) x));
}
static void *_p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt2< csProcTexture,csObject,iTextureWrapper,iProcTexture > *) x));
}
static void *_p_iSkeletonAnimation2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimation2 *) x));
}
static void *_p_iMaterialTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iMaterial *) x));
}
static void *_p_iCEGUITo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCEGUI *) x));
}
static void *_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *) ((scfImplementation1< csTriangleMesh,iTriangleMesh > *) x));
}
static void *_p_csConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *)(scfImplementation1< csConfigFile,iConfigFile > *) ((csConfigFile *) x));
}
static void *_p_iConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigFile *) x));
}
static void *_p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((scfImplementation1< csConfigFile,iConfigFile > *) x));
}
static void *_p_iParticleBuiltinEffectorLinearTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEffector *) ((iParticleBuiltinEffectorLinear *) x));
}
static void *_p_iBugPlugTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iBugPlug *) x));
}
static void *_p_iEventTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEvent *) x));
}
static void *_p_iAnimatedImageTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedImage *) x));
}
static void *_p_iTerrainColliderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainCollider *) x));
}
static void *_p_iColliderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCollider *) x));
}
static void *_p_iDynamicsSystemColliderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDynamicsSystemCollider *) x));
}
static void *_p_iRenderManagerTargetsTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iRenderManagerTargets *) x));
}
static void *_p_iDocumentNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNode *) x));
}
static void *_p_iSequenceTriggerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSequenceTrigger *) x));
}
static void *_p_iGraphics2DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGraphics2D *) x));
}
static void *_p_iCameraPositionTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCameraPosition *) x));
}
static void *_p_iTextureListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTextureList *) x));
}
static void *_p_iSkeletonManager2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonManager2 *) x));
}
static void *_p_iArrayReadOnlyT_csCollisionPair_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iArrayReadOnly< csCollisionPair > *) x));
}
static void *_p_iArrayChangeElementsT_csCollisionPair_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csCollisionPair > *) ((iArrayChangeElements< csCollisionPair > *) x));
}
static void *_p_iArrayChangeAllT_csCollisionPair_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csCollisionPair > *)(iArrayChangeElements< csCollisionPair > *) ((iArrayChangeAll< csCollisionPair > *) x));
}
static void *_p_iTerrainFactoryCellTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainFactoryCell *) x));
}
static void *_p_iODESliderJointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODESliderJoint *) x));
}
static void *_p_iODEAMotorJointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEAMotorJoint *) x));
}
static void *_p_iODEHinge2JointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEHinge2Joint *) x));
}
static void *_p_iParticleBuiltinEmitterConeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEmitter *)(iParticleBuiltinEmitterBase *) ((iParticleBuiltinEmitterCone *) x));
}
static void *_p_iSndSysSource3DDirectionalTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSource3DDirectional *) x));
}
static void *_p_iSectorListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSectorList *) x));
}
static void *_p_iSndSysListenerDopplerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysListenerDoppler *) x));
}
static void *_p_iSndSysSource3DDopplerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSource3DDoppler *) x));
}
static void *_p_iTextureHandleTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTextureHandle *) x));
}
static void *_p_iCommandLineParserTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCommandLineParser *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_iFontDeleteNotifyTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFontDeleteNotify *) x));
}
static void *_p_iTerraFormerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerraFormer *) x));
}
static void *_p_iMeshFactoryListTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshFactoryList *) x));
}
static void *_p_iSndSysSourceTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSource *) x));
}
static void *_p_iSkeletonFSMNodeFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNodeFactory2 *) ((iSkeletonFSMNodeFactory2 *) x));
}
static void *_p_iSkeletonRandomNodeFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNodeFactory2 *) ((iSkeletonRandomNodeFactory2 *) x));
}
static void *_p_iSkeletonPriorityNodeFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNodeFactory2 *) ((iSkeletonPriorityNodeFactory2 *) x));
}
static void *_p_iSkeletonBlendNodeFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNodeFactory2 *) ((iSkeletonBlendNodeFactory2 *) x));
}
static void *_p_iSkeletonAnimationNodeFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSkeletonAnimNodeFactory2 *) ((iSkeletonAnimationNodeFactory2 *) x));
}
static void *_p_iSkeletonAnimNodeFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimNodeFactory2 *) x));
}
static void *_p_iSkeletonAnimPacketFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimPacketFactory2 *) x));
}
static void *_p_iSkeletonFactory2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonFactory2 *) x));
}
static void *_p_scfImplementationExt0T_csImageMemory_csImageBase_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iImage *)(scfImplementation1< csImageBase,iImage > *)(csImageBase *) ((scfImplementationExt0< csImageMemory,csImageBase > *) x));
}
static void *_p_scfImplementation1T_csImageBase_iImage_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iImage *) ((scfImplementation1< csImageBase,iImage > *) x));
}
static void *_p_iGraphics3DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGraphics3D *) x));
}
static void *_p_iSkeletonBoneRagdollInfoTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonBoneRagdollInfo *) x));
}
static void *_p_iSkeletonTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeleton *) x));
}
static void *_p_iArrayReadOnlyT_csShaderVariable_p_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iArrayReadOnly< csShaderVariable * > *) x));
}
static void *_p_iArrayChangeElementsT_csShaderVariable_p_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csShaderVariable * > *) ((iArrayChangeElements< csShaderVariable * > *) x));
}
static void *_p_iArrayChangeAllT_csShaderVariable_p_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csShaderVariable * > *)(iArrayChangeElements< csShaderVariable * > *) ((iArrayChangeAll< csShaderVariable * > *) x));
}
static void *_p_iMeshObjectTypeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshObjectType *) x));
}
static void *_p_iRigidBodyTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iRigidBody *) x));
}
static void *_p_iTextureManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTextureManager *) x));
}
static void *_p_iShaderManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iShaderManager *) x));
}
static void *_p_iNativeWindowManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iNativeWindowManager *) x));
}
static void *_p_iConfigManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((iConfigManager *) x));
}
static void *_p_iCacheManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCacheManager *) x));
}
static void *_p_iThreadManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadManager *) x));
}
static void *_p_iPluginManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginManager *) x));
}
static void *_p_iSndSysManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysManager *) x));
}
static void *_p_iDecalManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDecalManager *) x));
}
static void *_p_iEngineSequenceManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEngineSequenceManager *) x));
}
static void *_p_iSequenceManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSequenceManager *) x));
}
static void *_p_iDynamicsTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDynamics *) x));
}
static void *_p_iRenderLoopManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iRenderLoopManager *) x));
}
static void *_p_iRenderManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iRenderManager *) x));
}
static void *_p_iParameterESMTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iParameterESM *) x));
}
static void *_p_iRenderLoopTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iRenderStepContainer *) ((iRenderLoop *) x));
}
static void *_p_iVFSTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVFS *) x));
}
static void *_p_iDebugHelperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDebugHelper *) x));
}
static void *_p_iParticleBuiltinEffectorForceTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEffector *) ((iParticleBuiltinEffectorForce *) x));
}
static void *_p_iParticleBuiltinEffectorFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iParticleBuiltinEffectorFactory *) x));
}
static void *_p_iParticleBuiltinEmitterFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iParticleBuiltinEmitterFactory *) x));
}
static void *_p_iParticleSystemFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleSystemBase *) ((iParticleSystemFactory *) x));
}
static void *_p_iTerrainFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainFactory *) x));
}
static void *_p_iMeshObjectFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMeshObjectFactory *) x));
}
static void *_p_iAnimatedMeshFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedMeshFactory *) x));
}
static void *_p_iAnimatedMeshSocketFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iAnimatedMeshSocketFactory *) x));
}
static void *_p_iSkeletonFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonFactory *) x));
}
static void *_p_iSkeletonSocketFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonSocketFactory *) x));
}
static void *_p_iSkeletonBoneFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonBoneFactory *) x));
}
static void *_p_iGenMeshAnimationControlFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGenMeshAnimationControlFactory *) x));
}
static void *_p_iFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFactory *) x));
}
static void *_p_csTriangleMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *)(scfImplementation1< csTriangleMesh,iTriangleMesh > *) ((csTriangleMesh *) x));
}
static void *_p_iTriangleMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTriangleMesh *) x));
}
static void *_p_iParticleBuiltinEffectorVelocityFieldTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEffector *) ((iParticleBuiltinEffectorVelocityField *) x));
}
static void *_p_scfImplementation1T_csView_iView_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iView *) ((scfImplementation1< csView,iView > *) x));
}
static void *_p_iCustomMatrixCameraTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCustomMatrixCamera *) x));
}
static void *_p_iPerspectiveCameraTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPerspectiveCamera *) x));
}
static void *_p_iCameraTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCamera *) x));
}
static void *_p_iObjectModelTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectModel *) x));
}
static void *_p_iMovableTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMovable *) x));
}
static void *_p_iNativeWindowTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iNativeWindow *) x));
}
static void *_p_iParticleBuiltinEmitterBaseTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEmitter *) ((iParticleBuiltinEmitterBase *) x));
}
static void *_p_iSndSysStreamTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysStream *) x));
}
static void *_p_iBinaryLoaderPluginTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iBinaryLoaderPlugin *) x));
}
static void *_p_iLoaderPluginTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iLoaderPlugin *) x));
}
static void *_p_iSkeletonAnimPacket2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimPacket2 *) x));
}
static void *_p_iTerrainDataFeederTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainDataFeeder *) x));
}
static void *_p_iPortalContainerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPortalContainer *) x));
}
static void *_p_iRenderStepContainerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iRenderStepContainer *) x));
}
static void *_p_iImageIOTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iImageIO *) x));
}
static void *_p_iSprite2DStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iSprite2DFactoryState *) ((iSprite2DState *) x));
}
static void *_p_iSpriteCal3DStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSpriteCal3DState *) x));
}
static void *_p_iSprite3DStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSprite3DState *) x));
}
static void *_p_iDataBufferTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDataBuffer *) x));
}
static void *_p_iShaderCompilerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iShaderCompiler *) x));
}
static void *_p_iODEHingeJointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEHingeJoint *) x));
}
static void *_p_iParticleBuiltinEmitterSphereTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEmitter *)(iParticleBuiltinEmitterBase *) ((iParticleBuiltinEmitterSphere *) x));
}
static void *_p_iProcTextureTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iProcTexture *) x));
}
static void *_p_iParticleBuiltinEmitterCylinderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iParticleEmitter *)(iParticleBuiltinEmitterBase *) ((iParticleBuiltinEmitterCylinder *) x));
}
static void *_p_csProcTextureTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *)(scfImplementationExt2< csProcTexture,csObject,iTextureWrapper,iProcTexture > *) ((csProcTexture *) x));
}
static void *_p_iSkeletonAnimCallback2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimCallback2 *) x));
}
static void *_p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csColliderWrapper,csObject,scfFakeInterface< csColliderWrapper > > *) x));
}
static void *_p_iComponentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iComponent *) x));
}
static void *_p_iSpriteActionTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSpriteAction *) x));
}
static void *_p_csImageBaseTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iImage *)(scfImplementation1< csImageBase,iImage > *) ((csImageBase *) x));
}
static void *_p_iTerrainFactoryStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTerrainFactoryState *) x));
}
static void *_p_iSpriteCal3DFactoryStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSpriteCal3DFactoryState *) x));
}
static void *_p_iSprite3DFactoryStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSprite3DFactoryState *) x));
}
static void *_p_iSprite2DFactoryStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSprite2DFactoryState *) x));
}
static void *_p_iGeneralFactoryStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iGeneralMeshCommonState *) ((iGeneralFactoryState *) x));
}
static void *_p_iSkeletonAnimationInstanceTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimationInstance *) x));
}
static void *_p_iMissingLoaderDataTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMissingLoaderData *) x));
}
static void *_p_iGeneralMeshCommonStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iGeneralMeshCommonState *) x));
}
static void *_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *) ((scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) x));
}
static void *_p_iSndSysDataTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysData *) x));
}
static void *_p_iSndSysSoftwareOutputFilterTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSoftwareOutputFilter *) x));
}
static void *_p_iSkeleton2To_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeleton2 *) x));
}
static void *_p_iODEDynamicStateTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iODEDynamicState *) x));
}
static void *_p_iSprite2DUVAnimationTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSprite2DUVAnimation *) x));
}
static void *_p_iSkeletonAnimationTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSkeletonAnimation *) x));
}
static void *_p_iEventPlugTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventPlug *) x));
}
static void *_p_iSequenceTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSequence *) x));
}
static void *_p_iSndSysSource3DDirectionalSimpleTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSndSysSource3DDirectionalSimple *) x));
}
static void *_p_csPathTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *)(scfImplementationExt1< csPath,csObject,iPath > *) ((csPath *) x));
}
static void *_p_iArrayChangeAllT_csVector3_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csVector3 > *)(iArrayChangeElements< csVector3 > *) ((iArrayChangeAll< csVector3 > *) x));
}
static void *_p_iArrayChangeElementsT_csVector3_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csVector3 > *) ((iArrayChangeElements< csVector3 > *) x));
}
static void *_p_iArrayReadOnlyT_csVector3_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iArrayReadOnly< csVector3 > *) x));
}
static void *_p_iEventCordTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventCord *) x));
}
static void *_p_iPortalTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPortal *) x));
}
static swig_type_info _swigt__p_AllocatorType = {"_p_AllocatorType", "AllocatorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__FontManager = {"_p_CEGUI__FontManager", "CEGUI::FontManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__GlobalEventSet = {"_p_CEGUI__GlobalEventSet", "CEGUI::GlobalEventSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__ImagesetManager = {"_p_CEGUI__ImagesetManager", "CEGUI::ImagesetManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__Logger = {"_p_CEGUI__Logger", "CEGUI::Logger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__MouseCursor = {"_p_CEGUI__MouseCursor", "CEGUI::MouseCursor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__SchemeManager = {"_p_CEGUI__SchemeManager", "CEGUI::SchemeManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__System = {"_p_CEGUI__System", "CEGUI::System *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__Texture = {"_p_CEGUI__Texture", "CEGUI::Texture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__WindowFactoryManager = {"_p_CEGUI__WindowFactoryManager", "CEGUI::WindowFactoryManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CEGUI__WindowManager = {"_p_CEGUI__WindowManager", "CEGUI::WindowManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Graphics__CoreRenderMesh = {"_p_CS__Graphics__CoreRenderMesh", "CS::Graphics::CoreRenderMesh *|csCoreRenderMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Graphics__RenderMesh = {"_p_CS__Graphics__RenderMesh", "CS::Graphics::RenderMesh *|csRenderMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Graphics__RenderMeshModes = {"_p_CS__Graphics__RenderMeshModes", "CS::Graphics::RenderMeshModes *|csRenderMeshModes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Memory__AllocatorMalloc = {"_p_CS__Memory__AllocatorMalloc", "CS::Container::ArrayAllocDefault *|CS::Memory::AllocatorMalloc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__StringIDT_CS__StringSetTag__General_t = {"_p_CS__StringIDT_CS__StringSetTag__General_t", "csStringID *|csEventID *|CS::StringID< CS::StringSetTag::General > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__StringIDT_CS__StringSetTag__ShaderVar_t = {"_p_CS__StringIDT_CS__StringSetTag__ShaderVar_t", "CS::ShaderVarStringID *|CS::StringID< CS::StringSetTag::ShaderVar > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_t = {"_p_CS__Utility__StringSetT_CS__StringSetTag__General_t", "CS::Utility::StringSet< CS::StringSetTag::General > *|csStringSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CapacityHandlerType = {"_p_CapacityHandlerType", "CapacityHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainedType = {"_p_ContainedType", "ContainedType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ElementHandlerType = {"_p_ElementHandlerType", "ElementHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FileFormatDescription = {"_p_FileFormatDescription", "FileFormatDescription *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HashType = {"_p_HashType", "HashType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KeyType = {"_p_KeyType", "KeyType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SndSysFilterLocation = {"_p_SndSysFilterLocation", "enum SndSysFilterLocation *|SndSysFilterLocation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TagType = {"_p_TagType", "TagType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ThisType = {"_p_ThisType", "ThisType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ValueType = {"_p_ValueType", "ValueType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__1_basetype = {"_p__1_basetype", "$1_basetype *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyCharType = {"_p__csKeyCharType", "enum _csKeyCharType *|csKeyCharType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyEventType = {"_p__csKeyEventType", "enum _csKeyEventType *|csKeyEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierNumType = {"_p__csKeyModifierNumType", "enum _csKeyModifierNumType *|csKeyModifierNumType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierType = {"_p__csKeyModifierType", "enum _csKeyModifierType *|csKeyModifierType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifiers = {"_p__csKeyModifiers", "_csKeyModifiers *|csKeyModifiers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csMouseCursorID = {"_p__csMouseCursorID", "enum _csMouseCursorID *|csMouseCursorID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csMouseEventType = {"_p__csMouseEventType", "enum _csMouseEventType *|csMouseEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityFixedGrowT_16_t = {"_p_csArrayCapacityFixedGrowT_16_t", "CS::Container::ArrayCapacityDefault *|csArrayCapacityFixedGrow< 16 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityVariableGrow = {"_p_csArrayCapacityVariableGrow", "csArrayCapacityDefault *|csArrayCapacityVariableGrow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csImageIOFileFormatDescription_const_p_csArrayElementHandlerT_csImageIOFileFormatDescription_const_p_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csImageIOFileFormatDescription_const_p_csArrayElementHandlerT_csImageIOFileFormatDescription_const_p_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csImageIOFileFormatDescriptions *|csArray< csImageIOFileFormatDescription const *,csArrayElementHandler< csImageIOFileFormatDescription const * >,CS::Memory::AllocatorMalloc,csArrayCapacityFixedGrow< 16 > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefArrayT_iMaterialWrapper_t = {"_p_csRefArrayT_iMaterialWrapper_t", "csRefArray< iMaterialWrapper > *|csTerrainMaterialPalette *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefArrayT_iObject_t = {"_p_csRefArrayT_iObject_t", "csRefArray< iObject > *|csObjectContainer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iBase = {"_p_iBase", "iBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iSaver = {"_p_iSaver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEDynamicSystemState = {"_p_iODEDynamicSystemState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainVector3Array = {"_p_iTerrainVector3Array", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayReadOnlyT_csCollisionPair_t = {"_p_iArrayReadOnlyT_csCollisionPair_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeElementsT_csCollisionPair_t = {"_p_iArrayChangeElementsT_csCollisionPair_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeAllT_csCollisionPair_t = {"_p_iArrayChangeAllT_csCollisionPair_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventQueue = {"_p_iEventQueue", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iShaderVariableContext = {"_p_iShaderVariableContext", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSequenceCondition = {"_p_iSequenceCondition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCameraPositionList = {"_p_iCameraPositionList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonBlendNode2 = {"_p_iSkeletonBlendNode2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t = {"_p_scfImplementationExt1T_csPath_csObject_iPath_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSceneNode = {"_p_iSceneNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEffectorLinColor = {"_p_iParticleBuiltinEffectorLinColor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonPriorityNode2 = {"_p_iSkeletonPriorityNode2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVFS = {"_p_iVFS", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iClipper2D = {"_p_iClipper2D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csImageBase_iImage_t = {"_p_scfImplementation1T_csImageBase_iImage_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csTriangleMeshPointer = {"_p_csTriangleMeshPointer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConsoleOutput = {"_p_iConsoleOutput", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t = {"_p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimationNode2 = {"_p_iSkeletonAnimationNode2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectRegistry = {"_p_iObjectRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventNameRegistry = {"_p_iEventNameRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonBone = {"_p_iSkeletonBone", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSector = {"_p_iSector", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringSet = {"_p_iStringSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iShaderVarStringSet = {"_p_iShaderVarStringSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGenMeshSkeletonControlState = {"_p_iGenMeshSkeletonControlState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCollisionPairArray = {"_p_iTerrainCollisionPairArray", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iRenderManagerPostEffects = {"_p_iRenderManagerPostEffects", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCellCollisionProperties = {"_p_iTerrainCellCollisionProperties", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCellFeederProperties = {"_p_iTerrainCellFeederProperties", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCellRenderProperties = {"_p_iTerrainCellRenderProperties", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLightList = {"_p_iLightList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCameraListener = {"_p_iCameraListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCameraSectorListener = {"_p_iCameraSectorListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectModelListener = {"_p_iObjectModelListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysListener = {"_p_iSndSysListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporterListener = {"_p_iReporterListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectNameChangeListener = {"_p_iObjectNameChangeListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStandardReporterListener = {"_p_iStandardReporterListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMovableListener = {"_p_iMovableListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVisibilityCullerListener = {"_p_iVisibilityCullerListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFont = {"_p_iFont", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iImage = {"_p_iImage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMovieRecorder = {"_p_iMovieRecorder", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshDrawCallback = {"_p_iMeshDrawCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTextureCallback = {"_p_iTextureCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEngineSectorCallback = {"_p_iEngineSectorCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEngineFrameCallback = {"_p_iEngineFrameCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLightVisibleCallback = {"_p_iLightVisibleCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSectorMeshCallback = {"_p_iSectorMeshCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSectorCallback = {"_p_iSectorCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLightCallback = {"_p_iLightCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCellLoadCallback = {"_p_iTerrainCellLoadCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCellHeightDataCallback = {"_p_iTerrainCellHeightDataCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshObjectDrawCallback = {"_p_iMeshObjectDrawCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonUpdateCallback = {"_p_iSkeletonUpdateCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimationCallback = {"_p_iSkeletonAnimationCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonBoneUpdateCallback = {"_p_iSkeletonBoneUpdateCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysStreamCallback = {"_p_iSndSysStreamCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysRendererCallback = {"_p_iSndSysRendererCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConsoleExecCallback = {"_p_iConsoleExecCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDynamicsStepCallback = {"_p_iDynamicsStepCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDynamicsMoveCallback = {"_p_iDynamicsMoveCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDynamicsCollisionCallback = {"_p_iDynamicsCollisionCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDynamicsColliderCollisionCallback = {"_p_iDynamicsColliderCollisionCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEFrameUpdateCallback = {"_p_iODEFrameUpdateCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPortalCallback = {"_p_iPortalCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iProcTexCallback = {"_p_iProcTexCallback", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainSystem = {"_p_iTerrainSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentSystem = {"_p_iDocumentSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDynamicSystem = {"_p_iDynamicSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCollideSystem = {"_p_iCollideSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleSystem = {"_p_iParticleSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringArray = {"_p_iStringArray", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshWrapperIterator = {"_p_iMeshWrapperIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshFactoryWrapperIterator = {"_p_iMeshFactoryWrapperIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSectorIterator = {"_p_iSectorIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLightIterator = {"_p_iLightIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTriangleMeshIterator = {"_p_iTriangleMeshIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSharedVarLoaderIterator = {"_p_iSharedVarLoaderIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMaterialLoaderIterator = {"_p_iMaterialLoaderIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTextureLoaderIterator = {"_p_iTextureLoaderIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCamposLoaderIterator = {"_p_iCamposLoaderIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshLoaderIterator = {"_p_iMeshLoaderIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshFactLoaderIterator = {"_p_iMeshFactLoaderIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSectorLoaderIterator = {"_p_iSectorLoaderIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentNodeIterator = {"_p_iDocumentNodeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentAttributeIterator = {"_p_iDocumentAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigIterator = {"_p_iConfigIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporterIterator = {"_p_iReporterIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectIterator = {"_p_iObjectIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectRegistryIterator = {"_p_iObjectRegistryIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventAttributeIterator = {"_p_iEventAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPluginIterator = {"_p_iPluginIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVisibilityObjectIterator = {"_p_iVisibilityObjectIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventOutlet = {"_p_iEventOutlet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iColoredVertices = {"_p_iColoredVertices", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedMeshMorphTarget = {"_p_iAnimatedMeshMorphTarget", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csView_iView_t = {"_p_scfImplementation1T_csView_iView_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSoftwareFilter3D = {"_p_iSndSysSoftwareFilter3D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshObject = {"_p_iMeshObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iBugPlugRenderObject = {"_p_iBugPlugRenderObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iScriptObject = {"_p_iScriptObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObject = {"_p_iObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csObject = {"_p_csObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVisibilityObject = {"_p_iVisibilityObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonRandomNode2 = {"_p_iSkeletonRandomNode2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimNode2 = {"_p_iSkeletonAnimNode2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonFSMNode2 = {"_p_iSkeletonFSMNode2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimTimeUpdateHandler = {"_p_iAnimTimeUpdateHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventHandler = {"_p_iEventHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshFactoryWrapper = {"_p_iMeshFactoryWrapper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshWrapper = {"_p_iMeshWrapper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMaterialWrapper = {"_p_iMaterialWrapper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTextureWrapper = {"_p_iTextureWrapper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysWrapper = {"_p_iSndSysWrapper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSequenceWrapper = {"_p_iSequenceWrapper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csColliderWrapper = {"_p_csColliderWrapper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEUniversalJoint = {"_p_iODEUniversalJoint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEBallJoint = {"_p_iODEBallJoint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMapNode = {"_p_iMapNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedMeshSubMesh = {"_p_iAnimatedMeshSubMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedMeshFactorySubMesh = {"_p_iAnimatedMeshFactorySubMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGeneralMeshSubMesh = {"_p_iGeneralMeshSubMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonGraveyard = {"_p_iSkeletonGraveyard", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDecalTemplate = {"_p_iDecalTemplate", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshList = {"_p_iMeshList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConsoleWatcher = {"_p_iConsoleWatcher", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerraSampler = {"_p_iTerraSampler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iScriptValue = {"_p_iScriptValue", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleEmitter = {"_p_iParticleEmitter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csProcAnimated = {"_p_csProcAnimated", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFontServer = {"_p_iFontServer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSourceSoftware = {"_p_iSndSysSourceSoftware", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysRendererSoftware = {"_p_iSndSysRendererSoftware", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysRendererOpenAL = {"_p_iSndSysRendererOpenAL", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSourceOpenAL = {"_p_iSndSysSourceOpenAL", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConsoleInput = {"_p_iConsoleInput", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEmitterBox = {"_p_iParticleBuiltinEmitterBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csView = {"_p_csView", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleSystemBase = {"_p_iParticleSystemBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVisibilityCuller = {"_p_iVisibilityCuller", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSource3D = {"_p_iSndSysSource3D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFile = {"_p_iFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPath = {"_p_iPath", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleEffector = {"_p_iParticleEffector", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iThreadedLoader = {"_p_iThreadedLoader", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSpriteCal3DSocket = {"_p_iSpriteCal3DSocket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedMeshSocket = {"_p_iAnimatedMeshSocket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonSocket = {"_p_iSkeletonSocket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSceneNodeArray = {"_p_iSceneNodeArray", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysLoader = {"_p_iSndSysLoader", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLoader = {"_p_iLoader", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSpriteSocket = {"_p_iSpriteSocket", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLODControl = {"_p_iLODControl", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGenMeshAnimationControl = {"_p_iGenMeshAnimationControl", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentAttribute = {"_p_iDocumentAttribute", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSpriteFrame = {"_p_iSpriteFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iShader = {"_p_iShader", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainObjectState = {"_p_iTerrainObjectState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEJointState = {"_p_iODEJointState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEGeneralJointState = {"_p_iODEGeneralJointState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMaterialEngine = {"_p_iMaterialEngine", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayReadOnlyT_csVector3_t = {"_p_iArrayReadOnlyT_csVector3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeElementsT_csVector3_t = {"_p_iArrayChangeElementsT_csVector3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeAllT_csVector3_t = {"_p_iArrayChangeAllT_csVector3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVirtualClock = {"_p_iVirtualClock", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEngine = {"_p_iEngine", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGenMeshAnimationControlType = {"_p_iGenMeshAnimationControlType", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t = {"_p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csTriangleMeshBox = {"_p_csTriangleMeshBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporter = {"_p_iReporter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csObject_iObject_t = {"_p_scfImplementation1T_csObject_iObject_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTranslator = {"_p_iTranslator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iString = {"_p_iString", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iKeyboardDriver = {"_p_iKeyboardDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iJoystickDriver = {"_p_iJoystickDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMouseDriver = {"_p_iMouseDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSoftwareDriver = {"_p_iSndSysSoftwareDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iShaderVariableAccessor = {"_p_iShaderVariableAccessor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSCF = {"_p_iSCF", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimationKeyFrame = {"_p_iSkeletonAnimationKeyFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csImageMemory = {"_p_csImageMemory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGeneralMeshState = {"_p_iGeneralMeshState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSequenceTimedOperation = {"_p_iSequenceTimedOperation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSequenceOperation = {"_p_iSequenceOperation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iJoint = {"_p_iJoint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEngineSequenceParameters = {"_p_iEngineSequenceParameters", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iKeyComposer = {"_p_iKeyComposer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iBodyGroup = {"_p_iBodyGroup", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainRenderer = {"_p_iTerrainRenderer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysRenderer = {"_p_iSndSysRenderer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iShaderPriorityList = {"_p_iShaderPriorityList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSprite2DUVAnimationFrame = {"_p_iSprite2DUVAnimationFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iThreadReturn = {"_p_iThreadReturn", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCollection = {"_p_iCollection", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocument = {"_p_iDocument", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedMesh = {"_p_iAnimatedMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMaterialList = {"_p_iMaterialList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLight = {"_p_iLight", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSimpleFormerState = {"_p_iSimpleFormerState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCell = {"_p_iTerrainCell", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementationExt0T_csImageMemory_csImageBase_t = {"_p_scfImplementationExt0T_csImageMemory_csImageBase_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimation2 = {"_p_iSkeletonAnimation2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMaterial = {"_p_iMaterial", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayReadOnlyT_csSprite2DVertex_t = {"_p_iArrayReadOnlyT_csSprite2DVertex_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeElementsT_csSprite2DVertex_t = {"_p_iArrayChangeElementsT_csSprite2DVertex_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeAllT_csSprite2DVertex_t = {"_p_iArrayChangeAllT_csSprite2DVertex_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csConfigFile = {"_p_csConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigFile = {"_p_iConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEvent = {"_p_iEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEffectorLinear = {"_p_iParticleBuiltinEffectorLinear", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iBugPlug = {"_p_iBugPlug", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedImage = {"_p_iAnimatedImage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iHalo = {"_p_iHalo", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainCollider = {"_p_iTerrainCollider", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCollider = {"_p_iCollider", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDynamicsSystemCollider = {"_p_iDynamicsSystemCollider", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayReadOnlyT_iSceneNode_p_t = {"_p_iArrayReadOnlyT_iSceneNode_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iRenderManagerTargets = {"_p_iRenderManagerTargets", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentNode = {"_p_iDocumentNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSequenceTrigger = {"_p_iSequenceTrigger", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGraphics2D = {"_p_iGraphics2D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCameraPosition = {"_p_iCameraPosition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTextureList = {"_p_iTextureList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonManager2 = {"_p_iSkeletonManager2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainFactoryCell = {"_p_iTerrainFactoryCell", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iView = {"_p_iView", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODESliderJoint = {"_p_iODESliderJoint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEAMotorJoint = {"_p_iODEAMotorJoint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEHinge2Joint = {"_p_iODEHinge2Joint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEmitterCone = {"_p_iParticleBuiltinEmitterCone", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSource3DDirectional = {"_p_iSndSysSource3DDirectional", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSectorList = {"_p_iSectorList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysListenerDoppler = {"_p_iSndSysListenerDoppler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSource3DDoppler = {"_p_iSndSysSource3DDoppler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCommandLineParser = {"_p_iCommandLineParser", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFontDeleteNotify = {"_p_iFontDeleteNotify", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerraFormer = {"_p_iTerraFormer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshFactoryList = {"_p_iMeshFactoryList", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSource = {"_p_iSndSysSource", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonFSMNodeFactory2 = {"_p_iSkeletonFSMNodeFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonRandomNodeFactory2 = {"_p_iSkeletonRandomNodeFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonPriorityNodeFactory2 = {"_p_iSkeletonPriorityNodeFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonBlendNodeFactory2 = {"_p_iSkeletonBlendNodeFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimationNodeFactory2 = {"_p_iSkeletonAnimationNodeFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimNodeFactory2 = {"_p_iSkeletonAnimNodeFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimPacketFactory2 = {"_p_iSkeletonAnimPacketFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonFactory2 = {"_p_iSkeletonFactory2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayReadOnlyT_iCollection_p_t = {"_p_iArrayReadOnlyT_iCollection_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGraphics3D = {"_p_iGraphics3D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonBoneRagdollInfo = {"_p_iSkeletonBoneRagdollInfo", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeleton = {"_p_iSkeleton", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshObjectType = {"_p_iMeshObjectType", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iRigidBody = {"_p_iRigidBody", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTextureManager = {"_p_iTextureManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iShaderManager = {"_p_iShaderManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iNativeWindowManager = {"_p_iNativeWindowManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigManager = {"_p_iConfigManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCacheManager = {"_p_iCacheManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iThreadManager = {"_p_iThreadManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPluginManager = {"_p_iPluginManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysManager = {"_p_iSndSysManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDecalManager = {"_p_iDecalManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEngineSequenceManager = {"_p_iEngineSequenceManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSequenceManager = {"_p_iSequenceManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iRenderLoopManager = {"_p_iRenderLoopManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iRenderManager = {"_p_iRenderManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDynamics = {"_p_iDynamics", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParameterESM = {"_p_iParameterESM", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iRenderLoop = {"_p_iRenderLoop", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDebugHelper = {"_p_iDebugHelper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEffectorForce = {"_p_iParticleBuiltinEffectorForce", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEffectorFactory = {"_p_iParticleBuiltinEffectorFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEmitterFactory = {"_p_iParticleBuiltinEmitterFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleSystemFactory = {"_p_iParticleSystemFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainFactory = {"_p_iTerrainFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMeshObjectFactory = {"_p_iMeshObjectFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedMeshFactory = {"_p_iAnimatedMeshFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iAnimatedMeshSocketFactory = {"_p_iAnimatedMeshSocketFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonFactory = {"_p_iSkeletonFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonSocketFactory = {"_p_iSkeletonSocketFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonBoneFactory = {"_p_iSkeletonBoneFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGenMeshAnimationControlFactory = {"_p_iGenMeshAnimationControlFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFactory = {"_p_iFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csTriangleMesh = {"_p_csTriangleMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTriangleMesh = {"_p_iTriangleMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEffectorVelocityField = {"_p_iParticleBuiltinEffectorVelocityField", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCustomMatrixCamera = {"_p_iCustomMatrixCamera", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPerspectiveCamera = {"_p_iPerspectiveCamera", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCamera = {"_p_iCamera", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectModel = {"_p_iObjectModel", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t = {"_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMovable = {"_p_iMovable", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iNativeWindow = {"_p_iNativeWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEmitterBase = {"_p_iParticleBuiltinEmitterBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysStream = {"_p_iSndSysStream", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iBinaryLoaderPlugin = {"_p_iBinaryLoaderPlugin", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iLoaderPlugin = {"_p_iLoaderPlugin", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimPacket2 = {"_p_iSkeletonAnimPacket2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t = {"_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainDataFeeder = {"_p_iTerrainDataFeeder", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPortalContainer = {"_p_iPortalContainer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iRenderStepContainer = {"_p_iRenderStepContainer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iImageIO = {"_p_iImageIO", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayReadOnlyT_csShaderVariable_p_t = {"_p_iArrayReadOnlyT_csShaderVariable_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeElementsT_csShaderVariable_p_t = {"_p_iArrayChangeElementsT_csShaderVariable_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iArrayChangeAllT_csShaderVariable_p_t = {"_p_iArrayChangeAllT_csShaderVariable_p_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSprite2DState = {"_p_iSprite2DState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSpriteCal3DState = {"_p_iSpriteCal3DState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSprite3DState = {"_p_iSprite3DState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDataBuffer = {"_p_iDataBuffer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iShaderCompiler = {"_p_iShaderCompiler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEHingeJoint = {"_p_iODEHingeJoint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEmitterSphere = {"_p_iParticleBuiltinEmitterSphere", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iProcTexture = {"_p_iProcTexture", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csProcTexture = {"_p_csProcTexture", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iParticleBuiltinEmitterCylinder = {"_p_iParticleBuiltinEmitterCylinder", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringSetBaseT_CS__StringSetTag__General_t = {"_p_iStringSetBaseT_CS__StringSetTag__General_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimCallback2 = {"_p_iSkeletonAnimCallback2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iComponent = {"_p_iComponent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSpriteAction = {"_p_iSpriteAction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csImageBase = {"_p_csImageBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTerrainFactoryState = {"_p_iTerrainFactoryState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSpriteCal3DFactoryState = {"_p_iSpriteCal3DFactoryState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSprite3DFactoryState = {"_p_iSprite3DFactoryState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSprite2DFactoryState = {"_p_iSprite2DFactoryState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGeneralFactoryState = {"_p_iGeneralFactoryState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimationInstance = {"_p_iSkeletonAnimationInstance", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMissingLoaderData = {"_p_iMissingLoaderData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t = {"_p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iGeneralMeshCommonState = {"_p_iGeneralMeshCommonState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t = {"_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysData = {"_p_iSndSysData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSoftwareOutputFilter = {"_p_iSndSysSoftwareOutputFilter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeleton2 = {"_p_iSkeleton2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iODEDynamicState = {"_p_iODEDynamicState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSprite2DUVAnimation = {"_p_iSprite2DUVAnimation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSkeletonAnimation = {"_p_iSkeletonAnimation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t = {"_p_scfImplementation1T_csConfigFile_iConfigFile_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventPlug = {"_p_iEventPlug", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSequence = {"_p_iSequence", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csPath = {"_p_csPath", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iSndSysSource3DDirectionalSimple = {"_p_iSndSysSource3DDirectionalSimple", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventCord = {"_p_iEventCord", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPortal = {"_p_iPortal", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCEGUI = {"_p_iCEGUI", "iCEGUI *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iScript = {"_p_iScript", "iScript *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iTextureHandle = {"_p_iTextureHandle", "iTextureHandle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|int32 *|scfInterfaceVersion *|int32_t *|csSoundSample *|CS::Graphics::RenderPriority *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int16_t = {"_p_int16_t", "int16 *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *|int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int8_t = {"_p_int8_t", "int8 *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "longlong *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint16_t = {"_p_uint16_t", "uint16 *|uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *|uint32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *|uint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "uint8 *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "CS::StringIDValue *|unsigned int *|uint *|CS::Animation::ChannelID *|CS::Animation::StateID *|CS::Animation::KeyFrameID *|csTicks *|BoneID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|scfInterfaceID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "ulonglong *|unsigned long long *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_AllocatorType,
  &_swigt__p_CEGUI__FontManager,
  &_swigt__p_CEGUI__GlobalEventSet,
  &_swigt__p_CEGUI__ImagesetManager,
  &_swigt__p_CEGUI__Logger,
  &_swigt__p_CEGUI__MouseCursor,
  &_swigt__p_CEGUI__SchemeManager,
  &_swigt__p_CEGUI__System,
  &_swigt__p_CEGUI__Texture,
  &_swigt__p_CEGUI__WindowFactoryManager,
  &_swigt__p_CEGUI__WindowManager,
  &_swigt__p_CS__Graphics__CoreRenderMesh,
  &_swigt__p_CS__Graphics__RenderMesh,
  &_swigt__p_CS__Graphics__RenderMeshModes,
  &_swigt__p_CS__Memory__AllocatorMalloc,
  &_swigt__p_CS__StringIDT_CS__StringSetTag__General_t,
  &_swigt__p_CS__StringIDT_CS__StringSetTag__ShaderVar_t,
  &_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_t,
  &_swigt__p_CapacityHandlerType,
  &_swigt__p_ContainedType,
  &_swigt__p_ElementHandlerType,
  &_swigt__p_FileFormatDescription,
  &_swigt__p_HashType,
  &_swigt__p_KeyType,
  &_swigt__p_SndSysFilterLocation,
  &_swigt__p_TagType,
  &_swigt__p_ThisType,
  &_swigt__p_ValueType,
  &_swigt__p__1_basetype,
  &_swigt__p__csKeyCharType,
  &_swigt__p__csKeyEventType,
  &_swigt__p__csKeyModifierNumType,
  &_swigt__p__csKeyModifierType,
  &_swigt__p__csKeyModifiers,
  &_swigt__p__csMouseCursorID,
  &_swigt__p__csMouseEventType,
  &_swigt__p_char,
  &_swigt__p_csArrayCapacityFixedGrowT_16_t,
  &_swigt__p_csArrayCapacityVariableGrow,
  &_swigt__p_csArrayT_csImageIOFileFormatDescription_const_p_csArrayElementHandlerT_csImageIOFileFormatDescription_const_p_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csColliderWrapper,
  &_swigt__p_csConfigFile,
  &_swigt__p_csImageBase,
  &_swigt__p_csImageMemory,
  &_swigt__p_csObject,
  &_swigt__p_csPath,
  &_swigt__p_csProcAnimated,
  &_swigt__p_csProcTexture,
  &_swigt__p_csRefArrayT_iMaterialWrapper_t,
  &_swigt__p_csRefArrayT_iObject_t,
  &_swigt__p_csTriangleMesh,
  &_swigt__p_csTriangleMeshBox,
  &_swigt__p_csTriangleMeshPointer,
  &_swigt__p_csView,
  &_swigt__p_iAnimTimeUpdateHandler,
  &_swigt__p_iAnimatedImage,
  &_swigt__p_iAnimatedMesh,
  &_swigt__p_iAnimatedMeshFactory,
  &_swigt__p_iAnimatedMeshFactorySubMesh,
  &_swigt__p_iAnimatedMeshMorphTarget,
  &_swigt__p_iAnimatedMeshSocket,
  &_swigt__p_iAnimatedMeshSocketFactory,
  &_swigt__p_iAnimatedMeshSubMesh,
  &_swigt__p_iArrayChangeAllT_csCollisionPair_t,
  &_swigt__p_iArrayChangeAllT_csShaderVariable_p_t,
  &_swigt__p_iArrayChangeAllT_csSprite2DVertex_t,
  &_swigt__p_iArrayChangeAllT_csVector3_t,
  &_swigt__p_iArrayChangeElementsT_csCollisionPair_t,
  &_swigt__p_iArrayChangeElementsT_csShaderVariable_p_t,
  &_swigt__p_iArrayChangeElementsT_csSprite2DVertex_t,
  &_swigt__p_iArrayChangeElementsT_csVector3_t,
  &_swigt__p_iArrayReadOnlyT_csCollisionPair_t,
  &_swigt__p_iArrayReadOnlyT_csShaderVariable_p_t,
  &_swigt__p_iArrayReadOnlyT_csSprite2DVertex_t,
  &_swigt__p_iArrayReadOnlyT_csVector3_t,
  &_swigt__p_iArrayReadOnlyT_iCollection_p_t,
  &_swigt__p_iArrayReadOnlyT_iSceneNode_p_t,
  &_swigt__p_iBase,
  &_swigt__p_iBinaryLoaderPlugin,
  &_swigt__p_iBodyGroup,
  &_swigt__p_iBugPlug,
  &_swigt__p_iBugPlugRenderObject,
  &_swigt__p_iCEGUI,
  &_swigt__p_iCacheManager,
  &_swigt__p_iCamera,
  &_swigt__p_iCameraListener,
  &_swigt__p_iCameraPosition,
  &_swigt__p_iCameraPositionList,
  &_swigt__p_iCameraSectorListener,
  &_swigt__p_iCamposLoaderIterator,
  &_swigt__p_iClipper2D,
  &_swigt__p_iCollection,
  &_swigt__p_iCollideSystem,
  &_swigt__p_iCollider,
  &_swigt__p_iColoredVertices,
  &_swigt__p_iCommandLineParser,
  &_swigt__p_iComponent,
  &_swigt__p_iConfigFile,
  &_swigt__p_iConfigIterator,
  &_swigt__p_iConfigManager,
  &_swigt__p_iConsoleExecCallback,
  &_swigt__p_iConsoleInput,
  &_swigt__p_iConsoleOutput,
  &_swigt__p_iConsoleWatcher,
  &_swigt__p_iCustomMatrixCamera,
  &_swigt__p_iDataBuffer,
  &_swigt__p_iDebugHelper,
  &_swigt__p_iDecalManager,
  &_swigt__p_iDecalTemplate,
  &_swigt__p_iDocument,
  &_swigt__p_iDocumentAttribute,
  &_swigt__p_iDocumentAttributeIterator,
  &_swigt__p_iDocumentNode,
  &_swigt__p_iDocumentNodeIterator,
  &_swigt__p_iDocumentSystem,
  &_swigt__p_iDynamicSystem,
  &_swigt__p_iDynamics,
  &_swigt__p_iDynamicsColliderCollisionCallback,
  &_swigt__p_iDynamicsCollisionCallback,
  &_swigt__p_iDynamicsMoveCallback,
  &_swigt__p_iDynamicsStepCallback,
  &_swigt__p_iDynamicsSystemCollider,
  &_swigt__p_iEngine,
  &_swigt__p_iEngineFrameCallback,
  &_swigt__p_iEngineSectorCallback,
  &_swigt__p_iEngineSequenceManager,
  &_swigt__p_iEngineSequenceParameters,
  &_swigt__p_iEvent,
  &_swigt__p_iEventAttributeIterator,
  &_swigt__p_iEventCord,
  &_swigt__p_iEventHandler,
  &_swigt__p_iEventNameRegistry,
  &_swigt__p_iEventOutlet,
  &_swigt__p_iEventPlug,
  &_swigt__p_iEventQueue,
  &_swigt__p_iFactory,
  &_swigt__p_iFile,
  &_swigt__p_iFont,
  &_swigt__p_iFontDeleteNotify,
  &_swigt__p_iFontServer,
  &_swigt__p_iGenMeshAnimationControl,
  &_swigt__p_iGenMeshAnimationControlFactory,
  &_swigt__p_iGenMeshAnimationControlType,
  &_swigt__p_iGenMeshSkeletonControlState,
  &_swigt__p_iGeneralFactoryState,
  &_swigt__p_iGeneralMeshCommonState,
  &_swigt__p_iGeneralMeshState,
  &_swigt__p_iGeneralMeshSubMesh,
  &_swigt__p_iGraphics2D,
  &_swigt__p_iGraphics3D,
  &_swigt__p_iHalo,
  &_swigt__p_iImage,
  &_swigt__p_iImageIO,
  &_swigt__p_iJoint,
  &_swigt__p_iJoystickDriver,
  &_swigt__p_iKeyComposer,
  &_swigt__p_iKeyboardDriver,
  &_swigt__p_iLODControl,
  &_swigt__p_iLight,
  &_swigt__p_iLightCallback,
  &_swigt__p_iLightIterator,
  &_swigt__p_iLightList,
  &_swigt__p_iLightVisibleCallback,
  &_swigt__p_iLoader,
  &_swigt__p_iLoaderPlugin,
  &_swigt__p_iMapNode,
  &_swigt__p_iMaterial,
  &_swigt__p_iMaterialEngine,
  &_swigt__p_iMaterialList,
  &_swigt__p_iMaterialLoaderIterator,
  &_swigt__p_iMaterialWrapper,
  &_swigt__p_iMeshDrawCallback,
  &_swigt__p_iMeshFactLoaderIterator,
  &_swigt__p_iMeshFactoryList,
  &_swigt__p_iMeshFactoryWrapper,
  &_swigt__p_iMeshFactoryWrapperIterator,
  &_swigt__p_iMeshList,
  &_swigt__p_iMeshLoaderIterator,
  &_swigt__p_iMeshObject,
  &_swigt__p_iMeshObjectDrawCallback,
  &_swigt__p_iMeshObjectFactory,
  &_swigt__p_iMeshObjectType,
  &_swigt__p_iMeshWrapper,
  &_swigt__p_iMeshWrapperIterator,
  &_swigt__p_iMissingLoaderData,
  &_swigt__p_iMouseDriver,
  &_swigt__p_iMovable,
  &_swigt__p_iMovableListener,
  &_swigt__p_iMovieRecorder,
  &_swigt__p_iNativeWindow,
  &_swigt__p_iNativeWindowManager,
  &_swigt__p_iODEAMotorJoint,
  &_swigt__p_iODEBallJoint,
  &_swigt__p_iODEDynamicState,
  &_swigt__p_iODEDynamicSystemState,
  &_swigt__p_iODEFrameUpdateCallback,
  &_swigt__p_iODEGeneralJointState,
  &_swigt__p_iODEHinge2Joint,
  &_swigt__p_iODEHingeJoint,
  &_swigt__p_iODEJointState,
  &_swigt__p_iODESliderJoint,
  &_swigt__p_iODEUniversalJoint,
  &_swigt__p_iObject,
  &_swigt__p_iObjectIterator,
  &_swigt__p_iObjectModel,
  &_swigt__p_iObjectModelListener,
  &_swigt__p_iObjectNameChangeListener,
  &_swigt__p_iObjectRegistry,
  &_swigt__p_iObjectRegistryIterator,
  &_swigt__p_iParameterESM,
  &_swigt__p_iParticleBuiltinEffectorFactory,
  &_swigt__p_iParticleBuiltinEffectorForce,
  &_swigt__p_iParticleBuiltinEffectorLinColor,
  &_swigt__p_iParticleBuiltinEffectorLinear,
  &_swigt__p_iParticleBuiltinEffectorVelocityField,
  &_swigt__p_iParticleBuiltinEmitterBase,
  &_swigt__p_iParticleBuiltinEmitterBox,
  &_swigt__p_iParticleBuiltinEmitterCone,
  &_swigt__p_iParticleBuiltinEmitterCylinder,
  &_swigt__p_iParticleBuiltinEmitterFactory,
  &_swigt__p_iParticleBuiltinEmitterSphere,
  &_swigt__p_iParticleEffector,
  &_swigt__p_iParticleEmitter,
  &_swigt__p_iParticleSystem,
  &_swigt__p_iParticleSystemBase,
  &_swigt__p_iParticleSystemFactory,
  &_swigt__p_iPath,
  &_swigt__p_iPerspectiveCamera,
  &_swigt__p_iPluginIterator,
  &_swigt__p_iPluginManager,
  &_swigt__p_iPortal,
  &_swigt__p_iPortalCallback,
  &_swigt__p_iPortalContainer,
  &_swigt__p_iProcTexCallback,
  &_swigt__p_iProcTexture,
  &_swigt__p_iRenderLoop,
  &_swigt__p_iRenderLoopManager,
  &_swigt__p_iRenderManager,
  &_swigt__p_iRenderManagerPostEffects,
  &_swigt__p_iRenderManagerTargets,
  &_swigt__p_iRenderStepContainer,
  &_swigt__p_iReporter,
  &_swigt__p_iReporterIterator,
  &_swigt__p_iReporterListener,
  &_swigt__p_iRigidBody,
  &_swigt__p_iSCF,
  &_swigt__p_iSaver,
  &_swigt__p_iSceneNode,
  &_swigt__p_iSceneNodeArray,
  &_swigt__p_iScript,
  &_swigt__p_iScriptObject,
  &_swigt__p_iScriptValue,
  &_swigt__p_iSector,
  &_swigt__p_iSectorCallback,
  &_swigt__p_iSectorIterator,
  &_swigt__p_iSectorList,
  &_swigt__p_iSectorLoaderIterator,
  &_swigt__p_iSectorMeshCallback,
  &_swigt__p_iSequence,
  &_swigt__p_iSequenceCondition,
  &_swigt__p_iSequenceManager,
  &_swigt__p_iSequenceOperation,
  &_swigt__p_iSequenceTimedOperation,
  &_swigt__p_iSequenceTrigger,
  &_swigt__p_iSequenceWrapper,
  &_swigt__p_iShader,
  &_swigt__p_iShaderCompiler,
  &_swigt__p_iShaderManager,
  &_swigt__p_iShaderPriorityList,
  &_swigt__p_iShaderVarStringSet,
  &_swigt__p_iShaderVariableAccessor,
  &_swigt__p_iShaderVariableContext,
  &_swigt__p_iSharedVarLoaderIterator,
  &_swigt__p_iSimpleFormerState,
  &_swigt__p_iSkeleton,
  &_swigt__p_iSkeleton2,
  &_swigt__p_iSkeletonAnimCallback2,
  &_swigt__p_iSkeletonAnimNode2,
  &_swigt__p_iSkeletonAnimNodeFactory2,
  &_swigt__p_iSkeletonAnimPacket2,
  &_swigt__p_iSkeletonAnimPacketFactory2,
  &_swigt__p_iSkeletonAnimation,
  &_swigt__p_iSkeletonAnimation2,
  &_swigt__p_iSkeletonAnimationCallback,
  &_swigt__p_iSkeletonAnimationInstance,
  &_swigt__p_iSkeletonAnimationKeyFrame,
  &_swigt__p_iSkeletonAnimationNode2,
  &_swigt__p_iSkeletonAnimationNodeFactory2,
  &_swigt__p_iSkeletonBlendNode2,
  &_swigt__p_iSkeletonBlendNodeFactory2,
  &_swigt__p_iSkeletonBone,
  &_swigt__p_iSkeletonBoneFactory,
  &_swigt__p_iSkeletonBoneRagdollInfo,
  &_swigt__p_iSkeletonBoneUpdateCallback,
  &_swigt__p_iSkeletonFSMNode2,
  &_swigt__p_iSkeletonFSMNodeFactory2,
  &_swigt__p_iSkeletonFactory,
  &_swigt__p_iSkeletonFactory2,
  &_swigt__p_iSkeletonGraveyard,
  &_swigt__p_iSkeletonManager2,
  &_swigt__p_iSkeletonPriorityNode2,
  &_swigt__p_iSkeletonPriorityNodeFactory2,
  &_swigt__p_iSkeletonRandomNode2,
  &_swigt__p_iSkeletonRandomNodeFactory2,
  &_swigt__p_iSkeletonSocket,
  &_swigt__p_iSkeletonSocketFactory,
  &_swigt__p_iSkeletonUpdateCallback,
  &_swigt__p_iSndSysData,
  &_swigt__p_iSndSysListener,
  &_swigt__p_iSndSysListenerDoppler,
  &_swigt__p_iSndSysLoader,
  &_swigt__p_iSndSysManager,
  &_swigt__p_iSndSysRenderer,
  &_swigt__p_iSndSysRendererCallback,
  &_swigt__p_iSndSysRendererOpenAL,
  &_swigt__p_iSndSysRendererSoftware,
  &_swigt__p_iSndSysSoftwareDriver,
  &_swigt__p_iSndSysSoftwareFilter3D,
  &_swigt__p_iSndSysSoftwareOutputFilter,
  &_swigt__p_iSndSysSource,
  &_swigt__p_iSndSysSource3D,
  &_swigt__p_iSndSysSource3DDirectional,
  &_swigt__p_iSndSysSource3DDirectionalSimple,
  &_swigt__p_iSndSysSource3DDoppler,
  &_swigt__p_iSndSysSourceOpenAL,
  &_swigt__p_iSndSysSourceSoftware,
  &_swigt__p_iSndSysStream,
  &_swigt__p_iSndSysStreamCallback,
  &_swigt__p_iSndSysWrapper,
  &_swigt__p_iSprite2DFactoryState,
  &_swigt__p_iSprite2DState,
  &_swigt__p_iSprite2DUVAnimation,
  &_swigt__p_iSprite2DUVAnimationFrame,
  &_swigt__p_iSprite3DFactoryState,
  &_swigt__p_iSprite3DState,
  &_swigt__p_iSpriteAction,
  &_swigt__p_iSpriteCal3DFactoryState,
  &_swigt__p_iSpriteCal3DSocket,
  &_swigt__p_iSpriteCal3DState,
  &_swigt__p_iSpriteFrame,
  &_swigt__p_iSpriteSocket,
  &_swigt__p_iStandardReporterListener,
  &_swigt__p_iString,
  &_swigt__p_iStringArray,
  &_swigt__p_iStringSet,
  &_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t,
  &_swigt__p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t,
  &_swigt__p_iTerraFormer,
  &_swigt__p_iTerraSampler,
  &_swigt__p_iTerrainCell,
  &_swigt__p_iTerrainCellCollisionProperties,
  &_swigt__p_iTerrainCellFeederProperties,
  &_swigt__p_iTerrainCellHeightDataCallback,
  &_swigt__p_iTerrainCellLoadCallback,
  &_swigt__p_iTerrainCellRenderProperties,
  &_swigt__p_iTerrainCollider,
  &_swigt__p_iTerrainCollisionPairArray,
  &_swigt__p_iTerrainDataFeeder,
  &_swigt__p_iTerrainFactory,
  &_swigt__p_iTerrainFactoryCell,
  &_swigt__p_iTerrainFactoryState,
  &_swigt__p_iTerrainObjectState,
  &_swigt__p_iTerrainRenderer,
  &_swigt__p_iTerrainSystem,
  &_swigt__p_iTerrainVector3Array,
  &_swigt__p_iTextureCallback,
  &_swigt__p_iTextureHandle,
  &_swigt__p_iTextureList,
  &_swigt__p_iTextureLoaderIterator,
  &_swigt__p_iTextureManager,
  &_swigt__p_iTextureWrapper,
  &_swigt__p_iThreadManager,
  &_swigt__p_iThreadReturn,
  &_swigt__p_iThreadedLoader,
  &_swigt__p_iTranslator,
  &_swigt__p_iTriangleMesh,
  &_swigt__p_iTriangleMeshIterator,
  &_swigt__p_iVFS,
  &_swigt__p_iView,
  &_swigt__p_iVirtualClock,
  &_swigt__p_iVisibilityCuller,
  &_swigt__p_iVisibilityCullerListener,
  &_swigt__p_iVisibilityObject,
  &_swigt__p_iVisibilityObjectIterator,
  &_swigt__p_int,
  &_swigt__p_int16_t,
  &_swigt__p_int64_t,
  &_swigt__p_int8_t,
  &_swigt__p_long_long,
  &_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  &_swigt__p_scfImplementation1T_csImageBase_iImage_t,
  &_swigt__p_scfImplementation1T_csObject_iObject_t,
  &_swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t,
  &_swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t,
  &_swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t,
  &_swigt__p_scfImplementation1T_csView_iView_t,
  &_swigt__p_scfImplementationExt0T_csImageMemory_csImageBase_t,
  &_swigt__p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t,
  &_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  &_swigt__p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t,
  &_swigt__p_uint16_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_uint8_t,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_long_long,
};

static swig_cast_info _swigc__p_AllocatorType[] = {  {&_swigt__p_AllocatorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__FontManager[] = {  {&_swigt__p_CEGUI__FontManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__GlobalEventSet[] = {  {&_swigt__p_CEGUI__GlobalEventSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__ImagesetManager[] = {  {&_swigt__p_CEGUI__ImagesetManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__Logger[] = {  {&_swigt__p_CEGUI__Logger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__MouseCursor[] = {  {&_swigt__p_CEGUI__MouseCursor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__SchemeManager[] = {  {&_swigt__p_CEGUI__SchemeManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__System[] = {  {&_swigt__p_CEGUI__System, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__Texture[] = {  {&_swigt__p_CEGUI__Texture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__WindowFactoryManager[] = {  {&_swigt__p_CEGUI__WindowFactoryManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEGUI__WindowManager[] = {  {&_swigt__p_CEGUI__WindowManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Graphics__CoreRenderMesh[] = {  {&_swigt__p_CS__Graphics__CoreRenderMesh, 0, 0, 0},  {&_swigt__p_CS__Graphics__RenderMesh, _p_CS__Graphics__RenderMeshTo_p_CS__Graphics__CoreRenderMesh, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Graphics__RenderMesh[] = {  {&_swigt__p_CS__Graphics__RenderMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Graphics__RenderMeshModes[] = {  {&_swigt__p_CS__Graphics__RenderMesh, _p_CS__Graphics__RenderMeshTo_p_CS__Graphics__RenderMeshModes, 0, 0},  {&_swigt__p_CS__Graphics__RenderMeshModes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Memory__AllocatorMalloc[] = {  {&_swigt__p_CS__Memory__AllocatorMalloc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__StringIDT_CS__StringSetTag__General_t[] = {  {&_swigt__p_CS__StringIDT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__StringIDT_CS__StringSetTag__ShaderVar_t[] = {  {&_swigt__p_CS__StringIDT_CS__StringSetTag__ShaderVar_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_t[] = {  {&_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CapacityHandlerType[] = {  {&_swigt__p_CapacityHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainedType[] = {  {&_swigt__p_ContainedType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ElementHandlerType[] = {  {&_swigt__p_ElementHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FileFormatDescription[] = {  {&_swigt__p_FileFormatDescription, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HashType[] = {  {&_swigt__p_HashType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KeyType[] = {  {&_swigt__p_KeyType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SndSysFilterLocation[] = {  {&_swigt__p_SndSysFilterLocation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TagType[] = {  {&_swigt__p_TagType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ThisType[] = {  {&_swigt__p_ThisType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ValueType[] = {  {&_swigt__p_ValueType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__1_basetype[] = {  {&_swigt__p__1_basetype, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyCharType[] = {  {&_swigt__p__csKeyCharType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyEventType[] = {  {&_swigt__p__csKeyEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierNumType[] = {  {&_swigt__p__csKeyModifierNumType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierType[] = {  {&_swigt__p__csKeyModifierType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifiers[] = {  {&_swigt__p__csKeyModifiers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csMouseCursorID[] = {  {&_swigt__p__csMouseCursorID, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csMouseEventType[] = {  {&_swigt__p__csMouseEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityFixedGrowT_16_t[] = {  {&_swigt__p_csArrayCapacityFixedGrowT_16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityVariableGrow[] = {  {&_swigt__p_csArrayCapacityVariableGrow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csImageIOFileFormatDescription_const_p_csArrayElementHandlerT_csImageIOFileFormatDescription_const_p_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csImageIOFileFormatDescription_const_p_csArrayElementHandlerT_csImageIOFileFormatDescription_const_p_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefArrayT_iMaterialWrapper_t[] = {  {&_swigt__p_csRefArrayT_iMaterialWrapper_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefArrayT_iObject_t[] = {  {&_swigt__p_csRefArrayT_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSaver[] = {{&_swigt__p_iSaver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEDynamicSystemState[] = {{&_swigt__p_iODEDynamicSystemState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainVector3Array[] = {{&_swigt__p_iTerrainVector3Array, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayReadOnlyT_csCollisionPair_t[] = {{&_swigt__p_iArrayReadOnlyT_csCollisionPair_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeElementsT_csCollisionPair_t[] = {{&_swigt__p_iArrayChangeElementsT_csCollisionPair_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeAllT_csCollisionPair_t[] = {{&_swigt__p_iArrayChangeAllT_csCollisionPair_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventQueue[] = {{&_swigt__p_iEventQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iShaderVariableContext[] = {{&_swigt__p_iShaderVariableContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSequenceCondition[] = {{&_swigt__p_iSequenceCondition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCameraPositionList[] = {{&_swigt__p_iCameraPositionList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonBlendNode2[] = {{&_swigt__p_iSkeletonBlendNode2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t[] = {{&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSceneNode[] = {{&_swigt__p_iSceneNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEffectorLinColor[] = {{&_swigt__p_iParticleBuiltinEffectorLinColor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonPriorityNode2[] = {{&_swigt__p_iSkeletonPriorityNode2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVFS[] = {{&_swigt__p_iVFS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iClipper2D[] = {{&_swigt__p_iClipper2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csImageBase_iImage_t[] = {{&_swigt__p_scfImplementation1T_csImageBase_iImage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMeshPointer[] = {{&_swigt__p_csTriangleMeshPointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConsoleOutput[] = {{&_swigt__p_iConsoleOutput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t[] = {{&_swigt__p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimationNode2[] = {{&_swigt__p_iSkeletonAnimationNode2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistry[] = {{&_swigt__p_iObjectRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventNameRegistry[] = {{&_swigt__p_iEventNameRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonBone[] = {{&_swigt__p_iSkeletonBone, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSector[] = {{&_swigt__p_iSector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSet[] = {{&_swigt__p_iStringSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iShaderVarStringSet[] = {{&_swigt__p_iShaderVarStringSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGenMeshSkeletonControlState[] = {{&_swigt__p_iGenMeshSkeletonControlState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCollisionPairArray[] = {{&_swigt__p_iTerrainCollisionPairArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRenderManagerPostEffects[] = {{&_swigt__p_iRenderManagerPostEffects, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCellCollisionProperties[] = {{&_swigt__p_iTerrainCellCollisionProperties, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCellFeederProperties[] = {{&_swigt__p_iTerrainCellFeederProperties, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCellRenderProperties[] = {{&_swigt__p_iTerrainCellRenderProperties, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLightList[] = {{&_swigt__p_iLightList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCameraListener[] = {{&_swigt__p_iCameraListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCameraSectorListener[] = {{&_swigt__p_iCameraSectorListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectModelListener[] = {{&_swigt__p_iObjectModelListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysListener[] = {{&_swigt__p_iSndSysListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterListener[] = {{&_swigt__p_iReporterListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectNameChangeListener[] = {{&_swigt__p_iObjectNameChangeListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStandardReporterListener[] = {{&_swigt__p_iStandardReporterListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMovableListener[] = {{&_swigt__p_iMovableListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVisibilityCullerListener[] = {{&_swigt__p_iVisibilityCullerListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFont[] = {{&_swigt__p_iFont, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iImage[] = {{&_swigt__p_iImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMovieRecorder[] = {{&_swigt__p_iMovieRecorder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshDrawCallback[] = {{&_swigt__p_iMeshDrawCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTextureCallback[] = {{&_swigt__p_iTextureCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEngineSectorCallback[] = {{&_swigt__p_iEngineSectorCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEngineFrameCallback[] = {{&_swigt__p_iEngineFrameCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLightVisibleCallback[] = {{&_swigt__p_iLightVisibleCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSectorMeshCallback[] = {{&_swigt__p_iSectorMeshCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSectorCallback[] = {{&_swigt__p_iSectorCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLightCallback[] = {{&_swigt__p_iLightCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCellLoadCallback[] = {{&_swigt__p_iTerrainCellLoadCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCellHeightDataCallback[] = {{&_swigt__p_iTerrainCellHeightDataCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshObjectDrawCallback[] = {{&_swigt__p_iMeshObjectDrawCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonUpdateCallback[] = {{&_swigt__p_iSkeletonUpdateCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimationCallback[] = {{&_swigt__p_iSkeletonAnimationCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonBoneUpdateCallback[] = {{&_swigt__p_iSkeletonBoneUpdateCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysStreamCallback[] = {{&_swigt__p_iSndSysStreamCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysRendererCallback[] = {{&_swigt__p_iSndSysRendererCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConsoleExecCallback[] = {{&_swigt__p_iConsoleExecCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamicsStepCallback[] = {{&_swigt__p_iDynamicsStepCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamicsMoveCallback[] = {{&_swigt__p_iDynamicsMoveCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamicsCollisionCallback[] = {{&_swigt__p_iDynamicsCollisionCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamicsColliderCollisionCallback[] = {{&_swigt__p_iDynamicsColliderCollisionCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEFrameUpdateCallback[] = {{&_swigt__p_iODEFrameUpdateCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPortalCallback[] = {{&_swigt__p_iPortalCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iProcTexCallback[] = {{&_swigt__p_iProcTexCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainSystem[] = {{&_swigt__p_iTerrainSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentSystem[] = {{&_swigt__p_iDocumentSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamicSystem[] = {{&_swigt__p_iDynamicSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCollideSystem[] = {{&_swigt__p_iCollideSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleSystem[] = {{&_swigt__p_iParticleSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringArray[] = {{&_swigt__p_iStringArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshWrapperIterator[] = {{&_swigt__p_iMeshWrapperIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshFactoryWrapperIterator[] = {{&_swigt__p_iMeshFactoryWrapperIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSectorIterator[] = {{&_swigt__p_iSectorIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLightIterator[] = {{&_swigt__p_iLightIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTriangleMeshIterator[] = {{&_swigt__p_iTriangleMeshIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSharedVarLoaderIterator[] = {{&_swigt__p_iSharedVarLoaderIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMaterialLoaderIterator[] = {{&_swigt__p_iMaterialLoaderIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTextureLoaderIterator[] = {{&_swigt__p_iTextureLoaderIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCamposLoaderIterator[] = {{&_swigt__p_iCamposLoaderIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshLoaderIterator[] = {{&_swigt__p_iMeshLoaderIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshFactLoaderIterator[] = {{&_swigt__p_iMeshFactLoaderIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSectorLoaderIterator[] = {{&_swigt__p_iSectorLoaderIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNodeIterator[] = {{&_swigt__p_iDocumentNodeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttributeIterator[] = {{&_swigt__p_iDocumentAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigIterator[] = {{&_swigt__p_iConfigIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterIterator[] = {{&_swigt__p_iReporterIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectIterator[] = {{&_swigt__p_iObjectIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistryIterator[] = {{&_swigt__p_iObjectRegistryIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventAttributeIterator[] = {{&_swigt__p_iEventAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginIterator[] = {{&_swigt__p_iPluginIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVisibilityObjectIterator[] = {{&_swigt__p_iVisibilityObjectIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventOutlet[] = {{&_swigt__p_iEventOutlet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iColoredVertices[] = {{&_swigt__p_iColoredVertices, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedMeshMorphTarget[] = {{&_swigt__p_iAnimatedMeshMorphTarget, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csView_iView_t[] = {{&_swigt__p_scfImplementation1T_csView_iView_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSoftwareFilter3D[] = {{&_swigt__p_iSndSysSoftwareFilter3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshObject[] = {{&_swigt__p_iMeshObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBugPlugRenderObject[] = {{&_swigt__p_iBugPlugRenderObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iScriptObject[] = {{&_swigt__p_iScriptObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObject[] = {{&_swigt__p_iObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csObject[] = {{&_swigt__p_csObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVisibilityObject[] = {{&_swigt__p_iVisibilityObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonRandomNode2[] = {{&_swigt__p_iSkeletonRandomNode2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimNode2[] = {{&_swigt__p_iSkeletonAnimNode2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonFSMNode2[] = {{&_swigt__p_iSkeletonFSMNode2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimTimeUpdateHandler[] = {{&_swigt__p_iAnimTimeUpdateHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventHandler[] = {{&_swigt__p_iEventHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshFactoryWrapper[] = {{&_swigt__p_iMeshFactoryWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshWrapper[] = {{&_swigt__p_iMeshWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMaterialWrapper[] = {{&_swigt__p_iMaterialWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTextureWrapper[] = {{&_swigt__p_iTextureWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysWrapper[] = {{&_swigt__p_iSndSysWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSequenceWrapper[] = {{&_swigt__p_iSequenceWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csColliderWrapper[] = {{&_swigt__p_csColliderWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEUniversalJoint[] = {{&_swigt__p_iODEUniversalJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEBallJoint[] = {{&_swigt__p_iODEBallJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMapNode[] = {{&_swigt__p_iMapNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedMeshSubMesh[] = {{&_swigt__p_iAnimatedMeshSubMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedMeshFactorySubMesh[] = {{&_swigt__p_iAnimatedMeshFactorySubMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGeneralMeshSubMesh[] = {{&_swigt__p_iGeneralMeshSubMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonGraveyard[] = {{&_swigt__p_iSkeletonGraveyard, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDecalTemplate[] = {{&_swigt__p_iDecalTemplate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshList[] = {{&_swigt__p_iMeshList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConsoleWatcher[] = {{&_swigt__p_iConsoleWatcher, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerraSampler[] = {{&_swigt__p_iTerraSampler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iScriptValue[] = {{&_swigt__p_iScriptValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleEmitter[] = {{&_swigt__p_iParticleEmitter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csProcAnimated[] = {{&_swigt__p_csProcAnimated, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFontServer[] = {{&_swigt__p_iFontServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSourceSoftware[] = {{&_swigt__p_iSndSysSourceSoftware, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysRendererSoftware[] = {{&_swigt__p_iSndSysRendererSoftware, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysRendererOpenAL[] = {{&_swigt__p_iSndSysRendererOpenAL, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSourceOpenAL[] = {{&_swigt__p_iSndSysSourceOpenAL, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConsoleInput[] = {{&_swigt__p_iConsoleInput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEmitterBox[] = {{&_swigt__p_iParticleBuiltinEmitterBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csView[] = {{&_swigt__p_csView, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleSystemBase[] = {{&_swigt__p_iParticleSystemBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVisibilityCuller[] = {{&_swigt__p_iVisibilityCuller, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSource3D[] = {{&_swigt__p_iSndSysSource3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFile[] = {{&_swigt__p_iFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPath[] = {{&_swigt__p_iPath, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleEffector[] = {{&_swigt__p_iParticleEffector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadedLoader[] = {{&_swigt__p_iThreadedLoader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSpriteCal3DSocket[] = {{&_swigt__p_iSpriteCal3DSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedMeshSocket[] = {{&_swigt__p_iAnimatedMeshSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonSocket[] = {{&_swigt__p_iSkeletonSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSceneNodeArray[] = {{&_swigt__p_iSceneNodeArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysLoader[] = {{&_swigt__p_iSndSysLoader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLoader[] = {{&_swigt__p_iLoader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSpriteSocket[] = {{&_swigt__p_iSpriteSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLODControl[] = {{&_swigt__p_iLODControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGenMeshAnimationControl[] = {{&_swigt__p_iGenMeshAnimationControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttribute[] = {{&_swigt__p_iDocumentAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSpriteFrame[] = {{&_swigt__p_iSpriteFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iShader[] = {{&_swigt__p_iShader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainObjectState[] = {{&_swigt__p_iTerrainObjectState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEJointState[] = {{&_swigt__p_iODEJointState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEGeneralJointState[] = {{&_swigt__p_iODEGeneralJointState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMaterialEngine[] = {{&_swigt__p_iMaterialEngine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayReadOnlyT_csVector3_t[] = {{&_swigt__p_iArrayReadOnlyT_csVector3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeElementsT_csVector3_t[] = {{&_swigt__p_iArrayChangeElementsT_csVector3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeAllT_csVector3_t[] = {{&_swigt__p_iArrayChangeAllT_csVector3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVirtualClock[] = {{&_swigt__p_iVirtualClock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEngine[] = {{&_swigt__p_iEngine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGenMeshAnimationControlType[] = {{&_swigt__p_iGenMeshAnimationControlType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t[] = {{&_swigt__p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMeshBox[] = {{&_swigt__p_csTriangleMeshBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporter[] = {{&_swigt__p_iReporter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csObject_iObject_t[] = {{&_swigt__p_scfImplementation1T_csObject_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTranslator[] = {{&_swigt__p_iTranslator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iString[] = {{&_swigt__p_iString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyboardDriver[] = {{&_swigt__p_iKeyboardDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iJoystickDriver[] = {{&_swigt__p_iJoystickDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMouseDriver[] = {{&_swigt__p_iMouseDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSoftwareDriver[] = {{&_swigt__p_iSndSysSoftwareDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iShaderVariableAccessor[] = {{&_swigt__p_iShaderVariableAccessor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSCF[] = {{&_swigt__p_iSCF, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimationKeyFrame[] = {{&_swigt__p_iSkeletonAnimationKeyFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csImageMemory[] = {{&_swigt__p_csImageMemory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGeneralMeshState[] = {{&_swigt__p_iGeneralMeshState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSequenceTimedOperation[] = {{&_swigt__p_iSequenceTimedOperation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSequenceOperation[] = {{&_swigt__p_iSequenceOperation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iJoint[] = {{&_swigt__p_iJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEngineSequenceParameters[] = {{&_swigt__p_iEngineSequenceParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyComposer[] = {{&_swigt__p_iKeyComposer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBodyGroup[] = {{&_swigt__p_iBodyGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainRenderer[] = {{&_swigt__p_iTerrainRenderer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysRenderer[] = {{&_swigt__p_iSndSysRenderer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iShaderPriorityList[] = {{&_swigt__p_iShaderPriorityList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSprite2DUVAnimationFrame[] = {{&_swigt__p_iSprite2DUVAnimationFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadReturn[] = {{&_swigt__p_iThreadReturn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCollection[] = {{&_swigt__p_iCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocument[] = {{&_swigt__p_iDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedMesh[] = {{&_swigt__p_iAnimatedMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMaterialList[] = {{&_swigt__p_iMaterialList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLight[] = {{&_swigt__p_iLight, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSimpleFormerState[] = {{&_swigt__p_iSimpleFormerState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCell[] = {{&_swigt__p_iTerrainCell, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementationExt0T_csImageMemory_csImageBase_t[] = {{&_swigt__p_scfImplementationExt0T_csImageMemory_csImageBase_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimation2[] = {{&_swigt__p_iSkeletonAnimation2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMaterial[] = {{&_swigt__p_iMaterial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayReadOnlyT_csSprite2DVertex_t[] = {{&_swigt__p_iArrayReadOnlyT_csSprite2DVertex_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeElementsT_csSprite2DVertex_t[] = {{&_swigt__p_iArrayChangeElementsT_csSprite2DVertex_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeAllT_csSprite2DVertex_t[] = {{&_swigt__p_iArrayChangeAllT_csSprite2DVertex_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csConfigFile[] = {{&_swigt__p_csConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigFile[] = {{&_swigt__p_iConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEvent[] = {{&_swigt__p_iEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEffectorLinear[] = {{&_swigt__p_iParticleBuiltinEffectorLinear, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBugPlug[] = {{&_swigt__p_iBugPlug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedImage[] = {{&_swigt__p_iAnimatedImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iHalo[] = {{&_swigt__p_iHalo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainCollider[] = {{&_swigt__p_iTerrainCollider, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCollider[] = {{&_swigt__p_iCollider, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamicsSystemCollider[] = {{&_swigt__p_iDynamicsSystemCollider, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayReadOnlyT_iSceneNode_p_t[] = {{&_swigt__p_iArrayReadOnlyT_iSceneNode_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRenderManagerTargets[] = {{&_swigt__p_iRenderManagerTargets, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNode[] = {{&_swigt__p_iDocumentNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSequenceTrigger[] = {{&_swigt__p_iSequenceTrigger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGraphics2D[] = {{&_swigt__p_iGraphics2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCameraPosition[] = {{&_swigt__p_iCameraPosition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTextureList[] = {{&_swigt__p_iTextureList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonManager2[] = {{&_swigt__p_iSkeletonManager2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainFactoryCell[] = {{&_swigt__p_iTerrainFactoryCell, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iView[] = {{&_swigt__p_iView, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODESliderJoint[] = {{&_swigt__p_iODESliderJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEAMotorJoint[] = {{&_swigt__p_iODEAMotorJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEHinge2Joint[] = {{&_swigt__p_iODEHinge2Joint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEmitterCone[] = {{&_swigt__p_iParticleBuiltinEmitterCone, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSource3DDirectional[] = {{&_swigt__p_iSndSysSource3DDirectional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSectorList[] = {{&_swigt__p_iSectorList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysListenerDoppler[] = {{&_swigt__p_iSndSysListenerDoppler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSource3DDoppler[] = {{&_swigt__p_iSndSysSource3DDoppler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCommandLineParser[] = {{&_swigt__p_iCommandLineParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFontDeleteNotify[] = {{&_swigt__p_iFontDeleteNotify, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerraFormer[] = {{&_swigt__p_iTerraFormer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshFactoryList[] = {{&_swigt__p_iMeshFactoryList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSource[] = {{&_swigt__p_iSndSysSource, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonFSMNodeFactory2[] = {{&_swigt__p_iSkeletonFSMNodeFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonRandomNodeFactory2[] = {{&_swigt__p_iSkeletonRandomNodeFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonPriorityNodeFactory2[] = {{&_swigt__p_iSkeletonPriorityNodeFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonBlendNodeFactory2[] = {{&_swigt__p_iSkeletonBlendNodeFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimationNodeFactory2[] = {{&_swigt__p_iSkeletonAnimationNodeFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimNodeFactory2[] = {{&_swigt__p_iSkeletonAnimNodeFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimPacketFactory2[] = {{&_swigt__p_iSkeletonAnimPacketFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonFactory2[] = {{&_swigt__p_iSkeletonFactory2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayReadOnlyT_iCollection_p_t[] = {{&_swigt__p_iArrayReadOnlyT_iCollection_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGraphics3D[] = {{&_swigt__p_iGraphics3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonBoneRagdollInfo[] = {{&_swigt__p_iSkeletonBoneRagdollInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeleton[] = {{&_swigt__p_iSkeleton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshObjectType[] = {{&_swigt__p_iMeshObjectType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRigidBody[] = {{&_swigt__p_iRigidBody, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTextureManager[] = {{&_swigt__p_iTextureManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iShaderManager[] = {{&_swigt__p_iShaderManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iNativeWindowManager[] = {{&_swigt__p_iNativeWindowManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigManager[] = {{&_swigt__p_iConfigManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCacheManager[] = {{&_swigt__p_iCacheManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadManager[] = {{&_swigt__p_iThreadManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginManager[] = {{&_swigt__p_iPluginManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysManager[] = {{&_swigt__p_iSndSysManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDecalManager[] = {{&_swigt__p_iDecalManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEngineSequenceManager[] = {{&_swigt__p_iEngineSequenceManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSequenceManager[] = {{&_swigt__p_iSequenceManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRenderLoopManager[] = {{&_swigt__p_iRenderLoopManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRenderManager[] = {{&_swigt__p_iRenderManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamics[] = {{&_swigt__p_iDynamics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParameterESM[] = {{&_swigt__p_iParameterESM, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRenderLoop[] = {{&_swigt__p_iRenderLoop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDebugHelper[] = {{&_swigt__p_iDebugHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEffectorForce[] = {{&_swigt__p_iParticleBuiltinEffectorForce, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEffectorFactory[] = {{&_swigt__p_iParticleBuiltinEffectorFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEmitterFactory[] = {{&_swigt__p_iParticleBuiltinEmitterFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleSystemFactory[] = {{&_swigt__p_iParticleSystemFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainFactory[] = {{&_swigt__p_iTerrainFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshObjectFactory[] = {{&_swigt__p_iMeshObjectFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedMeshFactory[] = {{&_swigt__p_iAnimatedMeshFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iAnimatedMeshSocketFactory[] = {{&_swigt__p_iAnimatedMeshSocketFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonFactory[] = {{&_swigt__p_iSkeletonFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonSocketFactory[] = {{&_swigt__p_iSkeletonSocketFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonBoneFactory[] = {{&_swigt__p_iSkeletonBoneFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGenMeshAnimationControlFactory[] = {{&_swigt__p_iGenMeshAnimationControlFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFactory[] = {{&_swigt__p_iFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMesh[] = {{&_swigt__p_csTriangleMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTriangleMesh[] = {{&_swigt__p_iTriangleMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEffectorVelocityField[] = {{&_swigt__p_iParticleBuiltinEffectorVelocityField, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCustomMatrixCamera[] = {{&_swigt__p_iCustomMatrixCamera, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPerspectiveCamera[] = {{&_swigt__p_iPerspectiveCamera, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCamera[] = {{&_swigt__p_iCamera, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectModel[] = {{&_swigt__p_iObjectModel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t[] = {{&_swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMovable[] = {{&_swigt__p_iMovable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iNativeWindow[] = {{&_swigt__p_iNativeWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEmitterBase[] = {{&_swigt__p_iParticleBuiltinEmitterBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysStream[] = {{&_swigt__p_iSndSysStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBinaryLoaderPlugin[] = {{&_swigt__p_iBinaryLoaderPlugin, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iLoaderPlugin[] = {{&_swigt__p_iLoaderPlugin, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimPacket2[] = {{&_swigt__p_iSkeletonAnimPacket2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t[] = {{&_swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainDataFeeder[] = {{&_swigt__p_iTerrainDataFeeder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPortalContainer[] = {{&_swigt__p_iPortalContainer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRenderStepContainer[] = {{&_swigt__p_iRenderStepContainer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iImageIO[] = {{&_swigt__p_iImageIO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayReadOnlyT_csShaderVariable_p_t[] = {{&_swigt__p_iArrayReadOnlyT_csShaderVariable_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeElementsT_csShaderVariable_p_t[] = {{&_swigt__p_iArrayChangeElementsT_csShaderVariable_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeAllT_csShaderVariable_p_t[] = {{&_swigt__p_iArrayChangeAllT_csShaderVariable_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSprite2DState[] = {{&_swigt__p_iSprite2DState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSpriteCal3DState[] = {{&_swigt__p_iSpriteCal3DState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSprite3DState[] = {{&_swigt__p_iSprite3DState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDataBuffer[] = {{&_swigt__p_iDataBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iShaderCompiler[] = {{&_swigt__p_iShaderCompiler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEHingeJoint[] = {{&_swigt__p_iODEHingeJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEmitterSphere[] = {{&_swigt__p_iParticleBuiltinEmitterSphere, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iProcTexture[] = {{&_swigt__p_iProcTexture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csProcTexture[] = {{&_swigt__p_csProcTexture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iParticleBuiltinEmitterCylinder[] = {{&_swigt__p_iParticleBuiltinEmitterCylinder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t[] = {{&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimCallback2[] = {{&_swigt__p_iSkeletonAnimCallback2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iComponent[] = {{&_swigt__p_iComponent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSpriteAction[] = {{&_swigt__p_iSpriteAction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csImageBase[] = {{&_swigt__p_csImageBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTerrainFactoryState[] = {{&_swigt__p_iTerrainFactoryState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSpriteCal3DFactoryState[] = {{&_swigt__p_iSpriteCal3DFactoryState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSprite3DFactoryState[] = {{&_swigt__p_iSprite3DFactoryState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSprite2DFactoryState[] = {{&_swigt__p_iSprite2DFactoryState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGeneralFactoryState[] = {{&_swigt__p_iGeneralFactoryState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimationInstance[] = {{&_swigt__p_iSkeletonAnimationInstance, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMissingLoaderData[] = {{&_swigt__p_iMissingLoaderData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t[] = {{&_swigt__p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iGeneralMeshCommonState[] = {{&_swigt__p_iGeneralMeshCommonState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t[] = {{&_swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysData[] = {{&_swigt__p_iSndSysData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSoftwareOutputFilter[] = {{&_swigt__p_iSndSysSoftwareOutputFilter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeleton2[] = {{&_swigt__p_iSkeleton2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iODEDynamicState[] = {{&_swigt__p_iODEDynamicState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSprite2DUVAnimation[] = {{&_swigt__p_iSprite2DUVAnimation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSkeletonAnimation[] = {{&_swigt__p_iSkeletonAnimation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t[] = {{&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventPlug[] = {{&_swigt__p_iEventPlug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSequence[] = {{&_swigt__p_iSequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPath[] = {{&_swigt__p_csPath, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSndSysSource3DDirectionalSimple[] = {{&_swigt__p_iSndSysSource3DDirectionalSimple, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventCord[] = {{&_swigt__p_iEventCord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPortal[] = {{&_swigt__p_iPortal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBase[] = {  {&_swigt__p_iSaver, _p_iSaverTo_p_iBase, 0, 0},  {&_swigt__p_iODEDynamicSystemState, _p_iODEDynamicSystemStateTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainVector3Array, _p_iTerrainVector3ArrayTo_p_iBase, 0, 0},  {&_swigt__p_iArrayReadOnlyT_csCollisionPair_t, _p_iArrayReadOnlyT_csCollisionPair_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeElementsT_csCollisionPair_t, _p_iArrayChangeElementsT_csCollisionPair_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeAllT_csCollisionPair_t, _p_iArrayChangeAllT_csCollisionPair_tTo_p_iBase, 0, 0},  {&_swigt__p_iEventQueue, _p_iEventQueueTo_p_iBase, 0, 0},  {&_swigt__p_iShaderVariableContext, _p_iShaderVariableContextTo_p_iBase, 0, 0},  {&_swigt__p_iSequenceCondition, _p_iSequenceConditionTo_p_iBase, 0, 0},  {&_swigt__p_iCameraPositionList, _p_iCameraPositionListTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonBlendNode2, _p_iSkeletonBlendNode2To_p_iBase, 0, 0},  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase, 0, 0},  {&_swigt__p_iSceneNode, _p_iSceneNodeTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEffectorLinColor, _p_iParticleBuiltinEffectorLinColorTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonPriorityNode2, _p_iSkeletonPriorityNode2To_p_iBase, 0, 0},  {&_swigt__p_iVFS, _p_iVFSTo_p_iBase, 0, 0},  {&_swigt__p_iClipper2D, _p_iClipper2DTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csImageBase_iImage_t, _p_scfImplementation1T_csImageBase_iImage_tTo_p_iBase, 0, 0},  {&_swigt__p_csTriangleMeshPointer, _p_csTriangleMeshPointerTo_p_iBase, 0, 0},  {&_swigt__p_iConsoleOutput, _p_iConsoleOutputTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t, _p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_tTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimationNode2, _p_iSkeletonAnimationNode2To_p_iBase, 0, 0},  {&_swigt__p_iObjectRegistry, _p_iObjectRegistryTo_p_iBase, 0, 0},  {&_swigt__p_iEventNameRegistry, _p_iEventNameRegistryTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonBone, _p_iSkeletonBoneTo_p_iBase, 0, 0},  {&_swigt__p_iSector, _p_iSectorTo_p_iBase, 0, 0},  {&_swigt__p_iStringSet, _p_iStringSetTo_p_iBase, 0, 0},  {&_swigt__p_iShaderVarStringSet, _p_iShaderVarStringSetTo_p_iBase, 0, 0},  {&_swigt__p_iGenMeshSkeletonControlState, _p_iGenMeshSkeletonControlStateTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCollisionPairArray, _p_iTerrainCollisionPairArrayTo_p_iBase, 0, 0},  {&_swigt__p_iRenderManagerPostEffects, _p_iRenderManagerPostEffectsTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCellCollisionProperties, _p_iTerrainCellCollisionPropertiesTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCellFeederProperties, _p_iTerrainCellFeederPropertiesTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCellRenderProperties, _p_iTerrainCellRenderPropertiesTo_p_iBase, 0, 0},  {&_swigt__p_iLightList, _p_iLightListTo_p_iBase, 0, 0},  {&_swigt__p_iCameraListener, _p_iCameraListenerTo_p_iBase, 0, 0},  {&_swigt__p_iCameraSectorListener, _p_iCameraSectorListenerTo_p_iBase, 0, 0},  {&_swigt__p_iObjectModelListener, _p_iObjectModelListenerTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysListener, _p_iSndSysListenerTo_p_iBase, 0, 0},  {&_swigt__p_iReporterListener, _p_iReporterListenerTo_p_iBase, 0, 0},  {&_swigt__p_iObjectNameChangeListener, _p_iObjectNameChangeListenerTo_p_iBase, 0, 0},  {&_swigt__p_iStandardReporterListener, _p_iStandardReporterListenerTo_p_iBase, 0, 0},  {&_swigt__p_iMovableListener, _p_iMovableListenerTo_p_iBase, 0, 0},  {&_swigt__p_iVisibilityCullerListener, _p_iVisibilityCullerListenerTo_p_iBase, 0, 0},  {&_swigt__p_iFont, _p_iFontTo_p_iBase, 0, 0},  {&_swigt__p_iImage, _p_iImageTo_p_iBase, 0, 0},  {&_swigt__p_iMovieRecorder, _p_iMovieRecorderTo_p_iBase, 0, 0},  {&_swigt__p_iMeshDrawCallback, _p_iMeshDrawCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iTextureCallback, _p_iTextureCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iEngineSectorCallback, _p_iEngineSectorCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iEngineFrameCallback, _p_iEngineFrameCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iLightVisibleCallback, _p_iLightVisibleCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iSectorMeshCallback, _p_iSectorMeshCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iSectorCallback, _p_iSectorCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iLightCallback, _p_iLightCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCellLoadCallback, _p_iTerrainCellLoadCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCellHeightDataCallback, _p_iTerrainCellHeightDataCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iMeshObjectDrawCallback, _p_iMeshObjectDrawCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonUpdateCallback, _p_iSkeletonUpdateCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimationCallback, _p_iSkeletonAnimationCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonBoneUpdateCallback, _p_iSkeletonBoneUpdateCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysStreamCallback, _p_iSndSysStreamCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysRendererCallback, _p_iSndSysRendererCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iConsoleExecCallback, _p_iConsoleExecCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iDynamicsStepCallback, _p_iDynamicsStepCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iDynamicsMoveCallback, _p_iDynamicsMoveCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iDynamicsCollisionCallback, _p_iDynamicsCollisionCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iDynamicsColliderCollisionCallback, _p_iDynamicsColliderCollisionCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iODEFrameUpdateCallback, _p_iODEFrameUpdateCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iPortalCallback, _p_iPortalCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iProcTexCallback, _p_iProcTexCallbackTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainSystem, _p_iTerrainSystemTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentSystem, _p_iDocumentSystemTo_p_iBase, 0, 0},  {&_swigt__p_iDynamicSystem, _p_iDynamicSystemTo_p_iBase, 0, 0},  {&_swigt__p_iCollideSystem, _p_iCollideSystemTo_p_iBase, 0, 0},  {&_swigt__p_iParticleSystem, _p_iParticleSystemTo_p_iBase, 0, 0},  {&_swigt__p_iStringArray, _p_iStringArrayTo_p_iBase, 0, 0},  {&_swigt__p_iMeshWrapperIterator, _p_iMeshWrapperIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iMeshFactoryWrapperIterator, _p_iMeshFactoryWrapperIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iSectorIterator, _p_iSectorIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iLightIterator, _p_iLightIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iTriangleMeshIterator, _p_iTriangleMeshIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iSharedVarLoaderIterator, _p_iSharedVarLoaderIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iMaterialLoaderIterator, _p_iMaterialLoaderIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iTextureLoaderIterator, _p_iTextureLoaderIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iCamposLoaderIterator, _p_iCamposLoaderIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iMeshLoaderIterator, _p_iMeshLoaderIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iMeshFactLoaderIterator, _p_iMeshFactLoaderIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iSectorLoaderIterator, _p_iSectorLoaderIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNodeIterator, _p_iDocumentNodeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttributeIterator, _p_iDocumentAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iConfigIterator, _p_iConfigIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iReporterIterator, _p_iReporterIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectIterator, _p_iObjectIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectRegistryIterator, _p_iObjectRegistryIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iEventAttributeIterator, _p_iEventAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iPluginIterator, _p_iPluginIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iVisibilityObjectIterator, _p_iVisibilityObjectIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iEventOutlet, _p_iEventOutletTo_p_iBase, 0, 0},  {&_swigt__p_iColoredVertices, _p_iColoredVerticesTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedMeshMorphTarget, _p_iAnimatedMeshMorphTargetTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csView_iView_t, _p_scfImplementation1T_csView_iView_tTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSoftwareFilter3D, _p_iSndSysSoftwareFilter3DTo_p_iBase, 0, 0},  {&_swigt__p_iMeshObject, _p_iMeshObjectTo_p_iBase, 0, 0},  {&_swigt__p_iBugPlugRenderObject, _p_iBugPlugRenderObjectTo_p_iBase, 0, 0},  {&_swigt__p_iScriptObject, _p_iScriptObjectTo_p_iBase, 0, 0},  {&_swigt__p_iObject, _p_iObjectTo_p_iBase, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_iBase, 0, 0},  {&_swigt__p_iVisibilityObject, _p_iVisibilityObjectTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonRandomNode2, _p_iSkeletonRandomNode2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimNode2, _p_iSkeletonAnimNode2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonFSMNode2, _p_iSkeletonFSMNode2To_p_iBase, 0, 0},  {&_swigt__p_iAnimTimeUpdateHandler, _p_iAnimTimeUpdateHandlerTo_p_iBase, 0, 0},  {&_swigt__p_iEventHandler, _p_iEventHandlerTo_p_iBase, 0, 0},  {&_swigt__p_iMeshFactoryWrapper, _p_iMeshFactoryWrapperTo_p_iBase, 0, 0},  {&_swigt__p_iMeshWrapper, _p_iMeshWrapperTo_p_iBase, 0, 0},  {&_swigt__p_iMaterialWrapper, _p_iMaterialWrapperTo_p_iBase, 0, 0},  {&_swigt__p_iTextureWrapper, _p_iTextureWrapperTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysWrapper, _p_iSndSysWrapperTo_p_iBase, 0, 0},  {&_swigt__p_iSequenceWrapper, _p_iSequenceWrapperTo_p_iBase, 0, 0},  {&_swigt__p_csColliderWrapper, _p_csColliderWrapperTo_p_iBase, 0, 0},  {&_swigt__p_iODEUniversalJoint, _p_iODEUniversalJointTo_p_iBase, 0, 0},  {&_swigt__p_iODEBallJoint, _p_iODEBallJointTo_p_iBase, 0, 0},  {&_swigt__p_iMapNode, _p_iMapNodeTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedMeshSubMesh, _p_iAnimatedMeshSubMeshTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedMeshFactorySubMesh, _p_iAnimatedMeshFactorySubMeshTo_p_iBase, 0, 0},  {&_swigt__p_iGeneralMeshSubMesh, _p_iGeneralMeshSubMeshTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonGraveyard, _p_iSkeletonGraveyardTo_p_iBase, 0, 0},  {&_swigt__p_iDecalTemplate, _p_iDecalTemplateTo_p_iBase, 0, 0},  {&_swigt__p_iMeshList, _p_iMeshListTo_p_iBase, 0, 0},  {&_swigt__p_iConsoleWatcher, _p_iConsoleWatcherTo_p_iBase, 0, 0},  {&_swigt__p_iTerraSampler, _p_iTerraSamplerTo_p_iBase, 0, 0},  {&_swigt__p_iScriptValue, _p_iScriptValueTo_p_iBase, 0, 0},  {&_swigt__p_iBase, 0, 0, 0},  {&_swigt__p_iParticleEmitter, _p_iParticleEmitterTo_p_iBase, 0, 0},  {&_swigt__p_csProcAnimated, _p_csProcAnimatedTo_p_iBase, 0, 0},  {&_swigt__p_iFontServer, _p_iFontServerTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSourceSoftware, _p_iSndSysSourceSoftwareTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysRendererSoftware, _p_iSndSysRendererSoftwareTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysRendererOpenAL, _p_iSndSysRendererOpenALTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSourceOpenAL, _p_iSndSysSourceOpenALTo_p_iBase, 0, 0},  {&_swigt__p_iConsoleInput, _p_iConsoleInputTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEmitterBox, _p_iParticleBuiltinEmitterBoxTo_p_iBase, 0, 0},  {&_swigt__p_csView, _p_csViewTo_p_iBase, 0, 0},  {&_swigt__p_iParticleSystemBase, _p_iParticleSystemBaseTo_p_iBase, 0, 0},  {&_swigt__p_iVisibilityCuller, _p_iVisibilityCullerTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSource3D, _p_iSndSysSource3DTo_p_iBase, 0, 0},  {&_swigt__p_iFile, _p_iFileTo_p_iBase, 0, 0},  {&_swigt__p_iPath, _p_iPathTo_p_iBase, 0, 0},  {&_swigt__p_iParticleEffector, _p_iParticleEffectorTo_p_iBase, 0, 0},  {&_swigt__p_iScript, _p_iScriptTo_p_iBase, 0, 0},  {&_swigt__p_iThreadedLoader, _p_iThreadedLoaderTo_p_iBase, 0, 0},  {&_swigt__p_iSpriteCal3DSocket, _p_iSpriteCal3DSocketTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedMeshSocket, _p_iAnimatedMeshSocketTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonSocket, _p_iSkeletonSocketTo_p_iBase, 0, 0},  {&_swigt__p_iSceneNodeArray, _p_iSceneNodeArrayTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysLoader, _p_iSndSysLoaderTo_p_iBase, 0, 0},  {&_swigt__p_iLoader, _p_iLoaderTo_p_iBase, 0, 0},  {&_swigt__p_iSpriteSocket, _p_iSpriteSocketTo_p_iBase, 0, 0},  {&_swigt__p_iLODControl, _p_iLODControlTo_p_iBase, 0, 0},  {&_swigt__p_iGenMeshAnimationControl, _p_iGenMeshAnimationControlTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttribute, _p_iDocumentAttributeTo_p_iBase, 0, 0},  {&_swigt__p_iSpriteFrame, _p_iSpriteFrameTo_p_iBase, 0, 0},  {&_swigt__p_iShader, _p_iShaderTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainObjectState, _p_iTerrainObjectStateTo_p_iBase, 0, 0},  {&_swigt__p_iODEJointState, _p_iODEJointStateTo_p_iBase, 0, 0},  {&_swigt__p_iODEGeneralJointState, _p_iODEGeneralJointStateTo_p_iBase, 0, 0},  {&_swigt__p_iMaterialEngine, _p_iMaterialEngineTo_p_iBase, 0, 0},  {&_swigt__p_iArrayReadOnlyT_csVector3_t, _p_iArrayReadOnlyT_csVector3_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeElementsT_csVector3_t, _p_iArrayChangeElementsT_csVector3_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeAllT_csVector3_t, _p_iArrayChangeAllT_csVector3_tTo_p_iBase, 0, 0},  {&_swigt__p_iVirtualClock, _p_iVirtualClockTo_p_iBase, 0, 0},  {&_swigt__p_iEngine, _p_iEngineTo_p_iBase, 0, 0},  {&_swigt__p_iGenMeshAnimationControlType, _p_iGenMeshAnimationControlTypeTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t, _p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_tTo_p_iBase, 0, 0},  {&_swigt__p_csTriangleMeshBox, _p_csTriangleMeshBoxTo_p_iBase, 0, 0},  {&_swigt__p_iReporter, _p_iReporterTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, _p_scfImplementation1T_csObject_iObject_tTo_p_iBase, 0, 0},  {&_swigt__p_iTranslator, _p_iTranslatorTo_p_iBase, 0, 0},  {&_swigt__p_iString, _p_iStringTo_p_iBase, 0, 0},  {&_swigt__p_iKeyboardDriver, _p_iKeyboardDriverTo_p_iBase, 0, 0},  {&_swigt__p_iJoystickDriver, _p_iJoystickDriverTo_p_iBase, 0, 0},  {&_swigt__p_iMouseDriver, _p_iMouseDriverTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSoftwareDriver, _p_iSndSysSoftwareDriverTo_p_iBase, 0, 0},  {&_swigt__p_iShaderVariableAccessor, _p_iShaderVariableAccessorTo_p_iBase, 0, 0},  {&_swigt__p_iSCF, _p_iSCFTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimationKeyFrame, _p_iSkeletonAnimationKeyFrameTo_p_iBase, 0, 0},  {&_swigt__p_csImageMemory, _p_csImageMemoryTo_p_iBase, 0, 0},  {&_swigt__p_iGeneralMeshState, _p_iGeneralMeshStateTo_p_iBase, 0, 0},  {&_swigt__p_iSequenceTimedOperation, _p_iSequenceTimedOperationTo_p_iBase, 0, 0},  {&_swigt__p_iSequenceOperation, _p_iSequenceOperationTo_p_iBase, 0, 0},  {&_swigt__p_iJoint, _p_iJointTo_p_iBase, 0, 0},  {&_swigt__p_iEngineSequenceParameters, _p_iEngineSequenceParametersTo_p_iBase, 0, 0},  {&_swigt__p_iKeyComposer, _p_iKeyComposerTo_p_iBase, 0, 0},  {&_swigt__p_iBodyGroup, _p_iBodyGroupTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainRenderer, _p_iTerrainRendererTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysRenderer, _p_iSndSysRendererTo_p_iBase, 0, 0},  {&_swigt__p_iShaderPriorityList, _p_iShaderPriorityListTo_p_iBase, 0, 0},  {&_swigt__p_iSprite2DUVAnimationFrame, _p_iSprite2DUVAnimationFrameTo_p_iBase, 0, 0},  {&_swigt__p_iThreadReturn, _p_iThreadReturnTo_p_iBase, 0, 0},  {&_swigt__p_iCollection, _p_iCollectionTo_p_iBase, 0, 0},  {&_swigt__p_iDocument, _p_iDocumentTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedMesh, _p_iAnimatedMeshTo_p_iBase, 0, 0},  {&_swigt__p_iMaterialList, _p_iMaterialListTo_p_iBase, 0, 0},  {&_swigt__p_iLight, _p_iLightTo_p_iBase, 0, 0},  {&_swigt__p_iSimpleFormerState, _p_iSimpleFormerStateTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCell, _p_iTerrainCellTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementationExt0T_csImageMemory_csImageBase_t, _p_scfImplementationExt0T_csImageMemory_csImageBase_tTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimation2, _p_iSkeletonAnimation2To_p_iBase, 0, 0},  {&_swigt__p_iMaterial, _p_iMaterialTo_p_iBase, 0, 0},  {&_swigt__p_iCEGUI, _p_iCEGUITo_p_iBase, 0, 0},  {&_swigt__p_iArrayReadOnlyT_csSprite2DVertex_t, _p_iArrayReadOnlyT_csSprite2DVertex_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeElementsT_csSprite2DVertex_t, _p_iArrayChangeElementsT_csSprite2DVertex_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeAllT_csSprite2DVertex_t, _p_iArrayChangeAllT_csSprite2DVertex_tTo_p_iBase, 0, 0},  {&_swigt__p_csConfigFile, _p_csConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_iConfigFile, _p_iConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_iEvent, _p_iEventTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEffectorLinear, _p_iParticleBuiltinEffectorLinearTo_p_iBase, 0, 0},  {&_swigt__p_iBugPlug, _p_iBugPlugTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedImage, _p_iAnimatedImageTo_p_iBase, 0, 0},  {&_swigt__p_iHalo, _p_iHaloTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainCollider, _p_iTerrainColliderTo_p_iBase, 0, 0},  {&_swigt__p_iCollider, _p_iColliderTo_p_iBase, 0, 0},  {&_swigt__p_iDynamicsSystemCollider, _p_iDynamicsSystemColliderTo_p_iBase, 0, 0},  {&_swigt__p_iArrayReadOnlyT_iSceneNode_p_t, _p_iArrayReadOnlyT_iSceneNode_p_tTo_p_iBase, 0, 0},  {&_swigt__p_iRenderManagerTargets, _p_iRenderManagerTargetsTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNode, _p_iDocumentNodeTo_p_iBase, 0, 0},  {&_swigt__p_iSequenceTrigger, _p_iSequenceTriggerTo_p_iBase, 0, 0},  {&_swigt__p_iGraphics2D, _p_iGraphics2DTo_p_iBase, 0, 0},  {&_swigt__p_iCameraPosition, _p_iCameraPositionTo_p_iBase, 0, 0},  {&_swigt__p_iTextureList, _p_iTextureListTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonManager2, _p_iSkeletonManager2To_p_iBase, 0, 0},  {&_swigt__p_iTerrainFactoryCell, _p_iTerrainFactoryCellTo_p_iBase, 0, 0},  {&_swigt__p_iView, _p_iViewTo_p_iBase, 0, 0},  {&_swigt__p_iODESliderJoint, _p_iODESliderJointTo_p_iBase, 0, 0},  {&_swigt__p_iODEAMotorJoint, _p_iODEAMotorJointTo_p_iBase, 0, 0},  {&_swigt__p_iODEHinge2Joint, _p_iODEHinge2JointTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEmitterCone, _p_iParticleBuiltinEmitterConeTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSource3DDirectional, _p_iSndSysSource3DDirectionalTo_p_iBase, 0, 0},  {&_swigt__p_iSectorList, _p_iSectorListTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysListenerDoppler, _p_iSndSysListenerDopplerTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSource3DDoppler, _p_iSndSysSource3DDopplerTo_p_iBase, 0, 0},  {&_swigt__p_iTextureHandle, _p_iTextureHandleTo_p_iBase, 0, 0},  {&_swigt__p_iCommandLineParser, _p_iCommandLineParserTo_p_iBase, 0, 0},  {&_swigt__p_iFontDeleteNotify, _p_iFontDeleteNotifyTo_p_iBase, 0, 0},  {&_swigt__p_iTerraFormer, _p_iTerraFormerTo_p_iBase, 0, 0},  {&_swigt__p_iMeshFactoryList, _p_iMeshFactoryListTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSource, _p_iSndSysSourceTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonFSMNodeFactory2, _p_iSkeletonFSMNodeFactory2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonRandomNodeFactory2, _p_iSkeletonRandomNodeFactory2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonPriorityNodeFactory2, _p_iSkeletonPriorityNodeFactory2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonBlendNodeFactory2, _p_iSkeletonBlendNodeFactory2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimationNodeFactory2, _p_iSkeletonAnimationNodeFactory2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimNodeFactory2, _p_iSkeletonAnimNodeFactory2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimPacketFactory2, _p_iSkeletonAnimPacketFactory2To_p_iBase, 0, 0},  {&_swigt__p_iSkeletonFactory2, _p_iSkeletonFactory2To_p_iBase, 0, 0},  {&_swigt__p_iArrayReadOnlyT_iCollection_p_t, _p_iArrayReadOnlyT_iCollection_p_tTo_p_iBase, 0, 0},  {&_swigt__p_iGraphics3D, _p_iGraphics3DTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonBoneRagdollInfo, _p_iSkeletonBoneRagdollInfoTo_p_iBase, 0, 0},  {&_swigt__p_iSkeleton, _p_iSkeletonTo_p_iBase, 0, 0},  {&_swigt__p_iMeshObjectType, _p_iMeshObjectTypeTo_p_iBase, 0, 0},  {&_swigt__p_iRigidBody, _p_iRigidBodyTo_p_iBase, 0, 0},  {&_swigt__p_iTextureManager, _p_iTextureManagerTo_p_iBase, 0, 0},  {&_swigt__p_iShaderManager, _p_iShaderManagerTo_p_iBase, 0, 0},  {&_swigt__p_iNativeWindowManager, _p_iNativeWindowManagerTo_p_iBase, 0, 0},  {&_swigt__p_iConfigManager, _p_iConfigManagerTo_p_iBase, 0, 0},  {&_swigt__p_iCacheManager, _p_iCacheManagerTo_p_iBase, 0, 0},  {&_swigt__p_iThreadManager, _p_iThreadManagerTo_p_iBase, 0, 0},  {&_swigt__p_iPluginManager, _p_iPluginManagerTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysManager, _p_iSndSysManagerTo_p_iBase, 0, 0},  {&_swigt__p_iDecalManager, _p_iDecalManagerTo_p_iBase, 0, 0},  {&_swigt__p_iEngineSequenceManager, _p_iEngineSequenceManagerTo_p_iBase, 0, 0},  {&_swigt__p_iSequenceManager, _p_iSequenceManagerTo_p_iBase, 0, 0},  {&_swigt__p_iRenderLoopManager, _p_iRenderLoopManagerTo_p_iBase, 0, 0},  {&_swigt__p_iRenderManager, _p_iRenderManagerTo_p_iBase, 0, 0},  {&_swigt__p_iDynamics, _p_iDynamicsTo_p_iBase, 0, 0},  {&_swigt__p_iParameterESM, _p_iParameterESMTo_p_iBase, 0, 0},  {&_swigt__p_iRenderLoop, _p_iRenderLoopTo_p_iBase, 0, 0},  {&_swigt__p_iDebugHelper, _p_iDebugHelperTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEffectorForce, _p_iParticleBuiltinEffectorForceTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEffectorFactory, _p_iParticleBuiltinEffectorFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEmitterFactory, _p_iParticleBuiltinEmitterFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iParticleSystemFactory, _p_iParticleSystemFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainFactory, _p_iTerrainFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iMeshObjectFactory, _p_iMeshObjectFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedMeshFactory, _p_iAnimatedMeshFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iAnimatedMeshSocketFactory, _p_iAnimatedMeshSocketFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonFactory, _p_iSkeletonFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonSocketFactory, _p_iSkeletonSocketFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonBoneFactory, _p_iSkeletonBoneFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iGenMeshAnimationControlFactory, _p_iGenMeshAnimationControlFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iFactory, _p_iFactoryTo_p_iBase, 0, 0},  {&_swigt__p_csTriangleMesh, _p_csTriangleMeshTo_p_iBase, 0, 0},  {&_swigt__p_iTriangleMesh, _p_iTriangleMeshTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEffectorVelocityField, _p_iParticleBuiltinEffectorVelocityFieldTo_p_iBase, 0, 0},  {&_swigt__p_iCustomMatrixCamera, _p_iCustomMatrixCameraTo_p_iBase, 0, 0},  {&_swigt__p_iPerspectiveCamera, _p_iPerspectiveCameraTo_p_iBase, 0, 0},  {&_swigt__p_iCamera, _p_iCameraTo_p_iBase, 0, 0},  {&_swigt__p_iObjectModel, _p_iObjectModelTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_tTo_p_iBase, 0, 0},  {&_swigt__p_iMovable, _p_iMovableTo_p_iBase, 0, 0},  {&_swigt__p_iNativeWindow, _p_iNativeWindowTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEmitterBase, _p_iParticleBuiltinEmitterBaseTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysStream, _p_iSndSysStreamTo_p_iBase, 0, 0},  {&_swigt__p_iBinaryLoaderPlugin, _p_iBinaryLoaderPluginTo_p_iBase, 0, 0},  {&_swigt__p_iLoaderPlugin, _p_iLoaderPluginTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimPacket2, _p_iSkeletonAnimPacket2To_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_tTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainDataFeeder, _p_iTerrainDataFeederTo_p_iBase, 0, 0},  {&_swigt__p_iPortalContainer, _p_iPortalContainerTo_p_iBase, 0, 0},  {&_swigt__p_iRenderStepContainer, _p_iRenderStepContainerTo_p_iBase, 0, 0},  {&_swigt__p_iImageIO, _p_iImageIOTo_p_iBase, 0, 0},  {&_swigt__p_iArrayReadOnlyT_csShaderVariable_p_t, _p_iArrayReadOnlyT_csShaderVariable_p_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeElementsT_csShaderVariable_p_t, _p_iArrayChangeElementsT_csShaderVariable_p_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeAllT_csShaderVariable_p_t, _p_iArrayChangeAllT_csShaderVariable_p_tTo_p_iBase, 0, 0},  {&_swigt__p_iSprite2DState, _p_iSprite2DStateTo_p_iBase, 0, 0},  {&_swigt__p_iSpriteCal3DState, _p_iSpriteCal3DStateTo_p_iBase, 0, 0},  {&_swigt__p_iSprite3DState, _p_iSprite3DStateTo_p_iBase, 0, 0},  {&_swigt__p_iDataBuffer, _p_iDataBufferTo_p_iBase, 0, 0},  {&_swigt__p_iShaderCompiler, _p_iShaderCompilerTo_p_iBase, 0, 0},  {&_swigt__p_iODEHingeJoint, _p_iODEHingeJointTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEmitterSphere, _p_iParticleBuiltinEmitterSphereTo_p_iBase, 0, 0},  {&_swigt__p_iProcTexture, _p_iProcTextureTo_p_iBase, 0, 0},  {&_swigt__p_csProcTexture, _p_csProcTextureTo_p_iBase, 0, 0},  {&_swigt__p_iParticleBuiltinEmitterCylinder, _p_iParticleBuiltinEmitterCylinderTo_p_iBase, 0, 0},  {&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, _p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimCallback2, _p_iSkeletonAnimCallback2To_p_iBase, 0, 0},  {&_swigt__p_iComponent, _p_iComponentTo_p_iBase, 0, 0},  {&_swigt__p_iSpriteAction, _p_iSpriteActionTo_p_iBase, 0, 0},  {&_swigt__p_csImageBase, _p_csImageBaseTo_p_iBase, 0, 0},  {&_swigt__p_iTerrainFactoryState, _p_iTerrainFactoryStateTo_p_iBase, 0, 0},  {&_swigt__p_iSpriteCal3DFactoryState, _p_iSpriteCal3DFactoryStateTo_p_iBase, 0, 0},  {&_swigt__p_iSprite3DFactoryState, _p_iSprite3DFactoryStateTo_p_iBase, 0, 0},  {&_swigt__p_iSprite2DFactoryState, _p_iSprite2DFactoryStateTo_p_iBase, 0, 0},  {&_swigt__p_iGeneralFactoryState, _p_iGeneralFactoryStateTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimationInstance, _p_iSkeletonAnimationInstanceTo_p_iBase, 0, 0},  {&_swigt__p_iMissingLoaderData, _p_iMissingLoaderDataTo_p_iBase, 0, 0},  {&_swigt__p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t, _p_iStringSetBaseT_CS__StringSetTag__ShaderVar_tTo_p_iBase, 0, 0},  {&_swigt__p_iGeneralMeshCommonState, _p_iGeneralMeshCommonStateTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMesh_iTriangleMesh_tTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysData, _p_iSndSysDataTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSoftwareOutputFilter, _p_iSndSysSoftwareOutputFilterTo_p_iBase, 0, 0},  {&_swigt__p_iSkeleton2, _p_iSkeleton2To_p_iBase, 0, 0},  {&_swigt__p_iODEDynamicState, _p_iODEDynamicStateTo_p_iBase, 0, 0},  {&_swigt__p_iSprite2DUVAnimation, _p_iSprite2DUVAnimationTo_p_iBase, 0, 0},  {&_swigt__p_iSkeletonAnimation, _p_iSkeletonAnimationTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, _p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase, 0, 0},  {&_swigt__p_iEventPlug, _p_iEventPlugTo_p_iBase, 0, 0},  {&_swigt__p_iSequence, _p_iSequenceTo_p_iBase, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_iBase, 0, 0},  {&_swigt__p_iSndSysSource3DDirectionalSimple, _p_iSndSysSource3DDirectionalSimpleTo_p_iBase, 0, 0},  {&_swigt__p_iEventCord, _p_iEventCordTo_p_iBase, 0, 0},  {&_swigt__p_iPortal, _p_iPortalTo_p_iBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCEGUI[] = {  {&_swigt__p_iCEGUI, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iScript[] = {  {&_swigt__p_iScript, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTextureHandle[] = {  {&_swigt__p_iTextureHandle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int16_t[] = {  {&_swigt__p_int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int8_t[] = {  {&_swigt__p_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint16_t[] = {  {&_swigt__p_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_AllocatorType,
  _swigc__p_CEGUI__FontManager,
  _swigc__p_CEGUI__GlobalEventSet,
  _swigc__p_CEGUI__ImagesetManager,
  _swigc__p_CEGUI__Logger,
  _swigc__p_CEGUI__MouseCursor,
  _swigc__p_CEGUI__SchemeManager,
  _swigc__p_CEGUI__System,
  _swigc__p_CEGUI__Texture,
  _swigc__p_CEGUI__WindowFactoryManager,
  _swigc__p_CEGUI__WindowManager,
  _swigc__p_CS__Graphics__CoreRenderMesh,
  _swigc__p_CS__Graphics__RenderMesh,
  _swigc__p_CS__Graphics__RenderMeshModes,
  _swigc__p_CS__Memory__AllocatorMalloc,
  _swigc__p_CS__StringIDT_CS__StringSetTag__General_t,
  _swigc__p_CS__StringIDT_CS__StringSetTag__ShaderVar_t,
  _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_t,
  _swigc__p_CapacityHandlerType,
  _swigc__p_ContainedType,
  _swigc__p_ElementHandlerType,
  _swigc__p_FileFormatDescription,
  _swigc__p_HashType,
  _swigc__p_KeyType,
  _swigc__p_SndSysFilterLocation,
  _swigc__p_TagType,
  _swigc__p_ThisType,
  _swigc__p_ValueType,
  _swigc__p__1_basetype,
  _swigc__p__csKeyCharType,
  _swigc__p__csKeyEventType,
  _swigc__p__csKeyModifierNumType,
  _swigc__p__csKeyModifierType,
  _swigc__p__csKeyModifiers,
  _swigc__p__csMouseCursorID,
  _swigc__p__csMouseEventType,
  _swigc__p_char,
  _swigc__p_csArrayCapacityFixedGrowT_16_t,
  _swigc__p_csArrayCapacityVariableGrow,
  _swigc__p_csArrayT_csImageIOFileFormatDescription_const_p_csArrayElementHandlerT_csImageIOFileFormatDescription_const_p_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csColliderWrapper,
  _swigc__p_csConfigFile,
  _swigc__p_csImageBase,
  _swigc__p_csImageMemory,
  _swigc__p_csObject,
  _swigc__p_csPath,
  _swigc__p_csProcAnimated,
  _swigc__p_csProcTexture,
  _swigc__p_csRefArrayT_iMaterialWrapper_t,
  _swigc__p_csRefArrayT_iObject_t,
  _swigc__p_csTriangleMesh,
  _swigc__p_csTriangleMeshBox,
  _swigc__p_csTriangleMeshPointer,
  _swigc__p_csView,
  _swigc__p_iAnimTimeUpdateHandler,
  _swigc__p_iAnimatedImage,
  _swigc__p_iAnimatedMesh,
  _swigc__p_iAnimatedMeshFactory,
  _swigc__p_iAnimatedMeshFactorySubMesh,
  _swigc__p_iAnimatedMeshMorphTarget,
  _swigc__p_iAnimatedMeshSocket,
  _swigc__p_iAnimatedMeshSocketFactory,
  _swigc__p_iAnimatedMeshSubMesh,
  _swigc__p_iArrayChangeAllT_csCollisionPair_t,
  _swigc__p_iArrayChangeAllT_csShaderVariable_p_t,
  _swigc__p_iArrayChangeAllT_csSprite2DVertex_t,
  _swigc__p_iArrayChangeAllT_csVector3_t,
  _swigc__p_iArrayChangeElementsT_csCollisionPair_t,
  _swigc__p_iArrayChangeElementsT_csShaderVariable_p_t,
  _swigc__p_iArrayChangeElementsT_csSprite2DVertex_t,
  _swigc__p_iArrayChangeElementsT_csVector3_t,
  _swigc__p_iArrayReadOnlyT_csCollisionPair_t,
  _swigc__p_iArrayReadOnlyT_csShaderVariable_p_t,
  _swigc__p_iArrayReadOnlyT_csSprite2DVertex_t,
  _swigc__p_iArrayReadOnlyT_csVector3_t,
  _swigc__p_iArrayReadOnlyT_iCollection_p_t,
  _swigc__p_iArrayReadOnlyT_iSceneNode_p_t,
  _swigc__p_iBase,
  _swigc__p_iBinaryLoaderPlugin,
  _swigc__p_iBodyGroup,
  _swigc__p_iBugPlug,
  _swigc__p_iBugPlugRenderObject,
  _swigc__p_iCEGUI,
  _swigc__p_iCacheManager,
  _swigc__p_iCamera,
  _swigc__p_iCameraListener,
  _swigc__p_iCameraPosition,
  _swigc__p_iCameraPositionList,
  _swigc__p_iCameraSectorListener,
  _swigc__p_iCamposLoaderIterator,
  _swigc__p_iClipper2D,
  _swigc__p_iCollection,
  _swigc__p_iCollideSystem,
  _swigc__p_iCollider,
  _swigc__p_iColoredVertices,
  _swigc__p_iCommandLineParser,
  _swigc__p_iComponent,
  _swigc__p_iConfigFile,
  _swigc__p_iConfigIterator,
  _swigc__p_iConfigManager,
  _swigc__p_iConsoleExecCallback,
  _swigc__p_iConsoleInput,
  _swigc__p_iConsoleOutput,
  _swigc__p_iConsoleWatcher,
  _swigc__p_iCustomMatrixCamera,
  _swigc__p_iDataBuffer,
  _swigc__p_iDebugHelper,
  _swigc__p_iDecalManager,
  _swigc__p_iDecalTemplate,
  _swigc__p_iDocument,
  _swigc__p_iDocumentAttribute,
  _swigc__p_iDocumentAttributeIterator,
  _swigc__p_iDocumentNode,
  _swigc__p_iDocumentNodeIterator,
  _swigc__p_iDocumentSystem,
  _swigc__p_iDynamicSystem,
  _swigc__p_iDynamics,
  _swigc__p_iDynamicsColliderCollisionCallback,
  _swigc__p_iDynamicsCollisionCallback,
  _swigc__p_iDynamicsMoveCallback,
  _swigc__p_iDynamicsStepCallback,
  _swigc__p_iDynamicsSystemCollider,
  _swigc__p_iEngine,
  _swigc__p_iEngineFrameCallback,
  _swigc__p_iEngineSectorCallback,
  _swigc__p_iEngineSequenceManager,
  _swigc__p_iEngineSequenceParameters,
  _swigc__p_iEvent,
  _swigc__p_iEventAttributeIterator,
  _swigc__p_iEventCord,
  _swigc__p_iEventHandler,
  _swigc__p_iEventNameRegistry,
  _swigc__p_iEventOutlet,
  _swigc__p_iEventPlug,
  _swigc__p_iEventQueue,
  _swigc__p_iFactory,
  _swigc__p_iFile,
  _swigc__p_iFont,
  _swigc__p_iFontDeleteNotify,
  _swigc__p_iFontServer,
  _swigc__p_iGenMeshAnimationControl,
  _swigc__p_iGenMeshAnimationControlFactory,
  _swigc__p_iGenMeshAnimationControlType,
  _swigc__p_iGenMeshSkeletonControlState,
  _swigc__p_iGeneralFactoryState,
  _swigc__p_iGeneralMeshCommonState,
  _swigc__p_iGeneralMeshState,
  _swigc__p_iGeneralMeshSubMesh,
  _swigc__p_iGraphics2D,
  _swigc__p_iGraphics3D,
  _swigc__p_iHalo,
  _swigc__p_iImage,
  _swigc__p_iImageIO,
  _swigc__p_iJoint,
  _swigc__p_iJoystickDriver,
  _swigc__p_iKeyComposer,
  _swigc__p_iKeyboardDriver,
  _swigc__p_iLODControl,
  _swigc__p_iLight,
  _swigc__p_iLightCallback,
  _swigc__p_iLightIterator,
  _swigc__p_iLightList,
  _swigc__p_iLightVisibleCallback,
  _swigc__p_iLoader,
  _swigc__p_iLoaderPlugin,
  _swigc__p_iMapNode,
  _swigc__p_iMaterial,
  _swigc__p_iMaterialEngine,
  _swigc__p_iMaterialList,
  _swigc__p_iMaterialLoaderIterator,
  _swigc__p_iMaterialWrapper,
  _swigc__p_iMeshDrawCallback,
  _swigc__p_iMeshFactLoaderIterator,
  _swigc__p_iMeshFactoryList,
  _swigc__p_iMeshFactoryWrapper,
  _swigc__p_iMeshFactoryWrapperIterator,
  _swigc__p_iMeshList,
  _swigc__p_iMeshLoaderIterator,
  _swigc__p_iMeshObject,
  _swigc__p_iMeshObjectDrawCallback,
  _swigc__p_iMeshObjectFactory,
  _swigc__p_iMeshObjectType,
  _swigc__p_iMeshWrapper,
  _swigc__p_iMeshWrapperIterator,
  _swigc__p_iMissingLoaderData,
  _swigc__p_iMouseDriver,
  _swigc__p_iMovable,
  _swigc__p_iMovableListener,
  _swigc__p_iMovieRecorder,
  _swigc__p_iNativeWindow,
  _swigc__p_iNativeWindowManager,
  _swigc__p_iODEAMotorJoint,
  _swigc__p_iODEBallJoint,
  _swigc__p_iODEDynamicState,
  _swigc__p_iODEDynamicSystemState,
  _swigc__p_iODEFrameUpdateCallback,
  _swigc__p_iODEGeneralJointState,
  _swigc__p_iODEHinge2Joint,
  _swigc__p_iODEHingeJoint,
  _swigc__p_iODEJointState,
  _swigc__p_iODESliderJoint,
  _swigc__p_iODEUniversalJoint,
  _swigc__p_iObject,
  _swigc__p_iObjectIterator,
  _swigc__p_iObjectModel,
  _swigc__p_iObjectModelListener,
  _swigc__p_iObjectNameChangeListener,
  _swigc__p_iObjectRegistry,
  _swigc__p_iObjectRegistryIterator,
  _swigc__p_iParameterESM,
  _swigc__p_iParticleBuiltinEffectorFactory,
  _swigc__p_iParticleBuiltinEffectorForce,
  _swigc__p_iParticleBuiltinEffectorLinColor,
  _swigc__p_iParticleBuiltinEffectorLinear,
  _swigc__p_iParticleBuiltinEffectorVelocityField,
  _swigc__p_iParticleBuiltinEmitterBase,
  _swigc__p_iParticleBuiltinEmitterBox,
  _swigc__p_iParticleBuiltinEmitterCone,
  _swigc__p_iParticleBuiltinEmitterCylinder,
  _swigc__p_iParticleBuiltinEmitterFactory,
  _swigc__p_iParticleBuiltinEmitterSphere,
  _swigc__p_iParticleEffector,
  _swigc__p_iParticleEmitter,
  _swigc__p_iParticleSystem,
  _swigc__p_iParticleSystemBase,
  _swigc__p_iParticleSystemFactory,
  _swigc__p_iPath,
  _swigc__p_iPerspectiveCamera,
  _swigc__p_iPluginIterator,
  _swigc__p_iPluginManager,
  _swigc__p_iPortal,
  _swigc__p_iPortalCallback,
  _swigc__p_iPortalContainer,
  _swigc__p_iProcTexCallback,
  _swigc__p_iProcTexture,
  _swigc__p_iRenderLoop,
  _swigc__p_iRenderLoopManager,
  _swigc__p_iRenderManager,
  _swigc__p_iRenderManagerPostEffects,
  _swigc__p_iRenderManagerTargets,
  _swigc__p_iRenderStepContainer,
  _swigc__p_iReporter,
  _swigc__p_iReporterIterator,
  _swigc__p_iReporterListener,
  _swigc__p_iRigidBody,
  _swigc__p_iSCF,
  _swigc__p_iSaver,
  _swigc__p_iSceneNode,
  _swigc__p_iSceneNodeArray,
  _swigc__p_iScript,
  _swigc__p_iScriptObject,
  _swigc__p_iScriptValue,
  _swigc__p_iSector,
  _swigc__p_iSectorCallback,
  _swigc__p_iSectorIterator,
  _swigc__p_iSectorList,
  _swigc__p_iSectorLoaderIterator,
  _swigc__p_iSectorMeshCallback,
  _swigc__p_iSequence,
  _swigc__p_iSequenceCondition,
  _swigc__p_iSequenceManager,
  _swigc__p_iSequenceOperation,
  _swigc__p_iSequenceTimedOperation,
  _swigc__p_iSequenceTrigger,
  _swigc__p_iSequenceWrapper,
  _swigc__p_iShader,
  _swigc__p_iShaderCompiler,
  _swigc__p_iShaderManager,
  _swigc__p_iShaderPriorityList,
  _swigc__p_iShaderVarStringSet,
  _swigc__p_iShaderVariableAccessor,
  _swigc__p_iShaderVariableContext,
  _swigc__p_iSharedVarLoaderIterator,
  _swigc__p_iSimpleFormerState,
  _swigc__p_iSkeleton,
  _swigc__p_iSkeleton2,
  _swigc__p_iSkeletonAnimCallback2,
  _swigc__p_iSkeletonAnimNode2,
  _swigc__p_iSkeletonAnimNodeFactory2,
  _swigc__p_iSkeletonAnimPacket2,
  _swigc__p_iSkeletonAnimPacketFactory2,
  _swigc__p_iSkeletonAnimation,
  _swigc__p_iSkeletonAnimation2,
  _swigc__p_iSkeletonAnimationCallback,
  _swigc__p_iSkeletonAnimationInstance,
  _swigc__p_iSkeletonAnimationKeyFrame,
  _swigc__p_iSkeletonAnimationNode2,
  _swigc__p_iSkeletonAnimationNodeFactory2,
  _swigc__p_iSkeletonBlendNode2,
  _swigc__p_iSkeletonBlendNodeFactory2,
  _swigc__p_iSkeletonBone,
  _swigc__p_iSkeletonBoneFactory,
  _swigc__p_iSkeletonBoneRagdollInfo,
  _swigc__p_iSkeletonBoneUpdateCallback,
  _swigc__p_iSkeletonFSMNode2,
  _swigc__p_iSkeletonFSMNodeFactory2,
  _swigc__p_iSkeletonFactory,
  _swigc__p_iSkeletonFactory2,
  _swigc__p_iSkeletonGraveyard,
  _swigc__p_iSkeletonManager2,
  _swigc__p_iSkeletonPriorityNode2,
  _swigc__p_iSkeletonPriorityNodeFactory2,
  _swigc__p_iSkeletonRandomNode2,
  _swigc__p_iSkeletonRandomNodeFactory2,
  _swigc__p_iSkeletonSocket,
  _swigc__p_iSkeletonSocketFactory,
  _swigc__p_iSkeletonUpdateCallback,
  _swigc__p_iSndSysData,
  _swigc__p_iSndSysListener,
  _swigc__p_iSndSysListenerDoppler,
  _swigc__p_iSndSysLoader,
  _swigc__p_iSndSysManager,
  _swigc__p_iSndSysRenderer,
  _swigc__p_iSndSysRendererCallback,
  _swigc__p_iSndSysRendererOpenAL,
  _swigc__p_iSndSysRendererSoftware,
  _swigc__p_iSndSysSoftwareDriver,
  _swigc__p_iSndSysSoftwareFilter3D,
  _swigc__p_iSndSysSoftwareOutputFilter,
  _swigc__p_iSndSysSource,
  _swigc__p_iSndSysSource3D,
  _swigc__p_iSndSysSource3DDirectional,
  _swigc__p_iSndSysSource3DDirectionalSimple,
  _swigc__p_iSndSysSource3DDoppler,
  _swigc__p_iSndSysSourceOpenAL,
  _swigc__p_iSndSysSourceSoftware,
  _swigc__p_iSndSysStream,
  _swigc__p_iSndSysStreamCallback,
  _swigc__p_iSndSysWrapper,
  _swigc__p_iSprite2DFactoryState,
  _swigc__p_iSprite2DState,
  _swigc__p_iSprite2DUVAnimation,
  _swigc__p_iSprite2DUVAnimationFrame,
  _swigc__p_iSprite3DFactoryState,
  _swigc__p_iSprite3DState,
  _swigc__p_iSpriteAction,
  _swigc__p_iSpriteCal3DFactoryState,
  _swigc__p_iSpriteCal3DSocket,
  _swigc__p_iSpriteCal3DState,
  _swigc__p_iSpriteFrame,
  _swigc__p_iSpriteSocket,
  _swigc__p_iStandardReporterListener,
  _swigc__p_iString,
  _swigc__p_iStringArray,
  _swigc__p_iStringSet,
  _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t,
  _swigc__p_iStringSetBaseT_CS__StringSetTag__ShaderVar_t,
  _swigc__p_iTerraFormer,
  _swigc__p_iTerraSampler,
  _swigc__p_iTerrainCell,
  _swigc__p_iTerrainCellCollisionProperties,
  _swigc__p_iTerrainCellFeederProperties,
  _swigc__p_iTerrainCellHeightDataCallback,
  _swigc__p_iTerrainCellLoadCallback,
  _swigc__p_iTerrainCellRenderProperties,
  _swigc__p_iTerrainCollider,
  _swigc__p_iTerrainCollisionPairArray,
  _swigc__p_iTerrainDataFeeder,
  _swigc__p_iTerrainFactory,
  _swigc__p_iTerrainFactoryCell,
  _swigc__p_iTerrainFactoryState,
  _swigc__p_iTerrainObjectState,
  _swigc__p_iTerrainRenderer,
  _swigc__p_iTerrainSystem,
  _swigc__p_iTerrainVector3Array,
  _swigc__p_iTextureCallback,
  _swigc__p_iTextureHandle,
  _swigc__p_iTextureList,
  _swigc__p_iTextureLoaderIterator,
  _swigc__p_iTextureManager,
  _swigc__p_iTextureWrapper,
  _swigc__p_iThreadManager,
  _swigc__p_iThreadReturn,
  _swigc__p_iThreadedLoader,
  _swigc__p_iTranslator,
  _swigc__p_iTriangleMesh,
  _swigc__p_iTriangleMeshIterator,
  _swigc__p_iVFS,
  _swigc__p_iView,
  _swigc__p_iVirtualClock,
  _swigc__p_iVisibilityCuller,
  _swigc__p_iVisibilityCullerListener,
  _swigc__p_iVisibilityObject,
  _swigc__p_iVisibilityObjectIterator,
  _swigc__p_int,
  _swigc__p_int16_t,
  _swigc__p_int64_t,
  _swigc__p_int8_t,
  _swigc__p_long_long,
  _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  _swigc__p_scfImplementation1T_csImageBase_iImage_t,
  _swigc__p_scfImplementation1T_csObject_iObject_t,
  _swigc__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t,
  _swigc__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t,
  _swigc__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t,
  _swigc__p_scfImplementation1T_csView_iView_t,
  _swigc__p_scfImplementationExt0T_csImageMemory_csImageBase_t,
  _swigc__p_scfImplementationExt1T_csColliderWrapper_csObject_scfFakeInterfaceT_csColliderWrapper_t_t,
  _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  _swigc__p_scfImplementationExt2T_csProcTexture_csObject_iTextureWrapper_iProcTexture_t,
  _swigc__p_uint16_t,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_uint8_t,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_long_long,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
}

