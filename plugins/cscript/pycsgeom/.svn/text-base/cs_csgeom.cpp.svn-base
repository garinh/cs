/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<typename T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */

    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifdef _MSC_VER
    #include <io.h>
    #include <stdarg.h>
    #if defined(_DEBUG) && !defined(DEBUG_PYTHON)
    #undef _DEBUG
    #define RESTORE__DEBUG
    #endif
    #endif
    #include <Python.h>
    #ifdef RESTORE__DEBUG
    #define _DEBUG
    #undef RESTORE__DEBUG
    #endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_AllocatorType swig_types[0]
#define SWIGTYPE_p_CS__Math__Matrix4 swig_types[1]
#define SWIGTYPE_p_CS__Memory__AllocatorMalloc swig_types[2]
#define SWIGTYPE_p_CS__Memory__CustomAllocated swig_types[3]
#define SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t swig_types[4]
#define SWIGTYPE_p_CS__TriangleTT_int_t swig_types[5]
#define SWIGTYPE_p_CS__Utility__InternalRefCount swig_types[6]
#define SWIGTYPE_p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t swig_types[7]
#define SWIGTYPE_p_CapacityHandlerType swig_types[8]
#define SWIGTYPE_p_ContainedType swig_types[9]
#define SWIGTYPE_p_ElementHandlerType swig_types[10]
#define SWIGTYPE_p_HashType swig_types[11]
#define SWIGTYPE_p_TagType swig_types[12]
#define SWIGTYPE_p_ThisType swig_types[13]
#define SWIGTYPE_p_ValueType swig_types[14]
#define SWIGTYPE_p__1_basetype swig_types[15]
#define SWIGTYPE_p__csKeyCharType swig_types[16]
#define SWIGTYPE_p__csKeyEventType swig_types[17]
#define SWIGTYPE_p__csKeyModifierNumType swig_types[18]
#define SWIGTYPE_p__csKeyModifierType swig_types[19]
#define SWIGTYPE_p__csKeyModifiers swig_types[20]
#define SWIGTYPE_p__csMouseEventType swig_types[21]
#define SWIGTYPE_p_bool swig_types[22]
#define SWIGTYPE_p_char swig_types[23]
#define SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t swig_types[24]
#define SWIGTYPE_p_csArrayCapacityVariableGrow swig_types[25]
#define SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[26]
#define SWIGTYPE_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[27]
#define SWIGTYPE_p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[28]
#define SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[29]
#define SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[30]
#define SWIGTYPE_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[31]
#define SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[32]
#define SWIGTYPE_p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[33]
#define SWIGTYPE_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[34]
#define SWIGTYPE_p_csBSpline swig_types[35]
#define SWIGTYPE_p_csBox2 swig_types[36]
#define SWIGTYPE_p_csBox3 swig_types[37]
#define SWIGTYPE_p_csCatmullRomSpline swig_types[38]
#define SWIGTYPE_p_csCompressVertex swig_types[39]
#define SWIGTYPE_p_csConfigFile swig_types[40]
#define SWIGTYPE_p_csCubicSpline swig_types[41]
#define SWIGTYPE_p_csDVector3 swig_types[42]
#define SWIGTYPE_p_csEllipsoid swig_types[43]
#define SWIGTYPE_p_csFlags swig_types[44]
#define SWIGTYPE_p_csFrustum swig_types[45]
#define SWIGTYPE_p_csIntersect2 swig_types[46]
#define SWIGTYPE_p_csIntersect3 swig_types[47]
#define SWIGTYPE_p_csMath2 swig_types[48]
#define SWIGTYPE_p_csMath3 swig_types[49]
#define SWIGTYPE_p_csMatrix2 swig_types[50]
#define SWIGTYPE_p_csMatrix3 swig_types[51]
#define SWIGTYPE_p_csOBB swig_types[52]
#define SWIGTYPE_p_csOBBFrozen swig_types[53]
#define SWIGTYPE_p_csObject swig_types[54]
#define SWIGTYPE_p_csOrthoTransform swig_types[55]
#define SWIGTYPE_p_csPath swig_types[56]
#define SWIGTYPE_p_csPlane2 swig_types[57]
#define SWIGTYPE_p_csPlane3 swig_types[58]
#define SWIGTYPE_p_csPoly2D swig_types[59]
#define SWIGTYPE_p_csPoly2DFactory swig_types[60]
#define SWIGTYPE_p_csPoly3D swig_types[61]
#define SWIGTYPE_p_csPtrT_csFrustum_t swig_types[62]
#define SWIGTYPE_p_csQuaternion swig_types[63]
#define SWIGTYPE_p_csRect swig_types[64]
#define SWIGTYPE_p_csRectRegion swig_types[65]
#define SWIGTYPE_p_csRefArrayT_iObject_t swig_types[66]
#define SWIGTYPE_p_csReversibleTransform swig_types[67]
#define SWIGTYPE_p_csSegment2 swig_types[68]
#define SWIGTYPE_p_csSegment3 swig_types[69]
#define SWIGTYPE_p_csSphere swig_types[70]
#define SWIGTYPE_p_csSpline swig_types[71]
#define SWIGTYPE_p_csSquaredDist swig_types[72]
#define SWIGTYPE_p_csTransform swig_types[73]
#define SWIGTYPE_p_csTriangle swig_types[74]
#define SWIGTYPE_p_csTriangleMesh swig_types[75]
#define SWIGTYPE_p_csTriangleMeshBox swig_types[76]
#define SWIGTYPE_p_csTriangleMeshEdge swig_types[77]
#define SWIGTYPE_p_csTriangleMeshPointer swig_types[78]
#define SWIGTYPE_p_csTriangleMeshTools swig_types[79]
#define SWIGTYPE_p_csTriangleMinMax swig_types[80]
#define SWIGTYPE_p_csTriangleVertex swig_types[81]
#define SWIGTYPE_p_csTriangleVertices swig_types[82]
#define SWIGTYPE_p_csVector2 swig_types[83]
#define SWIGTYPE_p_csVector3 swig_types[84]
#define SWIGTYPE_p_csVector3Array swig_types[85]
#define SWIGTYPE_p_csVector4 swig_types[86]
#define SWIGTYPE_p_csVector4TT_float_t swig_types[87]
#define SWIGTYPE_p_csVertexStatus swig_types[88]
#define SWIGTYPE_p_csXRotMatrix3 swig_types[89]
#define SWIGTYPE_p_csXScaleMatrix3 swig_types[90]
#define SWIGTYPE_p_csYRotMatrix3 swig_types[91]
#define SWIGTYPE_p_csYScaleMatrix3 swig_types[92]
#define SWIGTYPE_p_csZRotMatrix3 swig_types[93]
#define SWIGTYPE_p_csZScaleMatrix3 swig_types[94]
#define SWIGTYPE_p_float swig_types[95]
#define SWIGTYPE_p_iArrayChangeAllT_csVector3_t swig_types[96]
#define SWIGTYPE_p_iArrayChangeElementsT_csVector3_t swig_types[97]
#define SWIGTYPE_p_iArrayReadOnlyT_csVector3_t swig_types[98]
#define SWIGTYPE_p_iBase swig_types[99]
#define SWIGTYPE_p_iCacheManager swig_types[100]
#define SWIGTYPE_p_iClipper2D swig_types[101]
#define SWIGTYPE_p_iCommandLineParser swig_types[102]
#define SWIGTYPE_p_iComponent swig_types[103]
#define SWIGTYPE_p_iConfigFile swig_types[104]
#define SWIGTYPE_p_iConfigIterator swig_types[105]
#define SWIGTYPE_p_iConfigManager swig_types[106]
#define SWIGTYPE_p_iDataBuffer swig_types[107]
#define SWIGTYPE_p_iDebugHelper swig_types[108]
#define SWIGTYPE_p_iDocument swig_types[109]
#define SWIGTYPE_p_iDocumentAttribute swig_types[110]
#define SWIGTYPE_p_iDocumentAttributeIterator swig_types[111]
#define SWIGTYPE_p_iDocumentNode swig_types[112]
#define SWIGTYPE_p_iDocumentNodeIterator swig_types[113]
#define SWIGTYPE_p_iDocumentSystem swig_types[114]
#define SWIGTYPE_p_iEvent swig_types[115]
#define SWIGTYPE_p_iEventAttributeIterator swig_types[116]
#define SWIGTYPE_p_iEventCord swig_types[117]
#define SWIGTYPE_p_iEventHandler swig_types[118]
#define SWIGTYPE_p_iEventNameRegistry swig_types[119]
#define SWIGTYPE_p_iEventOutlet swig_types[120]
#define SWIGTYPE_p_iEventPlug swig_types[121]
#define SWIGTYPE_p_iEventQueue swig_types[122]
#define SWIGTYPE_p_iFactory swig_types[123]
#define SWIGTYPE_p_iFile swig_types[124]
#define SWIGTYPE_p_iFrameEventSignpost swig_types[125]
#define SWIGTYPE_p_iJoystickDriver swig_types[126]
#define SWIGTYPE_p_iKeyComposer swig_types[127]
#define SWIGTYPE_p_iKeyboardDriver swig_types[128]
#define SWIGTYPE_p_iMouseDriver swig_types[129]
#define SWIGTYPE_p_iObject swig_types[130]
#define SWIGTYPE_p_iObjectIterator swig_types[131]
#define SWIGTYPE_p_iObjectNameChangeListener swig_types[132]
#define SWIGTYPE_p_iObjectRegistry swig_types[133]
#define SWIGTYPE_p_iObjectRegistryIterator swig_types[134]
#define SWIGTYPE_p_iPath swig_types[135]
#define SWIGTYPE_p_iPluginIterator swig_types[136]
#define SWIGTYPE_p_iPluginManager swig_types[137]
#define SWIGTYPE_p_iReporter swig_types[138]
#define SWIGTYPE_p_iReporterIterator swig_types[139]
#define SWIGTYPE_p_iReporterListener swig_types[140]
#define SWIGTYPE_p_iSCF swig_types[141]
#define SWIGTYPE_p_iString swig_types[142]
#define SWIGTYPE_p_iStringArray swig_types[143]
#define SWIGTYPE_p_iStringSet swig_types[144]
#define SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t swig_types[145]
#define SWIGTYPE_p_iThreadManager swig_types[146]
#define SWIGTYPE_p_iThreadReturn swig_types[147]
#define SWIGTYPE_p_iTriangleMesh swig_types[148]
#define SWIGTYPE_p_iVFS swig_types[149]
#define SWIGTYPE_p_iVirtualClock swig_types[150]
#define SWIGTYPE_p_int swig_types[151]
#define SWIGTYPE_p_int16_t swig_types[152]
#define SWIGTYPE_p_int64_t swig_types[153]
#define SWIGTYPE_p_int8_t swig_types[154]
#define SWIGTYPE_p_long_long swig_types[155]
#define SWIGTYPE_p_p_csPlane3 swig_types[156]
#define SWIGTYPE_p_p_csTriangleMinMax swig_types[157]
#define SWIGTYPE_p_p_csVector3 swig_types[158]
#define SWIGTYPE_p_p_void swig_types[159]
#define SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t swig_types[160]
#define SWIGTYPE_p_scfImplementation1T_csObject_iObject_t swig_types[161]
#define SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t swig_types[162]
#define SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t swig_types[163]
#define SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t swig_types[164]
#define SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t swig_types[165]
#define SWIGTYPE_p_scfInterfaceMetadataList swig_types[166]
#define SWIGTYPE_p_size_t swig_types[167]
#define SWIGTYPE_p_uint16_t swig_types[168]
#define SWIGTYPE_p_uint32_t swig_types[169]
#define SWIGTYPE_p_uint64_t swig_types[170]
#define SWIGTYPE_p_uint8_t swig_types[171]
#define SWIGTYPE_p_unsigned_int swig_types[172]
#define SWIGTYPE_p_unsigned_long swig_types[173]
#define SWIGTYPE_p_unsigned_long_long swig_types[174]
#define SWIGTYPE_p_void swig_types[175]
static swig_type_info *swig_types[177];
static swig_module_info swig_module = {swig_types, 176, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _csgeom.so
  ------------------------------------------------*/
#define SWIG_init SWIG_init_csgeom

#define SWIG_name    "_csgeom"

#define SWIGVERSION 0x010336 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include "csgeom.h"
#include "csutil.h"
#include "cstool/initapp.h"


/* Funtions to set the modules global SCF pointer, this is needed
   when working on a pure scripting environment, as then this code
   lives in a non-cs dll, thus the pointer isnt initialized
   by cs itself, and scf stuff wont work unless the pointer is
   initialized manually. Use it after CreateEnvironment call. */
void SetSCFPointer(iSCF* pscf)
{
  iSCF::SCF = pscf;
}

iSCF* GetSCFPointer()
{
  return iSCF::SCF;
}


PyObject *
_csRef_to_Python (const csRef<iBase> & ref, void * ptr, swig_type_info * name)
{
  if (!ref.IsValid())
  {
    Py_INCREF(Py_None);
    return Py_None;
  }
  ref->IncRef();
  return SWIG_NewPointerObj((void *)ptr, name, 1);
}


#include <float.h>


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}

SWIGINTERN csVector2 csVector2_operator_Sa_(csVector2 const *self,csVector2 const &v){ return *self + v; }
SWIGINTERN csVector2 csVector2_operator_Ss_(csVector2 const *self,csVector2 const &v){ return *self - v; }
SWIGINTERN float csVector2_operator_Sm___SWIG_0(csVector2 const *self,csVector2 const &v){ return *self * v; }
SWIGINTERN csVector2 csVector2_operator_Sm___SWIG_1(csVector2 const *self,float f){ return *self * f; }
SWIGINTERN csVector2 csVector2_operator_Sd_(csVector2 const *self,float f){ return *self / f; }
SWIGINTERN bool csVector2_operator_Se__Se_(csVector2 const *self,csVector2 const &v){ return *self == v; }

SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}

SWIGINTERN bool csVector2_operator_SN__Se_(csVector2 const *self,csVector2 const &v){ return *self != v; }
SWIGINTERN bool csVector2_operator_Sl_(csVector2 const *self,float f){ return *self < f; }
SWIGINTERN bool csVector2_operator_Sg_(csVector2 const *self,float f){ return f > *self; }
SWIGINTERN csVector2 csVector2___rmul__(csVector2 const *self,float f){ return f * *self; }
SWIGINTERN float csVector2___abs__(csVector2 const *self){ return self->Norm(); }

#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}

SWIGINTERN float csVector2___getitem__(csVector2 const *self,int i){ return i ? self->y : self->x; }
SWIGINTERN void csVector2___setitem__(csVector2 *self,int i,float v){ if (i) self->y = v; else self->x = v; }

  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}

SWIGINTERN csVector3 csVector3_operator_Sa_(csVector3 const *self,csVector3 const &v){ return *self + v; }
SWIGINTERN csVector3 csVector3_operator_Ss_(csVector3 const *self,csVector3 const &v){ return *self - v; }
SWIGINTERN float csVector3_operator_Sm___SWIG_0(csVector3 const *self,csVector3 const &v){ return *self * v; }
SWIGINTERN csVector3 csVector3_operator_Sm___SWIG_1(csVector3 const *self,float f){ return *self * f; }
SWIGINTERN csVector3 csVector3_operator_Sd___SWIG_0(csVector3 const *self,float f){ return *self / f; }
SWIGINTERN bool csVector3_operator_Se__Se_(csVector3 const *self,csVector3 const &v){ return *self == v; }
SWIGINTERN bool csVector3_operator_SN__Se_(csVector3 const *self,csVector3 const &v){ return *self != v; }
SWIGINTERN bool csVector3_operator_Sl_(csVector3 const *self,float f){ return *self < f; }
SWIGINTERN bool csVector3_operator_Sg_(csVector3 const *self,float f){ return f > *self; }
SWIGINTERN csVector3 &csVector3_operator_Sm__Se___SWIG_1(csVector3 *self,csTransform const &t){ return *self *= t; }
SWIGINTERN csVector3 &csVector3_operator_Sd__Se___SWIG_1(csVector3 *self,csReversibleTransform const &t){ return *self /= t; }
SWIGINTERN csVector3 csVector3_operator_Sd___SWIG_1(csVector3 *self,csReversibleTransform const &t){ return *self / t; }
SWIGINTERN csVector3 csVector3_project(csVector3 const *self,csVector3 const &what){ return what << *self; }
SWIGINTERN csVector3 csVector3_Cross__SWIG_1(csVector3 const *self,csVector3 const &other){ return *self % other; }
SWIGINTERN csVector3 csVector3___rmul__(csVector3 const *self,float f){ return f * *self; }
SWIGINTERN float csVector3___abs__(csVector3 const *self){ return self->Norm(); }
SWIGINTERN float csVector3___getitem__(csVector3 const *self,int i){ return self->operator[](i); }
SWIGINTERN void csVector3___setitem__(csVector3 *self,int i,float v){ self->operator[](i) = v; }
SWIGINTERN bool csVector3___nonzero__(csVector3 const *self){ return !self->IsZero(); }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}

SWIGINTERN csVector4 csVector4_operator_Sa_(csVector4 const *self,csVector4 const &v){ return *self + v; }
SWIGINTERN csVector4 csVector4_operator_Ss_(csVector4 const *self,csVector4 const &v){ return *self - v; }
SWIGINTERN float csVector4_operator_Sm___SWIG_0(csVector4 const *self,csVector4 const &v){ return *self * v; }
SWIGINTERN csVector4 csVector4_operator_Sm___SWIG_1(csVector4 const *self,float f){ return *self * f; }
SWIGINTERN csVector4 csVector4_operator_Sd_(csVector4 const *self,float f){ return *self / f; }
SWIGINTERN bool csVector4_operator_Se__Se_(csVector4 const *self,csVector4 const &v){ return *self == v; }
SWIGINTERN bool csVector4_operator_SN__Se_(csVector4 const *self,csVector4 const &v){ return *self != v; }
SWIGINTERN bool csVector4_operator_Sl_(csVector4 const *self,float f){ return *self < f; }
SWIGINTERN bool csVector4_operator_Sg_(csVector4 const *self,float f){ return f > *self; }
SWIGINTERN csVector4 csVector4___rmul__(csVector4 const *self,float f){ return f * *self; }
SWIGINTERN float csVector4___abs__(csVector4 const *self){ return self->Norm(); }
SWIGINTERN float csVector4___getitem__(csVector4 const *self,int i){ return self->operator[](i); }
SWIGINTERN void csVector4___setitem__(csVector4 *self,int i,float v){ self->operator[](i) = v; }
SWIGINTERN bool csVector4___nonzero__(csVector4 const *self){ return !self->IsZero(); }
SWIGINTERN csMatrix3 csMatrix3_operator_Sa_(csMatrix3 *self,csMatrix3 const &m){ return *self + m; }
SWIGINTERN csMatrix3 csMatrix3_operator_Ss_(csMatrix3 *self,csMatrix3 const &m){ return *self - m; }
SWIGINTERN csMatrix3 csMatrix3_operator_Sm___SWIG_0(csMatrix3 *self,csMatrix3 const &m){ return *self * m; }
SWIGINTERN csVector3 csMatrix3_operator_Sm___SWIG_1(csMatrix3 *self,csVector3 const &v){ return *self * v; }
SWIGINTERN csMatrix3 csMatrix3_operator_Sm___SWIG_2(csMatrix3 *self,float f){ return *self * f; }
SWIGINTERN csMatrix3 csMatrix3_operator_Sd_(csMatrix3 *self,float f){ return *self / f; }
SWIGINTERN bool csMatrix3_operator_Se__Se_(csMatrix3 const *self,csMatrix3 const &m){ return *self == m; }
SWIGINTERN bool csMatrix3_operator_SN__Se_(csMatrix3 const *self,csMatrix3 const &m){ return *self != m; }
SWIGINTERN bool csMatrix3_operator_Sl_(csMatrix3 const *self,float f){ return *self < f; }
SWIGINTERN csMatrix3 csMatrix3_operator_Sm___SWIG_3(csMatrix3 const *self,csTransform const &t){ return *self * t; }
SWIGINTERN csMatrix3 &csMatrix3_operator_Sm__Se___SWIG_2(csMatrix3 *self,csTransform const &t){ return *self *= t; }
SWIGINTERN csMatrix3 csMatrix3___rmul__(csMatrix3 *self,float f){ return f * *self; }
SWIGINTERN csVector3 csTransform_operator_Sm___SWIG_0(csTransform const *self,csVector3 const &v){ return *self * v; }
SWIGINTERN csPlane3 csTransform_operator_Sm___SWIG_1(csTransform const *self,csPlane3 const &p){ return *self * p; }
SWIGINTERN csSphere csTransform_operator_Sm___SWIG_2(csTransform const *self,csSphere const &s){ return *self * s; }
SWIGINTERN csMatrix3 csTransform_operator_Sm___SWIG_3(csTransform const *self,csMatrix3 const &m){ return *self * m; }
SWIGINTERN csTransform csTransform_operator_Sm___SWIG_4(csTransform const *self,csReversibleTransform const &t){ return *self * t; }
SWIGINTERN csVector3 csTransform___rmul____SWIG_0(csTransform const *self,csVector3 const &v){ return v * *self; }
SWIGINTERN csPlane3 csTransform___rmul____SWIG_1(csTransform const *self,csPlane3 const &p){ return p * *self; }
SWIGINTERN csSphere csTransform___rmul____SWIG_2(csTransform const *self,csSphere const &s){ return s * *self; }
SWIGINTERN csReversibleTransform &csReversibleTransform_operator_Sm__Se_(csReversibleTransform *self,csReversibleTransform const &t){ return *self *= t; }
SWIGINTERN csReversibleTransform csReversibleTransform_operator_Sm_(csReversibleTransform *self,csReversibleTransform const &t){ return *self * t; }
SWIGINTERN csReversibleTransform &csReversibleTransform_operator_Sd__Se_(csReversibleTransform *self,csReversibleTransform const &t){ return *self /= t; }
SWIGINTERN csReversibleTransform csReversibleTransform_operator_Sd_(csReversibleTransform *self,csReversibleTransform const &t){ return *self / t; }
SWIGINTERN csSphere &csSphere_operator_Sm__Se_(csSphere *self,csTransform const &t){ return *self *= t; }
SWIGINTERN csSphere csSphere_operator_Sd_(csSphere *self,csReversibleTransform const &t){ return *self / t; }

SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}

SWIGINTERN csPlane3 &csPlane3_operator_Sm__Se_(csPlane3 *self,csTransform const &t){ return *self *= t; }
SWIGINTERN csPlane3 &csPlane3_operator_Sd__Se_(csPlane3 *self,csReversibleTransform const &t){ return *self /= t; }
SWIGINTERN csPlane3 csPlane3_operator_Sd_(csPlane3 *self,csReversibleTransform const &t){ return *self / t; }
SWIGINTERN csVector2 &csPoly2D___getitem__(csPoly2D *self,int i){ return self->operator[](i); }
SWIGINTERN csVector3 &csPoly3D___getitem__(csPoly3D *self,int i){ return self->operator[](i); }
SWIGINTERN int csTriangle___getitem__(csTriangle const *self,int i){ return self->operator[](i); }
SWIGINTERN void csTriangle___setitem__(csTriangle *self,int i,int v){ self->operator[](i) = v; }
SWIGINTERN bool csTriangle___nonzero__(csTriangle const *self){ return !(self->a||self->b||self->c); }
SWIGINTERN csQuaternion csQuaternion_operator_Sa_(csQuaternion *self,csQuaternion const &q){ return *self + q; }
SWIGINTERN csQuaternion csQuaternion_operator_Ss_(csQuaternion *self,csQuaternion const &q){ return *self - q; }
SWIGINTERN csQuaternion csQuaternion_operator_Sm_(csQuaternion *self,csQuaternion const &q){ return *self * q; }
SWIGINTERN csBox2 csBox2_operator_Sa___SWIG_0(csBox2 const *self,csBox2 const &b){ return *self + b; }
SWIGINTERN csBox2 csBox2_operator_Sm_(csBox2 const *self,csBox2 const &b){ return *self * b; }
SWIGINTERN bool csBox2_operator_SN__Se_(csBox2 const *self,csBox2 const &b){ return *self != b; }
SWIGINTERN bool csBox2_operator_Sl___SWIG_0(csBox2 const *self,csBox2 const &b){ return *self < b; }
SWIGINTERN bool csBox2_operator_Sg_(csBox2 const *self,csBox2 const &b){ return b > *self; }
SWIGINTERN csBox2 csBox2_operator_Sa___SWIG_1(csBox2 const *self,csVector2 const &point){ return *self + point; }
SWIGINTERN bool csBox2_operator_Sl___SWIG_1(csBox2 const *self,csVector2 const &point){ return point < *self; }
SWIGINTERN csBox3 csBox3_operator_Sa___SWIG_0(csBox3 const *self,csBox3 const &b){ return *self + b; }
SWIGINTERN csBox3 csBox3_operator_Sm_(csBox3 const *self,csBox3 const &b){ return *self * b; }
SWIGINTERN bool csBox3_operator_SN__Se_(csBox3 const *self,csBox3 const &b){ return *self != b; }
SWIGINTERN bool csBox3_operator_Sl___SWIG_0(csBox3 const *self,csBox3 const &b){ return *self < b; }
SWIGINTERN bool csBox3_operator_Sg_(csBox3 const *self,csBox3 const &b){ return b > *self; }
SWIGINTERN csBox3 csBox3_operator_Sa___SWIG_1(csBox3 const *self,csVector3 const &point){ return *self + point; }
SWIGINTERN bool csBox3_operator_Sl___SWIG_1(csBox3 const *self,csVector3 const &point){ return point < *self; }
SWIGINTERN int csArray_Sl_int_Sg____getitem__(csArray< int > *self,size_t n){return self->Get(n);}
SWIGINTERN bool csArray_Sl_int_Sg____contains__(csArray< int > *self,int obj){
		if (self->Find(obj) == 
				(size_t)csArrayItemNotFound)
			return false;
		return true;
	}
SWIGINTERN bool csArray_Sl_int_Sg____delitem__(csArray< int > *self,size_t n){ return self->DeleteIndex(n); }
SWIGINTERN int csArray_Sl_int_Sg____len__(csArray< int > *self){ return self->GetSize(); }
SWIGINTERN void csArray_Sl_int_Sg__append(csArray< int > *self,int e){ self->Push(e); }
SWIGINTERN csArray< int > csArray_Sl_csArray_Sl_int_Sg__Sg____getitem__(csArray< csArray< int > > *self,size_t n){return self->Get(n);}
SWIGINTERN bool csArray_Sl_csArray_Sl_int_Sg__Sg____contains__(csArray< csArray< int > > *self,csArray< int > obj){
		if (self->Find(obj) == 
				(size_t)csArrayItemNotFound)
			return false;
		return true;
	}
SWIGINTERN bool csArray_Sl_csArray_Sl_int_Sg__Sg____delitem__(csArray< csArray< int > > *self,size_t n){ return self->DeleteIndex(n); }
SWIGINTERN int csArray_Sl_csArray_Sl_int_Sg__Sg____len__(csArray< csArray< int > > *self){ return self->GetSize(); }
SWIGINTERN void csArray_Sl_csArray_Sl_int_Sg__Sg__append(csArray< csArray< int > > *self,csArray< int > e){ self->Push(e); }
#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap__SetSCFPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_SetSCFPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_SetSCFPointer" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  SetSCFPointer(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__GetSCFPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_GetSCFPointer",0,0)) SWIG_fail;
  result = (iSCF *)GetSCFPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iSCF, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_x_set" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_x_get" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_y_set" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_y_get" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector2",0,0)) SWIG_fail;
  result = (csVector2 *)new csVector2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector2",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector2" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csVector2 *)new csVector2(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector2__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector2",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector2" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csVector2" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csVector2 *)new csVector2(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector2__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csVector2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csVector2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (csVector2 *)new csVector2((csVector2 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csVector2__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csVector2__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csVector2__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csVector2__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csVector2'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csVector2()\n"
    "    csVector2(float)\n"
    "    csVector2(float,float)\n"
    "    csVector2(csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Description" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = ((csVector2 const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Set" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csVector2_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->Set(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Set" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->Set((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Set" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2_Set" "', argument " "2"" of type '" "float const *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  (arg1)->Set((float const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Set__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Set" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->Set(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector2_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector2_Set__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector2_Set__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csVector2_Set__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector2_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csVector2 *,float,float)\n"
    "    Set(csVector2 *,csVector2 const &)\n"
    "    Set(csVector2 *,float const *)\n"
    "    Set(csVector2 *,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Get" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2_Get" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  (arg1)->Get(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Norm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Norm",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Norm" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (float)((csVector2 const *)arg1)->Norm();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_SquaredNorm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_SquaredNorm",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_SquaredNorm" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (float)((csVector2 const *)arg1)->SquaredNorm();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_Rotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_Rotate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_Rotate" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2_Rotate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->Rotate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2_IsLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2_IsLeft",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2_IsLeft" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2_IsLeft" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2_IsLeft" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csVector2_IsLeft" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2_IsLeft" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (float)(arg1)->IsLeft((csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___iadd__" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2___iadd__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2___iadd__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  {
    csVector2 &_result_ref = (arg1)->operator +=((csVector2 const &)*arg2);
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___isub__" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2___isub__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2___isub__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  {
    csVector2 &_result_ref = (arg1)->operator -=((csVector2 const &)*arg2);
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___imul__" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csVector2 &_result_ref = (arg1)->operator *=(arg2);
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___idiv__" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csVector2 &_result_ref = (arg1)->operator /=(arg2);
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___pos__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___pos__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___pos__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = ((csVector2 const *)arg1)->operator +();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___neg__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___neg__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = ((csVector2 const *)arg1)->operator -();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___add__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2___add__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2___add__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = csVector2_operator_Sa_((csVector2 const *)arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___sub__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2___sub__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2___sub__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = csVector2_operator_Ss_((csVector2 const *)arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___mul__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2___mul__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2___mul__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (float)csVector2_operator_Sm___SWIG_0((csVector2 const *)arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___mul__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector2_operator_Sm___SWIG_1((csVector2 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector2___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector2___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csVector2___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___div__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector2_operator_Sd_((csVector2 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___eq__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2___eq__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2___eq__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)csVector2_operator_Se__Se_((csVector2 const *)arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___ne__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector2___ne__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector2___ne__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)csVector2_operator_SN__Se_((csVector2 const *)arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___lt__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___lt__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)csVector2_operator_Sl_((csVector2 const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___gt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___gt__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___gt__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)csVector2_operator_Sg_((csVector2 const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___rmul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___rmul__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___rmul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector2___rmul__((csVector2 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___abs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___abs__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___abs__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (float)csVector2___abs__((csVector2 const *)arg1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___getitem__" "', argument " "1"" of type '" "csVector2 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)csVector2___getitem__((csVector2 const *)arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector2___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector2___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector2___setitem__" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector2___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csVector2___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  csVector2___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector2" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csVector2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csVector3_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_x_set" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_x_get" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_y_set" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_y_get" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_z_set" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_z_get" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3",0,0)) SWIG_fail;
  result = (csVector3 *)new csVector3();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csVector3 *)new csVector3(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csVector3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csVector3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csVector3 *)new csVector3(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csVector3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csVector3 *)new csVector3(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csVector3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csVector3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (csVector3 *)new csVector3((csVector3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csDVector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csDVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csVector3" "', argument " "1"" of type '" "csDVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csVector3" "', argument " "1"" of type '" "csDVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csDVector3 * >(argp1);
  result = (csVector3 *)new csVector3((csDVector3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csVector3__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csVector3__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csDVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csVector3__SWIG_5(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csVector3__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csVector3__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csVector3__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csVector3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csVector3()\n"
    "    csVector3(float)\n"
    "    csVector3(float,float,float)\n"
    "    csVector3(float,float)\n"
    "    csVector3(csVector3 const &)\n"
    "    csVector3(csDVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Description" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = ((csVector3 const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Cross__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Cross",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Cross" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3_Cross" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3_Cross" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csVector3_Cross" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3_Cross" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->Cross((csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___iadd__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___iadd__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___iadd__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  {
    csVector3 &_result_ref = (arg1)->operator +=((csVector3 const &)*arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___isub__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___isub__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___isub__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  {
    csVector3 &_result_ref = (arg1)->operator -=((csVector3 const &)*arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___imul__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csVector3 &_result_ref = (arg1)->operator *=(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___idiv__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csVector3 &_result_ref = (arg1)->operator /=(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___pos__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___pos__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___pos__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = ((csVector3 const *)arg1)->operator +();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___neg__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___neg__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = ((csVector3 const *)arg1)->operator -();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Set",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Set" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csVector3_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csVector3_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->Set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Set" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->Set((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Set" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3_Set" "', argument " "2"" of type '" "float const *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  (arg1)->Set((float const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Set__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Set" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->Set(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3_Set__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3_Set__SWIG_3(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csVector3_Set__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csVector3 *,float,float,float)\n"
    "    Set(csVector3 *,csVector3 const &)\n"
    "    Set(csVector3 *,float const *)\n"
    "    Set(csVector3 *,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Get" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3_Get" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  (arg1)->Get(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Norm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Norm",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Norm" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (float)((csVector3 const *)arg1)->Norm();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_SquaredNorm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_SquaredNorm",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_SquaredNorm" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (float)((csVector3 const *)arg1)->SquaredNorm();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Unit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Unit",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Unit" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = ((csVector3 const *)arg1)->Unit();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Normalize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Normalize" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  (arg1)->Normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_IsZero__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_IsZero",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_IsZero" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3_IsZero" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)((csVector3 const *)arg1)->IsZero(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_IsZero__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_IsZero",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_IsZero" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (bool)((csVector3 const *)arg1)->IsZero();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_IsZero(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csVector3_IsZero__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3_IsZero__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3_IsZero'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IsZero(csVector3 const *,float)\n"
    "    IsZero(csVector3 const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_UnitAxisClamped(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_UnitAxisClamped",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_UnitAxisClamped" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = ((csVector3 const *)arg1)->UnitAxisClamped();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_DominantAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_DominantAxis",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_DominantAxis" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (int)((csVector3 const *)arg1)->DominantAxis();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___add__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___add__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___add__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csVector3_operator_Sa_((csVector3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___sub__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___sub__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___sub__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csVector3_operator_Ss_((csVector3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___mul__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___mul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___mul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (float)csVector3_operator_Sm___SWIG_0((csVector3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___mul__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector3_operator_Sm___SWIG_1((csVector3 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csVector3___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___div__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector3_operator_Sd___SWIG_0((csVector3 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___eq__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___eq__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___eq__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)csVector3_operator_Se__Se_((csVector3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___ne__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___ne__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___ne__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)csVector3_operator_SN__Se_((csVector3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___lt__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___lt__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)csVector3_operator_Sl_((csVector3 const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___gt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___gt__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___gt__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)csVector3_operator_Sg_((csVector3 const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___imul__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  {
    csVector3 &_result_ref = csVector3_operator_Sm__Se___SWIG_1(arg1,(csTransform const &)*arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3___imul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3___imul____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(csVector3 *,float)\n"
    "    operator *=(csVector3 *,csTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___idiv__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___idiv__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___idiv__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  {
    csVector3 &_result_ref = csVector3_operator_Sd__Se___SWIG_1(arg1,(csReversibleTransform const &)*arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csReversibleTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3___idiv____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3___idiv____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(csVector3 *,float)\n"
    "    operator /=(csVector3 *,csReversibleTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___div__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  result = csVector3_operator_Sd___SWIG_1(arg1,(csReversibleTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csReversibleTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3___div____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3___div____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csVector3_project(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_project",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_project" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3_project" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3_project" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csVector3_project((csVector3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Cross__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3_Cross",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3_Cross" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3_Cross" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3_Cross" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csVector3_Cross__SWIG_1((csVector3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3_Cross(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3_Cross__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csVector3_Cross__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3_Cross'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Cross(csVector3 *,csVector3 const &,csVector3 const &)\n"
    "    Cross(csVector3 const *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___rmul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___rmul__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___rmul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector3___rmul__((csVector3 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___abs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___abs__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___abs__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (float)csVector3___abs__((csVector3 const *)arg1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___getitem__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)csVector3___getitem__((csVector3 const *)arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___setitem__" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csVector3___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  csVector3___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3___nonzero__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3___nonzero__" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (bool)csVector3___nonzero__((csVector3 const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector3" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csVector3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csVector3ArrayReadOnly_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayReadOnly_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayReadOnly_GetSize" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  result = ((iArrayReadOnly< csVector3 > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayReadOnly_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayReadOnly_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayReadOnly_Get" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayReadOnly_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 const &_result_ref = ((iArrayReadOnly< csVector3 > const *)arg1)->Get(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayReadOnly_Top(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayReadOnly_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayReadOnly_Top" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  {
    csVector3 const &_result_ref = ((iArrayReadOnly< csVector3 > const *)arg1)->Top();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayReadOnly_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayReadOnly_Find",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayReadOnly_Find" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3ArrayReadOnly_Find" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3ArrayReadOnly_Find" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((iArrayReadOnly< csVector3 > const *)arg1)->Find((csVector3 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayReadOnly_GetIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayReadOnly_GetIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayReadOnly_GetIndex" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3ArrayReadOnly_GetIndex" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((iArrayReadOnly< csVector3 > const *)arg1)->GetIndex((csVector3 const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayReadOnly_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayReadOnly_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayReadOnly_IsEmpty" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  result = (bool)((iArrayReadOnly< csVector3 > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayReadOnly_GetAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayReadOnly_GetAll",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayReadOnly_GetAll" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3ArrayReadOnly_GetAll" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ((iArrayReadOnly< csVector3 > const *)arg1)->GetAll(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector3ArrayReadOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayReadOnly< csVector3 > *arg1 = (iArrayReadOnly< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector3ArrayReadOnly",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector3ArrayReadOnly" "', argument " "1"" of type '" "iArrayReadOnly< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayReadOnly< csVector3 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector3ArrayReadOnly_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iArrayReadOnlyT_csVector3_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csVector3ArrayChangeElements_Get__SWIG_0_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeElements< csVector3 > *arg1 = (iArrayChangeElements< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeElements_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeElements_Get" "', argument " "1"" of type '" "iArrayChangeElements< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeElements< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeElements_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 const &_result_ref = ((iArrayChangeElements< csVector3 > const *)arg1)->Get(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeElements_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeElements< csVector3 > *arg1 = (iArrayChangeElements< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeElements_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeElements_Get" "', argument " "1"" of type '" "iArrayChangeElements< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeElements< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeElements_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 &_result_ref = (arg1)->Get(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeElements_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3ArrayChangeElements_Get__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3ArrayChangeElements_Get__SWIG_0_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3ArrayChangeElements_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(iArrayChangeElements< csVector3 > const *,size_t)\n"
    "    Get(iArrayChangeElements< csVector3 > *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeElements_Top__SWIG_0_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeElements< csVector3 > *arg1 = (iArrayChangeElements< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeElements_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeElements_Top" "', argument " "1"" of type '" "iArrayChangeElements< csVector3 > const *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeElements< csVector3 > * >(argp1);
  {
    csVector3 const &_result_ref = ((iArrayChangeElements< csVector3 > const *)arg1)->Top();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeElements_Top__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeElements< csVector3 > *arg1 = (iArrayChangeElements< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeElements_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeElements_Top" "', argument " "1"" of type '" "iArrayChangeElements< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeElements< csVector3 > * >(argp1);
  {
    csVector3 &_result_ref = (arg1)->Top();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeElements_Top(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csVector3ArrayChangeElements_Top__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csVector3ArrayChangeElements_Top__SWIG_0_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3ArrayChangeElements_Top'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Top(iArrayChangeElements< csVector3 > const *)\n"
    "    Top(iArrayChangeElements< csVector3 > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector3ArrayChangeElements(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeElements< csVector3 > *arg1 = (iArrayChangeElements< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector3ArrayChangeElements",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector3ArrayChangeElements" "', argument " "1"" of type '" "iArrayChangeElements< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeElements< csVector3 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector3ArrayChangeElements_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iArrayChangeElementsT_csVector3_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_SetSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_SetSize" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_SetSize" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csVector3ArrayChangeAll_SetSize" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3ArrayChangeAll_SetSize" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetSize(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_SetSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_SetSize" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_SetSize" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_SetSize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector3ArrayChangeAll_SetSize__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csVector3ArrayChangeAll_SetSize__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3ArrayChangeAll_SetSize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetSize(iArrayChangeAll< csVector3 > *,size_t,csVector3 const &)\n"
    "    SetSize(iArrayChangeAll< csVector3 > *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_GetExtend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_GetExtend",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_GetExtend" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_GetExtend" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 &_result_ref = (arg1)->GetExtend(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_Put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_Put",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_Put" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_Put" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csVector3ArrayChangeAll_Put" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3ArrayChangeAll_Put" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->Put(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_Push" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3ArrayChangeAll_Push" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3ArrayChangeAll_Push" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (arg1)->Push((csVector3 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_PushSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_PushSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_PushSmart" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3ArrayChangeAll_PushSmart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3ArrayChangeAll_PushSmart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (arg1)->PushSmart((csVector3 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_Pop" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  result = (arg1)->Pop();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_Insert" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csVector3ArrayChangeAll_Insert" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3ArrayChangeAll_Insert" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (bool)(arg1)->Insert(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_DeleteAll" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_Truncate" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_Empty" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_DeleteIndex" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_DeleteIndexFast" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3ArrayChangeAll_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3ArrayChangeAll_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3ArrayChangeAll_Delete",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3ArrayChangeAll_Delete" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3ArrayChangeAll_Delete" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3ArrayChangeAll_Delete" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)(arg1)->Delete((csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector3ArrayChangeAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iArrayChangeAll< csVector3 > *arg1 = (iArrayChangeAll< csVector3 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector3ArrayChangeAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iArrayChangeAllT_csVector3_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector3ArrayChangeAll" "', argument " "1"" of type '" "iArrayChangeAll< csVector3 > *""'"); 
  }
  arg1 = reinterpret_cast< iArrayChangeAll< csVector3 > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector3ArrayChangeAll_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_iArrayChangeAllT_csVector3_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csVector4Float_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_x_set" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4Float_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4Float_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_x_get" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4Float_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_y_set" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4Float_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4Float_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_y_get" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4Float_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_z_set" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4Float_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4Float_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_z_get" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4Float_w_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_w_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_w_set" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4Float_w_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->w = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4Float_w_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4Float_w_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4Float_w_get" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  result = (float) ((arg1)->w);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4Float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4Float",0,0)) SWIG_fail;
  result = (csVector4T< float > *)new csVector4T< float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4TT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector4Float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = (csVector4T< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector4Float",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4TT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector4Float" "', argument " "1"" of type '" "csVector4T< float > *""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector4Float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csVector4TT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",0,0)) SWIG_fail;
  result = (csVector4 *)new csVector4();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = 0 ;
  float temp1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector4" "', argument " "1"" of type '" "float""'");
  } 
  temp1 = static_cast< float >(val1);
  arg1 = &temp1;
  result = (csVector4 *)new csVector4((float const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector4" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csVector4" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csVector4" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csVector4" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csVector4 *)new csVector4(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector4" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csVector4" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csVector4" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csVector4 *)new csVector4(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector4" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csVector4" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csVector4 *)new csVector4(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector4 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector4 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  result = (csVector4 *)new csVector4((csVector4 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4T< float > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector4TT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector4T< float > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector4T< float > const &""'"); 
  }
  arg1 = reinterpret_cast< csVector4T< float > * >(argp1);
  result = (csVector4 *)new csVector4((csVector4T< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csVector4" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csVector4 *)new csVector4((csVector3 const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csVector4" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (csVector4 *)new csVector4((csVector3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector4(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csVector4__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csVector4__SWIG_5(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector4TT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csVector4__SWIG_6(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csVector4__SWIG_8(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csVector4__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csVector4__SWIG_7(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csVector4__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csVector4__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csVector4__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csVector4'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csVector4()\n"
    "    csVector4(float const &)\n"
    "    csVector4(float,float,float,float)\n"
    "    csVector4(float,float,float)\n"
    "    csVector4(float,float)\n"
    "    csVector4(csVector4 const &)\n"
    "    csVector4(csVector4T< float > const &)\n"
    "    csVector4(csVector3 const &,float)\n"
    "    csVector4(csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4_assign__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  csVector4T< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4_assign" "', argument " "1"" of type '" "csVector4 *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4TT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector4_assign" "', argument " "2"" of type '" "csVector4T< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector4_assign" "', argument " "2"" of type '" "csVector4T< float > const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4T< float > * >(argp2);
  {
    csVector4 &_result_ref = (arg1)->operator =((csVector4T< float > const &)*arg2);
    result = (csVector4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4_assign__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4_assign" "', argument " "1"" of type '" "csVector4 *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector4_assign" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector4_assign" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  {
    csVector4 &_result_ref = (arg1)->operator =((csVector3 const &)*arg2);
    result = (csVector4 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4_assign(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector4TT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector4_assign__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector4_assign__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector4_assign'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator =(csVector4 *,csVector4T< float > const &)\n"
    "    operator =(csVector4 *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  csVector4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___add__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector4___add__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector4___add__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4 * >(argp2);
  result = csVector4_operator_Sa_((csVector4 const *)arg1,(csVector4 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector4(static_cast< const csVector4& >(result))), SWIGTYPE_p_csVector4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  csVector4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___sub__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector4___sub__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector4___sub__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4 * >(argp2);
  result = csVector4_operator_Ss_((csVector4 const *)arg1,(csVector4 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector4(static_cast< const csVector4& >(result))), SWIGTYPE_p_csVector4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  csVector4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___mul__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector4___mul__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector4___mul__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4 * >(argp2);
  result = (float)csVector4_operator_Sm___SWIG_0((csVector4 const *)arg1,(csVector4 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___mul__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector4_operator_Sm___SWIG_1((csVector4 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector4(static_cast< const csVector4& >(result))), SWIGTYPE_p_csVector4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector4___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csVector4___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csVector4___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___div__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector4_operator_Sd_((csVector4 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector4(static_cast< const csVector4& >(result))), SWIGTYPE_p_csVector4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  csVector4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___eq__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector4___eq__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector4___eq__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4 * >(argp2);
  result = (bool)csVector4_operator_Se__Se_((csVector4 const *)arg1,(csVector4 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  csVector4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___ne__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector4___ne__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector4___ne__" "', argument " "2"" of type '" "csVector4 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector4 * >(argp2);
  result = (bool)csVector4_operator_SN__Se_((csVector4 const *)arg1,(csVector4 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___lt__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4___lt__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)csVector4_operator_Sl_((csVector4 const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___gt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___gt__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4___gt__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)csVector4_operator_Sg_((csVector4 const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___rmul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___rmul__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4___rmul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csVector4___rmul__((csVector4 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector4(static_cast< const csVector4& >(result))), SWIGTYPE_p_csVector4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___abs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___abs__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___abs__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  result = (float)csVector4___abs__((csVector4 const *)arg1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___getitem__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)csVector4___getitem__((csVector4 const *)arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___setitem__" "', argument " "1"" of type '" "csVector4 *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector4___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csVector4___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  csVector4___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector4___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector4___nonzero__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector4___nonzero__" "', argument " "1"" of type '" "csVector4 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  result = (bool)csVector4___nonzero__((csVector4 const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector4 *arg1 = (csVector4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector4" "', argument " "1"" of type '" "csVector4 *""'"); 
  }
  arg1 = reinterpret_cast< csVector4 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector4_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csVector4, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csMatrix2_m11_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m11_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m11_set" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix2_m11_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m11 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_m11_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m11_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m11_get" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = (float) ((arg1)->m11);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_m12_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m12_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m12_set" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix2_m12_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m12 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_m12_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m12_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m12_get" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = (float) ((arg1)->m12);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_m21_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m21_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m21_set" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix2_m21_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m21 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_m21_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m21_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m21_get" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = (float) ((arg1)->m21);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_m22_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m22_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m22_set" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix2_m22_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m22 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_m22_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_m22_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_m22_get" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = (float) ((arg1)->m22);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMatrix2",0,0)) SWIG_fail;
  result = (csMatrix2 *)new csMatrix2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csMatrix2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMatrix2",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csMatrix2" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csMatrix2" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csMatrix2" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csMatrix2" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csMatrix2 *)new csMatrix2(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csMatrix2__SWIG_0(self, args);
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csMatrix2__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csMatrix2'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csMatrix2()\n"
    "    csMatrix2(float,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Row1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Row1",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Row1" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->Row1();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Row2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Row2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Row2" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->Row2();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Col1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Col1",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Col1" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->Col1();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Col2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Col2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Col2" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->Col2();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Set",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Set" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix2_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csMatrix2_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csMatrix2_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMatrix2_Set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->Set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  csMatrix2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2___iadd__" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix2___iadd__" "', argument " "2"" of type '" "csMatrix2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix2___iadd__" "', argument " "2"" of type '" "csMatrix2 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix2 * >(argp2);
  {
    csMatrix2 &_result_ref = (arg1)->operator +=((csMatrix2 const &)*arg2);
    result = (csMatrix2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  csMatrix2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2___isub__" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix2___isub__" "', argument " "2"" of type '" "csMatrix2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix2___isub__" "', argument " "2"" of type '" "csMatrix2 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix2 * >(argp2);
  {
    csMatrix2 &_result_ref = (arg1)->operator -=((csMatrix2 const &)*arg2);
    result = (csMatrix2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  csMatrix2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2___imul__" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix2___imul__" "', argument " "2"" of type '" "csMatrix2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix2___imul__" "', argument " "2"" of type '" "csMatrix2 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix2 * >(argp2);
  {
    csMatrix2 &_result_ref = (arg1)->operator *=((csMatrix2 const &)*arg2);
    result = (csMatrix2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2___imul__" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix2___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csMatrix2 &_result_ref = (arg1)->operator *=(arg2);
    result = (csMatrix2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csMatrix2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix2___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csMatrix2___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csMatrix2___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(csMatrix2 *,csMatrix2 const &)\n"
    "    operator *=(csMatrix2 *,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2___idiv__" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix2___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csMatrix2 &_result_ref = (arg1)->operator /=(arg2);
    result = (csMatrix2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___pos__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2___pos__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2___pos__" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->operator +();
  resultobj = SWIG_NewPointerObj((new csMatrix2(static_cast< const csMatrix2& >(result))), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2___neg__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2___neg__" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->operator -();
  resultobj = SWIG_NewPointerObj((new csMatrix2(static_cast< const csMatrix2& >(result))), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Transpose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Transpose" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  (arg1)->Transpose();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_GetTranspose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_GetTranspose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_GetTranspose" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->GetTranspose();
  resultobj = SWIG_NewPointerObj((new csMatrix2(static_cast< const csMatrix2& >(result))), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_GetInverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_GetInverse",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_GetInverse" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = ((csMatrix2 const *)arg1)->GetInverse();
  resultobj = SWIG_NewPointerObj((new csMatrix2(static_cast< const csMatrix2& >(result))), SWIGTYPE_p_csMatrix2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Invert",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Invert" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  (arg1)->Invert();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Determinant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Determinant",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Determinant" "', argument " "1"" of type '" "csMatrix2 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  result = (float)((csMatrix2 const *)arg1)->Determinant();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix2_Identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix2_Identity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix2_Identity" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  (arg1)->Identity();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csMatrix2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix2 *arg1 = (csMatrix2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csMatrix2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csMatrix2" "', argument " "1"" of type '" "csMatrix2 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix2 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csMatrix2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csMatrix2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csMatrix3_m11_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m11_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m11_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m11_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m11 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m11_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m11_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m11_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m11);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m12_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m12_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m12_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m12_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m12 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m12_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m12_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m12_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m12);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m13_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m13_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m13_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m13_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m13 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m13_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m13_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m13_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m13);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m21_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m21_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m21_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m21_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m21 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m21_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m21_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m21_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m21);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m22_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m22_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m22_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m22_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m22 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m22_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m22_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m22_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m22);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m23_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m23_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m23_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m23_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m23 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m23_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m23_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m23_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m23);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m31_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m31_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m31_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m31_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m31 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m31_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m31_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m31_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m31);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m32_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m32_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m32_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m32_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m32 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m32_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m32_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m32_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m32);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m33_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m33_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m33_set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_m33_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m33 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_m33_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_m33_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_m33_get" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float) ((arg1)->m33);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMatrix3",0,0)) SWIG_fail;
  result = (csMatrix3 *)new csMatrix3();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMatrix3",9,9,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csMatrix3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csMatrix3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csMatrix3" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_csMatrix3" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_csMatrix3" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_csMatrix3" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_csMatrix3" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_csMatrix3" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  result = (csMatrix3 *)new csMatrix3(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix3__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csMatrix3" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csMatrix3" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (csMatrix3 *)new csMatrix3((csMatrix3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix3__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMatrix3",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csMatrix3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csMatrix3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csMatrix3" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csMatrix3 *)new csMatrix3(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix3__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csMatrix3" "', argument " "1"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csMatrix3" "', argument " "1"" of type '" "csQuaternion const &""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = (csMatrix3 *)new csMatrix3((csQuaternion const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMatrix3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csMatrix3__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csMatrix3__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csQuaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csMatrix3__SWIG_4(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csMatrix3__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_csMatrix3__SWIG_1(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csMatrix3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csMatrix3()\n"
    "    csMatrix3(float,float,float,float,float,float,float,float,float)\n"
    "    csMatrix3(csMatrix3 const &)\n"
    "    csMatrix3(float,float,float,float)\n"
    "    csMatrix3(csQuaternion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Description" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Row1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Row1",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Row1" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->Row1();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Row2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Row2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Row2" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->Row2();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Row3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Row3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Row3" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->Row3();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Row",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Row" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_Row" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = ((csMatrix3 const *)arg1)->Row(arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Col1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Col1",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Col1" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->Col1();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Col2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Col2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Col2" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->Col2();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Col3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Col3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Col3" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->Col3();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Col(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Col",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Col" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_Col" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = ((csMatrix3 const *)arg1)->Col(arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Set",10,10,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csMatrix3_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csMatrix3_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMatrix3_Set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csMatrix3_Set" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csMatrix3_Set" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csMatrix3_Set" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "csMatrix3_Set" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "csMatrix3_Set" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  (arg1)->Set(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3_Set" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3_Set" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->Set((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Set" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3_Set" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3_Set" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  (arg1)->Set((csQuaternion const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[11];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 10); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csMatrix3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix3_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csQuaternion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix3_Set__SWIG_2(self, args);
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_csMatrix3_Set__SWIG_0(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csMatrix3_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csMatrix3 *,float,float,float,float,float,float,float,float,float)\n"
    "    Set(csMatrix3 *,csMatrix3 const &)\n"
    "    Set(csMatrix3 *,csQuaternion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_assign" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3_assign" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3_assign" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  {
    csMatrix3 &_result_ref = (arg1)->operator =((csMatrix3 const &)*arg2);
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___iadd__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___iadd__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___iadd__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  {
    csMatrix3 &_result_ref = (arg1)->operator +=((csMatrix3 const &)*arg2);
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___isub__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___isub__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___isub__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  {
    csMatrix3 &_result_ref = (arg1)->operator -=((csMatrix3 const &)*arg2);
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___imul__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___imul__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___imul__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  {
    csMatrix3 &_result_ref = (arg1)->operator *=((csMatrix3 const &)*arg2);
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___imul__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csMatrix3 &_result_ref = (arg1)->operator *=(arg2);
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___idiv__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csMatrix3 &_result_ref = (arg1)->operator /=(arg2);
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___pos__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___pos__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___pos__" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->operator +();
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___neg__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___neg__" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->operator -();
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Transpose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Transpose" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  (arg1)->Transpose();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_GetTranspose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_GetTranspose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_GetTranspose" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->GetTranspose();
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_GetInverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_GetInverse",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_GetInverse" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = ((csMatrix3 const *)arg1)->GetInverse();
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Invert",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Invert" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  (arg1)->Invert();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Determinant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Determinant",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Determinant" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (float)((csMatrix3 const *)arg1)->Determinant();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_Identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_Identity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_Identity" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  (arg1)->Identity();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3_IsIdentity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3_IsIdentity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3_IsIdentity" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  result = (bool)((csMatrix3 const *)arg1)->IsIdentity();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___add__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___add__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___add__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  result = csMatrix3_operator_Sa_(arg1,(csMatrix3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___sub__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___sub__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___sub__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  result = csMatrix3_operator_Ss_(arg1,(csMatrix3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___mul__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___mul__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___mul__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  result = csMatrix3_operator_Sm___SWIG_0(arg1,(csMatrix3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___mul__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___mul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___mul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csMatrix3_operator_Sm___SWIG_1(arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___mul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___mul__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csMatrix3_operator_Sm___SWIG_2(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___div__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csMatrix3_operator_Sd_(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___eq__" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___eq__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___eq__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  result = (bool)csMatrix3_operator_Se__Se_((csMatrix3 const *)arg1,(csMatrix3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___ne__" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___ne__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___ne__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  result = (bool)csMatrix3_operator_SN__Se_((csMatrix3 const *)arg1,(csMatrix3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___lt__" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3___lt__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)csMatrix3_operator_Sl_((csMatrix3 const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___mul____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___mul__" "', argument " "1"" of type '" "csMatrix3 const *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___mul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___mul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  result = csMatrix3_operator_Sm___SWIG_3((csMatrix3 const *)arg1,(csTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csMatrix3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix3___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix3___mul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix3___mul____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csMatrix3___mul____SWIG_2(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csMatrix3___imul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  csTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___imul__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMatrix3___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMatrix3___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  {
    csMatrix3 &_result_ref = csMatrix3_operator_Sm__Se___SWIG_2(arg1,(csTransform const &)*arg2);
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csMatrix3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix3___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMatrix3___imul____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csMatrix3___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csMatrix3___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(csMatrix3 *,csMatrix3 const &)\n"
    "    operator *=(csMatrix3 *,float)\n"
    "    operator *=(csMatrix3 *,csTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMatrix3___rmul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMatrix3___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMatrix3___rmul__" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMatrix3___rmul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = csMatrix3___rmul__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = (csMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csMatrix3" "', argument " "1"" of type '" "csMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csMatrix3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csMatrix3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csXRotMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csXRotMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csXRotMatrix3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csXRotMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csXRotMatrix3 *)new csXRotMatrix3(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csXRotMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csXRotMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csXRotMatrix3 *arg1 = (csXRotMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csXRotMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csXRotMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csXRotMatrix3" "', argument " "1"" of type '" "csXRotMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csXRotMatrix3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csXRotMatrix3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csXRotMatrix3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csYRotMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csYRotMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csYRotMatrix3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csYRotMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csYRotMatrix3 *)new csYRotMatrix3(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csYRotMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csYRotMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csYRotMatrix3 *arg1 = (csYRotMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csYRotMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csYRotMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csYRotMatrix3" "', argument " "1"" of type '" "csYRotMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csYRotMatrix3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csYRotMatrix3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csYRotMatrix3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csZRotMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csZRotMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csZRotMatrix3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csZRotMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csZRotMatrix3 *)new csZRotMatrix3(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csZRotMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csZRotMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csZRotMatrix3 *arg1 = (csZRotMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csZRotMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csZRotMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csZRotMatrix3" "', argument " "1"" of type '" "csZRotMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csZRotMatrix3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csZRotMatrix3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csZRotMatrix3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csXScaleMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csXScaleMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csXScaleMatrix3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csXScaleMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csXScaleMatrix3 *)new csXScaleMatrix3(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csXScaleMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csXScaleMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csXScaleMatrix3 *arg1 = (csXScaleMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csXScaleMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csXScaleMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csXScaleMatrix3" "', argument " "1"" of type '" "csXScaleMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csXScaleMatrix3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csXScaleMatrix3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csXScaleMatrix3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csYScaleMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csYScaleMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csYScaleMatrix3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csYScaleMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csYScaleMatrix3 *)new csYScaleMatrix3(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csYScaleMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csYScaleMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csYScaleMatrix3 *arg1 = (csYScaleMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csYScaleMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csYScaleMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csYScaleMatrix3" "', argument " "1"" of type '" "csYScaleMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csYScaleMatrix3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csYScaleMatrix3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csYScaleMatrix3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csZScaleMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csZScaleMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csZScaleMatrix3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csZScaleMatrix3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csZScaleMatrix3 *)new csZScaleMatrix3(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csZScaleMatrix3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csZScaleMatrix3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csZScaleMatrix3 *arg1 = (csZScaleMatrix3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csZScaleMatrix3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csZScaleMatrix3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csZScaleMatrix3" "', argument " "1"" of type '" "csZScaleMatrix3 *""'"); 
  }
  arg1 = reinterpret_cast< csZScaleMatrix3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csZScaleMatrix3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csZScaleMatrix3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_csTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTransform" "', argument " "1"" of type '" "csTransform *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTransform__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTransform",0,0)) SWIG_fail;
  result = (csTransform *)new csTransform();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTransform__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTransform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csTransform" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csTransform" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csTransform" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csTransform" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (csTransform *)new csTransform((csMatrix3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTransform(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csTransform__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csTransform__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csTransform'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csTransform()\n"
    "    csTransform(csMatrix3 const &,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Description" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  result = ((csTransform const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Identity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Identity" "', argument " "1"" of type '" "csTransform *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  (arg1)->Identity();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_IsIdentity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_IsIdentity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_IsIdentity" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  result = (bool)((csTransform const *)arg1)->IsIdentity();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_GetO2T(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_GetO2T",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_GetO2T" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  {
    csMatrix3 const &_result_ref = ((csTransform const *)arg1)->GetO2T();
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_GetO2TTranslation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_GetO2TTranslation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_GetO2TTranslation" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  {
    csVector3 const &_result_ref = ((csTransform const *)arg1)->GetO2TTranslation();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_GetOrigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_GetOrigin",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_GetOrigin" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  {
    csVector3 const &_result_ref = ((csTransform const *)arg1)->GetOrigin();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_SetO2T(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_SetO2T",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_SetO2T" "', argument " "1"" of type '" "csTransform *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_SetO2T" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_SetO2T" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->SetO2T((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_SetO2TTranslation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_SetO2TTranslation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_SetO2TTranslation" "', argument " "1"" of type '" "csTransform *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_SetO2TTranslation" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_SetO2TTranslation" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetO2TTranslation((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_SetOrigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_SetOrigin",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_SetOrigin" "', argument " "1"" of type '" "csTransform *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_SetOrigin" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_SetOrigin" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetOrigin((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Translate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Translate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Translate" "', argument " "1"" of type '" "csTransform *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Translate" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Translate" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->Translate((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2This__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Other2This",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Other2This" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((csTransform const *)arg1)->Other2This((csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2ThisRelative__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Other2ThisRelative",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Other2ThisRelative" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Other2ThisRelative" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2ThisRelative" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((csTransform const *)arg1)->Other2ThisRelative((csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2This__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Other2This",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Other2This" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = ((csTransform const *)arg1)->Other2This((csPlane3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2ThisRelative__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Other2ThisRelative",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Other2ThisRelative" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Other2ThisRelative" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2ThisRelative" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = ((csTransform const *)arg1)->Other2ThisRelative((csPlane3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2ThisRelative(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform_Other2ThisRelative__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform_Other2ThisRelative__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csTransform_Other2ThisRelative'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Other2ThisRelative(csTransform const *,csVector3 const &)\n"
    "    Other2ThisRelative(csTransform const *,csPlane3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2This__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csPlane3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Other2This",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Other2This" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csTransform_Other2This" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2This" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csPlane3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csTransform_Other2This" "', argument " "4"" of type '" "csPlane3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2This" "', argument " "4"" of type '" "csPlane3 &""'"); 
  }
  arg4 = reinterpret_cast< csPlane3 * >(argp4);
  ((csTransform const *)arg1)->Other2This((csPlane3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2This__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Other2This",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Other2This" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  result = ((csTransform const *)arg1)->Other2This((csSphere const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csSphere(static_cast< const csSphere& >(result))), SWIGTYPE_p_csSphere, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2This__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_Other2This",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_Other2This" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_Other2This" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = ((csTransform const *)arg1)->Other2This((csBox3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox3(static_cast< const csBox3& >(result))), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_Other2This(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform_Other2This__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform_Other2This__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csSphere, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform_Other2This__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform_Other2This__SWIG_4(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csPlane3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csTransform_Other2This__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csTransform_Other2This'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Other2This(csTransform const *,csVector3 const &)\n"
    "    Other2This(csTransform const *,csPlane3 const &)\n"
    "    Other2This(csTransform const *,csPlane3 const &,csVector3 const &,csPlane3 &)\n"
    "    Other2This(csTransform const *,csSphere const &)\n"
    "    Other2This(csTransform const *,csBox3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_GetReflect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTransform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_GetReflect",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_GetReflect" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform_GetReflect" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = csTransform::GetReflect((csPlane3 const &)*arg1);
  resultobj = SWIG_NewPointerObj((new csTransform(static_cast< const csTransform& >(result))), SWIGTYPE_p_csTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_GetFront(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_GetFront",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_GetFront" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  result = ((csTransform const *)arg1)->GetFront();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_GetUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_GetUp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_GetUp" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  result = ((csTransform const *)arg1)->GetUp();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform_GetRight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform_GetRight",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform_GetRight" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  result = ((csTransform const *)arg1)->GetRight();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___mul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csTransform_operator_Sm___SWIG_0((csTransform const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___mul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = csTransform_operator_Sm___SWIG_1((csTransform const *)arg1,(csPlane3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___mul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___mul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  result = csTransform_operator_Sm___SWIG_2((csTransform const *)arg1,(csSphere const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csSphere(static_cast< const csSphere& >(result))), SWIGTYPE_p_csSphere, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___mul____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___mul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  result = csTransform_operator_Sm___SWIG_3((csTransform const *)arg1,(csMatrix3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___mul____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTransform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___mul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___mul__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  result = csTransform_operator_Sm___SWIG_4((csTransform const *)arg1,(csReversibleTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csTransform(static_cast< const csTransform& >(result))), SWIGTYPE_p_csTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___mul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csSphere, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___mul____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csMatrix3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___mul____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csReversibleTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___mul____SWIG_4(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csTransform___rmul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___rmul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___rmul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___rmul__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csTransform___rmul____SWIG_0((csTransform const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___rmul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___rmul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___rmul__" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___rmul__" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = csTransform___rmul____SWIG_1((csTransform const *)arg1,(csPlane3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___rmul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = (csTransform *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTransform___rmul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTransform___rmul__" "', argument " "1"" of type '" "csTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTransform___rmul__" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTransform___rmul__" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  result = csTransform___rmul____SWIG_2((csTransform const *)arg1,(csSphere const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csSphere(static_cast< const csSphere& >(result))), SWIGTYPE_p_csSphere, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTransform___rmul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___rmul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___rmul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csSphere, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csTransform___rmul____SWIG_2(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *csTransform_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTransform, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csReversibleTransform__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csReversibleTransform",0,0)) SWIG_fail;
  result = (csReversibleTransform *)new csReversibleTransform();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csReversibleTransform__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csReversibleTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csReversibleTransform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csReversibleTransform" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csReversibleTransform" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csReversibleTransform" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csReversibleTransform" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (csReversibleTransform *)new csReversibleTransform((csMatrix3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csReversibleTransform__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csReversibleTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csReversibleTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csReversibleTransform" "', argument " "1"" of type '" "csTransform const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csReversibleTransform" "', argument " "1"" of type '" "csTransform const &""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  result = (csReversibleTransform *)new csReversibleTransform((csTransform const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csReversibleTransform__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csReversibleTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csReversibleTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csReversibleTransform" "', argument " "1"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csReversibleTransform" "', argument " "1"" of type '" "csReversibleTransform const &""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  result = (csReversibleTransform *)new csReversibleTransform((csReversibleTransform const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csReversibleTransform(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csReversibleTransform__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csReversibleTransform__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csReversibleTransform__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csReversibleTransform__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csReversibleTransform'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csReversibleTransform()\n"
    "    csReversibleTransform(csMatrix3 const &,csVector3 const &)\n"
    "    csReversibleTransform(csTransform const &)\n"
    "    csReversibleTransform(csReversibleTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_GetT2O(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_GetT2O",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_GetT2O" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  {
    csMatrix3 const &_result_ref = ((csReversibleTransform const *)arg1)->GetT2O();
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_GetT2OTranslation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_GetT2OTranslation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_GetT2OTranslation" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  result = ((csReversibleTransform const *)arg1)->GetT2OTranslation();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_GetInverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csReversibleTransform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_GetInverse",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_GetInverse" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  result = ((csReversibleTransform const *)arg1)->GetInverse();
  resultobj = SWIG_NewPointerObj((new csReversibleTransform(static_cast< const csReversibleTransform& >(result))), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_SetO2T(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_SetO2T",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_SetO2T" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_SetO2T" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_SetO2T" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->SetO2T((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_SetT2O(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_SetT2O",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_SetT2O" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_SetT2O" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_SetT2O" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->SetT2O((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2Other__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_This2Other",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_This2Other" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((csReversibleTransform const *)arg1)->This2Other((csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2OtherRelative__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_This2OtherRelative",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_This2OtherRelative" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_This2OtherRelative" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2OtherRelative" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((csReversibleTransform const *)arg1)->This2OtherRelative((csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2Other__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_This2Other",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_This2Other" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = ((csReversibleTransform const *)arg1)->This2Other((csPlane3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2OtherRelative__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_This2OtherRelative",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_This2OtherRelative" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_This2OtherRelative" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2OtherRelative" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = ((csReversibleTransform const *)arg1)->This2OtherRelative((csPlane3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2OtherRelative(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_This2OtherRelative__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_This2OtherRelative__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csReversibleTransform_This2OtherRelative'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    This2OtherRelative(csReversibleTransform const *,csVector3 const &)\n"
    "    This2OtherRelative(csReversibleTransform const *,csPlane3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2Other__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csPlane3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csPlane3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_This2Other",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_This2Other" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csReversibleTransform_This2Other" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2Other" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csPlane3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csReversibleTransform_This2Other" "', argument " "4"" of type '" "csPlane3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2Other" "', argument " "4"" of type '" "csPlane3 &""'"); 
  }
  arg4 = reinterpret_cast< csPlane3 * >(argp4);
  ((csReversibleTransform const *)arg1)->This2Other((csPlane3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2Other__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_This2Other",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_This2Other" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  result = ((csReversibleTransform const *)arg1)->This2Other((csSphere const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csSphere(static_cast< const csSphere& >(result))), SWIGTYPE_p_csSphere, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2Other__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_This2Other",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_This2Other" "', argument " "1"" of type '" "csReversibleTransform const *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_This2Other" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = ((csReversibleTransform const *)arg1)->This2Other((csBox3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox3(static_cast< const csBox3& >(result))), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_This2Other(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_This2Other__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_This2Other__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csSphere, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_This2Other__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_This2Other__SWIG_4(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csPlane3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csReversibleTransform_This2Other__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csReversibleTransform_This2Other'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    This2Other(csReversibleTransform const *,csVector3 const &)\n"
    "    This2Other(csReversibleTransform const *,csPlane3 const &)\n"
    "    This2Other(csReversibleTransform const *,csPlane3 const &,csVector3 const &,csPlane3 &)\n"
    "    This2Other(csReversibleTransform const *,csSphere const &)\n"
    "    This2Other(csReversibleTransform const *,csBox3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_RotateOther__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_RotateOther",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_RotateOther" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_RotateOther" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_RotateOther" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csReversibleTransform_RotateOther" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->RotateOther((csVector3 const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_RotateThis__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_RotateThis",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_RotateThis" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_RotateThis" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_RotateThis" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csReversibleTransform_RotateThis" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->RotateThis((csVector3 const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_RotateOther__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_RotateOther",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_RotateOther" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_RotateOther" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_RotateOther" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->RotateOther((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_RotateOther(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csMatrix3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_RotateOther__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csReversibleTransform_RotateOther__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csReversibleTransform_RotateOther'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RotateOther(csReversibleTransform *,csVector3 const &,float)\n"
    "    RotateOther(csReversibleTransform *,csMatrix3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_RotateThis__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_RotateThis",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_RotateThis" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_RotateThis" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_RotateThis" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->RotateThis((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_RotateThis(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csMatrix3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csReversibleTransform_RotateThis__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csReversibleTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csReversibleTransform_RotateThis__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csReversibleTransform_RotateThis'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RotateThis(csReversibleTransform *,csVector3 const &,float)\n"
    "    RotateThis(csReversibleTransform *,csMatrix3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform_LookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform_LookAt",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform_LookAt" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform_LookAt" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_LookAt" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csReversibleTransform_LookAt" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform_LookAt" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->LookAt((csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csReversibleTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform___imul__" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform___imul__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform___imul__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  {
    csReversibleTransform &_result_ref = csReversibleTransform_operator_Sm__Se_(arg1,(csReversibleTransform const &)*arg2);
    result = (csReversibleTransform *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csReversibleTransform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform___mul__" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform___mul__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform___mul__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  result = csReversibleTransform_operator_Sm_(arg1,(csReversibleTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csReversibleTransform(static_cast< const csReversibleTransform& >(result))), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csReversibleTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform___idiv__" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform___idiv__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform___idiv__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  {
    csReversibleTransform &_result_ref = csReversibleTransform_operator_Sd__Se_(arg1,(csReversibleTransform const &)*arg2);
    result = (csReversibleTransform *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csReversibleTransform___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csReversibleTransform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csReversibleTransform___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csReversibleTransform___div__" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csReversibleTransform___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csReversibleTransform___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  result = csReversibleTransform_operator_Sd_(arg1,(csReversibleTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csReversibleTransform(static_cast< const csReversibleTransform& >(result))), SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csReversibleTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csReversibleTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csReversibleTransform, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csReversibleTransform" "', argument " "1"" of type '" "csReversibleTransform *""'"); 
  }
  arg1 = reinterpret_cast< csReversibleTransform * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csReversibleTransform_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csReversibleTransform, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csOrthoTransform__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOrthoTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOrthoTransform",0,0)) SWIG_fail;
  result = (csOrthoTransform *)new csOrthoTransform();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOrthoTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOrthoTransform__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMatrix3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csOrthoTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOrthoTransform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csOrthoTransform" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOrthoTransform" "', argument " "1"" of type '" "csMatrix3 const &""'"); 
  }
  arg1 = reinterpret_cast< csMatrix3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csOrthoTransform" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOrthoTransform" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (csOrthoTransform *)new csOrthoTransform((csMatrix3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOrthoTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOrthoTransform__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTransform *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csOrthoTransform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOrthoTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csOrthoTransform" "', argument " "1"" of type '" "csTransform const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOrthoTransform" "', argument " "1"" of type '" "csTransform const &""'"); 
  }
  arg1 = reinterpret_cast< csTransform * >(argp1);
  result = (csOrthoTransform *)new csOrthoTransform((csTransform const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOrthoTransform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOrthoTransform(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csOrthoTransform__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csTransform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csOrthoTransform__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csMatrix3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csOrthoTransform__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csOrthoTransform'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csOrthoTransform()\n"
    "    csOrthoTransform(csMatrix3 const &,csVector3 const &)\n"
    "    csOrthoTransform(csTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOrthoTransform_SetO2T(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOrthoTransform *arg1 = (csOrthoTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOrthoTransform_SetO2T",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOrthoTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOrthoTransform_SetO2T" "', argument " "1"" of type '" "csOrthoTransform *""'"); 
  }
  arg1 = reinterpret_cast< csOrthoTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOrthoTransform_SetO2T" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOrthoTransform_SetO2T" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->SetO2T((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOrthoTransform_SetT2O(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOrthoTransform *arg1 = (csOrthoTransform *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOrthoTransform_SetT2O",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOrthoTransform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOrthoTransform_SetT2O" "', argument " "1"" of type '" "csOrthoTransform *""'"); 
  }
  arg1 = reinterpret_cast< csOrthoTransform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOrthoTransform_SetT2O" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOrthoTransform_SetT2O" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->SetT2O((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csOrthoTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOrthoTransform *arg1 = (csOrthoTransform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csOrthoTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOrthoTransform, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csOrthoTransform" "', argument " "1"" of type '" "csOrthoTransform *""'"); 
  }
  arg1 = reinterpret_cast< csOrthoTransform * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csOrthoTransform_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csOrthoTransform, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csSphere__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSphere",0,0)) SWIG_fail;
  result = (csSphere *)new csSphere();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSphere, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSphere__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSphere",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csSphere" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csSphere" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csSphere" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csSphere *)new csSphere((csVector3 const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSphere, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSphere__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csSphere *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSphere",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csSphere" "', argument " "1"" of type '" "csSphere const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csSphere" "', argument " "1"" of type '" "csSphere const &""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  result = (csSphere *)new csSphere((csSphere const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSphere, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSphere(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csSphere__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSphere, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csSphere__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csSphere__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csSphere'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csSphere()\n"
    "    csSphere(csVector3 const &,float)\n"
    "    csSphere(csSphere const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere_GetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere_GetCenter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere_GetCenter" "', argument " "1"" of type '" "csSphere const *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  {
    csVector3 const &_result_ref = ((csSphere const *)arg1)->GetCenter();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere_SetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere_SetCenter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere_SetCenter" "', argument " "1"" of type '" "csSphere *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSphere_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSphere_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetCenter((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere_GetRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere_GetRadius",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere_GetRadius" "', argument " "1"" of type '" "csSphere const *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  result = (float)((csSphere const *)arg1)->GetRadius();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere_SetRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere_SetRadius",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere_SetRadius" "', argument " "1"" of type '" "csSphere *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSphere_SetRadius" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetRadius(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere_Union(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere_Union",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere_Union" "', argument " "1"" of type '" "csSphere *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSphere_Union" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSphere_Union" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csSphere_Union" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->Union((csVector3 const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere___iadd__" "', argument " "1"" of type '" "csSphere *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSphere___iadd__" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSphere___iadd__" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  {
    csSphere &_result_ref = (arg1)->operator +=((csSphere const &)*arg2);
    result = (csSphere *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSphere, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere_TestIntersect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere_TestIntersect",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere_TestIntersect" "', argument " "1"" of type '" "csSphere const *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSphere_TestIntersect" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSphere_TestIntersect" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  result = (bool)((csSphere const *)arg1)->TestIntersect((csSphere const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  csTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere___imul__" "', argument " "1"" of type '" "csSphere *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSphere___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSphere___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  {
    csSphere &_result_ref = csSphere_operator_Sm__Se_(arg1,(csTransform const &)*arg2);
    result = (csSphere *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSphere, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSphere___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSphere result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSphere___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSphere___div__" "', argument " "1"" of type '" "csSphere *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSphere___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSphere___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  result = csSphere_operator_Sd_(arg1,(csReversibleTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csSphere(static_cast< const csSphere& >(result))), SWIGTYPE_p_csSphere, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csSphere(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSphere *arg1 = (csSphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csSphere",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSphere, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csSphere" "', argument " "1"" of type '" "csSphere *""'"); 
  }
  arg1 = reinterpret_cast< csSphere * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csSphere_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csSphere, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csEllipsoid__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEllipsoid *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csEllipsoid",0,0)) SWIG_fail;
  result = (csEllipsoid *)new csEllipsoid();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEllipsoid, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csEllipsoid__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csEllipsoid *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csEllipsoid",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csEllipsoid" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csEllipsoid" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csEllipsoid" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csEllipsoid" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (csEllipsoid *)new csEllipsoid((csVector3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEllipsoid, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csEllipsoid__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEllipsoid *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csEllipsoid *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csEllipsoid",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csEllipsoid,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csEllipsoid" "', argument " "1"" of type '" "csEllipsoid const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csEllipsoid" "', argument " "1"" of type '" "csEllipsoid const &""'"); 
  }
  arg1 = reinterpret_cast< csEllipsoid * >(argp1);
  result = (csEllipsoid *)new csEllipsoid((csEllipsoid const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csEllipsoid, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csEllipsoid(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csEllipsoid__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csEllipsoid, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csEllipsoid__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csEllipsoid__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csEllipsoid'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csEllipsoid()\n"
    "    csEllipsoid(csVector3 const &,csVector3 const &)\n"
    "    csEllipsoid(csEllipsoid const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEllipsoid_GetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEllipsoid *arg1 = (csEllipsoid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEllipsoid_GetCenter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEllipsoid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEllipsoid_GetCenter" "', argument " "1"" of type '" "csEllipsoid const *""'"); 
  }
  arg1 = reinterpret_cast< csEllipsoid * >(argp1);
  {
    csVector3 const &_result_ref = ((csEllipsoid const *)arg1)->GetCenter();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEllipsoid_SetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEllipsoid *arg1 = (csEllipsoid *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEllipsoid_SetCenter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEllipsoid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEllipsoid_SetCenter" "', argument " "1"" of type '" "csEllipsoid *""'"); 
  }
  arg1 = reinterpret_cast< csEllipsoid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEllipsoid_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEllipsoid_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetCenter((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEllipsoid_GetRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEllipsoid *arg1 = (csEllipsoid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEllipsoid_GetRadius",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEllipsoid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEllipsoid_GetRadius" "', argument " "1"" of type '" "csEllipsoid const *""'"); 
  }
  arg1 = reinterpret_cast< csEllipsoid * >(argp1);
  {
    csVector3 const &_result_ref = ((csEllipsoid const *)arg1)->GetRadius();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csEllipsoid_SetRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEllipsoid *arg1 = (csEllipsoid *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csEllipsoid_SetRadius",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEllipsoid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csEllipsoid_SetRadius" "', argument " "1"" of type '" "csEllipsoid *""'"); 
  }
  arg1 = reinterpret_cast< csEllipsoid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csEllipsoid_SetRadius" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csEllipsoid_SetRadius" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetRadius((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csEllipsoid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csEllipsoid *arg1 = (csEllipsoid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csEllipsoid",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csEllipsoid, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csEllipsoid" "', argument " "1"" of type '" "csEllipsoid *""'"); 
  }
  arg1 = reinterpret_cast< csEllipsoid * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csEllipsoid_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csEllipsoid, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csPlane2_norm_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_norm_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_norm_set" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane2_norm_set" "', argument " "2"" of type '" "csVector2 *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  if (arg1) (arg1)->norm = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_norm_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_norm_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_norm_get" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  result = (csVector2 *)& ((arg1)->norm);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_CC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_CC_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_CC_set" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPlane2_CC_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->CC = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_CC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_CC_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_CC_get" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  result = (float) ((arg1)->CC);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane2",0,0)) SWIG_fail;
  result = (csPlane2 *)new csPlane2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane2",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csPlane2" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csPlane2 *)new csPlane2((csVector2 const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPlane2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (csPlane2 *)new csPlane2((csVector2 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csPlane2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane2",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPlane2" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csPlane2" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csPlane2" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csPlane2 *)new csPlane2(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane2",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPlane2" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csPlane2" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csPlane2 *)new csPlane2(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Set" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPlane2_Set" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane2_Set" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  (arg1)->Set((csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  csSegment2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Set" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane2_Set" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane2_Set" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  arg2 = reinterpret_cast< csSegment2 * >(argp2);
  (arg1)->Set((csSegment2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane2",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csPlane2" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane2" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (csPlane2 *)new csPlane2((csVector2 const &)*arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPlane2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane2" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane2" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  result = (csPlane2 *)new csPlane2((csSegment2 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csPlane2__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csPlane2__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csPlane2__SWIG_6(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csPlane2__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csPlane2__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csPlane2__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csPlane2__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csPlane2'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csPlane2()\n"
    "    csPlane2(csVector2 const &,float)\n"
    "    csPlane2(csVector2 const &)\n"
    "    csPlane2(float,float,float)\n"
    "    csPlane2(float,float)\n"
    "    csPlane2(csVector2 const &,csVector2 const &)\n"
    "    csPlane2(csSegment2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Normal",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Normal" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  {
    csVector2 &_result_ref = (arg1)->Normal();
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_GetNormal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_GetNormal",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_GetNormal" "', argument " "1"" of type '" "csPlane2 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  result = ((csPlane2 const *)arg1)->GetNormal();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_A(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_A",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_A" "', argument " "1"" of type '" "csPlane2 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  result = (float)((csPlane2 const *)arg1)->A();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_B",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_B" "', argument " "1"" of type '" "csPlane2 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  result = (float)((csPlane2 const *)arg1)->B();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_C",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_C" "', argument " "1"" of type '" "csPlane2 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  result = (float)((csPlane2 const *)arg1)->C();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Set",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Set" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPlane2_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPlane2_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPlane2_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->Set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csSegment2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPlane2_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csPlane2_Set__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csPlane2_Set__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPlane2_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csPlane2 *,csVector2 const &,csVector2 const &)\n"
    "    Set(csPlane2 *,csSegment2 const &)\n"
    "    Set(csPlane2 *,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Classify__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Classify",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Classify" "', argument " "1"" of type '" "csPlane2 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane2_Classify" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane2_Classify" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (float)((csPlane2 const *)arg1)->Classify((csVector2 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Classify__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  csVector2 *arg4 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Classify",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csPlane2_Classify" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPlane2_Classify" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPlane2_Classify" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPlane2_Classify" "', argument " "4"" of type '" "csVector2 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane2_Classify" "', argument " "4"" of type '" "csVector2 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector2 * >(argp4);
  result = (float)csPlane2::Classify(arg1,arg2,arg3,(csVector2 const &)*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Classify(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPlane2_Classify__SWIG_0(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csVector2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csPlane2_Classify__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPlane2_Classify'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Classify(csPlane2 const *,csVector2 const &)\n"
    "    csPlane2::Classify(float,float,float,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Distance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Distance" "', argument " "1"" of type '" "csPlane2 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane2_Distance" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane2_Distance" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (float)((csPlane2 const *)arg1)->Distance((csVector2 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_SquaredDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_SquaredDistance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_SquaredDistance" "', argument " "1"" of type '" "csPlane2 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane2_SquaredDistance" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane2_SquaredDistance" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (float)((csPlane2 const *)arg1)->SquaredDistance((csVector2 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Invert",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Invert" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  (arg1)->Invert();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane2_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane2_Normalize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane2_Normalize" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  (arg1)->Normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPlane2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = (csPlane2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPlane2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPlane2" "', argument " "1"" of type '" "csPlane2 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPlane2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPlane2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csPlane3_norm_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_norm_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_norm_set" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_norm_set" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  if (arg1) (arg1)->norm = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_norm_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_norm_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_norm_get" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = (csVector3 *)& ((arg1)->norm);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_DD_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_DD_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_DD_set" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPlane3_DD_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->DD = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_DD_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_DD_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_DD_get" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = (float) ((arg1)->DD);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane3",0,0)) SWIG_fail;
  result = (csPlane3 *)new csPlane3();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane3",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csPlane3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csPlane3 *)new csPlane3((csVector3 const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (csPlane3 *)new csPlane3((csVector3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane3",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPlane3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csPlane3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csPlane3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csPlane3" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csPlane3 *)new csPlane3(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPlane3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csPlane3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csPlane3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csPlane3 *)new csPlane3(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csPlane3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csPlane3" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane3" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (csPlane3 *)new csPlane3((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPlane3",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csPlane3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPlane3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (csPlane3 *)new csPlane3((csVector3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPlane3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csPlane3__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csPlane3__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csPlane3__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csPlane3__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_csPlane3__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csPlane3__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csPlane3__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csPlane3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csPlane3()\n"
    "    csPlane3(csVector3 const &,float)\n"
    "    csPlane3(csVector3 const &)\n"
    "    csPlane3(float,float,float,float)\n"
    "    csPlane3(float,float,float)\n"
    "    csPlane3(csVector3 const &,csVector3 const &,csVector3 const &)\n"
    "    csPlane3(csVector3 const &,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3___eq__" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3___eq__" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3___eq__" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (bool)((csPlane3 const *)arg1)->operator ==((csPlane3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Normal",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Normal" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  {
    csVector3 const &_result_ref = ((csPlane3 const *)arg1)->Normal();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_A(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_A",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_A" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = (float)((csPlane3 const *)arg1)->A();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_B",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_B" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = (float)((csPlane3 const *)arg1)->B();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_C",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_C" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = (float)((csPlane3 const *)arg1)->C();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_D" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = (float)((csPlane3 const *)arg1)->D();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_GetNormal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_GetNormal",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_GetNormal" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  {
    csVector3 const &_result_ref = ((csPlane3 const *)arg1)->GetNormal();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Set",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Set" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPlane3_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPlane3_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPlane3_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csPlane3_Set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->Set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Set" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPlane3_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->Set((csVector3 const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Set",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Set" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPlane3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPlane3_Set" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Set" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  (arg1)->Set((csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Set__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Set" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPlane3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->Set((csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csPlane3_Set__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csPlane3_Set__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csPlane3_Set__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csPlane3_Set__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPlane3_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csPlane3 *,float,float,float,float)\n"
    "    Set(csPlane3 *,csVector3 const &,float)\n"
    "    Set(csPlane3 *,csVector3 const &,csVector3 const &,csVector3 const &)\n"
    "    Set(csPlane3 *,csVector3 const &,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_SetOrigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_SetOrigin",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_SetOrigin" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_SetOrigin" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_SetOrigin" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetOrigin((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Classify__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Classify",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Classify" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_Classify" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Classify" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (float)((csPlane3 const *)arg1)->Classify((csVector3 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Classify__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  csVector3 *arg5 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Classify",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csPlane3_Classify" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPlane3_Classify" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPlane3_Classify" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPlane3_Classify" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csPlane3_Classify" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Classify" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  result = (float)csPlane3::Classify(arg1,arg2,arg3,arg4,(csVector3 const &)*arg5);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Classify(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPlane3_Classify__SWIG_0(self, args);
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_csVector3, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_csPlane3_Classify__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPlane3_Classify'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Classify(csPlane3 const *,csVector3 const &)\n"
    "    csPlane3::Classify(float,float,float,float,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Distance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Distance" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_Distance" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_Distance" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (float)((csPlane3 const *)arg1)->Distance((csVector3 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Invert",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Invert" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  (arg1)->Invert();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Inverse",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Inverse" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = ((csPlane3 const *)arg1)->Inverse();
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Normalize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Normalize" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  (arg1)->Normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_FindPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_FindPoint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_FindPoint" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = ((csPlane3 const *)arg1)->FindPoint();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ProjectOnto__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_ProjectOnto",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_ProjectOnto" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_ProjectOnto" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ProjectOnto" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (arg1)->ProjectOnto((csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ProjectOnto__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_ProjectOnto",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_ProjectOnto" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_ProjectOnto" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ProjectOnto" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((csPlane3 const *)arg1)->ProjectOnto((csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ProjectOnto(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPlane3_ProjectOnto__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPlane3_ProjectOnto__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPlane3_ProjectOnto'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ProjectOnto(csPlane3 *,csVector3 const &)\n"
    "    ProjectOnto(csPlane3 const *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_FindOrthogonalPoints(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_FindOrthogonalPoints",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_FindOrthogonalPoints" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_FindOrthogonalPoints" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_FindOrthogonalPoints" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_FindOrthogonalPoints" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPlane3_FindOrthogonalPoints" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_FindOrthogonalPoints" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  csPlane3::FindOrthogonalPoints((csVector3 const &)*arg1,*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ClipPolygon__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 **arg2 = 0 ;
  int *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_ClipPolygon",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_ClipPolygon" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_ClipPolygon" "', argument " "2"" of type '" "csVector3 *&""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ClipPolygon" "', argument " "2"" of type '" "csVector3 *&""'"); 
  }
  arg2 = reinterpret_cast< csVector3 ** >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPlane3_ClipPolygon" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ClipPolygon" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPlane3_ClipPolygon" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->ClipPolygon(*arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ClipPolygon__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 **arg2 = 0 ;
  int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_ClipPolygon",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_ClipPolygon" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_ClipPolygon" "', argument " "2"" of type '" "csVector3 *&""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ClipPolygon" "', argument " "2"" of type '" "csVector3 *&""'"); 
  }
  arg2 = reinterpret_cast< csVector3 ** >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPlane3_ClipPolygon" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ClipPolygon" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  result = (bool)(arg1)->ClipPolygon(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ClipPolygon__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  size_t arg3 ;
  csVector3 *arg4 = (csVector3 *) 0 ;
  size_t *arg5 = 0 ;
  csVertexStatus *arg6 = (csVertexStatus *) 0 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  uint8 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_ClipPolygon",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_ClipPolygon" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_ClipPolygon" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPlane3_ClipPolygon" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPlane3_ClipPolygon" "', argument " "4"" of type '" "csVector3 *""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csPlane3_ClipPolygon" "', argument " "5"" of type '" "size_t &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ClipPolygon" "', argument " "5"" of type '" "size_t &""'"); 
  }
  arg5 = reinterpret_cast< size_t * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csPlane3_ClipPolygon" "', argument " "6"" of type '" "csVertexStatus *""'"); 
  }
  arg6 = reinterpret_cast< csVertexStatus * >(argp6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csPlane3_ClipPolygon" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = ((csPlane3 const *)arg1)->ClipPolygon((csVector3 const *)arg2,arg3,arg4,*arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj((new uint8(static_cast< const uint8& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ClipPolygon__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  size_t arg3 ;
  csVector3 *arg4 = (csVector3 *) 0 ;
  size_t *arg5 = 0 ;
  csVertexStatus *arg6 = (csVertexStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  uint8 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_ClipPolygon",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_ClipPolygon" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3_ClipPolygon" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPlane3_ClipPolygon" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPlane3_ClipPolygon" "', argument " "4"" of type '" "csVector3 *""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csPlane3_ClipPolygon" "', argument " "5"" of type '" "size_t &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3_ClipPolygon" "', argument " "5"" of type '" "size_t &""'"); 
  }
  arg5 = reinterpret_cast< size_t * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_csVertexStatus, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csPlane3_ClipPolygon" "', argument " "6"" of type '" "csVertexStatus *""'"); 
  }
  arg6 = reinterpret_cast< csVertexStatus * >(argp6);
  result = ((csPlane3 const *)arg1)->ClipPolygon((csVector3 const *)arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_NewPointerObj((new uint8(static_cast< const uint8& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_ClipPolygon(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 7); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csPlane3_ClipPolygon__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csPlane3_ClipPolygon__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_size_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_csVertexStatus, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_csPlane3_ClipPolygon__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_size_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_csVertexStatus, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_csPlane3_ClipPolygon__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPlane3_ClipPolygon'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ClipPolygon(csPlane3 *,csVector3 *&,int &,bool)\n"
    "    ClipPolygon(csPlane3 *,csVector3 *&,int &)\n"
    "    ClipPolygon(csPlane3 const *,csVector3 const *,size_t,csVector3 *,size_t &,csVertexStatus *,bool)\n"
    "    ClipPolygon(csPlane3 const *,csVector3 const *,size_t,csVector3 *,size_t &,csVertexStatus *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3_Description" "', argument " "1"" of type '" "csPlane3 const *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  result = ((csPlane3 const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3___imul__" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3___imul__" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  {
    csPlane3 &_result_ref = csPlane3_operator_Sm__Se_(arg1,(csTransform const &)*arg2);
    result = (csPlane3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3___idiv__" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3___idiv__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3___idiv__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  {
    csPlane3 &_result_ref = csPlane3_operator_Sd__Se_(arg1,(csReversibleTransform const &)*arg2);
    result = (csPlane3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPlane3___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPlane3___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPlane3___div__" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPlane3___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPlane3___div__" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  result = csPlane3_operator_Sd_(arg1,(csReversibleTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPlane3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPlane3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPlane3" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPlane3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPlane3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csMath2_WhichSide2D__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_WhichSide2D",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_WhichSide2D" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_WhichSide2D" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_WhichSide2D" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_WhichSide2D" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath2_WhichSide2D" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_WhichSide2D" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (int)csMath2::WhichSide2D((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_WhichSide2D__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csSegment2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_WhichSide2D",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_WhichSide2D" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_WhichSide2D" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_WhichSide2D" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_WhichSide2D" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  arg2 = reinterpret_cast< csSegment2 * >(argp2);
  result = (int)csMath2::WhichSide2D((csVector2 const &)*arg1,(csSegment2 const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_WhichSide2D(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csSegment2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMath2_WhichSide2D__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csMath2_WhichSide2D__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csMath2_WhichSide2D'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    WhichSide2D(csVector2 const &,csVector2 const &,csVector2 const &)\n"
    "    csMath2::WhichSide2D(csVector2 const &,csSegment2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_InPoly2D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  int arg3 ;
  csBox2 *arg4 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_InPoly2D",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_InPoly2D" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_InPoly2D" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_InPoly2D" "', argument " "2"" of type '" "csVector2 *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csMath2_InPoly2D" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMath2_InPoly2D" "', argument " "4"" of type '" "csBox2 *""'"); 
  }
  arg4 = reinterpret_cast< csBox2 * >(argp4);
  result = (int)csMath2::InPoly2D((csVector2 const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_Area2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_Area2",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_Area2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Area2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_Area2" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Area2" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath2_Area2" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Area2" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (float)csMath2::Area2((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_Right(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_Right",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_Right" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Right" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_Right" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Right" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath2_Right" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Right" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (float)csMath2::Right((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_Left(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_Left",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_Left" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Left" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_Left" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Left" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath2_Left" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Left" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (float)csMath2::Left((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_Visible(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csPlane2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_Visible",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_Visible" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Visible" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_Visible" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_Visible" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  result = (bool)csMath2::Visible((csVector2 const &)*arg1,(csPlane2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_PlanesEqual(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = 0 ;
  csPlane2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_PlanesEqual",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_PlanesEqual" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_PlanesEqual" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_PlanesEqual" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_PlanesEqual" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  result = (bool)csMath2::PlanesEqual((csPlane2 const &)*arg1,(csPlane2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath2_PlanesClose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = 0 ;
  csPlane2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath2_PlanesClose",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath2_PlanesClose" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_PlanesClose" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath2_PlanesClose" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath2_PlanesClose" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  result = (bool)csMath2::PlanesClose((csPlane2 const &)*arg1,(csPlane2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMath2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMath2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMath2",0,0)) SWIG_fail;
  result = (csMath2 *)new csMath2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMath2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csMath2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMath2 *arg1 = (csMath2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csMath2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMath2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csMath2" "', argument " "1"" of type '" "csMath2 *""'"); 
  }
  arg1 = reinterpret_cast< csMath2 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csMath2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csMath2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csIntersect2_PlanePolygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = 0 ;
  csPoly2D *arg2 = (csPoly2D *) 0 ;
  csSegment2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_PlanePolygon",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_PlanePolygon" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_PlanePolygon" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_PlanePolygon" "', argument " "2"" of type '" "csPoly2D *""'"); 
  }
  arg2 = reinterpret_cast< csPoly2D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csSegment2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_PlanePolygon" "', argument " "3"" of type '" "csSegment2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_PlanePolygon" "', argument " "3"" of type '" "csSegment2 &""'"); 
  }
  arg3 = reinterpret_cast< csSegment2 * >(argp3);
  result = (bool)csIntersect2::PlanePolygon((csPlane2 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentSegment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = 0 ;
  csSegment2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float temp4 ;
  int res4 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  arg4 = &temp4;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_SegmentSegment",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_SegmentSegment" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentSegment" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_SegmentSegment" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentSegment" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  arg2 = reinterpret_cast< csSegment2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_SegmentSegment" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentSegment" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (bool)csIntersect2::SegmentSegment((csSegment2 const &)*arg1,(csSegment2 const &)*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res4)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg4)));
  } else {
    int new_flags = SWIG_IsNewObj(res4) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = 0 ;
  csSegment2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float temp4 ;
  int res4 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  arg4 = &temp4;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_SegmentLine",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_SegmentLine" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentLine" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_SegmentLine" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentLine" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  arg2 = reinterpret_cast< csSegment2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_SegmentLine" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentLine" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (bool)csIntersect2::SegmentLine((csSegment2 const &)*arg1,(csSegment2 const &)*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res4)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg4)));
  } else {
    int new_flags = SWIG_IsNewObj(res4) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_LineLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = 0 ;
  csSegment2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_LineLine",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_LineLine" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_LineLine" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_LineLine" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_LineLine" "', argument " "2"" of type '" "csSegment2 const &""'"); 
  }
  arg2 = reinterpret_cast< csSegment2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_LineLine" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_LineLine" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (bool)csIntersect2::LineLine((csSegment2 const &)*arg1,(csSegment2 const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentPlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  csPlane2 *arg3 = 0 ;
  csVector2 *arg4 = 0 ;
  float *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float temp5 ;
  int res5 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  arg5 = &temp5;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_SegmentPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_SegmentPlane" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlane" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_SegmentPlane" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlane" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_SegmentPlane" "', argument " "3"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlane" "', argument " "3"" of type '" "csPlane2 const &""'"); 
  }
  arg3 = reinterpret_cast< csPlane2 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect2_SegmentPlane" "', argument " "4"" of type '" "csVector2 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlane" "', argument " "4"" of type '" "csVector2 &""'"); 
  }
  arg4 = reinterpret_cast< csVector2 * >(argp4);
  result = (bool)csIntersect2::SegmentPlane((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csPlane2 const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res5)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg5)));
  } else {
    int new_flags = SWIG_IsNewObj(res5) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg5), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentPlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = 0 ;
  csPlane2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float temp4 ;
  int res4 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  arg4 = &temp4;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_SegmentPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_SegmentPlane" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlane" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_SegmentPlane" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlane" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_SegmentPlane" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlane" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (bool)csIntersect2::SegmentPlane((csSegment2 const &)*arg1,(csPlane2 const &)*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res4)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg4)));
  } else {
    int new_flags = SWIG_IsNewObj(res4) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentPlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect2_SegmentPlane__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csPlane2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect2_SegmentPlane__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect2_SegmentPlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentPlane(csVector2 const &,csVector2 const &,csPlane2 const &,csVector2 &,float &)\n"
    "    csIntersect2::SegmentPlane(csSegment2 const &,csPlane2 const &,csVector2 &,float &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentPlaneNoTest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  csPlane2 *arg3 = 0 ;
  csVector2 *arg4 = 0 ;
  float *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float temp5 ;
  int res5 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  arg5 = &temp5;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_SegmentPlaneNoTest",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "3"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "3"" of type '" "csPlane2 const &""'"); 
  }
  arg3 = reinterpret_cast< csPlane2 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "4"" of type '" "csVector2 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "4"" of type '" "csVector2 &""'"); 
  }
  arg4 = reinterpret_cast< csVector2 * >(argp4);
  csIntersect2::SegmentPlaneNoTest((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csPlane2 const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsTmpObj(res5)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg5)));
  } else {
    int new_flags = SWIG_IsNewObj(res5) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg5), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentPlaneNoTest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = 0 ;
  csPlane2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float temp4 ;
  int res4 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  arg4 = &temp4;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_SegmentPlaneNoTest",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "1"" of type '" "csSegment2 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentPlaneNoTest" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  csIntersect2::SegmentPlaneNoTest((csSegment2 const &)*arg1,(csPlane2 const &)*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsTmpObj(res4)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg4)));
  } else {
    int new_flags = SWIG_IsNewObj(res4) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentPlaneNoTest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect2_SegmentPlaneNoTest__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csPlane2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect2_SegmentPlaneNoTest__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect2_SegmentPlaneNoTest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentPlaneNoTest(csVector2 const &,csVector2 const &,csPlane2 const &,csVector2 &,float &)\n"
    "    csIntersect2::SegmentPlaneNoTest(csSegment2 const &,csPlane2 const &,csVector2 &,float &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_PlanePlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane2 *arg1 = 0 ;
  csPlane2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_PlanePlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_PlanePlane" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_PlanePlane" "', argument " "1"" of type '" "csPlane2 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_PlanePlane" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_PlanePlane" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect2_PlanePlane" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_PlanePlane" "', argument " "3"" of type '" "csVector2 &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (bool)csIntersect2::PlanePlane((csPlane2 const &)*arg1,(csPlane2 const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect2_SegmentBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect2_SegmentBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment2,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect2_SegmentBox" "', argument " "1"" of type '" "csSegment2 &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentBox" "', argument " "1"" of type '" "csSegment2 &""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect2_SegmentBox" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect2_SegmentBox" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (bool)csIntersect2::SegmentBox(*arg1,(csBox2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntersect2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csIntersect2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntersect2",0,0)) SWIG_fail;
  result = (csIntersect2 *)new csIntersect2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csIntersect2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csIntersect2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csIntersect2 *arg1 = (csIntersect2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csIntersect2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csIntersect2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csIntersect2" "', argument " "1"" of type '" "csIntersect2 *""'"); 
  }
  arg1 = reinterpret_cast< csIntersect2 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csIntersect2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csIntersect2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csPoly2D__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csPoly2D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPoly2D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPoly2D" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csPoly2D *)new csPoly2D(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly2D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPoly2D__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPoly2D",0,0)) SWIG_fail;
  result = (csPoly2D *)new csPoly2D();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly2D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPoly2D__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPoly2D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPoly2D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPoly2D,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPoly2D" "', argument " "1"" of type '" "csPoly2D const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPoly2D" "', argument " "1"" of type '" "csPoly2D const &""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  result = (csPoly2D *)new csPoly2D((csPoly2D const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly2D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPoly2D(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csPoly2D__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csPoly2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csPoly2D__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csPoly2D__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csPoly2D'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csPoly2D(size_t)\n"
    "    csPoly2D()\n"
    "    csPoly2D(csPoly2D const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPoly2D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPoly2D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPoly2D" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  csPoly2D *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPoly2D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_assign" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPoly2D,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_assign" "', argument " "2"" of type '" "csPoly2D const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_assign" "', argument " "2"" of type '" "csPoly2D const &""'"); 
  }
  arg2 = reinterpret_cast< csPoly2D * >(argp2);
  {
    csPoly2D &_result_ref = (arg1)->operator =((csPoly2D const &)*arg2);
    result = (csPoly2D *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly2D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_MakeEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_MakeEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_MakeEmpty" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  (arg1)->MakeEmpty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_GetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_GetVertexCount" "', argument " "1"" of type '" "csPoly2D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  result = ((csPoly2D const *)arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_GetVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_GetVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_GetVertices" "', argument " "1"" of type '" "csPoly2D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  result = (csVector2 *)((csPoly2D const *)arg1)->GetVertices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_GetVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_GetVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_GetVertex" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly2D_GetVertex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (csVector2 *)(arg1)->GetVertex(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_GetFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_GetFirst",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_GetFirst" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  result = (csVector2 *)(arg1)->GetFirst();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_GetLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_GetLast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_GetLast" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  result = (csVector2 *)(arg1)->GetLast();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_In",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_In" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_In" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_In" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)(arg1)->In((csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = (csVector2 *) 0 ;
  size_t arg2 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_In",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_In" "', argument " "1"" of type '" "csVector2 *""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly2D_In" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly2D_In" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_In" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  result = (bool)csPoly2D::In(arg1,arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPoly2D_In__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csPoly2D_In__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly2D_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    In(csPoly2D *,csVector2 const &)\n"
    "    csPoly2D::In(csVector2 *,size_t,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_MakeRoom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_MakeRoom",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_MakeRoom" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly2D_MakeRoom" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->MakeRoom(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_SetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_SetVertexCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_SetVertexCount" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly2D_SetVertexCount" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetVertexCount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_AddVertex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_AddVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_AddVertex" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_AddVertex" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_AddVertex" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (arg1)->AddVertex((csVector2 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_AddVertex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_AddVertex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_AddVertex" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly2D_AddVertex" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly2D_AddVertex" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (arg1)->AddVertex(arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_AddVertex(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPoly2D_AddVertex__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csPoly2D_AddVertex__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly2D_AddVertex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddVertex(csPoly2D *,csVector2 const &)\n"
    "    AddVertex(csPoly2D *,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_SetVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_SetVertices",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_SetVertices" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_SetVertices" "', argument " "2"" of type '" "csVector2 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly2D_SetVertices" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->SetVertices((csVector2 const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_ClipAgainst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  iClipper2D *arg2 = (iClipper2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_ClipAgainst",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_ClipAgainst" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iClipper2D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_ClipAgainst" "', argument " "2"" of type '" "iClipper2D *""'"); 
  }
  arg2 = reinterpret_cast< iClipper2D * >(argp2);
  result = (bool)(arg1)->ClipAgainst(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_Intersect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  csPlane2 *arg2 = 0 ;
  csPoly2D *arg3 = 0 ;
  csPoly2D *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_Intersect",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_Intersect" "', argument " "1"" of type '" "csPoly2D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_Intersect" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_Intersect" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPoly2D,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly2D_Intersect" "', argument " "3"" of type '" "csPoly2D &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_Intersect" "', argument " "3"" of type '" "csPoly2D &""'"); 
  }
  arg3 = reinterpret_cast< csPoly2D * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csPoly2D,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPoly2D_Intersect" "', argument " "4"" of type '" "csPoly2D &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_Intersect" "', argument " "4"" of type '" "csPoly2D &""'"); 
  }
  arg4 = reinterpret_cast< csPoly2D * >(argp4);
  ((csPoly2D const *)arg1)->Intersect((csPlane2 const &)*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_ClipPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  csPlane2 *arg2 = 0 ;
  csPoly2D *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_ClipPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_ClipPlane" "', argument " "1"" of type '" "csPoly2D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_ClipPlane" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_ClipPlane" "', argument " "2"" of type '" "csPlane2 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPoly2D,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly2D_ClipPlane" "', argument " "3"" of type '" "csPoly2D &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_ClipPlane" "', argument " "3"" of type '" "csPoly2D &""'"); 
  }
  arg3 = reinterpret_cast< csPoly2D * >(argp3);
  ((csPoly2D const *)arg1)->ClipPlane((csPlane2 const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_ExtendConvex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  csPoly2D *arg2 = 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_ExtendConvex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_ExtendConvex" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPoly2D,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly2D_ExtendConvex" "', argument " "2"" of type '" "csPoly2D const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_ExtendConvex" "', argument " "2"" of type '" "csPoly2D const &""'"); 
  }
  arg2 = reinterpret_cast< csPoly2D * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly2D_ExtendConvex" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->ExtendConvex((csPoly2D const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_GetSignedArea(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_GetSignedArea",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_GetSignedArea" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  result = (float)(arg1)->GetSignedArea();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D_Random(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  size_t arg2 ;
  csBox2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D_Random",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D_Random" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly2D_Random" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly2D_Random" "', argument " "3"" of type '" "csBox2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly2D_Random" "', argument " "3"" of type '" "csBox2 const &""'"); 
  }
  arg3 = reinterpret_cast< csBox2 * >(argp3);
  (arg1)->Random(arg2,(csBox2 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2D___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2D *arg1 = (csPoly2D *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2D___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2D___getitem__" "', argument " "1"" of type '" "csPoly2D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly2D___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    csVector2 &_result_ref = csPoly2D___getitem__(arg1,arg2);
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPoly2D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPoly2D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_csPoly2DFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2DFactory *arg1 = (csPoly2DFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPoly2DFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2DFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPoly2DFactory" "', argument " "1"" of type '" "csPoly2DFactory *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2DFactory * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly2DFactory_Create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2DFactory *arg1 = (csPoly2DFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPoly2D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly2DFactory_Create",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly2DFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly2DFactory_Create" "', argument " "1"" of type '" "csPoly2DFactory *""'"); 
  }
  arg1 = reinterpret_cast< csPoly2DFactory * >(argp1);
  result = (csPoly2D *)(arg1)->Create();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly2D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPoly2DFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly2DFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPoly2DFactory",0,0)) SWIG_fail;
  result = (csPoly2DFactory *)new csPoly2DFactory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly2DFactory, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPoly2DFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPoly2DFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csMath3_WhichSide3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_WhichSide3D",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_WhichSide3D" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_WhichSide3D" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_WhichSide3D" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_WhichSide3D" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_WhichSide3D" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_WhichSide3D" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (int)csMath3::WhichSide3D((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_Visible__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_Visible",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_Visible" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Visible" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_Visible" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Visible" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_Visible" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Visible" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMath3_Visible" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Visible" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (bool)csMath3::Visible((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_Visible__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_Visible",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_Visible" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Visible" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_Visible" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Visible" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (bool)csMath3::Visible((csVector3 const &)*arg1,(csPlane3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_Visible(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csMath3_Visible__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csMath3_Visible__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csMath3_Visible'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Visible(csVector3 const &,csVector3 const &,csVector3 const &,csVector3 const &)\n"
    "    csMath3::Visible(csVector3 const &,csPlane3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_Between(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_Between",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_Between" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Between" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_Between" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Between" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_Between" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Between" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csMath3_Between" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csMath3_Between" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  csMath3::Between((csVector3 const &)*arg1,(csVector3 const &)*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_SetMinMax(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_SetMinMax",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_SetMinMax" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_SetMinMax" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_SetMinMax" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_SetMinMax" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_SetMinMax" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_SetMinMax" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  csMath3::SetMinMax((csVector3 const &)*arg1,*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_DoubleArea3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_DoubleArea3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_DoubleArea3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_DoubleArea3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_DoubleArea3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_DoubleArea3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_DoubleArea3" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_DoubleArea3" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csMath3::DoubleArea3((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_Direction3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_Direction3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_Direction3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Direction3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_Direction3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Direction3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_Direction3" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_Direction3" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csMath3::Direction3((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_CalcNormal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_CalcNormal",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_CalcNormal" "', argument " "1"" of type '" "csVector3 &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcNormal" "', argument " "1"" of type '" "csVector3 &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_CalcNormal" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcNormal" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_CalcNormal" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcNormal" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMath3_CalcNormal" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcNormal" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  csMath3::CalcNormal(*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_CalcNormal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_CalcNormal",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_CalcNormal" "', argument " "1"" of type '" "csVector3 &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcNormal" "', argument " "1"" of type '" "csVector3 &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_CalcNormal" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcNormal" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_CalcNormal" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcNormal" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  csMath3::CalcNormal(*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_CalcNormal(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csMath3_CalcNormal__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csMath3_CalcNormal__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csMath3_CalcNormal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CalcNormal(csVector3 &,csVector3 const &,csVector3 const &,csVector3 const &)\n"
    "    csMath3::CalcNormal(csVector3 &,csVector3 const &,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_CalcPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  float *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_CalcPlane",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_CalcPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_CalcPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_CalcPlane" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcPlane" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csMath3_CalcPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csMath3_CalcPlane" "', argument " "5"" of type '" "float &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_CalcPlane" "', argument " "5"" of type '" "float &""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  csMath3::CalcPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_PlanesEqual(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_PlanesEqual",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_PlanesEqual" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_PlanesEqual" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_PlanesEqual" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_PlanesEqual" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (bool)csMath3::PlanesEqual((csPlane3 const &)*arg1,(csPlane3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_PlanesClose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_PlanesClose",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_PlanesClose" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_PlanesClose" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_PlanesClose" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_PlanesClose" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (bool)csMath3::PlanesClose((csPlane3 const &)*arg1,(csPlane3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_OuterPlanes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csBox3 *arg2 = 0 ;
  csPlane3 *arg3 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_OuterPlanes",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_OuterPlanes" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_OuterPlanes" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_OuterPlanes" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_OuterPlanes" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_OuterPlanes" "', argument " "3"" of type '" "csPlane3 *""'"); 
  }
  arg3 = reinterpret_cast< csPlane3 * >(argp3);
  result = (int)csMath3::OuterPlanes((csBox3 const &)*arg1,(csBox3 const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_FindObserverSides(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csBox3 *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_FindObserverSides",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csMath3_FindObserverSides" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_FindObserverSides" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csMath3_FindObserverSides" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_FindObserverSides" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_FindObserverSides" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  result = (int)csMath3::FindObserverSides((csBox3 const &)*arg1,(csBox3 const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csMath3_SpherePosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  csVector3 *arg3 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csMath3_SpherePosition",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csMath3_SpherePosition" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csMath3_SpherePosition" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csMath3_SpherePosition" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csMath3_SpherePosition" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  csMath3::SpherePosition(arg1,arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csMath3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMath3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csMath3",0,0)) SWIG_fail;
  result = (csMath3 *)new csMath3();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMath3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csMath3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csMath3 *arg1 = (csMath3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csMath3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csMath3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csMath3" "', argument " "1"" of type '" "csMath3 *""'"); 
  }
  arg1 = reinterpret_cast< csMath3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csMath3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csMath3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csSquaredDist_PointPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSquaredDist_PointPoint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSquaredDist_PointPoint" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPoint" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSquaredDist_PointPoint" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPoint" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (float)csSquaredDist::PointPoint((csVector3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSquaredDist_PointLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSquaredDist_PointLine",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSquaredDist_PointLine" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointLine" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSquaredDist_PointLine" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointLine" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csSquaredDist_PointLine" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointLine" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csSquaredDist::PointLine((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSquaredDist_PointPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSquaredDist_PointPlane",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSquaredDist_PointPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSquaredDist_PointPlane" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPlane" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (float)csSquaredDist::PointPlane((csVector3 const &)*arg1,(csPlane3 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSquaredDist_PointPoly__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  int arg3 ;
  csPlane3 *arg4 = 0 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSquaredDist_PointPoly",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSquaredDist_PointPoly" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPoly" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSquaredDist_PointPoly" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csSquaredDist_PointPoly" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csSquaredDist_PointPoly" "', argument " "4"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPoly" "', argument " "4"" of type '" "csPlane3 const &""'"); 
  }
  arg4 = reinterpret_cast< csPlane3 * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csSquaredDist_PointPoly" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = (float)csSquaredDist::PointPoly((csVector3 const &)*arg1,arg2,arg3,(csPlane3 const &)*arg4,arg5);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSquaredDist_PointPoly__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  int arg3 ;
  csPlane3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSquaredDist_PointPoly",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSquaredDist_PointPoly" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPoly" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSquaredDist_PointPoly" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csSquaredDist_PointPoly" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csSquaredDist_PointPoly" "', argument " "4"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSquaredDist_PointPoly" "', argument " "4"" of type '" "csPlane3 const &""'"); 
  }
  arg4 = reinterpret_cast< csPlane3 * >(argp4);
  result = (float)csSquaredDist::PointPoly((csVector3 const &)*arg1,arg2,arg3,(csPlane3 const &)*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSquaredDist_PointPoly(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csPlane3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csSquaredDist_PointPoly__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csPlane3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csSquaredDist_PointPoly__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csSquaredDist_PointPoly'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PointPoly(csVector3 const &,csVector3 *,int,csPlane3 const &,float)\n"
    "    csSquaredDist::PointPoly(csVector3 const &,csVector3 *,int,csPlane3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSquaredDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSquaredDist *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSquaredDist",0,0)) SWIG_fail;
  result = (csSquaredDist *)new csSquaredDist();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSquaredDist, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csSquaredDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSquaredDist *arg1 = (csSquaredDist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csSquaredDist",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSquaredDist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csSquaredDist" "', argument " "1"" of type '" "csSquaredDist *""'"); 
  }
  arg1 = reinterpret_cast< csSquaredDist * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csSquaredDist_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csSquaredDist, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csIntersect3_PlanePolygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  csPoly3D *arg2 = (csPoly3D *) 0 ;
  csSegment3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_PlanePolygon",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_PlanePolygon" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlanePolygon" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_PlanePolygon" "', argument " "2"" of type '" "csPoly3D *""'"); 
  }
  arg2 = reinterpret_cast< csPoly3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csSegment3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_PlanePolygon" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlanePolygon" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  arg3 = reinterpret_cast< csSegment3 * >(argp3);
  result = (bool)csIntersect3::PlanePolygon((csPlane3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentFrustum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = (csPlane3 *) 0 ;
  int arg2 ;
  csSegment3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentFrustum",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentFrustum" "', argument " "1"" of type '" "csPlane3 *""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_SegmentFrustum" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csSegment3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentFrustum" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentFrustum" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  arg3 = reinterpret_cast< csSegment3 * >(argp3);
  result = (int)csIntersect3::SegmentFrustum(arg1,arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentTriangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  csVector3 *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentTriangle",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentTriangle" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentTriangle" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentTriangle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentTriangle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentTriangle" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentTriangle" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentTriangle" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentTriangle" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csIntersect3_SegmentTriangle" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentTriangle" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  result = (bool)csIntersect3::SegmentTriangle((csSegment3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentPolygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  csPoly3D *arg2 = 0 ;
  csPlane3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentPolygon",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentPolygon" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPolygon" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPoly3D,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentPolygon" "', argument " "2"" of type '" "csPoly3D const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPolygon" "', argument " "2"" of type '" "csPoly3D const &""'"); 
  }
  arg2 = reinterpret_cast< csPoly3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentPolygon" "', argument " "3"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPolygon" "', argument " "3"" of type '" "csPlane3 const &""'"); 
  }
  arg3 = reinterpret_cast< csPlane3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentPolygon" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPolygon" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (bool)csIntersect3::SegmentPolygon((csSegment3 const &)*arg1,(csPoly3D const &)*arg2,(csPlane3 const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentPlanes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csPlane3 *arg3 = (csPlane3 *) 0 ;
  int arg4 ;
  csVector3 *arg5 = 0 ;
  float *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float temp6 ;
  int res6 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  arg6 = &temp6;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentPlanes",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentPlanes" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlanes" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentPlanes" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlanes" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentPlanes" "', argument " "3"" of type '" "csPlane3 const *""'"); 
  }
  arg3 = reinterpret_cast< csPlane3 * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csIntersect3_SegmentPlanes" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csIntersect3_SegmentPlanes" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlanes" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  result = (bool)csIntersect3::SegmentPlanes((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csPlane3 const *)arg3,arg4,*arg5,*arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res6)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg6)));
  } else {
    int new_flags = SWIG_IsNewObj(res6) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg6), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentPlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  csVector3 *arg5 = 0 ;
  float *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float temp6 ;
  int res6 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  arg6 = &temp6;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentPlane",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentPlane" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentPlane" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csIntersect3_SegmentPlane" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  result = (bool)csIntersect3::SegmentPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,*arg5,*arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res6)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg6)));
  } else {
    int new_flags = SWIG_IsNewObj(res6) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg6), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentPlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  csSegment3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentPlane",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSegment3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentPlane" "', argument " "2"" of type '" "csSegment3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "2"" of type '" "csSegment3 &""'"); 
  }
  arg2 = reinterpret_cast< csSegment3 * >(argp2);
  result = (bool)csIntersect3::SegmentPlane((csPlane3 const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentPlane__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csPlane3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  float *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float temp5 ;
  int res5 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  arg5 = &temp5;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentPlane" "', argument " "3"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "3"" of type '" "csPlane3 const &""'"); 
  }
  arg3 = reinterpret_cast< csPlane3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (bool)csIntersect3::SegmentPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csPlane3 const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res5)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg5)));
  } else {
    int new_flags = SWIG_IsNewObj(res5) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg5), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentPlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csSegment3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csIntersect3_SegmentPlane__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csPlane3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_SegmentPlane__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_csVector3, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_csIntersect3_SegmentPlane__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_SegmentPlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentPlane(csVector3 const &,csVector3 const &,csVector3 const &,csVector3 const &,csVector3 &,float &)\n"
    "    SegmentPlane(csPlane3 const &,csSegment3 &)\n"
    "    csIntersect3::SegmentPlane(csVector3 const &,csVector3 const &,csPlane3 const &,csVector3 &,float &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_ThreePlanes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  csPlane3 *arg2 = 0 ;
  csPlane3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_ThreePlanes",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_ThreePlanes" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ThreePlanes" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_ThreePlanes" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ThreePlanes" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_ThreePlanes" "', argument " "3"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ThreePlanes" "', argument " "3"" of type '" "csPlane3 const &""'"); 
  }
  arg3 = reinterpret_cast< csPlane3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_ThreePlanes" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ThreePlanes" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (bool)csIntersect3::ThreePlanes((csPlane3 const &)*arg1,(csPlane3 const &)*arg2,(csPlane3 const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_PlaneXPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  float arg2 ;
  csPlane2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_PlaneXPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_PlaneXPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneXPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_PlaneXPlane" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_PlaneXPlane" "', argument " "3"" of type '" "csPlane2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneXPlane" "', argument " "3"" of type '" "csPlane2 &""'"); 
  }
  arg3 = reinterpret_cast< csPlane2 * >(argp3);
  result = (bool)csIntersect3::PlaneXPlane((csPlane3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_PlaneYPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  float arg2 ;
  csPlane2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_PlaneYPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_PlaneYPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneYPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_PlaneYPlane" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_PlaneYPlane" "', argument " "3"" of type '" "csPlane2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneYPlane" "', argument " "3"" of type '" "csPlane2 &""'"); 
  }
  arg3 = reinterpret_cast< csPlane2 * >(argp3);
  result = (bool)csIntersect3::PlaneYPlane((csPlane3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_PlaneZPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  float arg2 ;
  csPlane2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_PlaneZPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_PlaneZPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneZPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_PlaneZPlane" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPlane2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_PlaneZPlane" "', argument " "3"" of type '" "csPlane2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneZPlane" "', argument " "3"" of type '" "csPlane2 &""'"); 
  }
  arg3 = reinterpret_cast< csPlane2 * >(argp3);
  result = (bool)csIntersect3::PlaneZPlane((csPlane3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_PlaneAxisPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  int arg2 ;
  float arg3 ;
  csPlane2 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_PlaneAxisPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_PlaneAxisPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneAxisPlane" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_PlaneAxisPlane" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_PlaneAxisPlane" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csPlane2,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_PlaneAxisPlane" "', argument " "4"" of type '" "csPlane2 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_PlaneAxisPlane" "', argument " "4"" of type '" "csPlane2 &""'"); 
  }
  arg4 = reinterpret_cast< csPlane2 * >(argp4);
  result = (bool)csIntersect3::PlaneAxisPlane((csPlane3 const &)*arg1,arg2,arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentZ0Plane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentZ0Plane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csIntersect3::SegmentZ0Plane((csVector3 const &)*arg1,(csVector3 const &)*arg2,*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentZ0Plane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentZ0Plane",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZ0Plane" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (float)csIntersect3::SegmentZ0Plane((csSegment3 const &)*arg1,*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentZ0Plane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csIntersect3_SegmentZ0Plane__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect3_SegmentZ0Plane__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_SegmentZ0Plane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentZ0Plane(csVector3 const &,csVector3 const &,csVector3 &)\n"
    "    csIntersect3::SegmentZ0Plane(csSegment3 const &,csVector3 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentXPlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentXPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentXPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentXPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_SegmentXPlane" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentXPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (float)csIntersect3::SegmentXPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,arg3,*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentXPlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  float arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentXPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentXPlane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXPlane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_SegmentXPlane" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentXPlane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXPlane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csIntersect3::SegmentXPlane((csSegment3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentXPlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect3_SegmentXPlane__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_SegmentXPlane__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_SegmentXPlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentXPlane(csVector3 const &,csVector3 const &,float,csVector3 &)\n"
    "    csIntersect3::SegmentXPlane(csSegment3 const &,float,csVector3 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentYPlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentYPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentYPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentYPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_SegmentYPlane" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentYPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (float)csIntersect3::SegmentYPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,arg3,*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentYPlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  float arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentYPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentYPlane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYPlane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_SegmentYPlane" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentYPlane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYPlane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csIntersect3::SegmentYPlane((csSegment3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentYPlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect3_SegmentYPlane__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_SegmentYPlane__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_SegmentYPlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentYPlane(csVector3 const &,csVector3 const &,float,csVector3 &)\n"
    "    csIntersect3::SegmentYPlane(csSegment3 const &,float,csVector3 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentZPlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentZPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentZPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentZPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_SegmentZPlane" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentZPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZPlane" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (float)csIntersect3::SegmentZPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,arg3,*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentZPlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  float arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentZPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentZPlane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZPlane" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_SegmentZPlane" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentZPlane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentZPlane" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csIntersect3::SegmentZPlane((csSegment3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentZPlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect3_SegmentZPlane__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_SegmentZPlane__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_SegmentZPlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentZPlane(csVector3 const &,csVector3 const &,float,csVector3 &)\n"
    "    csIntersect3::SegmentZPlane(csSegment3 const &,float,csVector3 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentAxisPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  int arg3 ;
  float arg4 ;
  csVector3 *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentAxisPlane",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentAxisPlane" "', argument " "5"" of type '" "csVector3 &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  result = (float)csIntersect3::SegmentAxisPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,arg3,arg4,*arg5);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentXFrustum__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentXFrustum",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentXFrustum" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXFrustum" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentXFrustum" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXFrustum" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_SegmentXFrustum" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentXFrustum" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXFrustum" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (float)csIntersect3::SegmentXFrustum((csVector3 const &)*arg1,(csVector3 const &)*arg2,arg3,*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentXFrustum__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  float arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentXFrustum",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentXFrustum" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXFrustum" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_SegmentXFrustum" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentXFrustum" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentXFrustum" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csIntersect3::SegmentXFrustum((csSegment3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentXFrustum(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect3_SegmentXFrustum__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_SegmentXFrustum__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_SegmentXFrustum'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentXFrustum(csVector3 const &,csVector3 const &,float,csVector3 &)\n"
    "    csIntersect3::SegmentXFrustum(csSegment3 const &,float,csVector3 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentYFrustum__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentYFrustum",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentYFrustum" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYFrustum" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_SegmentYFrustum" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYFrustum" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_SegmentYFrustum" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_SegmentYFrustum" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYFrustum" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (float)csIntersect3::SegmentYFrustum((csVector3 const &)*arg1,(csVector3 const &)*arg2,arg3,*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentYFrustum__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  float arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_SegmentYFrustum",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_SegmentYFrustum" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYFrustum" "', argument " "1"" of type '" "csSegment3 const &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntersect3_SegmentYFrustum" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_SegmentYFrustum" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_SegmentYFrustum" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (float)csIntersect3::SegmentYFrustum((csSegment3 const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_SegmentYFrustum(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect3_SegmentYFrustum__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csVector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_SegmentYFrustum__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_SegmentYFrustum'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SegmentYFrustum(csVector3 const &,csVector3 const &,float,csVector3 &)\n"
    "    csIntersect3::SegmentYFrustum(csSegment3 const &,float,csVector3 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxSegment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csSegment3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  float *arg4 = (float *) 0 ;
  bool arg5 = (bool) false ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float temp4 ;
  int res4 = SWIG_TMPOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  arg4 = &temp4;
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxSegment",3,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxSegment" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxSegment" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSegment3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxSegment" "', argument " "2"" of type '" "csSegment3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxSegment" "', argument " "2"" of type '" "csSegment3 const &""'"); 
  }
  arg2 = reinterpret_cast< csSegment3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_BoxSegment" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxSegment" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  if (obj3) {
    ecode5 = SWIG_AsVal_bool(obj3, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csIntersect3_BoxSegment" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
  }
  result = (int)csIntersect3::BoxSegment((csBox3 const &)*arg1,(csSegment3 const &)*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsTmpObj(res4)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_float((*arg4)));
  } else {
    int new_flags = SWIG_IsNewObj(res4) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_float, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_ClipSegmentBox__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  csBox3 *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_ClipSegmentBox",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_ClipSegmentBox" "', argument " "1"" of type '" "csSegment3 &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ClipSegmentBox" "', argument " "1"" of type '" "csSegment3 &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_ClipSegmentBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ClipSegmentBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_ClipSegmentBox" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)csIntersect3::ClipSegmentBox(*arg1,(csBox3 const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_ClipSegmentBox__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_ClipSegmentBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csSegment3,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_ClipSegmentBox" "', argument " "1"" of type '" "csSegment3 &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ClipSegmentBox" "', argument " "1"" of type '" "csSegment3 &""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_ClipSegmentBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_ClipSegmentBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)csIntersect3::ClipSegmentBox(*arg1,(csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_ClipSegmentBox(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csIntersect3_ClipSegmentBox__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csSegment3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csIntersect3_ClipSegmentBox__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_ClipSegmentBox'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ClipSegmentBox(csSegment3 &,csBox3 const &,bool)\n"
    "    csIntersect3::ClipSegmentBox(csSegment3 &,csBox3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxFrustum__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csPlane3 *arg2 = (csPlane3 *) 0 ;
  uint32 arg3 ;
  uint32 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxFrustum",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxFrustum" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxFrustum" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxFrustum" "', argument " "2"" of type '" "csPlane3 const *""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_BoxFrustum" "', argument " "3"" of type '" "uint32""'");
  } 
  arg3 = static_cast< uint32 >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_uint32_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_BoxFrustum" "', argument " "4"" of type '" "uint32 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxFrustum" "', argument " "4"" of type '" "uint32 &""'"); 
  }
  arg4 = reinterpret_cast< uint32 * >(argp4);
  result = (bool)csIntersect3::BoxFrustum((csBox3 const &)*arg1,(csPlane3 const *)arg2,arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxFrustum__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csFrustum *arg2 = (csFrustum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxFrustum",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxFrustum" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxFrustum" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csFrustum, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxFrustum" "', argument " "2"" of type '" "csFrustum const *""'"); 
  }
  arg2 = reinterpret_cast< csFrustum * >(argp2);
  result = (bool)csIntersect3::BoxFrustum((csBox3 const &)*arg1,(csFrustum const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxFrustum(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csFrustum, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csIntersect3_BoxFrustum__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_uint32_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_BoxFrustum__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_BoxFrustum'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    BoxFrustum(csBox3 const &,csPlane3 const *,uint32,uint32 &)\n"
    "    csIntersect3::BoxFrustum(csBox3 const &,csFrustum const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxSphere(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxSphere",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxSphere" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxSphere" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxSphere" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxSphere" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_BoxSphere" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)csIntersect3::BoxSphere((csBox3 const &)*arg1,(csVector3 const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxPlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxPlane",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxPlane" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxPlane" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxPlane" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxPlane" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (bool)csIntersect3::BoxPlane((csBox3 const &)*arg1,(csPlane3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxPlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxPlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxPlane" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxPlane" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_BoxPlane" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxPlane" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (bool)csIntersect3::BoxPlane((csBox3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxPlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csIntersect3_BoxPlane__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csIntersect3_BoxPlane__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_BoxPlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    BoxPlane(csBox3 const &,csPlane3 const &)\n"
    "    csIntersect3::BoxPlane(csBox3 const &,csVector3 const &,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxTriangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxTriangle",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxTriangle" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxTriangle" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxTriangle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxTriangle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_BoxTriangle" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxTriangle" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_BoxTriangle" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxTriangle" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  result = (bool)csIntersect3::BoxTriangle((csBox3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_BoxBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_BoxBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_BoxBox" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxBox" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_BoxBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_BoxBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)csIntersect3::BoxBox((csBox3 const &)*arg1,(csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_FrustumFrustum__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFrustum *arg1 = 0 ;
  csFrustum *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< csFrustum > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_FrustumFrustum",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csFrustum,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_FrustumFrustum" "', argument " "1"" of type '" "csFrustum const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_FrustumFrustum" "', argument " "1"" of type '" "csFrustum const &""'"); 
  }
  arg1 = reinterpret_cast< csFrustum * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csFrustum,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_FrustumFrustum" "', argument " "2"" of type '" "csFrustum const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_FrustumFrustum" "', argument " "2"" of type '" "csFrustum const &""'"); 
  }
  arg2 = reinterpret_cast< csFrustum * >(argp2);
  result = csIntersect3::FrustumFrustum((csFrustum const &)*arg1,(csFrustum const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csPtr< csFrustum >(static_cast< const csPtr< csFrustum >& >(result))), SWIGTYPE_p_csPtrT_csFrustum_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_FrustumFrustum__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csFrustum *arg1 = 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< csFrustum > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_FrustumFrustum",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csFrustum,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_FrustumFrustum" "', argument " "1"" of type '" "csFrustum const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_FrustumFrustum" "', argument " "1"" of type '" "csFrustum const &""'"); 
  }
  arg1 = reinterpret_cast< csFrustum * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_FrustumFrustum" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntersect3_FrustumFrustum" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = csIntersect3::FrustumFrustum((csFrustum const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj((new csPtr< csFrustum >(static_cast< const csPtr< csFrustum >& >(result))), SWIGTYPE_p_csPtrT_csFrustum_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_FrustumFrustum(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csFrustum, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csFrustum, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csIntersect3_FrustumFrustum__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csFrustum, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csIntersect3_FrustumFrustum__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_FrustumFrustum'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    FrustumFrustum(csFrustum const &,csFrustum const &)\n"
    "    csIntersect3::FrustumFrustum(csFrustum const &,csVector3 *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_TriangleTriangle__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 ;
  csVector3 *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_TriangleTriangle",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_TriangleTriangle" "', argument " "1"" of type '" "csVector3 const [3]""'"); 
  } 
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_TriangleTriangle" "', argument " "2"" of type '" "csVector3 const [3]""'"); 
  } 
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)csIntersect3::TriangleTriangle((csVector3 const (*))arg1,(csVector3 const (*))arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_TriangleTriangle__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 ;
  csVector3 *arg2 ;
  csSegment3 *arg3 = 0 ;
  bool *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntersect3_TriangleTriangle",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntersect3_TriangleTriangle" "', argument " "1"" of type '" "csVector3 const [3]""'"); 
  } 
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntersect3_TriangleTriangle" "', argument " "2"" of type '" "csVector3 const [3]""'"); 
  } 
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csSegment3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntersect3_TriangleTriangle" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_TriangleTriangle" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  arg3 = reinterpret_cast< csSegment3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csIntersect3_TriangleTriangle" "', argument " "4"" of type '" "bool &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntersect3_TriangleTriangle" "', argument " "4"" of type '" "bool &""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);
  result = (bool)csIntersect3::TriangleTriangle((csVector3 const (*))arg1,(csVector3 const (*))arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntersect3_TriangleTriangle(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csIntersect3_TriangleTriangle__SWIG_0(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csSegment3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_bool, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csIntersect3_TriangleTriangle__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntersect3_TriangleTriangle'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TriangleTriangle(csVector3 const [3],csVector3 const [3])\n"
    "    csIntersect3::TriangleTriangle(csVector3 const [3],csVector3 const [3],csSegment3 &,bool &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntersect3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csIntersect3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntersect3",0,0)) SWIG_fail;
  result = (csIntersect3 *)new csIntersect3();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csIntersect3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csIntersect3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csIntersect3 *arg1 = (csIntersect3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csIntersect3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csIntersect3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csIntersect3" "', argument " "1"" of type '" "csIntersect3 *""'"); 
  }
  arg1 = reinterpret_cast< csIntersect3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csIntersect3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csIntersect3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csPoly3D__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csPoly3D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPoly3D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPoly3D" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csPoly3D *)new csPoly3D(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPoly3D__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPoly3D",0,0)) SWIG_fail;
  result = (csPoly3D *)new csPoly3D();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPoly3D__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPoly3D *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPoly3D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPoly3D,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csPoly3D" "', argument " "1"" of type '" "csPoly3D const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csPoly3D" "', argument " "1"" of type '" "csPoly3D const &""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = (csPoly3D *)new csPoly3D((csPoly3D const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPoly3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csPoly3D(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csPoly3D__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csPoly3D__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csPoly3D__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csPoly3D'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csPoly3D(size_t)\n"
    "    csPoly3D()\n"
    "    csPoly3D(csPoly3D const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPoly3D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPoly3D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPoly3D" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_MakeEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_MakeEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_MakeEmpty" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  (arg1)->MakeEmpty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_GetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_GetVertexCount" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = ((csPoly3D const *)arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_GetVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_GetVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_GetVertices" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = (csVector3 *)((csPoly3D const *)arg1)->GetVertices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_GetVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_GetVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_GetVertex" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_GetVertex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (csVector3 *)((csPoly3D const *)arg1)->GetVertex(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_GetFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_GetFirst",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_GetFirst" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = (csVector3 *)((csPoly3D const *)arg1)->GetFirst();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_GetLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_GetLast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_GetLast" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = (csVector3 *)((csPoly3D const *)arg1)->GetLast();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_In",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_In" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_In" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_In" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)((csPoly3D const *)arg1)->In((csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_In",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_In" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_In" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly3D_In" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_In" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (bool)csPoly3D::In(arg1,arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPoly3D_In__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csPoly3D_In__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly3D_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    In(csPoly3D const *,csVector3 const &)\n"
    "    csPoly3D::In(csVector3 *,size_t,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_MakeRoom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_MakeRoom",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_MakeRoom" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_MakeRoom" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->MakeRoom(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_SetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_SetVertexCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_SetVertexCount" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_SetVertexCount" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetVertexCount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_AddVertex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_AddVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_AddVertex" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_AddVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_AddVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (arg1)->AddVertex((csVector3 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_AddVertex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_AddVertex",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_AddVertex" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_AddVertex" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_AddVertex" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPoly3D_AddVertex" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (arg1)->AddVertex(arg2,arg3,arg4);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_AddVertex(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPoly3D_AddVertex__SWIG_0(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csPoly3D_AddVertex__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly3D_AddVertex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddVertex(csPoly3D *,csVector3 const &)\n"
    "    AddVertex(csPoly3D *,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_SetVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_SetVertices",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_SetVertices" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_SetVertices" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_SetVertices" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->SetVertices((csVector3 const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ProjectXPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csPoly2D *arg4 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ProjectXPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ProjectXPlane" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_ProjectXPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_ProjectXPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_ProjectXPlane" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPoly3D_ProjectXPlane" "', argument " "4"" of type '" "csPoly2D *""'"); 
  }
  arg4 = reinterpret_cast< csPoly2D * >(argp4);
  result = (bool)((csPoly3D const *)arg1)->ProjectXPlane((csVector3 const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ProjectYPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csPoly2D *arg4 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ProjectYPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ProjectYPlane" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_ProjectYPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_ProjectYPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_ProjectYPlane" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPoly3D_ProjectYPlane" "', argument " "4"" of type '" "csPoly2D *""'"); 
  }
  arg4 = reinterpret_cast< csPoly2D * >(argp4);
  result = (bool)((csPoly3D const *)arg1)->ProjectYPlane((csVector3 const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ProjectZPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  csPoly2D *arg4 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ProjectZPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ProjectZPlane" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_ProjectZPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_ProjectZPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_ProjectZPlane" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPoly3D_ProjectZPlane" "', argument " "4"" of type '" "csPoly2D *""'"); 
  }
  arg4 = reinterpret_cast< csPoly2D * >(argp4);
  result = (bool)((csPoly3D const *)arg1)->ProjectZPlane((csVector3 const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ProjectAxisPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = 0 ;
  int arg3 ;
  float arg4 ;
  csPoly2D *arg5 = (csPoly2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ProjectAxisPlane",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ProjectAxisPlane" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_ProjectAxisPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_ProjectAxisPlane" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_ProjectAxisPlane" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPoly3D_ProjectAxisPlane" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_csPoly2D, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csPoly3D_ProjectAxisPlane" "', argument " "5"" of type '" "csPoly2D *""'"); 
  }
  arg5 = reinterpret_cast< csPoly2D * >(argp5);
  result = (bool)((csPoly3D const *)arg1)->ProjectAxisPlane((csVector3 const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_Classify__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPlane3 *arg1 = 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_Classify",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_Classify" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_Classify" "', argument " "1"" of type '" "csPlane3 const &""'"); 
  }
  arg1 = reinterpret_cast< csPlane3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_Classify" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_Classify" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (int)csPoly3D::Classify((csPlane3 const &)*arg1,(csVector3 const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_Classify__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_Classify",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_Classify" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_Classify" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_Classify" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (int)((csPoly3D const *)arg1)->Classify((csPlane3 const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_Classify(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csPlane3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPoly3D_Classify__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csPlane3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csPoly3D_Classify__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly3D_Classify'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Classify(csPlane3 const &,csVector3 const *,size_t)\n"
    "    Classify(csPoly3D const *,csPlane3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ClassifyX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ClassifyX",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ClassifyX" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ClassifyX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (int)((csPoly3D const *)arg1)->ClassifyX(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ClassifyY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ClassifyY",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ClassifyY" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ClassifyY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (int)((csPoly3D const *)arg1)->ClassifyY(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ClassifyZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ClassifyZ",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ClassifyZ" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ClassifyZ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (int)((csPoly3D const *)arg1)->ClassifyZ(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ClassifyAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ClassifyAxis",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ClassifyAxis" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ClassifyAxis" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_ClassifyAxis" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (int)((csPoly3D const *)arg1)->ClassifyAxis(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_IsAxisAligned__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  float *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_IsAxisAligned",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_IsAxisAligned" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_IsAxisAligned" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_IsAxisAligned" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_IsAxisAligned" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (int)((csPoly3D const *)arg1)->IsAxisAligned(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_IsAxisAligned__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_IsAxisAligned",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_IsAxisAligned" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_IsAxisAligned" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_IsAxisAligned" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  result = (int)((csPoly3D const *)arg1)->IsAxisAligned(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_IsAxisAligned(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csPoly3D_IsAxisAligned__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csPoly3D_IsAxisAligned__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly3D_IsAxisAligned'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IsAxisAligned(csPoly3D const *,float &,float)\n"
    "    IsAxisAligned(csPoly3D const *,float &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputeMainNormalAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputeMainNormalAxis",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputeMainNormalAxis" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = (int)((csPoly3D const *)arg1)->ComputeMainNormalAxis();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_CutToPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_CutToPlane",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_CutToPlane" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_CutToPlane" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_CutToPlane" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  (arg1)->CutToPlane((csPlane3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_SplitWithPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csPoly3D *arg2 = 0 ;
  csPoly3D *arg3 = 0 ;
  csPlane3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_SplitWithPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_SplitWithPlane" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_SplitWithPlane" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlane" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  arg2 = reinterpret_cast< csPoly3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly3D_SplitWithPlane" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlane" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  arg3 = reinterpret_cast< csPoly3D * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csPoly3D_SplitWithPlane" "', argument " "4"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlane" "', argument " "4"" of type '" "csPlane3 const &""'"); 
  }
  arg4 = reinterpret_cast< csPlane3 * >(argp4);
  ((csPoly3D const *)arg1)->SplitWithPlane(*arg2,*arg3,(csPlane3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_SplitWithPlaneX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csPoly3D *arg2 = 0 ;
  csPoly3D *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_SplitWithPlaneX",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_SplitWithPlaneX" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_SplitWithPlaneX" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlaneX" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  arg2 = reinterpret_cast< csPoly3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly3D_SplitWithPlaneX" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlaneX" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  arg3 = reinterpret_cast< csPoly3D * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPoly3D_SplitWithPlaneX" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ((csPoly3D const *)arg1)->SplitWithPlaneX(*arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_SplitWithPlaneY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csPoly3D *arg2 = 0 ;
  csPoly3D *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_SplitWithPlaneY",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_SplitWithPlaneY" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_SplitWithPlaneY" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlaneY" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  arg2 = reinterpret_cast< csPoly3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly3D_SplitWithPlaneY" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlaneY" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  arg3 = reinterpret_cast< csPoly3D * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPoly3D_SplitWithPlaneY" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ((csPoly3D const *)arg1)->SplitWithPlaneY(*arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_SplitWithPlaneZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csPoly3D *arg2 = 0 ;
  csPoly3D *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_SplitWithPlaneZ",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_SplitWithPlaneZ" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_SplitWithPlaneZ" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlaneZ" "', argument " "2"" of type '" "csPoly3D &""'"); 
  }
  arg2 = reinterpret_cast< csPoly3D * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csPoly3D,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly3D_SplitWithPlaneZ" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_SplitWithPlaneZ" "', argument " "3"" of type '" "csPoly3D &""'"); 
  }
  arg3 = reinterpret_cast< csPoly3D * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csPoly3D_SplitWithPlaneZ" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ((csPoly3D const *)arg1)->SplitWithPlaneZ(*arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputeNormal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputeNormal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputeNormal" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ComputeNormal" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = csPoly3D::ComputeNormal((csVector3 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputeNormal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputeNormal",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputeNormal" "', argument " "1"" of type '" "csArray< csVector3 > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_ComputeNormal" "', argument " "1"" of type '" "csArray< csVector3 > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  result = csPoly3D::ComputeNormal((csArray< csVector3 > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputeNormal__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputeNormal",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputeNormal" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ComputeNormal" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly3D_ComputeNormal" "', argument " "3"" of type '" "csVector3 *""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = csPoly3D::ComputeNormal(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputeNormal__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputeNormal",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputeNormal" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = ((csPoly3D const *)arg1)->ComputeNormal();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputeNormal(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csPoly3D_ComputeNormal__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csPoly3D_ComputeNormal__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csPoly3D_ComputeNormal__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csPoly3D_ComputeNormal__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly3D_ComputeNormal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ComputeNormal(csVector3 const *,size_t)\n"
    "    ComputeNormal(csArray< csVector3 > const &)\n"
    "    ComputeNormal(int *,size_t,csVector3 *)\n"
    "    ComputeNormal(csPoly3D const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputePlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputePlane",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputePlane" "', argument " "1"" of type '" "csVector3 const *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ComputePlane" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = csPoly3D::ComputePlane((csVector3 const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputePlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputePlane",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputePlane" "', argument " "1"" of type '" "csArray< csVector3 > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_ComputePlane" "', argument " "1"" of type '" "csArray< csVector3 > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  result = csPoly3D::ComputePlane((csArray< csVector3 > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputePlane__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  size_t arg2 ;
  csVector3 *arg3 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputePlane",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputePlane" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D_ComputePlane" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPoly3D_ComputePlane" "', argument " "3"" of type '" "csVector3 *""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = csPoly3D::ComputePlane(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputePlane__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csPlane3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_ComputePlane",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_ComputePlane" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = ((csPoly3D const *)arg1)->ComputePlane();
  resultobj = SWIG_NewPointerObj((new csPlane3(static_cast< const csPlane3& >(result))), SWIGTYPE_p_csPlane3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_ComputePlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csPoly3D_ComputePlane__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csPoly3D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csPoly3D_ComputePlane__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csPoly3D_ComputePlane__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csPoly3D_ComputePlane__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csPoly3D_ComputePlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ComputePlane(csVector3 const *,size_t)\n"
    "    ComputePlane(csArray< csVector3 > const &)\n"
    "    ComputePlane(int *,size_t,csVector3 *)\n"
    "    ComputePlane(csPoly3D const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_GetArea(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_GetArea",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_GetArea" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = (float)((csPoly3D const *)arg1)->GetArea();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_GetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_GetCenter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_GetCenter" "', argument " "1"" of type '" "csPoly3D const *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  result = ((csPoly3D const *)arg1)->GetCenter();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D_InSphere(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D_InSphere",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D_InSphere" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPoly3D_InSphere" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPoly3D_InSphere" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPoly3D_InSphere" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)(arg1)->InSphere((csVector3 const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPoly3D___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPoly3D *arg1 = (csPoly3D *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPoly3D___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPoly3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPoly3D___getitem__" "', argument " "1"" of type '" "csPoly3D *""'"); 
  }
  arg1 = reinterpret_cast< csPoly3D * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPoly3D___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    csVector3 &_result_ref = csPoly3D___getitem__(arg1,arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPoly3D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPoly3D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csCompressVertex_orig_idx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_orig_idx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_orig_idx_set" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCompressVertex_orig_idx_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->orig_idx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_orig_idx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_orig_idx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_orig_idx_get" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  result =  ((arg1)->orig_idx);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_x_set" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCompressVertex_x_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_x_get" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  result = (int) ((arg1)->x);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_y_set" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCompressVertex_y_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_y_get" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  result = (int) ((arg1)->y);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_z_set" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCompressVertex_z_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_z_get" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  result = (int) ((arg1)->z);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_new_idx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_new_idx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_new_idx_set" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCompressVertex_new_idx_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->new_idx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_new_idx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_new_idx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_new_idx_get" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  result =  ((arg1)->new_idx);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_used_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_used_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_used_set" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCompressVertex_used_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->used = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCompressVertex_used_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCompressVertex_used_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCompressVertex_used_get" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  result = (bool) ((arg1)->used);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csCompressVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csCompressVertex",0,0)) SWIG_fail;
  result = (csCompressVertex *)new csCompressVertex();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCompressVertex, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csCompressVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCompressVertex *arg1 = (csCompressVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csCompressVertex",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCompressVertex, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csCompressVertex" "', argument " "1"" of type '" "csCompressVertex *""'"); 
  }
  arg1 = reinterpret_cast< csCompressVertex * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csCompressVertex_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csCompressVertex, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csVector3Array__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3Array *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3Array",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csVector3Array" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csVector3Array *)new csVector3Array(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3Array, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3Array__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3Array *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csVector3Array",0,0)) SWIG_fail;
  result = (csVector3Array *)new csVector3Array();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3Array, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csVector3Array(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csVector3Array__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csVector3Array__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csVector3Array'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csVector3Array(size_t)\n"
    "    csVector3Array()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3Array_AddVertexSmart__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3Array *arg1 = (csVector3Array *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3Array_AddVertexSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3Array, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3Array_AddVertexSmart" "', argument " "1"" of type '" "csVector3Array *""'"); 
  }
  arg1 = reinterpret_cast< csVector3Array * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csVector3Array_AddVertexSmart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3Array_AddVertexSmart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (arg1)->AddVertexSmart((csVector3 const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3Array_AddVertexSmart__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3Array *arg1 = (csVector3Array *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3Array_AddVertexSmart",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3Array, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3Array_AddVertexSmart" "', argument " "1"" of type '" "csVector3Array *""'"); 
  }
  arg1 = reinterpret_cast< csVector3Array * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3Array_AddVertexSmart" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csVector3Array_AddVertexSmart" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csVector3Array_AddVertexSmart" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (arg1)->AddVertexSmart(arg2,arg3,arg4);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3Array_AddVertexSmart(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3Array, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csVector3Array_AddVertexSmart__SWIG_0(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3Array, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csVector3Array_AddVertexSmart__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3Array_AddVertexSmart'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddVertexSmart(csVector3Array *,csVector3 const &)\n"
    "    AddVertexSmart(csVector3Array *,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3Array_CompressVertices__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  size_t arg2 ;
  csVector3 **arg3 = 0 ;
  size_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csCompressVertex *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3Array_CompressVertices",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3Array_CompressVertices" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csVector3Array_CompressVertices" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csVector3Array_CompressVertices" "', argument " "3"" of type '" "csVector3 *&""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3Array_CompressVertices" "', argument " "3"" of type '" "csVector3 *&""'"); 
  }
  arg3 = reinterpret_cast< csVector3 ** >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csVector3Array_CompressVertices" "', argument " "4"" of type '" "size_t &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3Array_CompressVertices" "', argument " "4"" of type '" "size_t &""'"); 
  }
  arg4 = reinterpret_cast< size_t * >(argp4);
  result = (csCompressVertex *)csVector3Array::CompressVertices(arg1,arg2,*arg3,*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCompressVertex, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3Array_CompressVertices__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csVector3 > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csCompressVertex *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csVector3Array_CompressVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csVector3Array_CompressVertices" "', argument " "1"" of type '" "csArray< csVector3 > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csVector3Array_CompressVertices" "', argument " "1"" of type '" "csArray< csVector3 > &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csVector3 > * >(argp1);
  result = (csCompressVertex *)csVector3Array::CompressVertices(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCompressVertex, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csVector3Array_CompressVertices(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csVector3Array_CompressVertices__SWIG_1(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_size_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csVector3Array_CompressVertices__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csVector3Array_CompressVertices'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CompressVertices(csVector3 *,size_t,csVector3 *&,size_t &)\n"
    "    csVector3Array::CompressVertices(csArray< csVector3 > &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csVector3Array(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3Array *arg1 = (csVector3Array *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csVector3Array",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3Array, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csVector3Array" "', argument " "1"" of type '" "csVector3Array *""'"); 
  }
  arg1 = reinterpret_cast< csVector3Array * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csVector3Array_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csVector3Array, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TriangleInt_a_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TriangleInt_a_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TriangleInt_a_set" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TriangleInt_a_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->a = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TriangleInt_a_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TriangleInt_a_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TriangleInt_a_get" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  result = (int) ((arg1)->a);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TriangleInt_b_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TriangleInt_b_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TriangleInt_b_set" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TriangleInt_b_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->b = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TriangleInt_b_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TriangleInt_b_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TriangleInt_b_get" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  result = (int) ((arg1)->b);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TriangleInt_c_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TriangleInt_c_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TriangleInt_c_set" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TriangleInt_c_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->c = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TriangleInt_c_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TriangleInt_c_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TriangleInt_c_get" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  result = (int) ((arg1)->c);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TriangleInt_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  int *arg2 = 0 ;
  int *arg3 = 0 ;
  int *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  int temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  int temp4 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TriangleInt_Set",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TriangleInt_Set" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TriangleInt_Set" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TriangleInt_Set" "', argument " "3"" of type '" "int""'");
  } 
  temp3 = static_cast< int >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TriangleInt_Set" "', argument " "4"" of type '" "int""'");
  } 
  temp4 = static_cast< int >(val4);
  arg4 = &temp4;
  (arg1)->Set((int const &)*arg2,(int const &)*arg3,(int const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TriangleInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TriangleInt",0,0)) SWIG_fail;
  result = (CS::TriangleT< int > *)new CS::TriangleT< int >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__TriangleTT_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TriangleInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = (CS::TriangleT< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TriangleInt",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__TriangleTT_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TriangleInt" "', argument " "1"" of type '" "CS::TriangleT< int > *""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TriangleInt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__TriangleTT_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csTriangle__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangle",0,0)) SWIG_fail;
  result = (csTriangle *)new csTriangle();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangle__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangle",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csTriangle" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csTriangle" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csTriangle" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csTriangle *)new csTriangle(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangle__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::TriangleT< int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangle",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CS__TriangleTT_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csTriangle" "', argument " "1"" of type '" "CS::TriangleT< int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csTriangle" "', argument " "1"" of type '" "CS::TriangleT< int > const &""'"); 
  }
  arg1 = reinterpret_cast< CS::TriangleT< int > * >(argp1);
  result = (csTriangle *)new csTriangle((CS::TriangleT< int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangle(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csTriangle__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CS__TriangleTT_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csTriangle__SWIG_2(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_csTriangle__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csTriangle'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csTriangle()\n"
    "    csTriangle(int,int,int)\n"
    "    csTriangle(CS::TriangleT< int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangle___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangle *arg1 = (csTriangle *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangle___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangle___getitem__" "', argument " "1"" of type '" "csTriangle const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangle * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangle___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)csTriangle___getitem__((csTriangle const *)arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangle___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangle *arg1 = (csTriangle *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangle___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangle___setitem__" "', argument " "1"" of type '" "csTriangle *""'"); 
  }
  arg1 = reinterpret_cast< csTriangle * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangle___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csTriangle___setitem__" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  csTriangle___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangle___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangle *arg1 = (csTriangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangle___nonzero__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangle___nonzero__" "', argument " "1"" of type '" "csTriangle const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangle * >(argp1);
  result = (bool)csTriangle___nonzero__((csTriangle const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangle *arg1 = (csTriangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangle",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangle, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangle" "', argument " "1"" of type '" "csTriangle *""'"); 
  }
  arg1 = reinterpret_cast< csTriangle * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangle, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csRect_xmin_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_xmin_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_xmin_set" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_xmin_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->xmin = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_xmin_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_xmin_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_xmin_get" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (int) ((arg1)->xmin);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ymin_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ymin_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ymin_set" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_ymin_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ymin = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ymin_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ymin_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ymin_get" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (int) ((arg1)->ymin);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_xmax_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_xmax_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_xmax_set" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_xmax_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->xmax = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_xmax_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_xmax_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_xmax_get" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (int) ((arg1)->xmax);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ymax_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ymax_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ymax_set" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_ymax_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ymax = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ymax_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ymax_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ymax_get" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (int) ((arg1)->ymax);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csRect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csRect",0,0)) SWIG_fail;
  result = (csRect *)new csRect();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRect, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csRect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csRect *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csRect",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csRect" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csRect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csRect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csRect" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (csRect *)new csRect(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRect, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csRect__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csRect *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csRect",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csRect" "', argument " "1"" of type '" "csRect const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csRect" "', argument " "1"" of type '" "csRect const &""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (csRect *)new csRect((csRect const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRect, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csRect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csRect__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csRect__SWIG_2(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csRect__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csRect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csRect()\n"
    "    csRect(int,int,int,int)\n"
    "    csRect(csRect const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csRect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csRect",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csRect" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Intersect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Intersect",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Intersect" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Intersect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Intersect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csRect_Intersect" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csRect_Intersect" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->Intersect(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Intersect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Intersect",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Intersect" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Intersect" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Intersect" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Intersect((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Intersect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csRect, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csRect_Intersect__SWIG_1(self, args);
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csRect_Intersect__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csRect_Intersect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Intersect(csRect *,int,int,int,int)\n"
    "    Intersect(csRect *,csRect const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Intersects(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Intersects",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Intersects" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Intersects" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Intersects" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  result = (bool)((csRect const *)arg1)->Intersects((csRect const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Union__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Union",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Union" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Union" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Union" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csRect_Union" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csRect_Union" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->Union(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Union__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Union",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Union" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Union" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Union" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Union((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Union(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csRect, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csRect_Union__SWIG_1(self, args);
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csRect_Union__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csRect_Union'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Union(csRect *,int,int,int,int)\n"
    "    Union(csRect *,csRect const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Exclude__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Exclude",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Exclude" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Exclude" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Exclude" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csRect_Exclude" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csRect_Exclude" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->Exclude(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Exclude__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Exclude",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Exclude" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Exclude" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Exclude" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Exclude((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Exclude(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csRect, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csRect_Exclude__SWIG_1(self, args);
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csRect_Exclude__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csRect_Exclude'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Exclude(csRect *,int,int,int,int)\n"
    "    Exclude(csRect *,csRect const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Subtract",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Subtract" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Subtract" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Subtract" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Subtract((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_IsEmpty" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (bool)((csRect const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_MakeEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_MakeEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_MakeEmpty" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  (arg1)->MakeEmpty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Set",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Set" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Set" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csRect_Set" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csRect_Set" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->Set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Set" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Set" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Set" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Set((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csRect, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csRect_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csRect_Set__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csRect_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csRect *,int,int,int,int)\n"
    "    Set(csRect *,csRect const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_SetPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_SetPos",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_SetPos" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_SetPos" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_SetPos" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetPos(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_SetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_SetSize" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_SetSize" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_SetSize" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetSize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Move(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Move",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Move" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Move" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Move" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->Move(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Width",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Width" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (int)((csRect const *)arg1)->Width();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Height",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Height" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (int)((csRect const *)arg1)->Height();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Contains",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Contains" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Contains" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Contains" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)((csRect const *)arg1)->Contains(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ContainsRel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ContainsRel",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ContainsRel" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_ContainsRel" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_ContainsRel" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)((csRect const *)arg1)->ContainsRel(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Equal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Equal",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Equal" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Equal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Equal" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csRect_Equal" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csRect_Equal" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (bool)((csRect const *)arg1)->Equal(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Equal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Equal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Equal" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Equal" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Equal" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  result = (bool)((csRect const *)arg1)->Equal((csRect const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Equal(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csRect, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csRect_Equal__SWIG_1(self, args);
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csRect_Equal__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csRect_Equal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Equal(csRect const *,int,int,int,int)\n"
    "    Equal(csRect const *,csRect const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Normalize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Normalize" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  (arg1)->Normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Area",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Area" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (int)((csRect const *)arg1)->Area();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_AddAdjacent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_AddAdjacent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_AddAdjacent" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_AddAdjacent" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_AddAdjacent" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->AddAdjacent((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect___eq__" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect___eq__" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect___eq__" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  result = (bool)((csRect const *)arg1)->operator ==((csRect const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect___ne__" "', argument " "1"" of type '" "csRect const *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect___ne__" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect___ne__" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  result = (bool)((csRect const *)arg1)->operator !=((csRect const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Extend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Extend",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Extend" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Extend" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csRect_Extend" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->Extend(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Join(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Join",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Join" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_Join" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_Join" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Join((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Outset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Outset",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Outset" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Outset" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Outset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_Inset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_Inset",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_Inset" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRect_Inset" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Inset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ClipLineGeneral(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int *arg2 = 0 ;
  int *arg3 = 0 ;
  int *arg4 = 0 ;
  int *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ClipLineGeneral",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ClipLineGeneral" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_ClipLineGeneral" "', argument " "2"" of type '" "int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineGeneral" "', argument " "2"" of type '" "int &""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csRect_ClipLineGeneral" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineGeneral" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csRect_ClipLineGeneral" "', argument " "4"" of type '" "int &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineGeneral" "', argument " "4"" of type '" "int &""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csRect_ClipLineGeneral" "', argument " "5"" of type '" "int &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineGeneral" "', argument " "5"" of type '" "int &""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  result = (bool)(arg1)->ClipLineGeneral(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ClipLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int *arg2 = 0 ;
  int *arg3 = 0 ;
  int *arg4 = 0 ;
  int *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ClipLine",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ClipLine" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_ClipLine" "', argument " "2"" of type '" "int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLine" "', argument " "2"" of type '" "int &""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csRect_ClipLine" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLine" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csRect_ClipLine" "', argument " "4"" of type '" "int &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLine" "', argument " "4"" of type '" "int &""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csRect_ClipLine" "', argument " "5"" of type '" "int &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLine" "', argument " "5"" of type '" "int &""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  result = (bool)(arg1)->ClipLine(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRect_ClipLineSafe(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = (csRect *) 0 ;
  int *arg2 = 0 ;
  int *arg3 = 0 ;
  int *arg4 = 0 ;
  int *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRect_ClipLineSafe",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRect_ClipLineSafe" "', argument " "1"" of type '" "csRect *""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRect_ClipLineSafe" "', argument " "2"" of type '" "int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineSafe" "', argument " "2"" of type '" "int &""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csRect_ClipLineSafe" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineSafe" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csRect_ClipLineSafe" "', argument " "4"" of type '" "int &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineSafe" "', argument " "4"" of type '" "int &""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csRect_ClipLineSafe" "', argument " "5"" of type '" "int &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRect_ClipLineSafe" "', argument " "5"" of type '" "int &""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  result = (bool)(arg1)->ClipLineSafe(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csRect_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csRect, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csRectRegion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csRectRegion",0,0)) SWIG_fail;
  result = (csRectRegion *)new csRectRegion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRectRegion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csRectRegion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *arg1 = (csRectRegion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csRectRegion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRectRegion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csRectRegion" "', argument " "1"" of type '" "csRectRegion *""'"); 
  }
  arg1 = reinterpret_cast< csRectRegion * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRectRegion_Include(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *arg1 = (csRectRegion *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRectRegion_Include",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRectRegion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRectRegion_Include" "', argument " "1"" of type '" "csRectRegion *""'"); 
  }
  arg1 = reinterpret_cast< csRectRegion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRectRegion_Include" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRectRegion_Include" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Include((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRectRegion_Exclude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *arg1 = (csRectRegion *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRectRegion_Exclude",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRectRegion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRectRegion_Exclude" "', argument " "1"" of type '" "csRectRegion *""'"); 
  }
  arg1 = reinterpret_cast< csRectRegion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRectRegion_Exclude" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRectRegion_Exclude" "', argument " "2"" of type '" "csRect const &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->Exclude((csRect const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRectRegion_ClipTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *arg1 = (csRectRegion *) 0 ;
  csRect *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRectRegion_ClipTo",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRectRegion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRectRegion_ClipTo" "', argument " "1"" of type '" "csRectRegion *""'"); 
  }
  arg1 = reinterpret_cast< csRectRegion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csRect,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csRectRegion_ClipTo" "', argument " "2"" of type '" "csRect &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csRectRegion_ClipTo" "', argument " "2"" of type '" "csRect &""'"); 
  }
  arg2 = reinterpret_cast< csRect * >(argp2);
  (arg1)->ClipTo(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRectRegion_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *arg1 = (csRectRegion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRectRegion_Count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRectRegion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRectRegion_Count" "', argument " "1"" of type '" "csRectRegion const *""'"); 
  }
  arg1 = reinterpret_cast< csRectRegion * >(argp1);
  result = ((csRectRegion const *)arg1)->Count();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRectRegion_RectAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *arg1 = (csRectRegion *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csRect *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRectRegion_RectAt",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRectRegion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRectRegion_RectAt" "', argument " "1"" of type '" "csRectRegion const *""'"); 
  }
  arg1 = reinterpret_cast< csRectRegion * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csRectRegion_RectAt" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csRect const &_result_ref = ((csRectRegion const *)arg1)->RectAt(arg2);
    result = (csRect *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csRect, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csRectRegion_MakeEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRectRegion *arg1 = (csRectRegion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csRectRegion_MakeEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csRectRegion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csRectRegion_MakeEmpty" "', argument " "1"" of type '" "csRectRegion *""'"); 
  }
  arg1 = reinterpret_cast< csRectRegion * >(argp1);
  (arg1)->MakeEmpty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csRectRegion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csRectRegion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csQuaternion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csQuaternion",0,0)) SWIG_fail;
  result = (csQuaternion *)new csQuaternion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csQuaternion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csQuaternion",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csQuaternion" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csQuaternion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csQuaternion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csQuaternion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csQuaternion *)new csQuaternion(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csQuaternion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csQuaternion",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csQuaternion" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csQuaternion" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csQuaternion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csQuaternion *)new csQuaternion((csVector3 const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csQuaternion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csQuaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csQuaternion" "', argument " "1"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csQuaternion" "', argument " "1"" of type '" "csQuaternion const &""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = (csQuaternion *)new csQuaternion((csQuaternion const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csQuaternion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csQuaternion__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csQuaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csQuaternion__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_csQuaternion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csQuaternion__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csQuaternion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csQuaternion()\n"
    "    csQuaternion(float,float,float,float)\n"
    "    csQuaternion(csVector3 const &,float)\n"
    "    csQuaternion(csQuaternion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Set",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Set" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csQuaternion_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csQuaternion_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csQuaternion_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csQuaternion_Set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->Set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_SetIdentity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_SetIdentity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_SetIdentity" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  (arg1)->SetIdentity();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___iadd__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion___iadd__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion___iadd__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  {
    csQuaternion &_result_ref = (arg1)->operator +=((csQuaternion const &)*arg2);
    result = (csQuaternion *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___isub__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion___isub__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion___isub__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  {
    csQuaternion &_result_ref = (arg1)->operator -=((csQuaternion const &)*arg2);
    result = (csQuaternion *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___imul__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion___imul__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion___imul__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  {
    csQuaternion &_result_ref = (arg1)->operator *=((csQuaternion const &)*arg2);
    result = (csQuaternion *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___imul__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csQuaternion___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csQuaternion &_result_ref = (arg1)->operator *=(arg2);
    result = (csQuaternion *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csQuaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csQuaternion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csQuaternion___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csQuaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csQuaternion___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csQuaternion___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(csQuaternion *,csQuaternion const &)\n"
    "    operator *=(csQuaternion *,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___idiv__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csQuaternion___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    csQuaternion &_result_ref = (arg1)->operator /=(arg2);
    result = (csQuaternion *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_GetConjugate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_GetConjugate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_GetConjugate" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = ((csQuaternion const *)arg1)->GetConjugate();
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Conjugate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Conjugate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Conjugate" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  (arg1)->Conjugate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Dot",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Dot" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_Dot" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_Dot" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  result = (float)((csQuaternion const *)arg1)->Dot((csQuaternion const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_SquaredNorm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_SquaredNorm",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_SquaredNorm" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = (float)((csQuaternion const *)arg1)->SquaredNorm();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Norm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Norm",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Norm" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = (float)((csQuaternion const *)arg1)->Norm();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Unit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Unit",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Unit" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = ((csQuaternion const *)arg1)->Unit();
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Rotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Rotate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Rotate" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_Rotate" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_Rotate" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = ((csQuaternion const *)arg1)->Rotate((csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_SetAxisAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csVector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_SetAxisAngle",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_SetAxisAngle" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_SetAxisAngle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_SetAxisAngle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csQuaternion_SetAxisAngle" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetAxisAngle((csVector3 const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_GetAxisAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csVector3 *arg2 = 0 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_GetAxisAngle",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_GetAxisAngle" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_GetAxisAngle" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_GetAxisAngle" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csQuaternion_GetAxisAngle" "', argument " "3"" of type '" "float &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_GetAxisAngle" "', argument " "3"" of type '" "float &""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  ((csQuaternion const *)arg1)->GetAxisAngle(*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_SetEulerAngles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_SetEulerAngles",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_SetEulerAngles" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_SetEulerAngles" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_SetEulerAngles" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetEulerAngles((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_GetEulerAngles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_GetEulerAngles",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_GetEulerAngles" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = ((csQuaternion const *)arg1)->GetEulerAngles();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_SetMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_SetMatrix",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_SetMatrix" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_SetMatrix" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_SetMatrix" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->SetMatrix((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_GetMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_GetMatrix",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_GetMatrix" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = ((csQuaternion const *)arg1)->GetMatrix();
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_NLerp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_NLerp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_NLerp" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_NLerp" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_NLerp" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csQuaternion_NLerp" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = ((csQuaternion const *)arg1)->NLerp((csQuaternion const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_SLerp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_SLerp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_SLerp" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_SLerp" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_SLerp" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csQuaternion_SLerp" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = ((csQuaternion const *)arg1)->SLerp((csQuaternion const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Log(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Log",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Log" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = ((csQuaternion const *)arg1)->Log();
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Exp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Exp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Exp" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = ((csQuaternion const *)arg1)->Exp();
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_Squad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  csQuaternion *arg3 = 0 ;
  csQuaternion *arg4 = 0 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_Squad",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_Squad" "', argument " "1"" of type '" "csQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_Squad" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_Squad" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csQuaternion_Squad" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_Squad" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csQuaternion_Squad" "', argument " "4"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion_Squad" "', argument " "4"" of type '" "csQuaternion const &""'"); 
  }
  arg4 = reinterpret_cast< csQuaternion * >(argp4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csQuaternion_Squad" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = ((csQuaternion const *)arg1)->Squad((csQuaternion const &)*arg2,(csQuaternion const &)*arg3,(csQuaternion const &)*arg4,arg5);
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_v_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_v_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_v_set" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion_v_set" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  if (arg1) (arg1)->v = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_v_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_v_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_v_get" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = (csVector3 *)& ((arg1)->v);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_w_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_w_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_w_set" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csQuaternion_w_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->w = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion_w_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion_w_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion_w_get" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  result = (float) ((arg1)->w);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___add__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion___add__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion___add__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  result = csQuaternion_operator_Sa_(arg1,(csQuaternion const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___sub__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion___sub__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion___sub__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  result = csQuaternion_operator_Ss_(arg1,(csQuaternion const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csQuaternion___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  csQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csQuaternion___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csQuaternion___mul__" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csQuaternion___mul__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csQuaternion___mul__" "', argument " "2"" of type '" "csQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< csQuaternion * >(argp2);
  result = csQuaternion_operator_Sm_(arg1,(csQuaternion const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csQuaternion(static_cast< const csQuaternion& >(result))), SWIGTYPE_p_csQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csQuaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csQuaternion *arg1 = (csQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csQuaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csQuaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csQuaternion" "', argument " "1"" of type '" "csQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< csQuaternion * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csQuaternion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csQuaternion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_csSpline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csSpline",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csSpline" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetDimensionCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetDimensionCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetDimensionCount" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  result = (int)((csSpline const *)arg1)->GetDimensionCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetPointCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetPointCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetPointCount" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  result = (int)((csSpline const *)arg1)->GetPointCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_InsertPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_InsertPoint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_InsertPoint" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_InsertPoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->InsertPoint(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_RemovePoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_RemovePoint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_RemovePoint" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_RemovePoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->RemovePoint(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_SetTimeValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_SetTimeValues",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_SetTimeValues" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSpline_SetTimeValues" "', argument " "2"" of type '" "float const *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  (arg1)->SetTimeValues((float const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_SetTimeValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_SetTimeValue",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_SetTimeValue" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_SetTimeValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csSpline_SetTimeValue" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetTimeValue(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetTimeValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetTimeValues",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetTimeValues" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  result = (float *)((csSpline const *)arg1)->GetTimeValues();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetTimeValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetTimeValue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetTimeValue" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_GetTimeValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)((csSpline const *)arg1)->GetTimeValue(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_SetDimensionValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_SetDimensionValues",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_SetDimensionValues" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_SetDimensionValues" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csSpline_SetDimensionValues" "', argument " "3"" of type '" "float const *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  (arg1)->SetDimensionValues(arg2,(float const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_SetDimensionValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_SetDimensionValue",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_SetDimensionValue" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_SetDimensionValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csSpline_SetDimensionValue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csSpline_SetDimensionValue" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->SetDimensionValue(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetDimensionValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetDimensionValues",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetDimensionValues" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_GetDimensionValues" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float *)((csSpline const *)arg1)->GetDimensionValues(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetDimensionValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetDimensionValue",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetDimensionValue" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_GetDimensionValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csSpline_GetDimensionValue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (float)((csSpline const *)arg1)->GetDimensionValue(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_SetIndexValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_SetIndexValues",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_SetIndexValues" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_SetIndexValues" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csSpline_SetIndexValues" "', argument " "3"" of type '" "float const *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  (arg1)->SetIndexValues(arg2,(float const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetIndexValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetIndexValues",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetIndexValues" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_GetIndexValues" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float *)((csSpline const *)arg1)->GetIndexValues(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_Calculate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_Calculate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_Calculate" "', argument " "1"" of type '" "csSpline *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_Calculate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->Calculate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetCurrentIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetCurrentIndex",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetCurrentIndex" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  result = (int)((csSpline const *)arg1)->GetCurrentIndex();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSpline_GetInterpolatedDimension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSpline *arg1 = (csSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSpline_GetInterpolatedDimension",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSpline_GetInterpolatedDimension" "', argument " "1"" of type '" "csSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSpline_GetInterpolatedDimension" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)((csSpline const *)arg1)->GetInterpolatedDimension(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csSpline_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csSpline, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csCubicSpline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csCubicSpline *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csCubicSpline",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csCubicSpline" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csCubicSpline" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csCubicSpline *)new csCubicSpline(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCubicSpline, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csCubicSpline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCubicSpline *arg1 = (csCubicSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csCubicSpline",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCubicSpline, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csCubicSpline" "', argument " "1"" of type '" "csCubicSpline *""'"); 
  }
  arg1 = reinterpret_cast< csCubicSpline * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCubicSpline_Calculate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCubicSpline *arg1 = (csCubicSpline *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCubicSpline_Calculate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCubicSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCubicSpline_Calculate" "', argument " "1"" of type '" "csCubicSpline *""'"); 
  }
  arg1 = reinterpret_cast< csCubicSpline * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCubicSpline_Calculate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->Calculate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCubicSpline_GetInterpolatedDimension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCubicSpline *arg1 = (csCubicSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCubicSpline_GetInterpolatedDimension",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCubicSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCubicSpline_GetInterpolatedDimension" "', argument " "1"" of type '" "csCubicSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csCubicSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csCubicSpline_GetInterpolatedDimension" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)((csCubicSpline const *)arg1)->GetInterpolatedDimension(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csCubicSpline_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csCubicSpline, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csBSpline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBSpline *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBSpline",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csBSpline" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csBSpline" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csBSpline *)new csBSpline(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBSpline, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csBSpline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBSpline *arg1 = (csBSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csBSpline",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBSpline, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csBSpline" "', argument " "1"" of type '" "csBSpline *""'"); 
  }
  arg1 = reinterpret_cast< csBSpline * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBSpline_Calculate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBSpline *arg1 = (csBSpline *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBSpline_Calculate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBSpline_Calculate" "', argument " "1"" of type '" "csBSpline *""'"); 
  }
  arg1 = reinterpret_cast< csBSpline * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBSpline_Calculate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->Calculate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBSpline_GetInterpolatedDimension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBSpline *arg1 = (csBSpline *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBSpline_GetInterpolatedDimension",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBSpline_GetInterpolatedDimension" "', argument " "1"" of type '" "csBSpline const *""'"); 
  }
  arg1 = reinterpret_cast< csBSpline * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBSpline_GetInterpolatedDimension" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)((csBSpline const *)arg1)->GetInterpolatedDimension(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csBSpline_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csBSpline, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csCatmullRomSpline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csCatmullRomSpline *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csCatmullRomSpline",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csCatmullRomSpline" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csCatmullRomSpline" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csCatmullRomSpline *)new csCatmullRomSpline(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCatmullRomSpline, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csCatmullRomSpline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCatmullRomSpline *arg1 = (csCatmullRomSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csCatmullRomSpline",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCatmullRomSpline, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csCatmullRomSpline" "', argument " "1"" of type '" "csCatmullRomSpline *""'"); 
  }
  arg1 = reinterpret_cast< csCatmullRomSpline * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csCatmullRomSpline_Clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csCatmullRomSpline *arg1 = (csCatmullRomSpline *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csCatmullRomSpline *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csCatmullRomSpline_Clone",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csCatmullRomSpline, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csCatmullRomSpline_Clone" "', argument " "1"" of type '" "csCatmullRomSpline *""'"); 
  }
  arg1 = reinterpret_cast< csCatmullRomSpline * >(argp1);
  result = (csCatmullRomSpline *)(arg1)->Clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csCatmullRomSpline, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csCatmullRomSpline_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csCatmullRomSpline, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csBox2_MinX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_MinX",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_MinX" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (float)((csBox2 const *)arg1)->MinX();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_MinY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_MinY",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_MinY" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (float)((csBox2 const *)arg1)->MinY();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_MaxX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_MaxX",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_MaxX" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (float)((csBox2 const *)arg1)->MaxX();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_MaxY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_MaxY",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_MaxY" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (float)((csBox2 const *)arg1)->MaxY();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Min__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Min",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Min" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_Min" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)((csBox2 const *)arg1)->Min(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Max__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Max",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Max" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_Max" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)((csBox2 const *)arg1)->Max(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Min__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Min",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Min" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  {
    csVector2 const &_result_ref = ((csBox2 const *)arg1)->Min();
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Min(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csBox2_Min__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csBox2_Min__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_Min'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Min(csBox2 const *,int)\n"
    "    Min(csBox2 const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Max__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Max",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Max" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  {
    csVector2 const &_result_ref = ((csBox2 const *)arg1)->Max();
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Max(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csBox2_Max__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csBox2_Max__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_Max'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Max(csBox2 const *,int)\n"
    "    Max(csBox2 const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Area",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Area" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (float)((csBox2 const *)arg1)->Area();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_GetCorner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_GetCorner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_GetCorner" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_GetCorner" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((csBox2 const *)arg1)->GetCorner(arg2);
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_GetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_GetCenter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_GetCenter" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = ((csBox2 const *)arg1)->GetCenter();
  resultobj = SWIG_NewPointerObj((new csVector2(static_cast< const csVector2& >(result))), SWIGTYPE_p_csVector2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SetCenter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SetCenter" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_SetCenter" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_SetCenter" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->SetCenter((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SetSize" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_SetSize" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_SetSize" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->SetSize((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_GetEdgeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  int *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_GetEdgeInfo",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_GetEdgeInfo" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_GetEdgeInfo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox2_GetEdgeInfo" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_GetEdgeInfo" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csBox2_GetEdgeInfo" "', argument " "4"" of type '" "int &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_GetEdgeInfo" "', argument " "4"" of type '" "int &""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ((csBox2 const *)arg1)->GetEdgeInfo(arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_GetEdge__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSegment2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_GetEdge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_GetEdge" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_GetEdge" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((csBox2 const *)arg1)->GetEdge(arg2);
  resultobj = SWIG_NewPointerObj((new csSegment2(static_cast< const csSegment2& >(result))), SWIGTYPE_p_csSegment2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_GetEdge__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  csSegment2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_GetEdge",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_GetEdge" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_GetEdge" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csSegment2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox2_GetEdge" "', argument " "3"" of type '" "csSegment2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_GetEdge" "', argument " "3"" of type '" "csSegment2 &""'"); 
  }
  arg3 = reinterpret_cast< csSegment2 * >(argp3);
  ((csBox2 const *)arg1)->GetEdge(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_GetEdge(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csBox2_GetEdge__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csSegment2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csBox2_GetEdge__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_GetEdge'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetEdge(csBox2 const *,int)\n"
    "    GetEdge(csBox2 const *,int,csSegment2 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Intersect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  csVector2 *arg5 = (csVector2 *) 0 ;
  int arg6 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Intersect",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csBox2_Intersect" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_Intersect" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_Intersect" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox2_Intersect" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csBox2_Intersect" "', argument " "5"" of type '" "csVector2 *""'"); 
  }
  arg5 = reinterpret_cast< csVector2 * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csBox2_Intersect" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = (bool)csBox2::Intersect(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Intersect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = (csVector2 *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Intersect",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Intersect" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_Intersect" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_Intersect" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_Intersect" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox2_Intersect" "', argument " "3"" of type '" "csVector2 *""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox2_Intersect" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (bool)csBox2::Intersect((csVector2 const &)*arg1,(csVector2 const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Intersect__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = (csVector2 *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Intersect",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Intersect" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector2, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_Intersect" "', argument " "2"" of type '" "csVector2 *""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_Intersect" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)((csBox2 const *)arg1)->Intersect(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Intersect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox2_Intersect__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csBox2_Intersect__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_csVector2, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_csBox2_Intersect__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_Intersect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Intersect(float,float,float,float,csVector2 *,int)\n"
    "    Intersect(csVector2 const &,csVector2 const &,csVector2 *,int)\n"
    "    Intersect(csBox2 const *,csVector2 *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_In",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_In" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_In" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_In" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)((csBox2 const *)arg1)->In(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_In",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_In" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_In" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_In" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)((csBox2 const *)arg1)->In((csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2_In__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox2_In__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    In(csBox2 const *,float,float)\n"
    "    In(csBox2 const *,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Overlap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Overlap",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Overlap" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_Overlap" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_Overlap" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (bool)((csBox2 const *)arg1)->Overlap((csBox2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Contains" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_Contains" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_Contains" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (bool)((csBox2 const *)arg1)->Contains((csBox2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Empty" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (bool)((csBox2 const *)arg1)->Empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SquaredOriginDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SquaredOriginDist",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SquaredOriginDist" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (float)((csBox2 const *)arg1)->SquaredOriginDist();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SquaredOriginMaxDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SquaredOriginMaxDist",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SquaredOriginMaxDist" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = (float)((csBox2 const *)arg1)->SquaredOriginMaxDist();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SquaredPosDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SquaredPosDist",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SquaredPosDist" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_SquaredPosDist" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_SquaredPosDist" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (float)((csBox2 const *)arg1)->SquaredPosDist((csVector2 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SquaredPosMaxDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SquaredPosMaxDist",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SquaredPosMaxDist" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_SquaredPosMaxDist" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_SquaredPosMaxDist" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (float)((csBox2 const *)arg1)->SquaredPosMaxDist((csVector2 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_StartBoundingBox__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_StartBoundingBox",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_StartBoundingBox" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  (arg1)->StartBoundingBox();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_StartBoundingBox__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_StartBoundingBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_StartBoundingBox" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_StartBoundingBox" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_StartBoundingBox" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->StartBoundingBox((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_StartBoundingBox__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_StartBoundingBox",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_StartBoundingBox" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_StartBoundingBox" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_StartBoundingBox" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->StartBoundingBox(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_StartBoundingBox(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csBox2_StartBoundingBox__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2_StartBoundingBox__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox2_StartBoundingBox__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_StartBoundingBox'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    StartBoundingBox(csBox2 *)\n"
    "    StartBoundingBox(csBox2 *,csVector2 const &)\n"
    "    StartBoundingBox(csBox2 *,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertex" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_AddBoundingVertex" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_AddBoundingVertex" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->AddBoundingVertex(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertex" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_AddBoundingVertex" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_AddBoundingVertex" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->AddBoundingVertex((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertex(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2_AddBoundingVertex__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox2_AddBoundingVertex__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_AddBoundingVertex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertex(csBox2 *,float,float)\n"
    "    AddBoundingVertex(csBox2 *,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexSmart__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertexSmart",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertexSmart" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_AddBoundingVertexSmart" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_AddBoundingVertexSmart" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->AddBoundingVertexSmart(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexSmart__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertexSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertexSmart" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_AddBoundingVertexSmart" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_AddBoundingVertexSmart" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->AddBoundingVertexSmart((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexSmart(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2_AddBoundingVertexSmart__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox2_AddBoundingVertexSmart__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_AddBoundingVertexSmart'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertexSmart(csBox2 *,float,float)\n"
    "    AddBoundingVertexSmart(csBox2 *,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexTest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertexTest",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertexTest" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_AddBoundingVertexTest" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_AddBoundingVertexTest" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)(arg1)->AddBoundingVertexTest(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexTest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertexTest",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertexTest" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_AddBoundingVertexTest" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_AddBoundingVertexTest" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)(arg1)->AddBoundingVertexTest((csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexTest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2_AddBoundingVertexTest__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox2_AddBoundingVertexTest__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_AddBoundingVertexTest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertexTest(csBox2 *,float,float)\n"
    "    AddBoundingVertexTest(csBox2 *,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexSmartTest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertexSmartTest",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertexSmartTest" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_AddBoundingVertexSmartTest" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_AddBoundingVertexSmartTest" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)(arg1)->AddBoundingVertexSmartTest(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexSmartTest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_AddBoundingVertexSmartTest",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_AddBoundingVertexSmartTest" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_AddBoundingVertexSmartTest" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_AddBoundingVertexSmartTest" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)(arg1)->AddBoundingVertexSmartTest((csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_AddBoundingVertexSmartTest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2_AddBoundingVertexSmartTest__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox2_AddBoundingVertexSmartTest__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_AddBoundingVertexSmartTest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertexSmartTest(csBox2 *,float,float)\n"
    "    AddBoundingVertexSmartTest(csBox2 *,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox2",0,0)) SWIG_fail;
  result = (csBox2 *)new csBox2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csBox2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csBox2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csBox2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  result = (csBox2 *)new csBox2((csVector2 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox2__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csBox2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox2",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csBox2" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csBox2" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csBox2" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csBox2" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csBox2 *)new csBox2(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox2__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csRect *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csBox2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csRect,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csBox2" "', argument " "1"" of type '" "csRect const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csBox2" "', argument " "1"" of type '" "csRect const &""'"); 
  }
  arg1 = reinterpret_cast< csRect * >(argp1);
  result = (csBox2 *)new csBox2((csRect const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csBox2__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csBox2__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csRect, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csBox2__SWIG_3(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_csBox2__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csBox2'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csBox2()\n"
    "    csBox2(csVector2 const &)\n"
    "    csBox2(float,float,float,float)\n"
    "    csBox2(csRect const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Set" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox2_Set" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_Set" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  (arg1)->Set((csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Set",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Set" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox2_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csBox2_Set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->Set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csBox2_Set__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csBox2_Set__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csBox2 *,csVector2 const &,csVector2 const &)\n"
    "    Set(csBox2 *,float,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SetMin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SetMin",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SetMin" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_SetMin" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_SetMin" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetMin(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_SetMax(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_SetMax",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_SetMax" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox2_SetMax" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox2_SetMax" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetMax(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_Description" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  result = ((csBox2 const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___iadd__" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___iadd__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___iadd__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  {
    csBox2 &_result_ref = (arg1)->operator +=((csBox2 const &)*arg2);
    result = (csBox2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___iadd__" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___iadd__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___iadd__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  {
    csBox2 &_result_ref = (arg1)->operator +=((csVector2 const &)*arg2);
    result = (csBox2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox2___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(csBox2 *,csBox2 const &)\n"
    "    operator +=(csBox2 *,csVector2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___imul__" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___imul__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___imul__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  {
    csBox2 &_result_ref = (arg1)->operator *=((csBox2 const &)*arg2);
    result = (csBox2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2_TestIntersect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2_TestIntersect",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2_TestIntersect" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2_TestIntersect" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2_TestIntersect" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (bool)((csBox2 const *)arg1)->TestIntersect((csBox2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___add__" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___add__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___add__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = csBox2_operator_Sa___SWIG_0((csBox2 const *)arg1,(csBox2 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox2(static_cast< const csBox2& >(result))), SWIGTYPE_p_csBox2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___mul__" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___mul__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___mul__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = csBox2_operator_Sm_((csBox2 const *)arg1,(csBox2 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox2(static_cast< const csBox2& >(result))), SWIGTYPE_p_csBox2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___ne__" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___ne__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___ne__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (bool)csBox2_operator_SN__Se_((csBox2 const *)arg1,(csBox2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___lt____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___lt__" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___lt__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___lt__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (bool)csBox2_operator_Sl___SWIG_0((csBox2 const *)arg1,(csBox2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csBox2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___gt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___gt__" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___gt__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___gt__" "', argument " "2"" of type '" "csBox2 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox2 * >(argp2);
  result = (bool)csBox2_operator_Sg_((csBox2 const *)arg1,(csBox2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___add__" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___add__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___add__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = csBox2_operator_Sa___SWIG_1((csBox2 const *)arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox2(static_cast< const csBox2& >(result))), SWIGTYPE_p_csBox2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csBox2___lt____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox2___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox2___lt__" "', argument " "1"" of type '" "csBox2 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox2___lt__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox2___lt__" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (bool)csBox2_operator_Sl___SWIG_1((csBox2 const *)arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox2___lt__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2___lt____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox2___lt____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_delete_csBox2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox2 *arg1 = (csBox2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csBox2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csBox2" "', argument " "1"" of type '" "csBox2 *""'"); 
  }
  arg1 = reinterpret_cast< csBox2 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csBox2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csBox2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csBox3_MinX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_MinX",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_MinX" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->MinX();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_MinY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_MinY",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_MinY" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->MinY();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_MinZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_MinZ",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_MinZ" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->MinZ();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_MaxX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_MaxX",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_MaxX" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->MaxX();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_MaxY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_MaxY",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_MaxY" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->MaxY();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_MaxZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_MaxZ",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_MaxZ" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->MaxZ();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Min__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Min",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Min" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_Min" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (float)((csBox3 const *)arg1)->Min(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Max__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Max",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Max" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_Max" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (float)((csBox3 const *)arg1)->Max(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Min__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Min",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Min" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  {
    csVector3 const &_result_ref = ((csBox3 const *)arg1)->Min();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Min(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csBox3_Min__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csBox3_Min__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_Min'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Min(csBox3 const *,size_t)\n"
    "    Min(csBox3 const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Max__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Max",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Max" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  {
    csVector3 const &_result_ref = ((csBox3 const *)arg1)->Max();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Max(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csBox3_Max__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csBox3_Max__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_Max'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Max(csBox3 const *,size_t)\n"
    "    Max(csBox3 const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Volume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Volume",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Volume" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->Volume();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Area",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Area" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->Area();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_IsNaN(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_IsNaN",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_IsNaN" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (bool)((csBox3 const *)arg1)->IsNaN();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetCorner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetCorner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetCorner" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetCorner" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((csBox3 const *)arg1)->GetCorner(arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetEdgeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  int *arg4 = 0 ;
  int *arg5 = 0 ;
  int *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetEdgeInfo",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetEdgeInfo" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetEdgeInfo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_GetEdgeInfo" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetEdgeInfo" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csBox3_GetEdgeInfo" "', argument " "4"" of type '" "int &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetEdgeInfo" "', argument " "4"" of type '" "int &""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csBox3_GetEdgeInfo" "', argument " "5"" of type '" "int &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetEdgeInfo" "', argument " "5"" of type '" "int &""'"); 
  }
  arg5 = reinterpret_cast< int * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csBox3_GetEdgeInfo" "', argument " "6"" of type '" "int &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetEdgeInfo" "', argument " "6"" of type '" "int &""'"); 
  }
  arg6 = reinterpret_cast< int * >(argp6);
  ((csBox3 const *)arg1)->GetEdgeInfo(arg2,*arg3,*arg4,*arg5,*arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetFaceEdges(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  uint8 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetFaceEdges",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetFaceEdges" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetFaceEdges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (uint8 *)((csBox3 const *)arg1)->GetFaceEdges(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetCenter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetCenter" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = ((csBox3 const *)arg1)->GetCenter();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SetCenter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SetCenter" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetCenter((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SetSize" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_SetSize" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_SetSize" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetSize((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetSize" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = ((csBox3 const *)arg1)->GetSize();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetSide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox2 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetSide",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetSide" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetSide" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((csBox3 const *)arg1)->GetSide(arg2);
  resultobj = SWIG_NewPointerObj((new csBox2(static_cast< const csBox2& >(result))), SWIGTYPE_p_csBox2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetAxisPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetAxisPlane",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetAxisPlane" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetAxisPlane" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_GetAxisPlane" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetAxisPlane" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csBox3_GetAxisPlane" "', argument " "4"" of type '" "float &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetAxisPlane" "', argument " "4"" of type '" "float &""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ((csBox3 const *)arg1)->GetAxisPlane(arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetVisibleSides(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetVisibleSides",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetVisibleSides" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_GetVisibleSides" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetVisibleSides" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_GetVisibleSides" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  result = (int)((csBox3 const *)arg1)->GetVisibleSides((csVector3 const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_OtherSide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_OtherSide",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "csBox3_OtherSide" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)csBox3::OtherSide(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetEdge__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSegment3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetEdge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetEdge" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetEdge" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((csBox3 const *)arg1)->GetEdge(arg2);
  resultobj = SWIG_NewPointerObj((new csSegment3(static_cast< const csSegment3& >(result))), SWIGTYPE_p_csSegment3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetEdge__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  csSegment3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetEdge",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetEdge" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetEdge" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csSegment3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_GetEdge" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetEdge" "', argument " "3"" of type '" "csSegment3 &""'"); 
  }
  arg3 = reinterpret_cast< csSegment3 * >(argp3);
  ((csBox3 const *)arg1)->GetEdge(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetEdge(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csBox3_GetEdge__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csSegment3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csBox3_GetEdge__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_GetEdge'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetEdge(csBox3 const *,int)\n"
    "    GetEdge(csBox3 const *,int,csSegment3 &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_In",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_In" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_In" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_In" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_In" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (bool)((csBox3 const *)arg1)->In(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_In",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_In" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_In" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_In" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)((csBox3 const *)arg1)->In((csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_In__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csBox3_In__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    In(csBox3 const *,float,float,float)\n"
    "    In(csBox3 const *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Overlap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Overlap",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Overlap" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_Overlap" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Overlap" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)((csBox3 const *)arg1)->Overlap((csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Contains" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_Contains" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Contains" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)((csBox3 const *)arg1)->Contains((csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Empty" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (bool)((csBox3 const *)arg1)->Empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_StartBoundingBox__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_StartBoundingBox",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_StartBoundingBox" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  (arg1)->StartBoundingBox();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_StartBoundingBox__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_StartBoundingBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_StartBoundingBox" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_StartBoundingBox" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_StartBoundingBox" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->StartBoundingBox((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_StartBoundingBox(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csBox3_StartBoundingBox__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_StartBoundingBox__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_StartBoundingBox'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    StartBoundingBox(csBox3 *)\n"
    "    StartBoundingBox(csBox3 *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertex",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertex" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_AddBoundingVertex" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_AddBoundingVertex" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_AddBoundingVertex" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->AddBoundingVertex(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertex" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AddBoundingVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AddBoundingVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->AddBoundingVertex((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertex(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_AddBoundingVertex__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csBox3_AddBoundingVertex__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_AddBoundingVertex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertex(csBox3 *,float,float,float)\n"
    "    AddBoundingVertex(csBox3 *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexSmart__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertexSmart",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertexSmart" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_AddBoundingVertexSmart" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_AddBoundingVertexSmart" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_AddBoundingVertexSmart" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->AddBoundingVertexSmart(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexSmart__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertexSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertexSmart" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AddBoundingVertexSmart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AddBoundingVertexSmart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->AddBoundingVertexSmart((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexSmart(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_AddBoundingVertexSmart__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csBox3_AddBoundingVertexSmart__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_AddBoundingVertexSmart'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertexSmart(csBox3 *,float,float,float)\n"
    "    AddBoundingVertexSmart(csBox3 *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexTest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertexTest",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertexTest" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_AddBoundingVertexTest" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_AddBoundingVertexTest" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_AddBoundingVertexTest" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (bool)(arg1)->AddBoundingVertexTest(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexTest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertexTest",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertexTest" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AddBoundingVertexTest" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AddBoundingVertexTest" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)(arg1)->AddBoundingVertexTest((csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexTest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_AddBoundingVertexTest__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csBox3_AddBoundingVertexTest__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_AddBoundingVertexTest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertexTest(csBox3 *,float,float,float)\n"
    "    AddBoundingVertexTest(csBox3 *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexSmartTest__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertexSmartTest",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertexSmartTest" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_AddBoundingVertexSmartTest" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_AddBoundingVertexSmartTest" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_AddBoundingVertexSmartTest" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (bool)(arg1)->AddBoundingVertexSmartTest(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexSmartTest__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingVertexSmartTest",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingVertexSmartTest" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AddBoundingVertexSmartTest" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AddBoundingVertexSmartTest" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)(arg1)->AddBoundingVertexSmartTest((csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingVertexSmartTest(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_AddBoundingVertexSmartTest__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csBox3_AddBoundingVertexSmartTest__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_AddBoundingVertexSmartTest'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBoundingVertexSmartTest(csBox3 *,float,float,float)\n"
    "    AddBoundingVertexSmartTest(csBox3 *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AddBoundingBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AddBoundingBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AddBoundingBox" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AddBoundingBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AddBoundingBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  (arg1)->AddBoundingBox((csBox3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox3",0,0)) SWIG_fail;
  result = (csBox3 *)new csBox3();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csBox3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csBox3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csBox3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  result = (csBox3 *)new csBox3((csVector3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox3__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox3",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csBox3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csBox3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csBox3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csBox3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (csBox3 *)new csBox3((csVector3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox3__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  csBox3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csBox3",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csBox3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csBox3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csBox3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csBox3" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_csBox3" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_csBox3" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  result = (csBox3 *)new csBox3(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csBox3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csBox3__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csBox3__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csBox3__SWIG_2(self, args);
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_csBox3__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csBox3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csBox3()\n"
    "    csBox3(csVector3 const &)\n"
    "    csBox3(csVector3 const &,csVector3 const &)\n"
    "    csBox3(float,float,float,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Set" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->Set((csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Set",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Set" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_Set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_Set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_Set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csBox3_Set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csBox3_Set" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csBox3_Set" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  (arg1)->Set(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 7); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csBox3_Set__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_csBox3_Set__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Set(csBox3 *,csVector3 const &,csVector3 const &)\n"
    "    Set(csBox3 *,float,float,float,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SetMin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  size_t arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SetMin",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SetMin" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_SetMin" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_SetMin" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetMin(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SetMax(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  size_t arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SetMax",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SetMax" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_SetMax" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_SetMax" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetMax(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetMin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetMin",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetMin" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetMin" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (float)(arg1)->GetMin(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetMax(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetMax",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetMax" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_GetMax" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (float)(arg1)->GetMax(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Description" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = ((csBox3 const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Split(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  float arg3 ;
  csBox3 *arg4 = 0 ;
  csBox3 *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Split",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Split" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_Split" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_Split" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csBox3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csBox3_Split" "', argument " "4"" of type '" "csBox3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Split" "', argument " "4"" of type '" "csBox3 &""'"); 
  }
  arg4 = reinterpret_cast< csBox3 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csBox3,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csBox3_Split" "', argument " "5"" of type '" "csBox3 &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Split" "', argument " "5"" of type '" "csBox3 &""'"); 
  }
  arg5 = reinterpret_cast< csBox3 * >(argp5);
  ((csBox3 const *)arg1)->Split(arg2,arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_TestSplit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_TestSplit",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_TestSplit" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csBox3_TestSplit" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_TestSplit" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (int)((csBox3 const *)arg1)->TestSplit(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentX__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AdjacentX",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AdjacentX" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AdjacentX" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AdjacentX" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_AdjacentX" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)((csBox3 const *)arg1)->AdjacentX((csBox3 const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentX__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AdjacentX",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AdjacentX" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AdjacentX" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AdjacentX" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)((csBox3 const *)arg1)->AdjacentX((csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentX(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_AdjacentX__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox3_AdjacentX__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_AdjacentX'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AdjacentX(csBox3 const *,csBox3 const &,float)\n"
    "    AdjacentX(csBox3 const *,csBox3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentY__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AdjacentY",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AdjacentY" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AdjacentY" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AdjacentY" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_AdjacentY" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)((csBox3 const *)arg1)->AdjacentY((csBox3 const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentY__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AdjacentY",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AdjacentY" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AdjacentY" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AdjacentY" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)((csBox3 const *)arg1)->AdjacentY((csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentY(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_AdjacentY__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox3_AdjacentY__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_AdjacentY'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AdjacentY(csBox3 const *,csBox3 const &,float)\n"
    "    AdjacentY(csBox3 const *,csBox3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentZ__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AdjacentZ",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AdjacentZ" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AdjacentZ" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AdjacentZ" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_AdjacentZ" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)((csBox3 const *)arg1)->AdjacentZ((csBox3 const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentZ__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_AdjacentZ",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_AdjacentZ" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_AdjacentZ" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_AdjacentZ" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)((csBox3 const *)arg1)->AdjacentZ((csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_AdjacentZ(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_AdjacentZ__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox3_AdjacentZ__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_AdjacentZ'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AdjacentZ(csBox3 const *,csBox3 const &,float)\n"
    "    AdjacentZ(csBox3 const *,csBox3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Adjacent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Adjacent",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Adjacent" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_Adjacent" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Adjacent" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_Adjacent" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (int)((csBox3 const *)arg1)->Adjacent((csBox3 const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Adjacent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Adjacent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Adjacent" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_Adjacent" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Adjacent" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (int)((csBox3 const *)arg1)->Adjacent((csBox3 const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Adjacent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3_Adjacent__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csBox3_Adjacent__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_Adjacent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Adjacent(csBox3 const *,csBox3 const &,float)\n"
    "    Adjacent(csBox3 const *,csBox3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_CalculatePointSegment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_CalculatePointSegment",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_CalculatePointSegment" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_CalculatePointSegment" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_CalculatePointSegment" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (int)((csBox3 const *)arg1)->CalculatePointSegment((csVector3 const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetConvexOutline__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = (csVector3 *) 0 ;
  int *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetConvexOutline",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetConvexOutline" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_GetConvexOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetConvexOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_GetConvexOutline" "', argument " "3"" of type '" "csVector3 *""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csBox3_GetConvexOutline" "', argument " "4"" of type '" "int &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetConvexOutline" "', argument " "4"" of type '" "int &""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csBox3_GetConvexOutline" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ((csBox3 const *)arg1)->GetConvexOutline((csVector3 const &)*arg2,arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetConvexOutline__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = (csVector3 *) 0 ;
  int *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_GetConvexOutline",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_GetConvexOutline" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_GetConvexOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetConvexOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_GetConvexOutline" "', argument " "3"" of type '" "csVector3 *""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csBox3_GetConvexOutline" "', argument " "4"" of type '" "int &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_GetConvexOutline" "', argument " "4"" of type '" "int &""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  ((csBox3 const *)arg1)->GetConvexOutline((csVector3 const &)*arg2,arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_GetConvexOutline(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_int, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_csBox3_GetConvexOutline__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_int, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_csBox3_GetConvexOutline__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_GetConvexOutline'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetConvexOutline(csBox3 const *,csVector3 const &,csVector3 *,int &,bool)\n"
    "    GetConvexOutline(csBox3 const *,csVector3 const &,csVector3 *,int &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_Between(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  csBox3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_Between",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_Between" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_Between" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Between" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_Between" "', argument " "3"" of type '" "csBox3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_Between" "', argument " "3"" of type '" "csBox3 const &""'"); 
  }
  arg3 = reinterpret_cast< csBox3 * >(argp3);
  result = (bool)((csBox3 const *)arg1)->Between((csBox3 const &)*arg2,(csBox3 const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ManhattanDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_ManhattanDistance",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_ManhattanDistance" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_ManhattanDistance" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ManhattanDistance" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_ManhattanDistance" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ManhattanDistance" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  ((csBox3 const *)arg1)->ManhattanDistance((csBox3 const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SquaredOriginDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SquaredOriginDist",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SquaredOriginDist" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->SquaredOriginDist();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SquaredOriginMaxDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SquaredOriginMaxDist",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SquaredOriginMaxDist" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (float)((csBox3 const *)arg1)->SquaredOriginMaxDist();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SquaredPosDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SquaredPosDist",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SquaredPosDist" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_SquaredPosDist" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_SquaredPosDist" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (float)((csBox3 const *)arg1)->SquaredPosDist((csVector3 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_SquaredPosMaxDist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_SquaredPosMaxDist",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_SquaredPosMaxDist" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_SquaredPosMaxDist" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_SquaredPosMaxDist" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (float)((csBox3 const *)arg1)->SquaredPosMaxDist((csVector3 const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectBox__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csTransform *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  csBox2 *arg6 = 0 ;
  float *arg7 = 0 ;
  float *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_ProjectBox",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_ProjectBox" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_ProjectBox" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_ProjectBox" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_ProjectBox" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csBox3_ProjectBox" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_csBox2,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csBox3_ProjectBox" "', argument " "6"" of type '" "csBox2 &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "6"" of type '" "csBox2 &""'"); 
  }
  arg6 = reinterpret_cast< csBox2 * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "csBox3_ProjectBox" "', argument " "7"" of type '" "float &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "7"" of type '" "float &""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "csBox3_ProjectBox" "', argument " "8"" of type '" "float &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "8"" of type '" "float &""'"); 
  }
  arg8 = reinterpret_cast< float * >(argp8);
  result = (bool)((csBox3 const *)arg1)->ProjectBox((csTransform const &)*arg2,arg3,arg4,arg5,*arg6,*arg7,*arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectBox__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csTransform *arg2 = 0 ;
  CS::Math::Matrix4 *arg3 = 0 ;
  csBox2 *arg4 = 0 ;
  float *arg5 = 0 ;
  float *arg6 = 0 ;
  int arg7 ;
  int arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_ProjectBox",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_ProjectBox" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_ProjectBox" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CS__Math__Matrix4,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csBox3_ProjectBox" "', argument " "3"" of type '" "CS::Math::Matrix4 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "3"" of type '" "CS::Math::Matrix4 const &""'"); 
  }
  arg3 = reinterpret_cast< CS::Math::Matrix4 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csBox2,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csBox3_ProjectBox" "', argument " "4"" of type '" "csBox2 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "4"" of type '" "csBox2 &""'"); 
  }
  arg4 = reinterpret_cast< csBox2 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csBox3_ProjectBox" "', argument " "5"" of type '" "float &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "5"" of type '" "float &""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csBox3_ProjectBox" "', argument " "6"" of type '" "float &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBox" "', argument " "6"" of type '" "float &""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csBox3_ProjectBox" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  ecode8 = SWIG_AsVal_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "csBox3_ProjectBox" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = static_cast< int >(val8);
  result = (bool)((csBox3 const *)arg1)->ProjectBox((csTransform const &)*arg2,(CS::Math::Matrix4 const &)*arg3,*arg4,*arg5,*arg6,arg7,arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectBox(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CS__Math__Matrix4, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csBox2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_float, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_int(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_csBox3_ProjectBox__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_csBox2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_float, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_float, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_csBox3_ProjectBox__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_ProjectBox'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ProjectBox(csBox3 const *,csTransform const &,float,float,float,csBox2 &,float &,float &)\n"
    "    ProjectBox(csBox3 const *,csTransform const &,CS::Math::Matrix4 const &,csBox2 &,float &,float &,int,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectOutline__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csTransform *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  csPoly2D *arg6 = 0 ;
  float *arg7 = 0 ;
  float *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_ProjectOutline",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_ProjectOutline" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_ProjectOutline" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_ProjectOutline" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_ProjectOutline" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csBox3_ProjectOutline" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_csPoly2D,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csBox3_ProjectOutline" "', argument " "6"" of type '" "csPoly2D &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "6"" of type '" "csPoly2D &""'"); 
  }
  arg6 = reinterpret_cast< csPoly2D * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "csBox3_ProjectOutline" "', argument " "7"" of type '" "float &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "7"" of type '" "float &""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "csBox3_ProjectOutline" "', argument " "8"" of type '" "float &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "8"" of type '" "float &""'"); 
  }
  arg8 = reinterpret_cast< float * >(argp8);
  result = (bool)((csBox3 const *)arg1)->ProjectOutline((csTransform const &)*arg2,arg3,arg4,arg5,*arg6,*arg7,*arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectOutline__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  int arg3 ;
  float arg4 ;
  csArray< csVector2 > *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_ProjectOutline",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_ProjectOutline" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_ProjectOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_ProjectOutline" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_ProjectOutline" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csBox3_ProjectOutline" "', argument " "5"" of type '" "csArray< csVector2 > &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "5"" of type '" "csArray< csVector2 > &""'"); 
  }
  arg5 = reinterpret_cast< csArray< csVector2 > * >(argp5);
  result = (bool)((csBox3 const *)arg1)->ProjectOutline((csVector3 const &)*arg2,arg3,arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectOutline__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  int arg3 ;
  float arg4 ;
  csPoly2D *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_ProjectOutline",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_ProjectOutline" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_ProjectOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_ProjectOutline" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_ProjectOutline" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csPoly2D,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csBox3_ProjectOutline" "', argument " "5"" of type '" "csPoly2D &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectOutline" "', argument " "5"" of type '" "csPoly2D &""'"); 
  }
  arg5 = reinterpret_cast< csPoly2D * >(argp5);
  result = (bool)((csBox3 const *)arg1)->ProjectOutline((csVector3 const &)*arg2,arg3,arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectOutline(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_csBox3_ProjectOutline__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_csPoly2D, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_csBox3_ProjectOutline__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_csPoly2D, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_float, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_float, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_csBox3_ProjectOutline__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3_ProjectOutline'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ProjectOutline(csBox3 const *,csTransform const &,float,float,float,csPoly2D &,float &,float &)\n"
    "    ProjectOutline(csBox3 const *,csVector3 const &,int,float,csArray< csVector2 > &)\n"
    "    ProjectOutline(csBox3 const *,csVector3 const &,int,float,csPoly2D &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_ProjectBoxAndOutline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csTransform *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  csBox2 *arg6 = 0 ;
  csPoly2D *arg7 = 0 ;
  float *arg8 = 0 ;
  float *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_ProjectBoxAndOutline",9,9,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "2"" of type '" "csTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csTransform * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_csBox2,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "6"" of type '" "csBox2 &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "6"" of type '" "csBox2 &""'"); 
  }
  arg6 = reinterpret_cast< csBox2 * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_csPoly2D,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "7"" of type '" "csPoly2D &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "7"" of type '" "csPoly2D &""'"); 
  }
  arg7 = reinterpret_cast< csPoly2D * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "8"" of type '" "float &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "8"" of type '" "float &""'"); 
  }
  arg8 = reinterpret_cast< float * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "9"" of type '" "float &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_ProjectBoxAndOutline" "', argument " "9"" of type '" "float &""'"); 
  }
  arg9 = reinterpret_cast< float * >(argp9);
  result = (bool)((csBox3 const *)arg1)->ProjectBoxAndOutline((csTransform const &)*arg2,arg3,arg4,arg5,*arg6,*arg7,*arg8,*arg9);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___iadd__" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___iadd__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___iadd__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  {
    csBox3 &_result_ref = (arg1)->operator +=((csBox3 const &)*arg2);
    result = (csBox3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___iadd__" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___iadd__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___iadd__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  {
    csBox3 &_result_ref = (arg1)->operator +=((csVector3 const &)*arg2);
    result = (csBox3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csBox3___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(csBox3 *,csBox3 const &)\n"
    "    operator +=(csBox3 *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___imul__" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___imul__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___imul__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  {
    csBox3 &_result_ref = (arg1)->operator *=((csBox3 const &)*arg2);
    result = (csBox3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3_TestIntersect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3_TestIntersect",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3_TestIntersect" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3_TestIntersect" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3_TestIntersect" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)((csBox3 const *)arg1)->TestIntersect((csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___add__" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___add__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___add__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = csBox3_operator_Sa___SWIG_0((csBox3 const *)arg1,(csBox3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox3(static_cast< const csBox3& >(result))), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___mul__" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___mul__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___mul__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = csBox3_operator_Sm_((csBox3 const *)arg1,(csBox3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox3(static_cast< const csBox3& >(result))), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___ne__" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___ne__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___ne__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)csBox3_operator_SN__Se_((csBox3 const *)arg1,(csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___lt____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___lt__" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___lt__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___lt__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)csBox3_operator_Sl___SWIG_0((csBox3 const *)arg1,(csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___gt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___gt__" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___gt__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___gt__" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  result = (bool)csBox3_operator_Sg_((csBox3 const *)arg1,(csBox3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csBox3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___add__" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___add__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___add__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = csBox3_operator_Sa___SWIG_1((csBox3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj((new csBox3(static_cast< const csBox3& >(result))), SWIGTYPE_p_csBox3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_csBox3___lt____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csBox3___lt__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csBox3___lt__" "', argument " "1"" of type '" "csBox3 const *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csBox3___lt__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csBox3___lt__" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)csBox3_operator_Sl___SWIG_1((csBox3 const *)arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csBox3___lt__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csBox3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3___lt____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csBox3___lt____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_delete_csBox3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = (csBox3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csBox3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csBox3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csBox3" "', argument " "1"" of type '" "csBox3 *""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csBox3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csBox3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csOBB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOBB",0,0)) SWIG_fail;
  result = (csOBB *)new csOBB();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOBB, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csOBB *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOBB",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csOBB,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csOBB" "', argument " "1"" of type '" "csOBB const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBB" "', argument " "1"" of type '" "csOBB const &""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  result = (csOBB *)new csOBB((csOBB const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOBB, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBB__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csOBB *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOBB",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csOBB" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBB" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (csOBB *)new csOBB((csBox3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOBB, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBB__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csOBB *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOBB",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csOBB" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBB" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csOBB" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBB" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csOBB" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBB" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  result = (csOBB *)new csOBB((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOBB, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBB(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csOBB__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csOBB, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csOBB__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csBox3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csOBB__SWIG_2(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_csOBB__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csOBB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csOBB()\n"
    "    csOBB(csOBB const &)\n"
    "    csOBB(csBox3 const &)\n"
    "    csOBB(csVector3 const &,csVector3 const &,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_AddBoundingVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_AddBoundingVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_AddBoundingVertex" "', argument " "1"" of type '" "csOBB *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOBB_AddBoundingVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBB_AddBoundingVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->AddBoundingVertex((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_GetCorner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_GetCorner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_GetCorner" "', argument " "1"" of type '" "csOBB const *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csOBB_GetCorner" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((csOBB const *)arg1)->GetCorner(arg2);
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_GetMatrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_GetMatrix",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_GetMatrix" "', argument " "1"" of type '" "csOBB const *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  {
    csMatrix3 const &_result_ref = ((csOBB const *)arg1)->GetMatrix();
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_GetMatrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_GetMatrix",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_GetMatrix" "', argument " "1"" of type '" "csOBB *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  {
    csMatrix3 &_result_ref = (arg1)->GetMatrix();
    result = (csMatrix3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csMatrix3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_GetMatrix(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBB, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csOBB_GetMatrix__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBB, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csOBB_GetMatrix__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csOBB_GetMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetMatrix(csOBB const *)\n"
    "    GetMatrix(csOBB *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_Volume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_Volume",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_Volume" "', argument " "1"" of type '" "csOBB *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  result = (float)(arg1)->Volume();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_FindOBB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  int arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_FindOBB",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_FindOBB" "', argument " "1"" of type '" "csOBB *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOBB_FindOBB" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csOBB_FindOBB" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csOBB_FindOBB" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->FindOBB((csVector3 const *)arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_FindOBB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_FindOBB",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_FindOBB" "', argument " "1"" of type '" "csOBB *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOBB_FindOBB" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csOBB_FindOBB" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->FindOBB((csVector3 const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_FindOBB(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBB, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_csOBB_FindOBB__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBB, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_csOBB_FindOBB__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csOBB_FindOBB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    FindOBB(csOBB *,csVector3 const *,int,float)\n"
    "    FindOBB(csOBB *,csVector3 const *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBB_FindOBBAccurate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBB_FindOBBAccurate",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBB_FindOBBAccurate" "', argument " "1"" of type '" "csOBB *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOBB_FindOBBAccurate" "', argument " "2"" of type '" "csVector3 const *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csOBB_FindOBBAccurate" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->FindOBBAccurate((csVector3 const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csOBB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = (csOBB *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csOBB",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBB, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csOBB" "', argument " "1"" of type '" "csOBB *""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csOBB_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csOBB, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csOBBFrozen_Copy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBBFrozen *arg1 = (csOBBFrozen *) 0 ;
  csOBB *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBBFrozen_Copy",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBBFrozen, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBBFrozen_Copy" "', argument " "1"" of type '" "csOBBFrozen *""'"); 
  }
  arg1 = reinterpret_cast< csOBBFrozen * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csOBB,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOBBFrozen_Copy" "', argument " "2"" of type '" "csOBB const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_Copy" "', argument " "2"" of type '" "csOBB const &""'"); 
  }
  arg2 = reinterpret_cast< csOBB * >(argp2);
  (arg1)->Copy((csOBB const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBBFrozen_Copy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBBFrozen *arg1 = (csOBBFrozen *) 0 ;
  csOBB *arg2 = 0 ;
  csReversibleTransform *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBBFrozen_Copy",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBBFrozen, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBBFrozen_Copy" "', argument " "1"" of type '" "csOBBFrozen *""'"); 
  }
  arg1 = reinterpret_cast< csOBBFrozen * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csOBB,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOBBFrozen_Copy" "', argument " "2"" of type '" "csOBB const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_Copy" "', argument " "2"" of type '" "csOBB const &""'"); 
  }
  arg2 = reinterpret_cast< csOBB * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csOBBFrozen_Copy" "', argument " "3"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_Copy" "', argument " "3"" of type '" "csReversibleTransform const &""'"); 
  }
  arg3 = reinterpret_cast< csReversibleTransform * >(argp3);
  (arg1)->Copy((csOBB const &)*arg2,(csReversibleTransform const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBBFrozen_Copy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBBFrozen, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csOBB, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_csOBBFrozen_Copy__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBBFrozen, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csOBB, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csReversibleTransform, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_csOBBFrozen_Copy__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csOBBFrozen_Copy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Copy(csOBBFrozen *,csOBB const &)\n"
    "    Copy(csOBBFrozen *,csOBB const &,csReversibleTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBBFrozen__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBBFrozen *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOBBFrozen",0,0)) SWIG_fail;
  result = (csOBBFrozen *)new csOBBFrozen();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOBBFrozen, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBBFrozen__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csOBBFrozen *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOBBFrozen",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csOBB,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csOBBFrozen" "', argument " "1"" of type '" "csOBB const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBBFrozen" "', argument " "1"" of type '" "csOBB const &""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  result = (csOBBFrozen *)new csOBBFrozen((csOBB const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOBBFrozen, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBBFrozen__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBB *arg1 = 0 ;
  csReversibleTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csOBBFrozen *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csOBBFrozen",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csOBB,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csOBBFrozen" "', argument " "1"" of type '" "csOBB const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBBFrozen" "', argument " "1"" of type '" "csOBB const &""'"); 
  }
  arg1 = reinterpret_cast< csOBB * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csReversibleTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csOBBFrozen" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csOBBFrozen" "', argument " "2"" of type '" "csReversibleTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csReversibleTransform * >(argp2);
  result = (csOBBFrozen *)new csOBBFrozen((csOBB const &)*arg1,(csReversibleTransform const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csOBBFrozen, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csOBBFrozen(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csOBBFrozen__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csOBB, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csOBBFrozen__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csOBB, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csReversibleTransform, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csOBBFrozen__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csOBBFrozen'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csOBBFrozen()\n"
    "    csOBBFrozen(csOBB const &)\n"
    "    csOBBFrozen(csOBB const &,csReversibleTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBBFrozen_GetCorner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBBFrozen *arg1 = (csOBBFrozen *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBBFrozen_GetCorner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBBFrozen, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBBFrozen_GetCorner" "', argument " "1"" of type '" "csOBBFrozen const *""'"); 
  }
  arg1 = reinterpret_cast< csOBBFrozen * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csOBBFrozen_GetCorner" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    csVector3 const &_result_ref = ((csOBBFrozen const *)arg1)->GetCorner(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBBFrozen_ProjectOBB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBBFrozen *arg1 = (csOBBFrozen *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  csBox2 *arg5 = 0 ;
  float *arg6 = 0 ;
  float *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBBFrozen_ProjectOBB",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBBFrozen, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "1"" of type '" "csOBBFrozen *""'"); 
  }
  arg1 = reinterpret_cast< csOBBFrozen * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csBox2,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "5"" of type '" "csBox2 &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_ProjectOBB" "', argument " "5"" of type '" "csBox2 &""'"); 
  }
  arg5 = reinterpret_cast< csBox2 * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "6"" of type '" "float &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_ProjectOBB" "', argument " "6"" of type '" "float &""'"); 
  }
  arg6 = reinterpret_cast< float * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "7"" of type '" "float &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_ProjectOBB" "', argument " "7"" of type '" "float &""'"); 
  }
  arg7 = reinterpret_cast< float * >(argp7);
  result = (bool)(arg1)->ProjectOBB(arg2,arg3,arg4,*arg5,*arg6,*arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBBFrozen_ProjectOBB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBBFrozen *arg1 = (csOBBFrozen *) 0 ;
  CS::Math::Matrix4 *arg2 = 0 ;
  csBox2 *arg3 = 0 ;
  float *arg4 = 0 ;
  float *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csOBBFrozen_ProjectOBB",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBBFrozen, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "1"" of type '" "csOBBFrozen *""'"); 
  }
  arg1 = reinterpret_cast< csOBBFrozen * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Math__Matrix4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "2"" of type '" "CS::Math::Matrix4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_ProjectOBB" "', argument " "2"" of type '" "CS::Math::Matrix4 const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Math::Matrix4 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csBox2,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "3"" of type '" "csBox2 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_ProjectOBB" "', argument " "3"" of type '" "csBox2 &""'"); 
  }
  arg3 = reinterpret_cast< csBox2 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "4"" of type '" "float &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_ProjectOBB" "', argument " "4"" of type '" "float &""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "5"" of type '" "float &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csOBBFrozen_ProjectOBB" "', argument " "5"" of type '" "float &""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "csOBBFrozen_ProjectOBB" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  result = (bool)(arg1)->ProjectOBB((CS::Math::Matrix4 const &)*arg2,*arg3,*arg4,*arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csOBBFrozen_ProjectOBB(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 7); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBBFrozen, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Math__Matrix4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csBox2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_csOBBFrozen_ProjectOBB__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csOBBFrozen, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_csBox2, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_float, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_float, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_csOBBFrozen_ProjectOBB__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csOBBFrozen_ProjectOBB'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ProjectOBB(csOBBFrozen *,float,float,float,csBox2 &,float &,float &)\n"
    "    ProjectOBB(csOBBFrozen *,CS::Math::Matrix4 const &,csBox2 &,float &,float &,int,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csOBBFrozen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csOBBFrozen *arg1 = (csOBBFrozen *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csOBBFrozen",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csOBBFrozen, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csOBBFrozen" "', argument " "1"" of type '" "csOBBFrozen *""'"); 
  }
  arg1 = reinterpret_cast< csOBBFrozen * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csOBBFrozen_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csOBBFrozen, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csSegment2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector2 *arg1 = 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSegment2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSegment2",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csSegment2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csSegment2" "', argument " "1"" of type '" "csVector2 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csSegment2" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csSegment2" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  result = (csSegment2 *)new csSegment2((csVector2 const &)*arg1,(csVector2 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSegment2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSegment2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSegment2",0,0)) SWIG_fail;
  result = (csSegment2 *)new csSegment2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSegment2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSegment2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csSegment2__SWIG_1(self, args);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csSegment2__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csSegment2'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csSegment2(csVector2 const &,csVector2 const &)\n"
    "    csSegment2()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csSegment2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = (csSegment2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csSegment2",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csSegment2" "', argument " "1"" of type '" "csSegment2 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment2_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = (csSegment2 *) 0 ;
  csVector2 *arg2 = 0 ;
  csVector2 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment2_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment2_Set" "', argument " "1"" of type '" "csSegment2 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSegment2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment2_Set" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csSegment2_Set" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment2_Set" "', argument " "3"" of type '" "csVector2 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector2 * >(argp3);
  (arg1)->Set((csVector2 const &)*arg2,(csVector2 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment2_SetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = (csSegment2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment2_SetStart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment2_SetStart" "', argument " "1"" of type '" "csSegment2 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSegment2_SetStart" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment2_SetStart" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->SetStart((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment2_SetEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = (csSegment2 *) 0 ;
  csVector2 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment2_SetEnd",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment2_SetEnd" "', argument " "1"" of type '" "csSegment2 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSegment2_SetEnd" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment2_SetEnd" "', argument " "2"" of type '" "csVector2 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector2 * >(argp2);
  (arg1)->SetEnd((csVector2 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment2_Start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = (csSegment2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment2_Start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment2_Start" "', argument " "1"" of type '" "csSegment2 const *""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  {
    csVector2 const &_result_ref = ((csSegment2 const *)arg1)->Start();
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment2_End(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment2 *arg1 = (csSegment2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector2 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment2_End",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment2_End" "', argument " "1"" of type '" "csSegment2 const *""'"); 
  }
  arg1 = reinterpret_cast< csSegment2 * >(argp1);
  {
    csVector2 const &_result_ref = ((csSegment2 const *)arg1)->End();
    result = (csVector2 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csSegment2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csSegment2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csSegment3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csSegment3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSegment3",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csSegment3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csSegment3" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csSegment3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csSegment3" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (csSegment3 *)new csSegment3((csVector3 const &)*arg1,(csVector3 const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSegment3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSegment3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSegment3",0,0)) SWIG_fail;
  result = (csSegment3 *)new csSegment3();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csSegment3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csSegment3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csSegment3__SWIG_1(self, args);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csVector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csSegment3__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csSegment3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csSegment3(csVector3 const &,csVector3 const &)\n"
    "    csSegment3()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment3_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = (csSegment3 *) 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment3_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment3_Set" "', argument " "1"" of type '" "csSegment3 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSegment3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment3_Set" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csSegment3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment3_Set" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->Set((csVector3 const &)*arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment3_SetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = (csSegment3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment3_SetStart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment3_SetStart" "', argument " "1"" of type '" "csSegment3 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSegment3_SetStart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment3_SetStart" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetStart((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment3_SetEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = (csSegment3 *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment3_SetEnd",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment3_SetEnd" "', argument " "1"" of type '" "csSegment3 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csSegment3_SetEnd" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csSegment3_SetEnd" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetEnd((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment3_Start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = (csSegment3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment3_Start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment3_Start" "', argument " "1"" of type '" "csSegment3 const *""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  {
    csVector3 const &_result_ref = ((csSegment3 const *)arg1)->Start();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSegment3_End(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = (csSegment3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSegment3_End",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSegment3_End" "', argument " "1"" of type '" "csSegment3 const *""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  {
    csVector3 const &_result_ref = ((csSegment3 const *)arg1)->End();
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csSegment3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csSegment3 *arg1 = (csSegment3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csSegment3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csSegment3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csSegment3" "', argument " "1"" of type '" "csSegment3 *""'"); 
  }
  arg1 = reinterpret_cast< csSegment3 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csSegment3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csSegment3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csPath *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csPath",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csPath" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csPath *)new csPath(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csPath, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csPath",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csPath" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_Length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_Length",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_Length" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  result = (int)(arg1)->Length();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_QueryObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_QueryObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_QueryObject" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  result = (iObject *)(arg1)->QueryObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_CalculateAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_CalculateAtTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_CalculateAtTime" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_CalculateAtTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->CalculateAtTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetCurrentIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetCurrentIndex",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetCurrentIndex" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  result = (int)(arg1)->GetCurrentIndex();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetTime" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_GetTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float)(arg1)->GetTime(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetTime",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetTime" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_SetTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPath_SetTime" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetTime(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetTimes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetTimes",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetTimes" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPath_SetTimes" "', argument " "2"" of type '" "float const *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  (arg1)->SetTimes((float const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetTimes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetTimes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetTimes" "', argument " "1"" of type '" "csPath const *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  result = (float *)((csPath const *)arg1)->GetTimes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetPositionVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetPositionVectors",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetPositionVectors" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPath_SetPositionVectors" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetPositionVectors(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetUpVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetUpVectors",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetUpVectors" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPath_SetUpVectors" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetUpVectors(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetForwardVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetForwardVectors",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetForwardVectors" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPath_SetForwardVectors" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetForwardVectors(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetPositionVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetPositionVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetPositionVector" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_SetPositionVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPath_SetPositionVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_SetPositionVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetPositionVector(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetUpVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetUpVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetUpVector" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_SetUpVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPath_SetUpVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_SetUpVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetUpVector(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_SetForwardVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_SetForwardVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_SetForwardVector" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_SetForwardVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPath_SetForwardVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_SetForwardVector" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetForwardVector(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetPositionVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetPositionVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetPositionVector" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_GetPositionVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPath_GetPositionVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_GetPositionVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->GetPositionVector(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetUpVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetUpVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetUpVector" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_GetUpVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPath_GetUpVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_GetUpVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->GetUpVector(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetForwardVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetForwardVector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetForwardVector" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_GetForwardVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csPath_GetForwardVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_GetForwardVector" "', argument " "3"" of type '" "csVector3 &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->GetForwardVector(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetInterpolatedPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetInterpolatedPosition",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetInterpolatedPosition" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPath_GetInterpolatedPosition" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_GetInterpolatedPosition" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->GetInterpolatedPosition(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetInterpolatedUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetInterpolatedUp",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetInterpolatedUp" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPath_GetInterpolatedUp" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_GetInterpolatedUp" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->GetInterpolatedUp(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetInterpolatedForward(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetInterpolatedForward",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetInterpolatedForward" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csPath_GetInterpolatedForward" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csPath_GetInterpolatedForward" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->GetInterpolatedForward(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetDimensionValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetDimensionValues",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetDimensionValues" "', argument " "1"" of type '" "csPath const *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_GetDimensionValues" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float *)((csPath const *)arg1)->GetDimensionValues(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_GetDimensionValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_GetDimensionValue",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_GetDimensionValue" "', argument " "1"" of type '" "csPath const *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_GetDimensionValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csPath_GetDimensionValue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (float)((csPath const *)arg1)->GetDimensionValue(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_InsertPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_InsertPoint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_InsertPoint" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_InsertPoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->InsertPoint(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csPath_RemovePoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csPath *arg1 = (csPath *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csPath_RemovePoint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csPath, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csPath_RemovePoint" "', argument " "1"" of type '" "csPath *""'"); 
  }
  arg1 = reinterpret_cast< csPath * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csPath_RemovePoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->RemovePoint(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csPath_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csPath, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_pycsTriangleMesh_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMesh,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMesh,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMesh_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMesh_IncRef" "', argument " "1"" of type '" "scfImplementation1< csTriangleMesh,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMesh,iTriangleMesh > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMesh_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMesh,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMesh,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMesh_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMesh_DecRef" "', argument " "1"" of type '" "scfImplementation1< csTriangleMesh,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMesh,iTriangleMesh > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMesh_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMesh,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMesh,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMesh_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMesh_GetRefCount" "', argument " "1"" of type '" "scfImplementation1< csTriangleMesh,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMesh,iTriangleMesh > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMesh_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMesh,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMesh,iTriangleMesh > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMesh_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMesh_QueryInterface" "', argument " "1"" of type '" "scfImplementation1< csTriangleMesh,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMesh,iTriangleMesh > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pycsTriangleMesh_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pycsTriangleMesh_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMesh_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMesh,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMesh,iTriangleMesh > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMesh_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMesh_AddRefOwner" "', argument " "1"" of type '" "scfImplementation1< csTriangleMesh,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMesh,iTriangleMesh > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pycsTriangleMesh_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMesh_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMesh,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMesh,iTriangleMesh > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMesh_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMesh_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementation1< csTriangleMesh,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMesh,iTriangleMesh > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pycsTriangleMesh_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMesh_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMesh,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMesh,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMesh_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMesh_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementation1< csTriangleMesh,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMesh,iTriangleMesh > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pycsTriangleMesh_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_pycsTriangleMeshBox_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshBox,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMeshBox_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMeshBox_IncRef" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshBox,iTriangleMesh > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMeshBox_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshBox,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMeshBox_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMeshBox_DecRef" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshBox,iTriangleMesh > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMeshBox_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshBox,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMeshBox_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMeshBox_GetRefCount" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshBox,iTriangleMesh > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMeshBox_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshBox,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMeshBox_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMeshBox_QueryInterface" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshBox,iTriangleMesh > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pycsTriangleMeshBox_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pycsTriangleMeshBox_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMeshBox_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshBox,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMeshBox_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMeshBox_AddRefOwner" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshBox,iTriangleMesh > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pycsTriangleMeshBox_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMeshBox_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshBox,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMeshBox_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMeshBox_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshBox,iTriangleMesh > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pycsTriangleMeshBox_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pycsTriangleMeshBox_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshBox,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"pycsTriangleMeshBox_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pycsTriangleMeshBox_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshBox,iTriangleMesh > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pycsTriangleMeshBox_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_scfTriangleMeshPointer_IncRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfTriangleMeshPointer_IncRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfTriangleMeshPointer_IncRef" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshPointer,iTriangleMesh > * >(argp1);
  (arg1)->IncRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfTriangleMeshPointer_DecRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfTriangleMeshPointer_DecRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfTriangleMeshPointer_DecRef" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshPointer,iTriangleMesh > * >(argp1);
  (arg1)->DecRef();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfTriangleMeshPointer_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfTriangleMeshPointer_GetRefCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfTriangleMeshPointer_GetRefCount" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshPointer,iTriangleMesh > * >(argp1);
  result = (int)(arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfTriangleMeshPointer_QueryInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) 0 ;
  scfInterfaceID arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfTriangleMeshPointer_QueryInterface",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfTriangleMeshPointer_QueryInterface" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshPointer,iTriangleMesh > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scfTriangleMeshPointer_QueryInterface" "', argument " "2"" of type '" "scfInterfaceID""'");
  } 
  arg2 = static_cast< scfInterfaceID >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "scfTriangleMeshPointer_QueryInterface" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (void *)(arg1)->QueryInterface(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfTriangleMeshPointer_AddRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfTriangleMeshPointer_AddRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfTriangleMeshPointer_AddRefOwner" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshPointer,iTriangleMesh > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfTriangleMeshPointer_AddRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->AddRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfTriangleMeshPointer_RemoveRefOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) 0 ;
  void **arg2 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfTriangleMeshPointer_RemoveRefOwner",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfTriangleMeshPointer_RemoveRefOwner" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshPointer,iTriangleMesh > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "scfTriangleMeshPointer_RemoveRefOwner" "', argument " "2"" of type '" "void **""'"); 
  }
  arg2 = reinterpret_cast< void ** >(argp2);
  (arg1)->RemoveRefOwner(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scfTriangleMeshPointer_GetInterfaceMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *arg1 = (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  scfInterfaceMetadataList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"scfTriangleMeshPointer_GetInterfaceMetadata",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scfTriangleMeshPointer_GetInterfaceMetadata" "', argument " "1"" of type '" "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *""'"); 
  }
  arg1 = reinterpret_cast< scfImplementation1< csTriangleMeshPointer,iTriangleMesh > * >(argp1);
  result = (scfInterfaceMetadataList *)(arg1)->GetInterfaceMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_scfInterfaceMetadataList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *scfTriangleMeshPointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csTriangleMesh__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleMesh",0,0)) SWIG_fail;
  result = (csTriangleMesh *)new csTriangleMesh();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMesh, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangleMesh__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangleMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleMesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csTriangleMesh,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csTriangleMesh" "', argument " "1"" of type '" "csTriangleMesh const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csTriangleMesh" "', argument " "1"" of type '" "csTriangleMesh const &""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = (csTriangleMesh *)new csTriangleMesh((csTriangleMesh const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMesh, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangleMesh(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csTriangleMesh__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csTriangleMesh__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csTriangleMesh'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csTriangleMesh()\n"
    "    csTriangleMesh(csTriangleMesh const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleMesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleMesh" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_AddVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_AddVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_AddVertex" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMesh_AddVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMesh_AddVertex" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->AddVertex((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetVertexCount__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetVertexCount" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = (arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetVertexCount__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetVertexCount" "', argument " "1"" of type '" "csTriangleMesh const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = ((csTriangleMesh const *)arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetVertexCount(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetVertexCount__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetVertexCount__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csTriangleMesh_GetVertexCount'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetVertexCount(csTriangleMesh *)\n"
    "    GetVertexCount(csTriangleMesh const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetVertices__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetVertices" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = (csVector3 *)(arg1)->GetVertices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetVertices__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetVertices" "', argument " "1"" of type '" "csTriangleMesh const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = (csVector3 *)((csTriangleMesh const *)arg1)->GetVertices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetVertices(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetVertices__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetVertices__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csTriangleMesh_GetVertices'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetVertices(csTriangleMesh *)\n"
    "    GetVertices(csTriangleMesh const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_AddTriangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_AddTriangle",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_AddTriangle" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMesh_AddTriangle" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csTriangleMesh_AddTriangle" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csTriangleMesh_AddTriangle" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->AddTriangle(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_AddTriangleMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  csTriangleMesh *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_AddTriangleMesh",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_AddTriangleMesh" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTriangleMesh,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMesh_AddTriangleMesh" "', argument " "2"" of type '" "csTriangleMesh const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMesh_AddTriangleMesh" "', argument " "2"" of type '" "csTriangleMesh const &""'"); 
  }
  arg2 = reinterpret_cast< csTriangleMesh * >(argp2);
  (arg1)->AddTriangleMesh((csTriangleMesh const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetTriangles__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetTriangles",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetTriangles" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = (csTriangle *)(arg1)->GetTriangles();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetTriangles__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetTriangles",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetTriangles" "', argument " "1"" of type '" "csTriangleMesh const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = (csTriangle *)((csTriangleMesh const *)arg1)->GetTriangles();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetTriangles(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetTriangles__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetTriangles__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csTriangleMesh_GetTriangles'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetTriangles(csTriangleMesh *)\n"
    "    GetTriangles(csTriangleMesh const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetTriangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetTriangle",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetTriangle" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMesh_GetTriangle" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    csTriangle &_result_ref = (arg1)->GetTriangle(arg2);
    result = (csTriangle *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetTriangleCount__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetTriangleCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetTriangleCount" "', argument " "1"" of type '" "csTriangleMesh const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = ((csTriangleMesh const *)arg1)->GetTriangleCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetTriangleCount__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetTriangleCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetTriangleCount" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = (arg1)->GetTriangleCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetTriangleCount(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetTriangleCount__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csTriangleMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csTriangleMesh_GetTriangleCount__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csTriangleMesh_GetTriangleCount'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetTriangleCount(csTriangleMesh const *)\n"
    "    GetTriangleCount(csTriangleMesh *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_Clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_Clear" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_SetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_SetSize" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMesh_SetSize" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_SetTriangles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  csTriangle *arg2 = (csTriangle *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_SetTriangles",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_SetTriangles" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csTriangle, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMesh_SetTriangles" "', argument " "2"" of type '" "csTriangle const *""'"); 
  }
  arg2 = reinterpret_cast< csTriangle * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csTriangleMesh_SetTriangles" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SetTriangles((csTriangle const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_Lock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_Lock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_Lock" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  (arg1)->Lock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_Unlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_Unlock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_Unlock" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  (arg1)->Unlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csFlags *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetFlags",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetFlags" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  {
    csFlags &_result_ref = (arg1)->GetFlags();
    result = (csFlags *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csFlags, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh_GetChangeNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh_GetChangeNumber",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh_GetChangeNumber" "', argument " "1"" of type '" "csTriangleMesh const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  result = ((csTriangleMesh const *)arg1)->GetChangeNumber();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMesh___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  csTriangleMesh *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTriangleMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMesh___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMesh___iadd__" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csTriangleMesh,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMesh___iadd__" "', argument " "2"" of type '" "csTriangleMesh const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMesh___iadd__" "', argument " "2"" of type '" "csTriangleMesh const &""'"); 
  }
  arg2 = reinterpret_cast< csTriangleMesh * >(argp2);
  {
    csTriangleMesh &_result_ref = (arg1)->operator +=((csTriangleMesh const &)*arg2);
    result = (csTriangleMesh *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMesh, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleMesh_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleMesh, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csTriangleVertex_pos_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_pos_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_pos_set" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleVertex_pos_set" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  if (arg1) (arg1)->pos = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_pos_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_pos_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_pos_get" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  result = (csVector3 *)& ((arg1)->pos);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_idx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_idx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_idx_set" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleVertex_idx_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->idx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_idx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_idx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_idx_get" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  result = (int) ((arg1)->idx);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_con_triangles_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  csArray< size_t > *arg2 = (csArray< size_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_con_triangles_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_con_triangles_set" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleVertex_con_triangles_set" "', argument " "2"" of type '" "csArray< size_t > *""'"); 
  }
  arg2 = reinterpret_cast< csArray< size_t > * >(argp2);
  if (arg1) (arg1)->con_triangles = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_con_triangles_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< size_t > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_con_triangles_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_con_triangles_get" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  result = (csArray< size_t > *)& ((arg1)->con_triangles);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_con_vertices_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  csArray< int > *arg2 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_con_vertices_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_con_vertices_set" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleVertex_con_vertices_set" "', argument " "2"" of type '" "csArray< int > *""'"); 
  }
  arg2 = reinterpret_cast< csArray< int > * >(argp2);
  if (arg1) (arg1)->con_vertices = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_con_vertices_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_con_vertices_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_con_vertices_get" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  result = (csArray< int > *)& ((arg1)->con_vertices);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangleVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleVertex",0,0)) SWIG_fail;
  result = (csTriangleVertex *)new csTriangleVertex();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleVertex, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleVertex",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleVertex" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_AddTriangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_AddTriangle",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_AddTriangle" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleVertex_AddTriangle" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->AddTriangle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertex_AddVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertex *arg1 = (csTriangleVertex *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertex_AddVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertex_AddVertex" "', argument " "1"" of type '" "csTriangleVertex *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertex * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleVertex_AddVertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->AddVertex(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleVertex_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleVertex, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csTriangleVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMesh *arg1 = (csTriangleMesh *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csTriangleVertices *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleVertices",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csTriangleVertices" "', argument " "1"" of type '" "csTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csTriangleVertices" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_csTriangleVertices" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csTriangleVertices *)new csTriangleVertices(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleVertices, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertices *arg1 = (csTriangleVertices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertices, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleVertices" "', argument " "1"" of type '" "csTriangleVertices *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertices * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertices_UpdateVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertices *arg1 = (csTriangleVertices *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertices_UpdateVertices",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertices_UpdateVertices" "', argument " "1"" of type '" "csTriangleVertices *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertices * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleVertices_UpdateVertices" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->UpdateVertices(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertices_GetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertices *arg1 = (csTriangleVertices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertices_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertices_GetVertexCount" "', argument " "1"" of type '" "csTriangleVertices const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertices * >(argp1);
  result = (int)((csTriangleVertices const *)arg1)->GetVertexCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleVertices_GetVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleVertices *arg1 = (csTriangleVertices *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTriangleVertex *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleVertices_GetVertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleVertices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleVertices_GetVertex" "', argument " "1"" of type '" "csTriangleVertices *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleVertices * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleVertices_GetVertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    csTriangleVertex &_result_ref = (arg1)->GetVertex(arg2);
    result = (csTriangleVertex *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleVertex, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleVertices_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleVertices, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csTriangleMeshBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangleMeshBox *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleMeshBox",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csTriangleMeshBox" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csTriangleMeshBox" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  result = (csTriangleMeshBox *)new csTriangleMeshBox((csBox3 const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMeshBox, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleMeshBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleMeshBox",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleMeshBox" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_SetBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  csBox3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_SetBox",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_SetBox" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshBox_SetBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshBox_SetBox" "', argument " "2"" of type '" "csBox3 const &""'"); 
  }
  arg2 = reinterpret_cast< csBox3 * >(argp2);
  (arg1)->SetBox((csBox3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_GetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_GetVertexCount" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  result = (arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_GetVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_GetVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_GetVertices" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  result = (csVector3 *)(arg1)->GetVertices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_GetTriangleCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_GetTriangleCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_GetTriangleCount" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  result = (arg1)->GetTriangleCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_GetTriangles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_GetTriangles",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_GetTriangles" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  result = (csTriangle *)(arg1)->GetTriangles();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_Lock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_Lock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_Lock" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  (arg1)->Lock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_Unlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_Unlock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_Unlock" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  (arg1)->Unlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_GetFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csFlags *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_GetFlags",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_GetFlags" "', argument " "1"" of type '" "csTriangleMeshBox *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  {
    csFlags &_result_ref = (arg1)->GetFlags();
    result = (csFlags *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csFlags, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshBox_GetChangeNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshBox *arg1 = (csTriangleMeshBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshBox_GetChangeNumber",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshBox_GetChangeNumber" "', argument " "1"" of type '" "csTriangleMeshBox const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshBox * >(argp1);
  result = ((csTriangleMeshBox const *)arg1)->GetChangeNumber();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleMeshBox_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleMeshBox, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csTriangleMeshPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = (csVector3 *) 0 ;
  size_t arg2 ;
  csTriangle *arg3 = (csTriangle *) 0 ;
  size_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csTriangleMeshPointer *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleMeshPointer",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csTriangleMeshPointer" "', argument " "1"" of type '" "csVector3 *""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_csTriangleMeshPointer" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csTriangle, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csTriangleMeshPointer" "', argument " "3"" of type '" "csTriangle *""'"); 
  }
  arg3 = reinterpret_cast< csTriangle * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_csTriangleMeshPointer" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  result = (csTriangleMeshPointer *)new csTriangleMeshPointer(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMeshPointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleMeshPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleMeshPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleMeshPointer" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_GetVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_GetVertexCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_GetVertexCount" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  result = (arg1)->GetVertexCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_GetVertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_GetVertices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_GetVertices" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  result = (csVector3 *)(arg1)->GetVertices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_GetTriangleCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_GetTriangleCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_GetTriangleCount" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  result = (arg1)->GetTriangleCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_GetTriangles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csTriangle *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_GetTriangles",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_GetTriangles" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  result = (csTriangle *)(arg1)->GetTriangles();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangle, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_Lock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_Lock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_Lock" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  (arg1)->Lock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_Unlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_Unlock",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_Unlock" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  (arg1)->Unlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_GetFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csFlags *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_GetFlags",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_GetFlags" "', argument " "1"" of type '" "csTriangleMeshPointer *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  {
    csFlags &_result_ref = (arg1)->GetFlags();
    result = (csFlags *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csFlags, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshPointer_GetChangeNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshPointer *arg1 = (csTriangleMeshPointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint32 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshPointer_GetChangeNumber",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshPointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshPointer_GetChangeNumber" "', argument " "1"" of type '" "csTriangleMeshPointer const *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshPointer * >(argp1);
  result = ((csTriangleMeshPointer const *)arg1)->GetChangeNumber();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleMeshPointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleMeshPointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csIntArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csIntArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csIntArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csArray< int > *)new csArray< int >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csIntArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArray< int > *)new csArray< int >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArray",0,0)) SWIG_fail;
  result = (csArray< int > *)new csArray< int >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArray__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  CS::Memory::AllocatorMalloc *arg2 = 0 ;
  csArrayCapacityFixedGrow< 16 > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csArray< int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArray",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csIntArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Memory__AllocatorMalloc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csIntArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Memory::AllocatorMalloc * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csIntArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg3 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp3);
  result = (csArray< int > *)new csArray< int >(arg1,(CS::Memory::AllocatorMalloc const &)*arg2,(csArrayCapacityFixedGrow< 16 > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csIntArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csIntArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csIntArray" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArray__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< int > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csIntArray" "', argument " "1"" of type '" "csArray< int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArray" "', argument " "1"" of type '" "csArray< int > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  result = (csArray< int > *)new csArray< int >((csArray< int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csIntArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csIntArray__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csIntArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csIntArray__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_csIntArray__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csIntArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArray< int >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< int >(size_t)\n"
    "    csArray< int >()\n"
    "    csArray< int >(size_t,CS::Memory::AllocatorMalloc const &,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< int >(csArray< int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_GetSize" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  result = ((csArray< int > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Get" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    int &_result_ref = (arg1)->Get(arg2);
    result = (int *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Get" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    int const &_result_ref = ((csArray< int > const *)arg1)->Get(arg2);
    result = (int *) &_result_ref;
  }
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csIntArray_Get__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csIntArray_Get__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntArray_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(csArray< int > *,size_t)\n"
    "    Get(csArray< int > const *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Put",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Put" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_Put" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntArray_Put" "', argument " "3"" of type '" "int""'");
  } 
  temp3 = static_cast< int >(val3);
  arg3 = &temp3;
  (arg1)->Put(arg2,(int const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Push" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_Push" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  result = (arg1)->Push((int const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Merge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  csArray< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Merge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Merge" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArray_Merge" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArray_Merge" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< int > * >(argp2);
  (arg1)->Merge((csArray< int > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_MergeSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  csArray< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_MergeSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_MergeSmart" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArray_MergeSmart" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArray_MergeSmart" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< int > * >(argp2);
  (arg1)->MergeSmart((csArray< int > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Pop" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  result = (int)(arg1)->Pop();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Top__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Top" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  {
    int const &_result_ref = ((csArray< int > const *)arg1)->Top();
    result = (int *) &_result_ref;
  }
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Top__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Top" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  {
    int &_result_ref = (arg1)->Top();
    result = (int *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Top(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csIntArray_Top__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csIntArray_Top__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntArray_Top'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Top(csArray< int > const *)\n"
    "    Top(csArray< int > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Insert" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntArray_Insert" "', argument " "3"" of type '" "int""'");
  } 
  temp3 = static_cast< int >(val3);
  arg3 = &temp3;
  result = (bool)(arg1)->Insert(arg2,(int const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Contains",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Contains" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_Contains" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  result = ((csArray< int > const *)arg1)->Contains((int const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_DeleteAll" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Truncate" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_Empty" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_IsEmpty" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  result = (bool)((csArray< int > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_SetMinimalCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_SetMinimalCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_SetMinimalCapacity" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_SetMinimalCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMinimalCapacity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_DeleteIndex" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_DeleteIndexFast" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_DeleteRange" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_DeleteRange" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntArray_DeleteRange" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->DeleteRange(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  csArray< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray___eq__" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArray___eq__" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArray___eq__" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< int > * >(argp2);
  result = (bool)((csArray< int > const *)arg1)->operator ==((csArray< int > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  csArray< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray___ne__" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArray___ne__" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArray___ne__" "', argument " "2"" of type '" "csArray< int > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< int > * >(argp2);
  result = (bool)((csArray< int > const *)arg1)->operator !=((csArray< int > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_GetAllocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Memory::AllocatorMalloc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_GetAllocator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_GetAllocator" "', argument " "1"" of type '" "csArray< int > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  {
    CS::Memory::AllocatorMalloc const &_result_ref = ((csArray< int > const *)arg1)->GetAllocator();
    result = (CS::Memory::AllocatorMalloc *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray___getitem__" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (int)csArray_Sl_int_Sg____getitem__(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray___contains__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray___contains__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray___contains__" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray___contains__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (bool)csArray_Sl_int_Sg____contains__(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray___delitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray___delitem__" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray___delitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)csArray_Sl_int_Sg____delitem__(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray___len__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray___len__" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  result = (int)csArray_Sl_int_Sg____len__(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArray_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< int > *arg1 = (csArray< int > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArray_append",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArray_append" "', argument " "1"" of type '" "csArray< int > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArray_append" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  csArray_Sl_int_Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csIntArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csIntArrayArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  csArrayCapacityFixedGrow< 16 > *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< csArray< int > > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArrayArray",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csIntArrayArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csIntArrayArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArrayArray" "', argument " "2"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg2 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp2);
  result = (csArray< csArray< int > > *)new csArray< csArray< int > >(arg1,(csArrayCapacityFixedGrow< 16 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArrayArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csArray< int > > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArrayArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csIntArrayArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (csArray< csArray< int > > *)new csArray< csArray< int > >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArrayArray__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArrayArray",0,0)) SWIG_fail;
  result = (csArray< csArray< int > > *)new csArray< csArray< int > >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArrayArray__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  CS::Memory::AllocatorMalloc *arg2 = 0 ;
  csArrayCapacityFixedGrow< 16 > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csArray< csArray< int > > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArrayArray",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_csIntArrayArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CS__Memory__AllocatorMalloc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_csIntArrayArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArrayArray" "', argument " "2"" of type '" "CS::Memory::AllocatorMalloc const &""'"); 
  }
  arg2 = reinterpret_cast< CS::Memory::AllocatorMalloc * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_csIntArrayArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArrayArray" "', argument " "3"" of type '" "csArrayCapacityFixedGrow< 16 > const &""'"); 
  }
  arg3 = reinterpret_cast< csArrayCapacityFixedGrow< 16 > * >(argp3);
  result = (csArray< csArray< int > > *)new csArray< csArray< int > >(arg1,(CS::Memory::AllocatorMalloc const &)*arg2,(csArrayCapacityFixedGrow< 16 > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csIntArrayArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csIntArrayArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csIntArrayArray" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArrayArray__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csArray< int > > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csIntArrayArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_csIntArrayArray" "', argument " "1"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_csIntArrayArray" "', argument " "1"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  result = (csArray< csArray< int > > *)new csArray< csArray< int > >((csArray< csArray< int > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csIntArrayArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_csIntArrayArray__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_csIntArrayArray__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_csIntArrayArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_csIntArrayArray__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_csIntArrayArray__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_csIntArrayArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csArray< csArray< int > >(size_t,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csArray< int > >(size_t)\n"
    "    csArray< csArray< int > >()\n"
    "    csArray< csArray< int > >(size_t,CS::Memory::AllocatorMalloc const &,csArrayCapacityFixedGrow< 16 > const &)\n"
    "    csArray< csArray< int > >(csArray< csArray< int > > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_GetSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_GetSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_GetSize" "', argument " "1"" of type '" "csArray< csArray< int > > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  result = ((csArray< csArray< int > > const *)arg1)->GetSize();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Get" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > &_result_ref = (arg1)->Get(arg2);
    result = (csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Get" "', argument " "1"" of type '" "csArray< csArray< int > > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_Get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &_result_ref = ((csArray< csArray< int > > const *)arg1)->Get(arg2);
    result = (csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csIntArrayArray_Get__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csIntArrayArray_Get__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntArrayArray_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(csArray< csArray< int > > *,size_t)\n"
    "    Get(csArray< csArray< int > > const *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Put",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Put" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_Put" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntArrayArray_Put" "', argument " "3"" of type '" "csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray_Put" "', argument " "3"" of type '" "csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &""'"); 
  }
  arg3 = reinterpret_cast< csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > * >(argp3);
  (arg1)->Put(arg2,(csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Push",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Push" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArrayArray_Push" "', argument " "2"" of type '" "csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray_Push" "', argument " "2"" of type '" "csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > * >(argp2);
  result = (arg1)->Push((csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Merge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  csArray< csArray< int > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Merge",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Merge" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArrayArray_Merge" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray_Merge" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csArray< int > > * >(argp2);
  (arg1)->Merge((csArray< csArray< int > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_MergeSmart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  csArray< csArray< int > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_MergeSmart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_MergeSmart" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArrayArray_MergeSmart" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray_MergeSmart" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csArray< int > > * >(argp2);
  (arg1)->MergeSmart((csArray< csArray< int > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csArray< int,csArrayElementHandler< int >,CS::Memory::AllocatorMalloc,csArrayCapacityFixedGrow< 16 > > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Pop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Pop" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  result = (arg1)->Pop();
  resultobj = SWIG_NewPointerObj((new csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault >(static_cast< const csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault >& >(result))), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Top__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Top" "', argument " "1"" of type '" "csArray< csArray< int > > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  {
    csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &_result_ref = ((csArray< csArray< int > > const *)arg1)->Top();
    result = (csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Top__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Top",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Top" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  {
    csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > &_result_ref = (arg1)->Top();
    result = (csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Top(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csIntArrayArray_Top__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_csIntArrayArray_Top__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csIntArrayArray_Top'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Top(csArray< csArray< int > > const *)\n"
    "    Top(csArray< csArray< int > > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Insert",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Insert" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_Insert" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csIntArrayArray_Insert" "', argument " "3"" of type '" "csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray_Insert" "', argument " "3"" of type '" "csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &""'"); 
  }
  arg3 = reinterpret_cast< csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > * >(argp3);
  result = (bool)(arg1)->Insert(arg2,(csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_DeleteAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_DeleteAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_DeleteAll" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  (arg1)->DeleteAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Truncate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Truncate" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_Truncate" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Truncate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_Empty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_Empty" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_IsEmpty",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_IsEmpty" "', argument " "1"" of type '" "csArray< csArray< int > > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  result = (bool)((csArray< csArray< int > > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_SetMinimalCapacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_SetMinimalCapacity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_SetMinimalCapacity" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_SetMinimalCapacity" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMinimalCapacity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_DeleteIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_DeleteIndex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_DeleteIndex" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_DeleteIndex" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndex(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_DeleteIndexFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_DeleteIndexFast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_DeleteIndexFast" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_DeleteIndexFast" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)(arg1)->DeleteIndexFast(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_DeleteRange" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray_DeleteRange" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "csIntArrayArray_DeleteRange" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->DeleteRange(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  csArray< csArray< int > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray___eq__" "', argument " "1"" of type '" "csArray< csArray< int > > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArrayArray___eq__" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray___eq__" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csArray< int > > * >(argp2);
  result = (bool)((csArray< csArray< int > > const *)arg1)->operator ==((csArray< csArray< int > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  csArray< csArray< int > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray___ne__" "', argument " "1"" of type '" "csArray< csArray< int > > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArrayArray___ne__" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray___ne__" "', argument " "2"" of type '" "csArray< csArray< int > > const &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csArray< int > > * >(argp2);
  result = (bool)((csArray< csArray< int > > const *)arg1)->operator !=((csArray< csArray< int > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_GetAllocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Memory::AllocatorMalloc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_GetAllocator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_GetAllocator" "', argument " "1"" of type '" "csArray< csArray< int > > const *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  {
    CS::Memory::AllocatorMalloc const &_result_ref = ((csArray< csArray< int > > const *)arg1)->GetAllocator();
    result = (CS::Memory::AllocatorMalloc *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Memory__AllocatorMalloc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csArray< int > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray___getitem__" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = csArray_Sl_csArray_Sl_int_Sg__Sg____getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new csArray< int >(static_cast< const csArray< int >& >(result))), SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray___contains__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  csArray< int > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray___contains__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray___contains__" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArrayArray___contains__" "', argument " "2"" of type '" "csArray< int >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray___contains__" "', argument " "2"" of type '" "csArray< int >""'");
    } else {
      csArray< int > * temp = reinterpret_cast< csArray< int > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)csArray_Sl_csArray_Sl_int_Sg__Sg____contains__(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray___delitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray___delitem__" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csIntArrayArray___delitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)csArray_Sl_csArray_Sl_int_Sg__Sg____delitem__(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray___len__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray___len__" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  result = (int)csArray_Sl_csArray_Sl_int_Sg__Sg____len__(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csIntArrayArray_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csArray< csArray< int > > *arg1 = (csArray< csArray< int > > *) 0 ;
  csArray< int > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csIntArrayArray_append",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csIntArrayArray_append" "', argument " "1"" of type '" "csArray< csArray< int > > *""'"); 
  }
  arg1 = reinterpret_cast< csArray< csArray< int > > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csIntArrayArray_append" "', argument " "2"" of type '" "csArray< int >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csIntArrayArray_append" "', argument " "2"" of type '" "csArray< int >""'");
    } else {
      csArray< int > * temp = reinterpret_cast< csArray< int > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  csArray_Sl_csArray_Sl_int_Sg__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csIntArrayArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csTriangleMinMax_minx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMinMax *arg1 = (csTriangleMinMax *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMinMax_minx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMinMax, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMinMax_minx_set" "', argument " "1"" of type '" "csTriangleMinMax *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMinMax * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMinMax_minx_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->minx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMinMax_minx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMinMax *arg1 = (csTriangleMinMax *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMinMax_minx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMinMax, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMinMax_minx_get" "', argument " "1"" of type '" "csTriangleMinMax *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMinMax * >(argp1);
  result = (float) ((arg1)->minx);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMinMax_maxx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMinMax *arg1 = (csTriangleMinMax *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMinMax_maxx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMinMax, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMinMax_maxx_set" "', argument " "1"" of type '" "csTriangleMinMax *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMinMax * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMinMax_maxx_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->maxx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMinMax_maxx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMinMax *arg1 = (csTriangleMinMax *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMinMax_maxx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMinMax, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMinMax_maxx_get" "', argument " "1"" of type '" "csTriangleMinMax *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMinMax * >(argp1);
  result = (float) ((arg1)->maxx);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangleMinMax(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMinMax *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleMinMax",0,0)) SWIG_fail;
  result = (csTriangleMinMax *)new csTriangleMinMax();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMinMax, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleMinMax(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMinMax *arg1 = (csTriangleMinMax *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleMinMax",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMinMax, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleMinMax" "', argument " "1"" of type '" "csTriangleMinMax *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMinMax * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleMinMax_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleMinMax, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_vt1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_vt1_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_vt1_set" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMeshEdge_vt1_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->vt1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_vt1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_vt1_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_vt1_get" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  result = (int) ((arg1)->vt1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_vt2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_vt2_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_vt2_set" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMeshEdge_vt2_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->vt2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_vt2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_vt2_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_vt2_get" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  result = (int) ((arg1)->vt2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_tri1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_tri1_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_tri1_set" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMeshEdge_tri1_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->tri1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_tri1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_tri1_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_tri1_get" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  result = (int) ((arg1)->tri1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_tri2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_tri2_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_tri2_set" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMeshEdge_tri2_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->tri2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_tri2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_tri2_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_tri2_get" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  result = (int) ((arg1)->tri2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_active_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_active_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_active_set" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMeshEdge_active_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->active = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshEdge_active_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshEdge_active_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshEdge_active_get" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  result = (bool) ((arg1)->active);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangleMeshEdge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleMeshEdge",0,0)) SWIG_fail;
  result = (csTriangleMeshEdge *)new csTriangleMeshEdge();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMeshEdge, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleMeshEdge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleMeshEdge",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleMeshEdge" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleMeshEdge_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleMeshEdge, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_csTriangleMeshTools_CalculateNormals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_CalculateNormals",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_CalculateNormals" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_CalculateNormals" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  csTriangleMeshTools::CalculateNormals(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_CalculatePlanes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  csPlane3 *arg2 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_CalculatePlanes",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_CalculatePlanes" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_CalculatePlanes" "', argument " "2"" of type '" "csPlane3 *""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  csTriangleMeshTools::CalculatePlanes(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_CalculateEdges(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  size_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csTriangleMeshEdge *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_CalculateEdges",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_CalculateEdges" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_CalculateEdges" "', argument " "2"" of type '" "size_t &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_CalculateEdges" "', argument " "2"" of type '" "size_t &""'"); 
  }
  arg2 = reinterpret_cast< size_t * >(argp2);
  result = (csTriangleMeshEdge *)csTriangleMeshTools::CalculateEdges(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_CheckActiveEdges(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  size_t arg2 ;
  csPlane3 *arg3 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_CheckActiveEdges",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_CheckActiveEdges" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMeshTools_CheckActiveEdges" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csTriangleMeshTools_CheckActiveEdges" "', argument " "3"" of type '" "csPlane3 *""'"); 
  }
  arg3 = reinterpret_cast< csPlane3 * >(argp3);
  result = csTriangleMeshTools::CheckActiveEdges(arg1,arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_CalculateOutline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshEdge *arg1 = (csTriangleMeshEdge *) 0 ;
  size_t arg2 ;
  csPlane3 *arg3 = (csPlane3 *) 0 ;
  size_t arg4 ;
  csVector3 *arg5 = 0 ;
  size_t *arg6 = (size_t *) 0 ;
  size_t *arg7 = 0 ;
  bool *arg8 = (bool *) 0 ;
  float *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_CalculateOutline",9,9,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshEdge, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "1"" of type '" "csTriangleMeshEdge *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshEdge * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "3"" of type '" "csPlane3 *""'"); 
  }
  arg3 = reinterpret_cast< csPlane3 * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "6"" of type '" "size_t *""'"); 
  }
  arg6 = reinterpret_cast< size_t * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "7"" of type '" "size_t &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "7"" of type '" "size_t &""'"); 
  }
  arg7 = reinterpret_cast< size_t * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "8"" of type '" "bool *""'"); 
  }
  arg8 = reinterpret_cast< bool * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "9"" of type '" "float &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_CalculateOutline" "', argument " "9"" of type '" "float &""'"); 
  }
  arg9 = reinterpret_cast< float * >(argp9);
  csTriangleMeshTools::CalculateOutline(arg1,arg2,arg3,arg4,(csVector3 const &)*arg5,arg6,*arg7,arg8,*arg9);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_IsMeshClosed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_IsMeshClosed",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_IsMeshClosed" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = (bool)csTriangleMeshTools::IsMeshClosed(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_IsMeshConvex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_IsMeshConvex",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_IsMeshConvex" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = (bool)csTriangleMeshTools::IsMeshConvex(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_CloseMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  csArray< csTriangle > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_CloseMesh",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_CloseMesh" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_CloseMesh" "', argument " "2"" of type '" "csArray< csTriangle > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_CloseMesh" "', argument " "2"" of type '" "csArray< csTriangle > &""'"); 
  }
  arg2 = reinterpret_cast< csArray< csTriangle > * >(argp2);
  csTriangleMeshTools::CloseMesh(arg1,*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_SortTrianglesX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  csTriangleMinMax **arg2 = 0 ;
  size_t *arg3 = 0 ;
  csPlane3 **arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_SortTrianglesX",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_SortTrianglesX" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_p_csTriangleMinMax,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_SortTrianglesX" "', argument " "2"" of type '" "csTriangleMinMax *&""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_SortTrianglesX" "', argument " "2"" of type '" "csTriangleMinMax *&""'"); 
  }
  arg2 = reinterpret_cast< csTriangleMinMax ** >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csTriangleMeshTools_SortTrianglesX" "', argument " "3"" of type '" "size_t &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_SortTrianglesX" "', argument " "3"" of type '" "size_t &""'"); 
  }
  arg3 = reinterpret_cast< size_t * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_p_csPlane3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csTriangleMeshTools_SortTrianglesX" "', argument " "4"" of type '" "csPlane3 *&""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_SortTrianglesX" "', argument " "4"" of type '" "csPlane3 *&""'"); 
  }
  arg4 = reinterpret_cast< csPlane3 ** >(argp4);
  csTriangleMeshTools::SortTrianglesX(arg1,*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_PointInClosedMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  csTriangleMinMax *arg3 = (csTriangleMinMax *) 0 ;
  size_t arg4 ;
  csPlane3 *arg5 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_PointInClosedMesh",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_PointInClosedMesh" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_PointInClosedMesh" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_PointInClosedMesh" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csTriangleMinMax, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csTriangleMeshTools_PointInClosedMesh" "', argument " "3"" of type '" "csTriangleMinMax *""'"); 
  }
  arg3 = reinterpret_cast< csTriangleMinMax * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csTriangleMeshTools_PointInClosedMesh" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csTriangleMeshTools_PointInClosedMesh" "', argument " "5"" of type '" "csPlane3 *""'"); 
  }
  arg5 = reinterpret_cast< csPlane3 * >(argp5);
  result = (bool)csTriangleMeshTools::PointInClosedMesh((csVector3 const &)*arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_LineInClosedMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csVector3 *arg1 = 0 ;
  csVector3 *arg2 = 0 ;
  csVector3 *arg3 = (csVector3 *) 0 ;
  csTriangleMinMax *arg4 = (csTriangleMinMax *) 0 ;
  size_t arg5 ;
  csPlane3 *arg6 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  size_t val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_LineInClosedMesh",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "1"" of type '" "csVector3 const &""'"); 
  }
  arg1 = reinterpret_cast< csVector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "3"" of type '" "csVector3 *""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_csTriangleMinMax, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "4"" of type '" "csTriangleMinMax *""'"); 
  }
  arg4 = reinterpret_cast< csTriangleMinMax * >(argp4);
  ecode5 = SWIG_AsVal_size_t(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "5"" of type '" "size_t""'");
  } 
  arg5 = static_cast< size_t >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "csTriangleMeshTools_LineInClosedMesh" "', argument " "6"" of type '" "csPlane3 *""'"); 
  }
  arg6 = reinterpret_cast< csPlane3 * >(argp6);
  result = (bool)csTriangleMeshTools::LineInClosedMesh((csVector3 const &)*arg1,(csVector3 const &)*arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_BoxInClosedMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csBox3 *arg1 = 0 ;
  csVector3 *arg2 = (csVector3 *) 0 ;
  csTriangleMinMax *arg3 = (csTriangleMinMax *) 0 ;
  size_t arg4 ;
  csPlane3 *arg5 = (csPlane3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_BoxInClosedMesh",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csBox3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_BoxInClosedMesh" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "csTriangleMeshTools_BoxInClosedMesh" "', argument " "1"" of type '" "csBox3 const &""'"); 
  }
  arg1 = reinterpret_cast< csBox3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_csVector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "csTriangleMeshTools_BoxInClosedMesh" "', argument " "2"" of type '" "csVector3 *""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_csTriangleMinMax, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "csTriangleMeshTools_BoxInClosedMesh" "', argument " "3"" of type '" "csTriangleMinMax *""'"); 
  }
  arg3 = reinterpret_cast< csTriangleMinMax * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "csTriangleMeshTools_BoxInClosedMesh" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_csPlane3, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "csTriangleMeshTools_BoxInClosedMesh" "', argument " "5"" of type '" "csPlane3 *""'"); 
  }
  arg5 = reinterpret_cast< csPlane3 * >(argp5);
  result = (bool)csTriangleMeshTools::BoxInClosedMesh((csBox3 const &)*arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csTriangleMeshTools_CalculateVertexConnections(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iTriangleMesh *arg1 = (iTriangleMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< csArray< int > > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csTriangleMeshTools_CalculateVertexConnections",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iTriangleMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csTriangleMeshTools_CalculateVertexConnections" "', argument " "1"" of type '" "iTriangleMesh *""'"); 
  }
  arg1 = reinterpret_cast< iTriangleMesh * >(argp1);
  result = (csArray< csArray< int > > *)csTriangleMeshTools::CalculateVertexConnections(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_csTriangleMeshTools(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshTools *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csTriangleMeshTools",0,0)) SWIG_fail;
  result = (csTriangleMeshTools *)new csTriangleMeshTools();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csTriangleMeshTools, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csTriangleMeshTools(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csTriangleMeshTools *arg1 = (csTriangleMeshTools *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csTriangleMeshTools",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csTriangleMeshTools, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csTriangleMeshTools" "', argument " "1"" of type '" "csTriangleMeshTools *""'"); 
  }
  arg1 = reinterpret_cast< csTriangleMeshTools * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csTriangleMeshTools_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csTriangleMeshTools, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"_SetSCFPointer", _wrap__SetSCFPointer, METH_VARARGS, NULL},
	 { (char *)"_GetSCFPointer", _wrap__GetSCFPointer, METH_VARARGS, NULL},
	 { (char *)"csVector2_x_set", _wrap_csVector2_x_set, METH_VARARGS, NULL},
	 { (char *)"csVector2_x_get", _wrap_csVector2_x_get, METH_VARARGS, NULL},
	 { (char *)"csVector2_y_set", _wrap_csVector2_y_set, METH_VARARGS, NULL},
	 { (char *)"csVector2_y_get", _wrap_csVector2_y_get, METH_VARARGS, NULL},
	 { (char *)"new_csVector2", _wrap_new_csVector2, METH_VARARGS, NULL},
	 { (char *)"csVector2_Description", _wrap_csVector2_Description, METH_VARARGS, NULL},
	 { (char *)"csVector2_Set", _wrap_csVector2_Set, METH_VARARGS, NULL},
	 { (char *)"csVector2_Get", _wrap_csVector2_Get, METH_VARARGS, NULL},
	 { (char *)"csVector2_Norm", _wrap_csVector2_Norm, METH_VARARGS, NULL},
	 { (char *)"csVector2_SquaredNorm", _wrap_csVector2_SquaredNorm, METH_VARARGS, NULL},
	 { (char *)"csVector2_Rotate", _wrap_csVector2_Rotate, METH_VARARGS, NULL},
	 { (char *)"csVector2_IsLeft", _wrap_csVector2_IsLeft, METH_VARARGS, NULL},
	 { (char *)"csVector2___iadd__", _wrap_csVector2___iadd__, METH_VARARGS, NULL},
	 { (char *)"csVector2___isub__", _wrap_csVector2___isub__, METH_VARARGS, NULL},
	 { (char *)"csVector2___imul__", _wrap_csVector2___imul__, METH_VARARGS, NULL},
	 { (char *)"csVector2___idiv__", _wrap_csVector2___idiv__, METH_VARARGS, NULL},
	 { (char *)"csVector2___pos__", _wrap_csVector2___pos__, METH_VARARGS, NULL},
	 { (char *)"csVector2___neg__", _wrap_csVector2___neg__, METH_VARARGS, NULL},
	 { (char *)"csVector2___add__", _wrap_csVector2___add__, METH_VARARGS, NULL},
	 { (char *)"csVector2___sub__", _wrap_csVector2___sub__, METH_VARARGS, NULL},
	 { (char *)"csVector2___mul__", _wrap_csVector2___mul__, METH_VARARGS, NULL},
	 { (char *)"csVector2___div__", _wrap_csVector2___div__, METH_VARARGS, NULL},
	 { (char *)"csVector2___eq__", _wrap_csVector2___eq__, METH_VARARGS, NULL},
	 { (char *)"csVector2___ne__", _wrap_csVector2___ne__, METH_VARARGS, NULL},
	 { (char *)"csVector2___lt__", _wrap_csVector2___lt__, METH_VARARGS, NULL},
	 { (char *)"csVector2___gt__", _wrap_csVector2___gt__, METH_VARARGS, NULL},
	 { (char *)"csVector2___rmul__", _wrap_csVector2___rmul__, METH_VARARGS, NULL},
	 { (char *)"csVector2___abs__", _wrap_csVector2___abs__, METH_VARARGS, NULL},
	 { (char *)"csVector2___getitem__", _wrap_csVector2___getitem__, METH_VARARGS, NULL},
	 { (char *)"csVector2___setitem__", _wrap_csVector2___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_csVector2", _wrap_delete_csVector2, METH_VARARGS, NULL},
	 { (char *)"csVector2_swigregister", csVector2_swigregister, METH_VARARGS, NULL},
	 { (char *)"csVector3_x_set", _wrap_csVector3_x_set, METH_VARARGS, NULL},
	 { (char *)"csVector3_x_get", _wrap_csVector3_x_get, METH_VARARGS, NULL},
	 { (char *)"csVector3_y_set", _wrap_csVector3_y_set, METH_VARARGS, NULL},
	 { (char *)"csVector3_y_get", _wrap_csVector3_y_get, METH_VARARGS, NULL},
	 { (char *)"csVector3_z_set", _wrap_csVector3_z_set, METH_VARARGS, NULL},
	 { (char *)"csVector3_z_get", _wrap_csVector3_z_get, METH_VARARGS, NULL},
	 { (char *)"new_csVector3", _wrap_new_csVector3, METH_VARARGS, NULL},
	 { (char *)"csVector3_Description", _wrap_csVector3_Description, METH_VARARGS, NULL},
	 { (char *)"csVector3___iadd__", _wrap_csVector3___iadd__, METH_VARARGS, NULL},
	 { (char *)"csVector3___isub__", _wrap_csVector3___isub__, METH_VARARGS, NULL},
	 { (char *)"csVector3___pos__", _wrap_csVector3___pos__, METH_VARARGS, NULL},
	 { (char *)"csVector3___neg__", _wrap_csVector3___neg__, METH_VARARGS, NULL},
	 { (char *)"csVector3_Set", _wrap_csVector3_Set, METH_VARARGS, NULL},
	 { (char *)"csVector3_Get", _wrap_csVector3_Get, METH_VARARGS, NULL},
	 { (char *)"csVector3_Norm", _wrap_csVector3_Norm, METH_VARARGS, NULL},
	 { (char *)"csVector3_SquaredNorm", _wrap_csVector3_SquaredNorm, METH_VARARGS, NULL},
	 { (char *)"csVector3_Unit", _wrap_csVector3_Unit, METH_VARARGS, NULL},
	 { (char *)"csVector3_Normalize", _wrap_csVector3_Normalize, METH_VARARGS, NULL},
	 { (char *)"csVector3_IsZero", _wrap_csVector3_IsZero, METH_VARARGS, NULL},
	 { (char *)"csVector3_UnitAxisClamped", _wrap_csVector3_UnitAxisClamped, METH_VARARGS, NULL},
	 { (char *)"csVector3_DominantAxis", _wrap_csVector3_DominantAxis, METH_VARARGS, NULL},
	 { (char *)"csVector3___add__", _wrap_csVector3___add__, METH_VARARGS, NULL},
	 { (char *)"csVector3___sub__", _wrap_csVector3___sub__, METH_VARARGS, NULL},
	 { (char *)"csVector3___mul__", _wrap_csVector3___mul__, METH_VARARGS, NULL},
	 { (char *)"csVector3___eq__", _wrap_csVector3___eq__, METH_VARARGS, NULL},
	 { (char *)"csVector3___ne__", _wrap_csVector3___ne__, METH_VARARGS, NULL},
	 { (char *)"csVector3___lt__", _wrap_csVector3___lt__, METH_VARARGS, NULL},
	 { (char *)"csVector3___gt__", _wrap_csVector3___gt__, METH_VARARGS, NULL},
	 { (char *)"csVector3___imul__", _wrap_csVector3___imul__, METH_VARARGS, NULL},
	 { (char *)"csVector3___idiv__", _wrap_csVector3___idiv__, METH_VARARGS, NULL},
	 { (char *)"csVector3___div__", _wrap_csVector3___div__, METH_VARARGS, NULL},
	 { (char *)"csVector3_project", _wrap_csVector3_project, METH_VARARGS, NULL},
	 { (char *)"csVector3_Cross", _wrap_csVector3_Cross, METH_VARARGS, NULL},
	 { (char *)"csVector3___rmul__", _wrap_csVector3___rmul__, METH_VARARGS, NULL},
	 { (char *)"csVector3___abs__", _wrap_csVector3___abs__, METH_VARARGS, NULL},
	 { (char *)"csVector3___getitem__", _wrap_csVector3___getitem__, METH_VARARGS, NULL},
	 { (char *)"csVector3___setitem__", _wrap_csVector3___setitem__, METH_VARARGS, NULL},
	 { (char *)"csVector3___nonzero__", _wrap_csVector3___nonzero__, METH_VARARGS, NULL},
	 { (char *)"delete_csVector3", _wrap_delete_csVector3, METH_VARARGS, NULL},
	 { (char *)"csVector3_swigregister", csVector3_swigregister, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_GetSize", _wrap_csVector3ArrayReadOnly_GetSize, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_Get", _wrap_csVector3ArrayReadOnly_Get, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_Top", _wrap_csVector3ArrayReadOnly_Top, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_Find", _wrap_csVector3ArrayReadOnly_Find, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_GetIndex", _wrap_csVector3ArrayReadOnly_GetIndex, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_IsEmpty", _wrap_csVector3ArrayReadOnly_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_GetAll", _wrap_csVector3ArrayReadOnly_GetAll, METH_VARARGS, NULL},
	 { (char *)"delete_csVector3ArrayReadOnly", _wrap_delete_csVector3ArrayReadOnly, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayReadOnly_swigregister", csVector3ArrayReadOnly_swigregister, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeElements_Get", _wrap_csVector3ArrayChangeElements_Get, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeElements_Top", _wrap_csVector3ArrayChangeElements_Top, METH_VARARGS, NULL},
	 { (char *)"delete_csVector3ArrayChangeElements", _wrap_delete_csVector3ArrayChangeElements, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeElements_swigregister", csVector3ArrayChangeElements_swigregister, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_SetSize", _wrap_csVector3ArrayChangeAll_SetSize, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_GetExtend", _wrap_csVector3ArrayChangeAll_GetExtend, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_Put", _wrap_csVector3ArrayChangeAll_Put, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_Push", _wrap_csVector3ArrayChangeAll_Push, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_PushSmart", _wrap_csVector3ArrayChangeAll_PushSmart, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_Pop", _wrap_csVector3ArrayChangeAll_Pop, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_Insert", _wrap_csVector3ArrayChangeAll_Insert, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_DeleteAll", _wrap_csVector3ArrayChangeAll_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_Truncate", _wrap_csVector3ArrayChangeAll_Truncate, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_Empty", _wrap_csVector3ArrayChangeAll_Empty, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_DeleteIndex", _wrap_csVector3ArrayChangeAll_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_DeleteIndexFast", _wrap_csVector3ArrayChangeAll_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_Delete", _wrap_csVector3ArrayChangeAll_Delete, METH_VARARGS, NULL},
	 { (char *)"delete_csVector3ArrayChangeAll", _wrap_delete_csVector3ArrayChangeAll, METH_VARARGS, NULL},
	 { (char *)"csVector3ArrayChangeAll_swigregister", csVector3ArrayChangeAll_swigregister, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_x_set", _wrap_csVector4Float_x_set, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_x_get", _wrap_csVector4Float_x_get, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_y_set", _wrap_csVector4Float_y_set, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_y_get", _wrap_csVector4Float_y_get, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_z_set", _wrap_csVector4Float_z_set, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_z_get", _wrap_csVector4Float_z_get, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_w_set", _wrap_csVector4Float_w_set, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_w_get", _wrap_csVector4Float_w_get, METH_VARARGS, NULL},
	 { (char *)"new_csVector4Float", _wrap_new_csVector4Float, METH_VARARGS, NULL},
	 { (char *)"delete_csVector4Float", _wrap_delete_csVector4Float, METH_VARARGS, NULL},
	 { (char *)"csVector4Float_swigregister", csVector4Float_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csVector4", _wrap_new_csVector4, METH_VARARGS, NULL},
	 { (char *)"csVector4_assign", _wrap_csVector4_assign, METH_VARARGS, NULL},
	 { (char *)"csVector4___add__", _wrap_csVector4___add__, METH_VARARGS, NULL},
	 { (char *)"csVector4___sub__", _wrap_csVector4___sub__, METH_VARARGS, NULL},
	 { (char *)"csVector4___mul__", _wrap_csVector4___mul__, METH_VARARGS, NULL},
	 { (char *)"csVector4___div__", _wrap_csVector4___div__, METH_VARARGS, NULL},
	 { (char *)"csVector4___eq__", _wrap_csVector4___eq__, METH_VARARGS, NULL},
	 { (char *)"csVector4___ne__", _wrap_csVector4___ne__, METH_VARARGS, NULL},
	 { (char *)"csVector4___lt__", _wrap_csVector4___lt__, METH_VARARGS, NULL},
	 { (char *)"csVector4___gt__", _wrap_csVector4___gt__, METH_VARARGS, NULL},
	 { (char *)"csVector4___rmul__", _wrap_csVector4___rmul__, METH_VARARGS, NULL},
	 { (char *)"csVector4___abs__", _wrap_csVector4___abs__, METH_VARARGS, NULL},
	 { (char *)"csVector4___getitem__", _wrap_csVector4___getitem__, METH_VARARGS, NULL},
	 { (char *)"csVector4___setitem__", _wrap_csVector4___setitem__, METH_VARARGS, NULL},
	 { (char *)"csVector4___nonzero__", _wrap_csVector4___nonzero__, METH_VARARGS, NULL},
	 { (char *)"delete_csVector4", _wrap_delete_csVector4, METH_VARARGS, NULL},
	 { (char *)"csVector4_swigregister", csVector4_swigregister, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m11_set", _wrap_csMatrix2_m11_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m11_get", _wrap_csMatrix2_m11_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m12_set", _wrap_csMatrix2_m12_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m12_get", _wrap_csMatrix2_m12_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m21_set", _wrap_csMatrix2_m21_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m21_get", _wrap_csMatrix2_m21_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m22_set", _wrap_csMatrix2_m22_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_m22_get", _wrap_csMatrix2_m22_get, METH_VARARGS, NULL},
	 { (char *)"new_csMatrix2", _wrap_new_csMatrix2, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Row1", _wrap_csMatrix2_Row1, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Row2", _wrap_csMatrix2_Row2, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Col1", _wrap_csMatrix2_Col1, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Col2", _wrap_csMatrix2_Col2, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Set", _wrap_csMatrix2_Set, METH_VARARGS, NULL},
	 { (char *)"csMatrix2___iadd__", _wrap_csMatrix2___iadd__, METH_VARARGS, NULL},
	 { (char *)"csMatrix2___isub__", _wrap_csMatrix2___isub__, METH_VARARGS, NULL},
	 { (char *)"csMatrix2___imul__", _wrap_csMatrix2___imul__, METH_VARARGS, NULL},
	 { (char *)"csMatrix2___idiv__", _wrap_csMatrix2___idiv__, METH_VARARGS, NULL},
	 { (char *)"csMatrix2___pos__", _wrap_csMatrix2___pos__, METH_VARARGS, NULL},
	 { (char *)"csMatrix2___neg__", _wrap_csMatrix2___neg__, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Transpose", _wrap_csMatrix2_Transpose, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_GetTranspose", _wrap_csMatrix2_GetTranspose, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_GetInverse", _wrap_csMatrix2_GetInverse, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Invert", _wrap_csMatrix2_Invert, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Determinant", _wrap_csMatrix2_Determinant, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_Identity", _wrap_csMatrix2_Identity, METH_VARARGS, NULL},
	 { (char *)"delete_csMatrix2", _wrap_delete_csMatrix2, METH_VARARGS, NULL},
	 { (char *)"csMatrix2_swigregister", csMatrix2_swigregister, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m11_set", _wrap_csMatrix3_m11_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m11_get", _wrap_csMatrix3_m11_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m12_set", _wrap_csMatrix3_m12_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m12_get", _wrap_csMatrix3_m12_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m13_set", _wrap_csMatrix3_m13_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m13_get", _wrap_csMatrix3_m13_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m21_set", _wrap_csMatrix3_m21_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m21_get", _wrap_csMatrix3_m21_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m22_set", _wrap_csMatrix3_m22_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m22_get", _wrap_csMatrix3_m22_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m23_set", _wrap_csMatrix3_m23_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m23_get", _wrap_csMatrix3_m23_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m31_set", _wrap_csMatrix3_m31_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m31_get", _wrap_csMatrix3_m31_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m32_set", _wrap_csMatrix3_m32_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m32_get", _wrap_csMatrix3_m32_get, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m33_set", _wrap_csMatrix3_m33_set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_m33_get", _wrap_csMatrix3_m33_get, METH_VARARGS, NULL},
	 { (char *)"new_csMatrix3", _wrap_new_csMatrix3, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Description", _wrap_csMatrix3_Description, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Row1", _wrap_csMatrix3_Row1, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Row2", _wrap_csMatrix3_Row2, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Row3", _wrap_csMatrix3_Row3, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Row", _wrap_csMatrix3_Row, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Col1", _wrap_csMatrix3_Col1, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Col2", _wrap_csMatrix3_Col2, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Col3", _wrap_csMatrix3_Col3, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Col", _wrap_csMatrix3_Col, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Set", _wrap_csMatrix3_Set, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_assign", _wrap_csMatrix3_assign, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___iadd__", _wrap_csMatrix3___iadd__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___isub__", _wrap_csMatrix3___isub__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___idiv__", _wrap_csMatrix3___idiv__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___pos__", _wrap_csMatrix3___pos__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___neg__", _wrap_csMatrix3___neg__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Transpose", _wrap_csMatrix3_Transpose, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_GetTranspose", _wrap_csMatrix3_GetTranspose, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_GetInverse", _wrap_csMatrix3_GetInverse, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Invert", _wrap_csMatrix3_Invert, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Determinant", _wrap_csMatrix3_Determinant, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_Identity", _wrap_csMatrix3_Identity, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_IsIdentity", _wrap_csMatrix3_IsIdentity, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___add__", _wrap_csMatrix3___add__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___sub__", _wrap_csMatrix3___sub__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___div__", _wrap_csMatrix3___div__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___eq__", _wrap_csMatrix3___eq__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___ne__", _wrap_csMatrix3___ne__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___lt__", _wrap_csMatrix3___lt__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___mul__", _wrap_csMatrix3___mul__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___imul__", _wrap_csMatrix3___imul__, METH_VARARGS, NULL},
	 { (char *)"csMatrix3___rmul__", _wrap_csMatrix3___rmul__, METH_VARARGS, NULL},
	 { (char *)"delete_csMatrix3", _wrap_delete_csMatrix3, METH_VARARGS, NULL},
	 { (char *)"csMatrix3_swigregister", csMatrix3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csXRotMatrix3", _wrap_new_csXRotMatrix3, METH_VARARGS, NULL},
	 { (char *)"delete_csXRotMatrix3", _wrap_delete_csXRotMatrix3, METH_VARARGS, NULL},
	 { (char *)"csXRotMatrix3_swigregister", csXRotMatrix3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csYRotMatrix3", _wrap_new_csYRotMatrix3, METH_VARARGS, NULL},
	 { (char *)"delete_csYRotMatrix3", _wrap_delete_csYRotMatrix3, METH_VARARGS, NULL},
	 { (char *)"csYRotMatrix3_swigregister", csYRotMatrix3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csZRotMatrix3", _wrap_new_csZRotMatrix3, METH_VARARGS, NULL},
	 { (char *)"delete_csZRotMatrix3", _wrap_delete_csZRotMatrix3, METH_VARARGS, NULL},
	 { (char *)"csZRotMatrix3_swigregister", csZRotMatrix3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csXScaleMatrix3", _wrap_new_csXScaleMatrix3, METH_VARARGS, NULL},
	 { (char *)"delete_csXScaleMatrix3", _wrap_delete_csXScaleMatrix3, METH_VARARGS, NULL},
	 { (char *)"csXScaleMatrix3_swigregister", csXScaleMatrix3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csYScaleMatrix3", _wrap_new_csYScaleMatrix3, METH_VARARGS, NULL},
	 { (char *)"delete_csYScaleMatrix3", _wrap_delete_csYScaleMatrix3, METH_VARARGS, NULL},
	 { (char *)"csYScaleMatrix3_swigregister", csYScaleMatrix3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csZScaleMatrix3", _wrap_new_csZScaleMatrix3, METH_VARARGS, NULL},
	 { (char *)"delete_csZScaleMatrix3", _wrap_delete_csZScaleMatrix3, METH_VARARGS, NULL},
	 { (char *)"csZScaleMatrix3_swigregister", csZScaleMatrix3_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csTransform", _wrap_delete_csTransform, METH_VARARGS, NULL},
	 { (char *)"new_csTransform", _wrap_new_csTransform, METH_VARARGS, NULL},
	 { (char *)"csTransform_Description", _wrap_csTransform_Description, METH_VARARGS, NULL},
	 { (char *)"csTransform_Identity", _wrap_csTransform_Identity, METH_VARARGS, NULL},
	 { (char *)"csTransform_IsIdentity", _wrap_csTransform_IsIdentity, METH_VARARGS, NULL},
	 { (char *)"csTransform_GetO2T", _wrap_csTransform_GetO2T, METH_VARARGS, NULL},
	 { (char *)"csTransform_GetO2TTranslation", _wrap_csTransform_GetO2TTranslation, METH_VARARGS, NULL},
	 { (char *)"csTransform_GetOrigin", _wrap_csTransform_GetOrigin, METH_VARARGS, NULL},
	 { (char *)"csTransform_SetO2T", _wrap_csTransform_SetO2T, METH_VARARGS, NULL},
	 { (char *)"csTransform_SetO2TTranslation", _wrap_csTransform_SetO2TTranslation, METH_VARARGS, NULL},
	 { (char *)"csTransform_SetOrigin", _wrap_csTransform_SetOrigin, METH_VARARGS, NULL},
	 { (char *)"csTransform_Translate", _wrap_csTransform_Translate, METH_VARARGS, NULL},
	 { (char *)"csTransform_Other2ThisRelative", _wrap_csTransform_Other2ThisRelative, METH_VARARGS, NULL},
	 { (char *)"csTransform_Other2This", _wrap_csTransform_Other2This, METH_VARARGS, NULL},
	 { (char *)"csTransform_GetReflect", _wrap_csTransform_GetReflect, METH_VARARGS, NULL},
	 { (char *)"csTransform_GetFront", _wrap_csTransform_GetFront, METH_VARARGS, NULL},
	 { (char *)"csTransform_GetUp", _wrap_csTransform_GetUp, METH_VARARGS, NULL},
	 { (char *)"csTransform_GetRight", _wrap_csTransform_GetRight, METH_VARARGS, NULL},
	 { (char *)"csTransform___mul__", _wrap_csTransform___mul__, METH_VARARGS, NULL},
	 { (char *)"csTransform___rmul__", _wrap_csTransform___rmul__, METH_VARARGS, NULL},
	 { (char *)"csTransform_swigregister", csTransform_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csReversibleTransform", _wrap_new_csReversibleTransform, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_GetT2O", _wrap_csReversibleTransform_GetT2O, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_GetT2OTranslation", _wrap_csReversibleTransform_GetT2OTranslation, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_GetInverse", _wrap_csReversibleTransform_GetInverse, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_SetO2T", _wrap_csReversibleTransform_SetO2T, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_SetT2O", _wrap_csReversibleTransform_SetT2O, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_This2OtherRelative", _wrap_csReversibleTransform_This2OtherRelative, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_This2Other", _wrap_csReversibleTransform_This2Other, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_RotateOther", _wrap_csReversibleTransform_RotateOther, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_RotateThis", _wrap_csReversibleTransform_RotateThis, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_LookAt", _wrap_csReversibleTransform_LookAt, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform___imul__", _wrap_csReversibleTransform___imul__, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform___mul__", _wrap_csReversibleTransform___mul__, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform___idiv__", _wrap_csReversibleTransform___idiv__, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform___div__", _wrap_csReversibleTransform___div__, METH_VARARGS, NULL},
	 { (char *)"delete_csReversibleTransform", _wrap_delete_csReversibleTransform, METH_VARARGS, NULL},
	 { (char *)"csReversibleTransform_swigregister", csReversibleTransform_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csOrthoTransform", _wrap_new_csOrthoTransform, METH_VARARGS, NULL},
	 { (char *)"csOrthoTransform_SetO2T", _wrap_csOrthoTransform_SetO2T, METH_VARARGS, NULL},
	 { (char *)"csOrthoTransform_SetT2O", _wrap_csOrthoTransform_SetT2O, METH_VARARGS, NULL},
	 { (char *)"delete_csOrthoTransform", _wrap_delete_csOrthoTransform, METH_VARARGS, NULL},
	 { (char *)"csOrthoTransform_swigregister", csOrthoTransform_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csSphere", _wrap_new_csSphere, METH_VARARGS, NULL},
	 { (char *)"csSphere_GetCenter", _wrap_csSphere_GetCenter, METH_VARARGS, NULL},
	 { (char *)"csSphere_SetCenter", _wrap_csSphere_SetCenter, METH_VARARGS, NULL},
	 { (char *)"csSphere_GetRadius", _wrap_csSphere_GetRadius, METH_VARARGS, NULL},
	 { (char *)"csSphere_SetRadius", _wrap_csSphere_SetRadius, METH_VARARGS, NULL},
	 { (char *)"csSphere_Union", _wrap_csSphere_Union, METH_VARARGS, NULL},
	 { (char *)"csSphere___iadd__", _wrap_csSphere___iadd__, METH_VARARGS, NULL},
	 { (char *)"csSphere_TestIntersect", _wrap_csSphere_TestIntersect, METH_VARARGS, NULL},
	 { (char *)"csSphere___imul__", _wrap_csSphere___imul__, METH_VARARGS, NULL},
	 { (char *)"csSphere___div__", _wrap_csSphere___div__, METH_VARARGS, NULL},
	 { (char *)"delete_csSphere", _wrap_delete_csSphere, METH_VARARGS, NULL},
	 { (char *)"csSphere_swigregister", csSphere_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csEllipsoid", _wrap_new_csEllipsoid, METH_VARARGS, NULL},
	 { (char *)"csEllipsoid_GetCenter", _wrap_csEllipsoid_GetCenter, METH_VARARGS, NULL},
	 { (char *)"csEllipsoid_SetCenter", _wrap_csEllipsoid_SetCenter, METH_VARARGS, NULL},
	 { (char *)"csEllipsoid_GetRadius", _wrap_csEllipsoid_GetRadius, METH_VARARGS, NULL},
	 { (char *)"csEllipsoid_SetRadius", _wrap_csEllipsoid_SetRadius, METH_VARARGS, NULL},
	 { (char *)"delete_csEllipsoid", _wrap_delete_csEllipsoid, METH_VARARGS, NULL},
	 { (char *)"csEllipsoid_swigregister", csEllipsoid_swigregister, METH_VARARGS, NULL},
	 { (char *)"csPlane2_norm_set", _wrap_csPlane2_norm_set, METH_VARARGS, NULL},
	 { (char *)"csPlane2_norm_get", _wrap_csPlane2_norm_get, METH_VARARGS, NULL},
	 { (char *)"csPlane2_CC_set", _wrap_csPlane2_CC_set, METH_VARARGS, NULL},
	 { (char *)"csPlane2_CC_get", _wrap_csPlane2_CC_get, METH_VARARGS, NULL},
	 { (char *)"new_csPlane2", _wrap_new_csPlane2, METH_VARARGS, NULL},
	 { (char *)"csPlane2_Normal", _wrap_csPlane2_Normal, METH_VARARGS, NULL},
	 { (char *)"csPlane2_GetNormal", _wrap_csPlane2_GetNormal, METH_VARARGS, NULL},
	 { (char *)"csPlane2_A", _wrap_csPlane2_A, METH_VARARGS, NULL},
	 { (char *)"csPlane2_B", _wrap_csPlane2_B, METH_VARARGS, NULL},
	 { (char *)"csPlane2_C", _wrap_csPlane2_C, METH_VARARGS, NULL},
	 { (char *)"csPlane2_Set", _wrap_csPlane2_Set, METH_VARARGS, NULL},
	 { (char *)"csPlane2_Classify", _wrap_csPlane2_Classify, METH_VARARGS, NULL},
	 { (char *)"csPlane2_Distance", _wrap_csPlane2_Distance, METH_VARARGS, NULL},
	 { (char *)"csPlane2_SquaredDistance", _wrap_csPlane2_SquaredDistance, METH_VARARGS, NULL},
	 { (char *)"csPlane2_Invert", _wrap_csPlane2_Invert, METH_VARARGS, NULL},
	 { (char *)"csPlane2_Normalize", _wrap_csPlane2_Normalize, METH_VARARGS, NULL},
	 { (char *)"delete_csPlane2", _wrap_delete_csPlane2, METH_VARARGS, NULL},
	 { (char *)"csPlane2_swigregister", csPlane2_swigregister, METH_VARARGS, NULL},
	 { (char *)"csPlane3_norm_set", _wrap_csPlane3_norm_set, METH_VARARGS, NULL},
	 { (char *)"csPlane3_norm_get", _wrap_csPlane3_norm_get, METH_VARARGS, NULL},
	 { (char *)"csPlane3_DD_set", _wrap_csPlane3_DD_set, METH_VARARGS, NULL},
	 { (char *)"csPlane3_DD_get", _wrap_csPlane3_DD_get, METH_VARARGS, NULL},
	 { (char *)"new_csPlane3", _wrap_new_csPlane3, METH_VARARGS, NULL},
	 { (char *)"csPlane3___eq__", _wrap_csPlane3___eq__, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Normal", _wrap_csPlane3_Normal, METH_VARARGS, NULL},
	 { (char *)"csPlane3_A", _wrap_csPlane3_A, METH_VARARGS, NULL},
	 { (char *)"csPlane3_B", _wrap_csPlane3_B, METH_VARARGS, NULL},
	 { (char *)"csPlane3_C", _wrap_csPlane3_C, METH_VARARGS, NULL},
	 { (char *)"csPlane3_D", _wrap_csPlane3_D, METH_VARARGS, NULL},
	 { (char *)"csPlane3_GetNormal", _wrap_csPlane3_GetNormal, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Set", _wrap_csPlane3_Set, METH_VARARGS, NULL},
	 { (char *)"csPlane3_SetOrigin", _wrap_csPlane3_SetOrigin, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Classify", _wrap_csPlane3_Classify, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Distance", _wrap_csPlane3_Distance, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Invert", _wrap_csPlane3_Invert, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Inverse", _wrap_csPlane3_Inverse, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Normalize", _wrap_csPlane3_Normalize, METH_VARARGS, NULL},
	 { (char *)"csPlane3_FindPoint", _wrap_csPlane3_FindPoint, METH_VARARGS, NULL},
	 { (char *)"csPlane3_ProjectOnto", _wrap_csPlane3_ProjectOnto, METH_VARARGS, NULL},
	 { (char *)"csPlane3_FindOrthogonalPoints", _wrap_csPlane3_FindOrthogonalPoints, METH_VARARGS, NULL},
	 { (char *)"csPlane3_ClipPolygon", _wrap_csPlane3_ClipPolygon, METH_VARARGS, NULL},
	 { (char *)"csPlane3_Description", _wrap_csPlane3_Description, METH_VARARGS, NULL},
	 { (char *)"csPlane3___imul__", _wrap_csPlane3___imul__, METH_VARARGS, NULL},
	 { (char *)"csPlane3___idiv__", _wrap_csPlane3___idiv__, METH_VARARGS, NULL},
	 { (char *)"csPlane3___div__", _wrap_csPlane3___div__, METH_VARARGS, NULL},
	 { (char *)"delete_csPlane3", _wrap_delete_csPlane3, METH_VARARGS, NULL},
	 { (char *)"csPlane3_swigregister", csPlane3_swigregister, METH_VARARGS, NULL},
	 { (char *)"csMath2_WhichSide2D", _wrap_csMath2_WhichSide2D, METH_VARARGS, NULL},
	 { (char *)"csMath2_InPoly2D", _wrap_csMath2_InPoly2D, METH_VARARGS, NULL},
	 { (char *)"csMath2_Area2", _wrap_csMath2_Area2, METH_VARARGS, NULL},
	 { (char *)"csMath2_Right", _wrap_csMath2_Right, METH_VARARGS, NULL},
	 { (char *)"csMath2_Left", _wrap_csMath2_Left, METH_VARARGS, NULL},
	 { (char *)"csMath2_Visible", _wrap_csMath2_Visible, METH_VARARGS, NULL},
	 { (char *)"csMath2_PlanesEqual", _wrap_csMath2_PlanesEqual, METH_VARARGS, NULL},
	 { (char *)"csMath2_PlanesClose", _wrap_csMath2_PlanesClose, METH_VARARGS, NULL},
	 { (char *)"new_csMath2", _wrap_new_csMath2, METH_VARARGS, NULL},
	 { (char *)"delete_csMath2", _wrap_delete_csMath2, METH_VARARGS, NULL},
	 { (char *)"csMath2_swigregister", csMath2_swigregister, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_PlanePolygon", _wrap_csIntersect2_PlanePolygon, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_SegmentSegment", _wrap_csIntersect2_SegmentSegment, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_SegmentLine", _wrap_csIntersect2_SegmentLine, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_LineLine", _wrap_csIntersect2_LineLine, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_SegmentPlane", _wrap_csIntersect2_SegmentPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_SegmentPlaneNoTest", _wrap_csIntersect2_SegmentPlaneNoTest, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_PlanePlane", _wrap_csIntersect2_PlanePlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_SegmentBox", _wrap_csIntersect2_SegmentBox, METH_VARARGS, NULL},
	 { (char *)"new_csIntersect2", _wrap_new_csIntersect2, METH_VARARGS, NULL},
	 { (char *)"delete_csIntersect2", _wrap_delete_csIntersect2, METH_VARARGS, NULL},
	 { (char *)"csIntersect2_swigregister", csIntersect2_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csPoly2D", _wrap_new_csPoly2D, METH_VARARGS, NULL},
	 { (char *)"delete_csPoly2D", _wrap_delete_csPoly2D, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_assign", _wrap_csPoly2D_assign, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_MakeEmpty", _wrap_csPoly2D_MakeEmpty, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_GetVertexCount", _wrap_csPoly2D_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_GetVertices", _wrap_csPoly2D_GetVertices, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_GetVertex", _wrap_csPoly2D_GetVertex, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_GetFirst", _wrap_csPoly2D_GetFirst, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_GetLast", _wrap_csPoly2D_GetLast, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_In", _wrap_csPoly2D_In, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_MakeRoom", _wrap_csPoly2D_MakeRoom, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_SetVertexCount", _wrap_csPoly2D_SetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_AddVertex", _wrap_csPoly2D_AddVertex, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_SetVertices", _wrap_csPoly2D_SetVertices, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_ClipAgainst", _wrap_csPoly2D_ClipAgainst, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_Intersect", _wrap_csPoly2D_Intersect, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_ClipPlane", _wrap_csPoly2D_ClipPlane, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_ExtendConvex", _wrap_csPoly2D_ExtendConvex, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_GetSignedArea", _wrap_csPoly2D_GetSignedArea, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_Random", _wrap_csPoly2D_Random, METH_VARARGS, NULL},
	 { (char *)"csPoly2D___getitem__", _wrap_csPoly2D___getitem__, METH_VARARGS, NULL},
	 { (char *)"csPoly2D_swigregister", csPoly2D_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csPoly2DFactory", _wrap_delete_csPoly2DFactory, METH_VARARGS, NULL},
	 { (char *)"csPoly2DFactory_Create", _wrap_csPoly2DFactory_Create, METH_VARARGS, NULL},
	 { (char *)"new_csPoly2DFactory", _wrap_new_csPoly2DFactory, METH_VARARGS, NULL},
	 { (char *)"csPoly2DFactory_swigregister", csPoly2DFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"csMath3_WhichSide3D", _wrap_csMath3_WhichSide3D, METH_VARARGS, NULL},
	 { (char *)"csMath3_Visible", _wrap_csMath3_Visible, METH_VARARGS, NULL},
	 { (char *)"csMath3_Between", _wrap_csMath3_Between, METH_VARARGS, NULL},
	 { (char *)"csMath3_SetMinMax", _wrap_csMath3_SetMinMax, METH_VARARGS, NULL},
	 { (char *)"csMath3_DoubleArea3", _wrap_csMath3_DoubleArea3, METH_VARARGS, NULL},
	 { (char *)"csMath3_Direction3", _wrap_csMath3_Direction3, METH_VARARGS, NULL},
	 { (char *)"csMath3_CalcNormal", _wrap_csMath3_CalcNormal, METH_VARARGS, NULL},
	 { (char *)"csMath3_CalcPlane", _wrap_csMath3_CalcPlane, METH_VARARGS, NULL},
	 { (char *)"csMath3_PlanesEqual", _wrap_csMath3_PlanesEqual, METH_VARARGS, NULL},
	 { (char *)"csMath3_PlanesClose", _wrap_csMath3_PlanesClose, METH_VARARGS, NULL},
	 { (char *)"csMath3_OuterPlanes", _wrap_csMath3_OuterPlanes, METH_VARARGS, NULL},
	 { (char *)"csMath3_FindObserverSides", _wrap_csMath3_FindObserverSides, METH_VARARGS, NULL},
	 { (char *)"csMath3_SpherePosition", _wrap_csMath3_SpherePosition, METH_VARARGS, NULL},
	 { (char *)"new_csMath3", _wrap_new_csMath3, METH_VARARGS, NULL},
	 { (char *)"delete_csMath3", _wrap_delete_csMath3, METH_VARARGS, NULL},
	 { (char *)"csMath3_swigregister", csMath3_swigregister, METH_VARARGS, NULL},
	 { (char *)"csSquaredDist_PointPoint", _wrap_csSquaredDist_PointPoint, METH_VARARGS, NULL},
	 { (char *)"csSquaredDist_PointLine", _wrap_csSquaredDist_PointLine, METH_VARARGS, NULL},
	 { (char *)"csSquaredDist_PointPlane", _wrap_csSquaredDist_PointPlane, METH_VARARGS, NULL},
	 { (char *)"csSquaredDist_PointPoly", _wrap_csSquaredDist_PointPoly, METH_VARARGS, NULL},
	 { (char *)"new_csSquaredDist", _wrap_new_csSquaredDist, METH_VARARGS, NULL},
	 { (char *)"delete_csSquaredDist", _wrap_delete_csSquaredDist, METH_VARARGS, NULL},
	 { (char *)"csSquaredDist_swigregister", csSquaredDist_swigregister, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_PlanePolygon", _wrap_csIntersect3_PlanePolygon, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentFrustum", _wrap_csIntersect3_SegmentFrustum, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentTriangle", _wrap_csIntersect3_SegmentTriangle, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentPolygon", _wrap_csIntersect3_SegmentPolygon, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentPlanes", _wrap_csIntersect3_SegmentPlanes, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentPlane", _wrap_csIntersect3_SegmentPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_ThreePlanes", _wrap_csIntersect3_ThreePlanes, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_PlaneXPlane", _wrap_csIntersect3_PlaneXPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_PlaneYPlane", _wrap_csIntersect3_PlaneYPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_PlaneZPlane", _wrap_csIntersect3_PlaneZPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_PlaneAxisPlane", _wrap_csIntersect3_PlaneAxisPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentZ0Plane", _wrap_csIntersect3_SegmentZ0Plane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentXPlane", _wrap_csIntersect3_SegmentXPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentYPlane", _wrap_csIntersect3_SegmentYPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentZPlane", _wrap_csIntersect3_SegmentZPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentAxisPlane", _wrap_csIntersect3_SegmentAxisPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentXFrustum", _wrap_csIntersect3_SegmentXFrustum, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_SegmentYFrustum", _wrap_csIntersect3_SegmentYFrustum, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_BoxSegment", _wrap_csIntersect3_BoxSegment, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_ClipSegmentBox", _wrap_csIntersect3_ClipSegmentBox, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_BoxFrustum", _wrap_csIntersect3_BoxFrustum, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_BoxSphere", _wrap_csIntersect3_BoxSphere, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_BoxPlane", _wrap_csIntersect3_BoxPlane, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_BoxTriangle", _wrap_csIntersect3_BoxTriangle, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_BoxBox", _wrap_csIntersect3_BoxBox, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_FrustumFrustum", _wrap_csIntersect3_FrustumFrustum, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_TriangleTriangle", _wrap_csIntersect3_TriangleTriangle, METH_VARARGS, NULL},
	 { (char *)"new_csIntersect3", _wrap_new_csIntersect3, METH_VARARGS, NULL},
	 { (char *)"delete_csIntersect3", _wrap_delete_csIntersect3, METH_VARARGS, NULL},
	 { (char *)"csIntersect3_swigregister", csIntersect3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csPoly3D", _wrap_new_csPoly3D, METH_VARARGS, NULL},
	 { (char *)"delete_csPoly3D", _wrap_delete_csPoly3D, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_MakeEmpty", _wrap_csPoly3D_MakeEmpty, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_GetVertexCount", _wrap_csPoly3D_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_GetVertices", _wrap_csPoly3D_GetVertices, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_GetVertex", _wrap_csPoly3D_GetVertex, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_GetFirst", _wrap_csPoly3D_GetFirst, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_GetLast", _wrap_csPoly3D_GetLast, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_In", _wrap_csPoly3D_In, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_MakeRoom", _wrap_csPoly3D_MakeRoom, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_SetVertexCount", _wrap_csPoly3D_SetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_AddVertex", _wrap_csPoly3D_AddVertex, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_SetVertices", _wrap_csPoly3D_SetVertices, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ProjectXPlane", _wrap_csPoly3D_ProjectXPlane, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ProjectYPlane", _wrap_csPoly3D_ProjectYPlane, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ProjectZPlane", _wrap_csPoly3D_ProjectZPlane, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ProjectAxisPlane", _wrap_csPoly3D_ProjectAxisPlane, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_Classify", _wrap_csPoly3D_Classify, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ClassifyX", _wrap_csPoly3D_ClassifyX, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ClassifyY", _wrap_csPoly3D_ClassifyY, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ClassifyZ", _wrap_csPoly3D_ClassifyZ, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ClassifyAxis", _wrap_csPoly3D_ClassifyAxis, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_IsAxisAligned", _wrap_csPoly3D_IsAxisAligned, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ComputeMainNormalAxis", _wrap_csPoly3D_ComputeMainNormalAxis, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_CutToPlane", _wrap_csPoly3D_CutToPlane, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_SplitWithPlane", _wrap_csPoly3D_SplitWithPlane, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_SplitWithPlaneX", _wrap_csPoly3D_SplitWithPlaneX, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_SplitWithPlaneY", _wrap_csPoly3D_SplitWithPlaneY, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_SplitWithPlaneZ", _wrap_csPoly3D_SplitWithPlaneZ, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ComputeNormal", _wrap_csPoly3D_ComputeNormal, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_ComputePlane", _wrap_csPoly3D_ComputePlane, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_GetArea", _wrap_csPoly3D_GetArea, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_GetCenter", _wrap_csPoly3D_GetCenter, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_InSphere", _wrap_csPoly3D_InSphere, METH_VARARGS, NULL},
	 { (char *)"csPoly3D___getitem__", _wrap_csPoly3D___getitem__, METH_VARARGS, NULL},
	 { (char *)"csPoly3D_swigregister", csPoly3D_swigregister, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_orig_idx_set", _wrap_csCompressVertex_orig_idx_set, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_orig_idx_get", _wrap_csCompressVertex_orig_idx_get, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_x_set", _wrap_csCompressVertex_x_set, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_x_get", _wrap_csCompressVertex_x_get, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_y_set", _wrap_csCompressVertex_y_set, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_y_get", _wrap_csCompressVertex_y_get, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_z_set", _wrap_csCompressVertex_z_set, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_z_get", _wrap_csCompressVertex_z_get, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_new_idx_set", _wrap_csCompressVertex_new_idx_set, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_new_idx_get", _wrap_csCompressVertex_new_idx_get, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_used_set", _wrap_csCompressVertex_used_set, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_used_get", _wrap_csCompressVertex_used_get, METH_VARARGS, NULL},
	 { (char *)"new_csCompressVertex", _wrap_new_csCompressVertex, METH_VARARGS, NULL},
	 { (char *)"delete_csCompressVertex", _wrap_delete_csCompressVertex, METH_VARARGS, NULL},
	 { (char *)"csCompressVertex_swigregister", csCompressVertex_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csVector3Array", _wrap_new_csVector3Array, METH_VARARGS, NULL},
	 { (char *)"csVector3Array_AddVertexSmart", _wrap_csVector3Array_AddVertexSmart, METH_VARARGS, NULL},
	 { (char *)"csVector3Array_CompressVertices", _wrap_csVector3Array_CompressVertices, METH_VARARGS, NULL},
	 { (char *)"delete_csVector3Array", _wrap_delete_csVector3Array, METH_VARARGS, NULL},
	 { (char *)"csVector3Array_swigregister", csVector3Array_swigregister, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_a_set", _wrap_TriangleInt_a_set, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_a_get", _wrap_TriangleInt_a_get, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_b_set", _wrap_TriangleInt_b_set, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_b_get", _wrap_TriangleInt_b_get, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_c_set", _wrap_TriangleInt_c_set, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_c_get", _wrap_TriangleInt_c_get, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_Set", _wrap_TriangleInt_Set, METH_VARARGS, NULL},
	 { (char *)"new_TriangleInt", _wrap_new_TriangleInt, METH_VARARGS, NULL},
	 { (char *)"delete_TriangleInt", _wrap_delete_TriangleInt, METH_VARARGS, NULL},
	 { (char *)"TriangleInt_swigregister", TriangleInt_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csTriangle", _wrap_new_csTriangle, METH_VARARGS, NULL},
	 { (char *)"csTriangle___getitem__", _wrap_csTriangle___getitem__, METH_VARARGS, NULL},
	 { (char *)"csTriangle___setitem__", _wrap_csTriangle___setitem__, METH_VARARGS, NULL},
	 { (char *)"csTriangle___nonzero__", _wrap_csTriangle___nonzero__, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangle", _wrap_delete_csTriangle, METH_VARARGS, NULL},
	 { (char *)"csTriangle_swigregister", csTriangle_swigregister, METH_VARARGS, NULL},
	 { (char *)"csRect_xmin_set", _wrap_csRect_xmin_set, METH_VARARGS, NULL},
	 { (char *)"csRect_xmin_get", _wrap_csRect_xmin_get, METH_VARARGS, NULL},
	 { (char *)"csRect_ymin_set", _wrap_csRect_ymin_set, METH_VARARGS, NULL},
	 { (char *)"csRect_ymin_get", _wrap_csRect_ymin_get, METH_VARARGS, NULL},
	 { (char *)"csRect_xmax_set", _wrap_csRect_xmax_set, METH_VARARGS, NULL},
	 { (char *)"csRect_xmax_get", _wrap_csRect_xmax_get, METH_VARARGS, NULL},
	 { (char *)"csRect_ymax_set", _wrap_csRect_ymax_set, METH_VARARGS, NULL},
	 { (char *)"csRect_ymax_get", _wrap_csRect_ymax_get, METH_VARARGS, NULL},
	 { (char *)"new_csRect", _wrap_new_csRect, METH_VARARGS, NULL},
	 { (char *)"delete_csRect", _wrap_delete_csRect, METH_VARARGS, NULL},
	 { (char *)"csRect_Intersect", _wrap_csRect_Intersect, METH_VARARGS, NULL},
	 { (char *)"csRect_Intersects", _wrap_csRect_Intersects, METH_VARARGS, NULL},
	 { (char *)"csRect_Union", _wrap_csRect_Union, METH_VARARGS, NULL},
	 { (char *)"csRect_Exclude", _wrap_csRect_Exclude, METH_VARARGS, NULL},
	 { (char *)"csRect_Subtract", _wrap_csRect_Subtract, METH_VARARGS, NULL},
	 { (char *)"csRect_IsEmpty", _wrap_csRect_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"csRect_MakeEmpty", _wrap_csRect_MakeEmpty, METH_VARARGS, NULL},
	 { (char *)"csRect_Set", _wrap_csRect_Set, METH_VARARGS, NULL},
	 { (char *)"csRect_SetPos", _wrap_csRect_SetPos, METH_VARARGS, NULL},
	 { (char *)"csRect_SetSize", _wrap_csRect_SetSize, METH_VARARGS, NULL},
	 { (char *)"csRect_Move", _wrap_csRect_Move, METH_VARARGS, NULL},
	 { (char *)"csRect_Width", _wrap_csRect_Width, METH_VARARGS, NULL},
	 { (char *)"csRect_Height", _wrap_csRect_Height, METH_VARARGS, NULL},
	 { (char *)"csRect_Contains", _wrap_csRect_Contains, METH_VARARGS, NULL},
	 { (char *)"csRect_ContainsRel", _wrap_csRect_ContainsRel, METH_VARARGS, NULL},
	 { (char *)"csRect_Equal", _wrap_csRect_Equal, METH_VARARGS, NULL},
	 { (char *)"csRect_Normalize", _wrap_csRect_Normalize, METH_VARARGS, NULL},
	 { (char *)"csRect_Area", _wrap_csRect_Area, METH_VARARGS, NULL},
	 { (char *)"csRect_AddAdjacent", _wrap_csRect_AddAdjacent, METH_VARARGS, NULL},
	 { (char *)"csRect___eq__", _wrap_csRect___eq__, METH_VARARGS, NULL},
	 { (char *)"csRect___ne__", _wrap_csRect___ne__, METH_VARARGS, NULL},
	 { (char *)"csRect_Extend", _wrap_csRect_Extend, METH_VARARGS, NULL},
	 { (char *)"csRect_Join", _wrap_csRect_Join, METH_VARARGS, NULL},
	 { (char *)"csRect_Outset", _wrap_csRect_Outset, METH_VARARGS, NULL},
	 { (char *)"csRect_Inset", _wrap_csRect_Inset, METH_VARARGS, NULL},
	 { (char *)"csRect_ClipLineGeneral", _wrap_csRect_ClipLineGeneral, METH_VARARGS, NULL},
	 { (char *)"csRect_ClipLine", _wrap_csRect_ClipLine, METH_VARARGS, NULL},
	 { (char *)"csRect_ClipLineSafe", _wrap_csRect_ClipLineSafe, METH_VARARGS, NULL},
	 { (char *)"csRect_swigregister", csRect_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csRectRegion", _wrap_new_csRectRegion, METH_VARARGS, NULL},
	 { (char *)"delete_csRectRegion", _wrap_delete_csRectRegion, METH_VARARGS, NULL},
	 { (char *)"csRectRegion_Include", _wrap_csRectRegion_Include, METH_VARARGS, NULL},
	 { (char *)"csRectRegion_Exclude", _wrap_csRectRegion_Exclude, METH_VARARGS, NULL},
	 { (char *)"csRectRegion_ClipTo", _wrap_csRectRegion_ClipTo, METH_VARARGS, NULL},
	 { (char *)"csRectRegion_Count", _wrap_csRectRegion_Count, METH_VARARGS, NULL},
	 { (char *)"csRectRegion_RectAt", _wrap_csRectRegion_RectAt, METH_VARARGS, NULL},
	 { (char *)"csRectRegion_MakeEmpty", _wrap_csRectRegion_MakeEmpty, METH_VARARGS, NULL},
	 { (char *)"csRectRegion_swigregister", csRectRegion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csQuaternion", _wrap_new_csQuaternion, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Set", _wrap_csQuaternion_Set, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_SetIdentity", _wrap_csQuaternion_SetIdentity, METH_VARARGS, NULL},
	 { (char *)"csQuaternion___iadd__", _wrap_csQuaternion___iadd__, METH_VARARGS, NULL},
	 { (char *)"csQuaternion___isub__", _wrap_csQuaternion___isub__, METH_VARARGS, NULL},
	 { (char *)"csQuaternion___imul__", _wrap_csQuaternion___imul__, METH_VARARGS, NULL},
	 { (char *)"csQuaternion___idiv__", _wrap_csQuaternion___idiv__, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_GetConjugate", _wrap_csQuaternion_GetConjugate, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Conjugate", _wrap_csQuaternion_Conjugate, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Dot", _wrap_csQuaternion_Dot, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_SquaredNorm", _wrap_csQuaternion_SquaredNorm, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Norm", _wrap_csQuaternion_Norm, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Unit", _wrap_csQuaternion_Unit, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Rotate", _wrap_csQuaternion_Rotate, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_SetAxisAngle", _wrap_csQuaternion_SetAxisAngle, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_GetAxisAngle", _wrap_csQuaternion_GetAxisAngle, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_SetEulerAngles", _wrap_csQuaternion_SetEulerAngles, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_GetEulerAngles", _wrap_csQuaternion_GetEulerAngles, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_SetMatrix", _wrap_csQuaternion_SetMatrix, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_GetMatrix", _wrap_csQuaternion_GetMatrix, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_NLerp", _wrap_csQuaternion_NLerp, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_SLerp", _wrap_csQuaternion_SLerp, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Log", _wrap_csQuaternion_Log, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Exp", _wrap_csQuaternion_Exp, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_Squad", _wrap_csQuaternion_Squad, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_v_set", _wrap_csQuaternion_v_set, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_v_get", _wrap_csQuaternion_v_get, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_w_set", _wrap_csQuaternion_w_set, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_w_get", _wrap_csQuaternion_w_get, METH_VARARGS, NULL},
	 { (char *)"csQuaternion___add__", _wrap_csQuaternion___add__, METH_VARARGS, NULL},
	 { (char *)"csQuaternion___sub__", _wrap_csQuaternion___sub__, METH_VARARGS, NULL},
	 { (char *)"csQuaternion___mul__", _wrap_csQuaternion___mul__, METH_VARARGS, NULL},
	 { (char *)"delete_csQuaternion", _wrap_delete_csQuaternion, METH_VARARGS, NULL},
	 { (char *)"csQuaternion_swigregister", csQuaternion_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csSpline", _wrap_delete_csSpline, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetDimensionCount", _wrap_csSpline_GetDimensionCount, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetPointCount", _wrap_csSpline_GetPointCount, METH_VARARGS, NULL},
	 { (char *)"csSpline_InsertPoint", _wrap_csSpline_InsertPoint, METH_VARARGS, NULL},
	 { (char *)"csSpline_RemovePoint", _wrap_csSpline_RemovePoint, METH_VARARGS, NULL},
	 { (char *)"csSpline_SetTimeValues", _wrap_csSpline_SetTimeValues, METH_VARARGS, NULL},
	 { (char *)"csSpline_SetTimeValue", _wrap_csSpline_SetTimeValue, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetTimeValues", _wrap_csSpline_GetTimeValues, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetTimeValue", _wrap_csSpline_GetTimeValue, METH_VARARGS, NULL},
	 { (char *)"csSpline_SetDimensionValues", _wrap_csSpline_SetDimensionValues, METH_VARARGS, NULL},
	 { (char *)"csSpline_SetDimensionValue", _wrap_csSpline_SetDimensionValue, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetDimensionValues", _wrap_csSpline_GetDimensionValues, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetDimensionValue", _wrap_csSpline_GetDimensionValue, METH_VARARGS, NULL},
	 { (char *)"csSpline_SetIndexValues", _wrap_csSpline_SetIndexValues, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetIndexValues", _wrap_csSpline_GetIndexValues, METH_VARARGS, NULL},
	 { (char *)"csSpline_Calculate", _wrap_csSpline_Calculate, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetCurrentIndex", _wrap_csSpline_GetCurrentIndex, METH_VARARGS, NULL},
	 { (char *)"csSpline_GetInterpolatedDimension", _wrap_csSpline_GetInterpolatedDimension, METH_VARARGS, NULL},
	 { (char *)"csSpline_swigregister", csSpline_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csCubicSpline", _wrap_new_csCubicSpline, METH_VARARGS, NULL},
	 { (char *)"delete_csCubicSpline", _wrap_delete_csCubicSpline, METH_VARARGS, NULL},
	 { (char *)"csCubicSpline_Calculate", _wrap_csCubicSpline_Calculate, METH_VARARGS, NULL},
	 { (char *)"csCubicSpline_GetInterpolatedDimension", _wrap_csCubicSpline_GetInterpolatedDimension, METH_VARARGS, NULL},
	 { (char *)"csCubicSpline_swigregister", csCubicSpline_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csBSpline", _wrap_new_csBSpline, METH_VARARGS, NULL},
	 { (char *)"delete_csBSpline", _wrap_delete_csBSpline, METH_VARARGS, NULL},
	 { (char *)"csBSpline_Calculate", _wrap_csBSpline_Calculate, METH_VARARGS, NULL},
	 { (char *)"csBSpline_GetInterpolatedDimension", _wrap_csBSpline_GetInterpolatedDimension, METH_VARARGS, NULL},
	 { (char *)"csBSpline_swigregister", csBSpline_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csCatmullRomSpline", _wrap_new_csCatmullRomSpline, METH_VARARGS, NULL},
	 { (char *)"delete_csCatmullRomSpline", _wrap_delete_csCatmullRomSpline, METH_VARARGS, NULL},
	 { (char *)"csCatmullRomSpline_Clone", _wrap_csCatmullRomSpline_Clone, METH_VARARGS, NULL},
	 { (char *)"csCatmullRomSpline_swigregister", csCatmullRomSpline_swigregister, METH_VARARGS, NULL},
	 { (char *)"csBox2_MinX", _wrap_csBox2_MinX, METH_VARARGS, NULL},
	 { (char *)"csBox2_MinY", _wrap_csBox2_MinY, METH_VARARGS, NULL},
	 { (char *)"csBox2_MaxX", _wrap_csBox2_MaxX, METH_VARARGS, NULL},
	 { (char *)"csBox2_MaxY", _wrap_csBox2_MaxY, METH_VARARGS, NULL},
	 { (char *)"csBox2_Min", _wrap_csBox2_Min, METH_VARARGS, NULL},
	 { (char *)"csBox2_Max", _wrap_csBox2_Max, METH_VARARGS, NULL},
	 { (char *)"csBox2_Area", _wrap_csBox2_Area, METH_VARARGS, NULL},
	 { (char *)"csBox2_GetCorner", _wrap_csBox2_GetCorner, METH_VARARGS, NULL},
	 { (char *)"csBox2_GetCenter", _wrap_csBox2_GetCenter, METH_VARARGS, NULL},
	 { (char *)"csBox2_SetCenter", _wrap_csBox2_SetCenter, METH_VARARGS, NULL},
	 { (char *)"csBox2_SetSize", _wrap_csBox2_SetSize, METH_VARARGS, NULL},
	 { (char *)"csBox2_GetEdgeInfo", _wrap_csBox2_GetEdgeInfo, METH_VARARGS, NULL},
	 { (char *)"csBox2_GetEdge", _wrap_csBox2_GetEdge, METH_VARARGS, NULL},
	 { (char *)"csBox2_Intersect", _wrap_csBox2_Intersect, METH_VARARGS, NULL},
	 { (char *)"csBox2_In", _wrap_csBox2_In, METH_VARARGS, NULL},
	 { (char *)"csBox2_Overlap", _wrap_csBox2_Overlap, METH_VARARGS, NULL},
	 { (char *)"csBox2_Contains", _wrap_csBox2_Contains, METH_VARARGS, NULL},
	 { (char *)"csBox2_Empty", _wrap_csBox2_Empty, METH_VARARGS, NULL},
	 { (char *)"csBox2_SquaredOriginDist", _wrap_csBox2_SquaredOriginDist, METH_VARARGS, NULL},
	 { (char *)"csBox2_SquaredOriginMaxDist", _wrap_csBox2_SquaredOriginMaxDist, METH_VARARGS, NULL},
	 { (char *)"csBox2_SquaredPosDist", _wrap_csBox2_SquaredPosDist, METH_VARARGS, NULL},
	 { (char *)"csBox2_SquaredPosMaxDist", _wrap_csBox2_SquaredPosMaxDist, METH_VARARGS, NULL},
	 { (char *)"csBox2_StartBoundingBox", _wrap_csBox2_StartBoundingBox, METH_VARARGS, NULL},
	 { (char *)"csBox2_AddBoundingVertex", _wrap_csBox2_AddBoundingVertex, METH_VARARGS, NULL},
	 { (char *)"csBox2_AddBoundingVertexSmart", _wrap_csBox2_AddBoundingVertexSmart, METH_VARARGS, NULL},
	 { (char *)"csBox2_AddBoundingVertexTest", _wrap_csBox2_AddBoundingVertexTest, METH_VARARGS, NULL},
	 { (char *)"csBox2_AddBoundingVertexSmartTest", _wrap_csBox2_AddBoundingVertexSmartTest, METH_VARARGS, NULL},
	 { (char *)"new_csBox2", _wrap_new_csBox2, METH_VARARGS, NULL},
	 { (char *)"csBox2_Set", _wrap_csBox2_Set, METH_VARARGS, NULL},
	 { (char *)"csBox2_SetMin", _wrap_csBox2_SetMin, METH_VARARGS, NULL},
	 { (char *)"csBox2_SetMax", _wrap_csBox2_SetMax, METH_VARARGS, NULL},
	 { (char *)"csBox2_Description", _wrap_csBox2_Description, METH_VARARGS, NULL},
	 { (char *)"csBox2___iadd__", _wrap_csBox2___iadd__, METH_VARARGS, NULL},
	 { (char *)"csBox2___imul__", _wrap_csBox2___imul__, METH_VARARGS, NULL},
	 { (char *)"csBox2_TestIntersect", _wrap_csBox2_TestIntersect, METH_VARARGS, NULL},
	 { (char *)"csBox2___mul__", _wrap_csBox2___mul__, METH_VARARGS, NULL},
	 { (char *)"csBox2___ne__", _wrap_csBox2___ne__, METH_VARARGS, NULL},
	 { (char *)"csBox2___gt__", _wrap_csBox2___gt__, METH_VARARGS, NULL},
	 { (char *)"csBox2___add__", _wrap_csBox2___add__, METH_VARARGS, NULL},
	 { (char *)"csBox2___lt__", _wrap_csBox2___lt__, METH_VARARGS, NULL},
	 { (char *)"delete_csBox2", _wrap_delete_csBox2, METH_VARARGS, NULL},
	 { (char *)"csBox2_swigregister", csBox2_swigregister, METH_VARARGS, NULL},
	 { (char *)"csBox3_MinX", _wrap_csBox3_MinX, METH_VARARGS, NULL},
	 { (char *)"csBox3_MinY", _wrap_csBox3_MinY, METH_VARARGS, NULL},
	 { (char *)"csBox3_MinZ", _wrap_csBox3_MinZ, METH_VARARGS, NULL},
	 { (char *)"csBox3_MaxX", _wrap_csBox3_MaxX, METH_VARARGS, NULL},
	 { (char *)"csBox3_MaxY", _wrap_csBox3_MaxY, METH_VARARGS, NULL},
	 { (char *)"csBox3_MaxZ", _wrap_csBox3_MaxZ, METH_VARARGS, NULL},
	 { (char *)"csBox3_Min", _wrap_csBox3_Min, METH_VARARGS, NULL},
	 { (char *)"csBox3_Max", _wrap_csBox3_Max, METH_VARARGS, NULL},
	 { (char *)"csBox3_Volume", _wrap_csBox3_Volume, METH_VARARGS, NULL},
	 { (char *)"csBox3_Area", _wrap_csBox3_Area, METH_VARARGS, NULL},
	 { (char *)"csBox3_IsNaN", _wrap_csBox3_IsNaN, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetCorner", _wrap_csBox3_GetCorner, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetEdgeInfo", _wrap_csBox3_GetEdgeInfo, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetFaceEdges", _wrap_csBox3_GetFaceEdges, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetCenter", _wrap_csBox3_GetCenter, METH_VARARGS, NULL},
	 { (char *)"csBox3_SetCenter", _wrap_csBox3_SetCenter, METH_VARARGS, NULL},
	 { (char *)"csBox3_SetSize", _wrap_csBox3_SetSize, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetSize", _wrap_csBox3_GetSize, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetSide", _wrap_csBox3_GetSide, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetAxisPlane", _wrap_csBox3_GetAxisPlane, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetVisibleSides", _wrap_csBox3_GetVisibleSides, METH_VARARGS, NULL},
	 { (char *)"csBox3_OtherSide", _wrap_csBox3_OtherSide, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetEdge", _wrap_csBox3_GetEdge, METH_VARARGS, NULL},
	 { (char *)"csBox3_In", _wrap_csBox3_In, METH_VARARGS, NULL},
	 { (char *)"csBox3_Overlap", _wrap_csBox3_Overlap, METH_VARARGS, NULL},
	 { (char *)"csBox3_Contains", _wrap_csBox3_Contains, METH_VARARGS, NULL},
	 { (char *)"csBox3_Empty", _wrap_csBox3_Empty, METH_VARARGS, NULL},
	 { (char *)"csBox3_StartBoundingBox", _wrap_csBox3_StartBoundingBox, METH_VARARGS, NULL},
	 { (char *)"csBox3_AddBoundingVertex", _wrap_csBox3_AddBoundingVertex, METH_VARARGS, NULL},
	 { (char *)"csBox3_AddBoundingVertexSmart", _wrap_csBox3_AddBoundingVertexSmart, METH_VARARGS, NULL},
	 { (char *)"csBox3_AddBoundingVertexTest", _wrap_csBox3_AddBoundingVertexTest, METH_VARARGS, NULL},
	 { (char *)"csBox3_AddBoundingVertexSmartTest", _wrap_csBox3_AddBoundingVertexSmartTest, METH_VARARGS, NULL},
	 { (char *)"csBox3_AddBoundingBox", _wrap_csBox3_AddBoundingBox, METH_VARARGS, NULL},
	 { (char *)"new_csBox3", _wrap_new_csBox3, METH_VARARGS, NULL},
	 { (char *)"csBox3_Set", _wrap_csBox3_Set, METH_VARARGS, NULL},
	 { (char *)"csBox3_SetMin", _wrap_csBox3_SetMin, METH_VARARGS, NULL},
	 { (char *)"csBox3_SetMax", _wrap_csBox3_SetMax, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetMin", _wrap_csBox3_GetMin, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetMax", _wrap_csBox3_GetMax, METH_VARARGS, NULL},
	 { (char *)"csBox3_Description", _wrap_csBox3_Description, METH_VARARGS, NULL},
	 { (char *)"csBox3_Split", _wrap_csBox3_Split, METH_VARARGS, NULL},
	 { (char *)"csBox3_TestSplit", _wrap_csBox3_TestSplit, METH_VARARGS, NULL},
	 { (char *)"csBox3_AdjacentX", _wrap_csBox3_AdjacentX, METH_VARARGS, NULL},
	 { (char *)"csBox3_AdjacentY", _wrap_csBox3_AdjacentY, METH_VARARGS, NULL},
	 { (char *)"csBox3_AdjacentZ", _wrap_csBox3_AdjacentZ, METH_VARARGS, NULL},
	 { (char *)"csBox3_Adjacent", _wrap_csBox3_Adjacent, METH_VARARGS, NULL},
	 { (char *)"csBox3_CalculatePointSegment", _wrap_csBox3_CalculatePointSegment, METH_VARARGS, NULL},
	 { (char *)"csBox3_GetConvexOutline", _wrap_csBox3_GetConvexOutline, METH_VARARGS, NULL},
	 { (char *)"csBox3_Between", _wrap_csBox3_Between, METH_VARARGS, NULL},
	 { (char *)"csBox3_ManhattanDistance", _wrap_csBox3_ManhattanDistance, METH_VARARGS, NULL},
	 { (char *)"csBox3_SquaredOriginDist", _wrap_csBox3_SquaredOriginDist, METH_VARARGS, NULL},
	 { (char *)"csBox3_SquaredOriginMaxDist", _wrap_csBox3_SquaredOriginMaxDist, METH_VARARGS, NULL},
	 { (char *)"csBox3_SquaredPosDist", _wrap_csBox3_SquaredPosDist, METH_VARARGS, NULL},
	 { (char *)"csBox3_SquaredPosMaxDist", _wrap_csBox3_SquaredPosMaxDist, METH_VARARGS, NULL},
	 { (char *)"csBox3_ProjectBox", _wrap_csBox3_ProjectBox, METH_VARARGS, NULL},
	 { (char *)"csBox3_ProjectOutline", _wrap_csBox3_ProjectOutline, METH_VARARGS, NULL},
	 { (char *)"csBox3_ProjectBoxAndOutline", _wrap_csBox3_ProjectBoxAndOutline, METH_VARARGS, NULL},
	 { (char *)"csBox3___iadd__", _wrap_csBox3___iadd__, METH_VARARGS, NULL},
	 { (char *)"csBox3___imul__", _wrap_csBox3___imul__, METH_VARARGS, NULL},
	 { (char *)"csBox3_TestIntersect", _wrap_csBox3_TestIntersect, METH_VARARGS, NULL},
	 { (char *)"csBox3___mul__", _wrap_csBox3___mul__, METH_VARARGS, NULL},
	 { (char *)"csBox3___ne__", _wrap_csBox3___ne__, METH_VARARGS, NULL},
	 { (char *)"csBox3___gt__", _wrap_csBox3___gt__, METH_VARARGS, NULL},
	 { (char *)"csBox3___add__", _wrap_csBox3___add__, METH_VARARGS, NULL},
	 { (char *)"csBox3___lt__", _wrap_csBox3___lt__, METH_VARARGS, NULL},
	 { (char *)"delete_csBox3", _wrap_delete_csBox3, METH_VARARGS, NULL},
	 { (char *)"csBox3_swigregister", csBox3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csOBB", _wrap_new_csOBB, METH_VARARGS, NULL},
	 { (char *)"csOBB_AddBoundingVertex", _wrap_csOBB_AddBoundingVertex, METH_VARARGS, NULL},
	 { (char *)"csOBB_GetCorner", _wrap_csOBB_GetCorner, METH_VARARGS, NULL},
	 { (char *)"csOBB_GetMatrix", _wrap_csOBB_GetMatrix, METH_VARARGS, NULL},
	 { (char *)"csOBB_Volume", _wrap_csOBB_Volume, METH_VARARGS, NULL},
	 { (char *)"csOBB_FindOBB", _wrap_csOBB_FindOBB, METH_VARARGS, NULL},
	 { (char *)"csOBB_FindOBBAccurate", _wrap_csOBB_FindOBBAccurate, METH_VARARGS, NULL},
	 { (char *)"delete_csOBB", _wrap_delete_csOBB, METH_VARARGS, NULL},
	 { (char *)"csOBB_swigregister", csOBB_swigregister, METH_VARARGS, NULL},
	 { (char *)"csOBBFrozen_Copy", _wrap_csOBBFrozen_Copy, METH_VARARGS, NULL},
	 { (char *)"new_csOBBFrozen", _wrap_new_csOBBFrozen, METH_VARARGS, NULL},
	 { (char *)"csOBBFrozen_GetCorner", _wrap_csOBBFrozen_GetCorner, METH_VARARGS, NULL},
	 { (char *)"csOBBFrozen_ProjectOBB", _wrap_csOBBFrozen_ProjectOBB, METH_VARARGS, NULL},
	 { (char *)"delete_csOBBFrozen", _wrap_delete_csOBBFrozen, METH_VARARGS, NULL},
	 { (char *)"csOBBFrozen_swigregister", csOBBFrozen_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csSegment2", _wrap_new_csSegment2, METH_VARARGS, NULL},
	 { (char *)"delete_csSegment2", _wrap_delete_csSegment2, METH_VARARGS, NULL},
	 { (char *)"csSegment2_Set", _wrap_csSegment2_Set, METH_VARARGS, NULL},
	 { (char *)"csSegment2_SetStart", _wrap_csSegment2_SetStart, METH_VARARGS, NULL},
	 { (char *)"csSegment2_SetEnd", _wrap_csSegment2_SetEnd, METH_VARARGS, NULL},
	 { (char *)"csSegment2_Start", _wrap_csSegment2_Start, METH_VARARGS, NULL},
	 { (char *)"csSegment2_End", _wrap_csSegment2_End, METH_VARARGS, NULL},
	 { (char *)"csSegment2_swigregister", csSegment2_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csSegment3", _wrap_new_csSegment3, METH_VARARGS, NULL},
	 { (char *)"csSegment3_Set", _wrap_csSegment3_Set, METH_VARARGS, NULL},
	 { (char *)"csSegment3_SetStart", _wrap_csSegment3_SetStart, METH_VARARGS, NULL},
	 { (char *)"csSegment3_SetEnd", _wrap_csSegment3_SetEnd, METH_VARARGS, NULL},
	 { (char *)"csSegment3_Start", _wrap_csSegment3_Start, METH_VARARGS, NULL},
	 { (char *)"csSegment3_End", _wrap_csSegment3_End, METH_VARARGS, NULL},
	 { (char *)"delete_csSegment3", _wrap_delete_csSegment3, METH_VARARGS, NULL},
	 { (char *)"csSegment3_swigregister", csSegment3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csPath", _wrap_new_csPath, METH_VARARGS, NULL},
	 { (char *)"delete_csPath", _wrap_delete_csPath, METH_VARARGS, NULL},
	 { (char *)"csPath_Length", _wrap_csPath_Length, METH_VARARGS, NULL},
	 { (char *)"csPath_QueryObject", _wrap_csPath_QueryObject, METH_VARARGS, NULL},
	 { (char *)"csPath_CalculateAtTime", _wrap_csPath_CalculateAtTime, METH_VARARGS, NULL},
	 { (char *)"csPath_GetCurrentIndex", _wrap_csPath_GetCurrentIndex, METH_VARARGS, NULL},
	 { (char *)"csPath_GetTime", _wrap_csPath_GetTime, METH_VARARGS, NULL},
	 { (char *)"csPath_SetTime", _wrap_csPath_SetTime, METH_VARARGS, NULL},
	 { (char *)"csPath_SetTimes", _wrap_csPath_SetTimes, METH_VARARGS, NULL},
	 { (char *)"csPath_GetTimes", _wrap_csPath_GetTimes, METH_VARARGS, NULL},
	 { (char *)"csPath_SetPositionVectors", _wrap_csPath_SetPositionVectors, METH_VARARGS, NULL},
	 { (char *)"csPath_SetUpVectors", _wrap_csPath_SetUpVectors, METH_VARARGS, NULL},
	 { (char *)"csPath_SetForwardVectors", _wrap_csPath_SetForwardVectors, METH_VARARGS, NULL},
	 { (char *)"csPath_SetPositionVector", _wrap_csPath_SetPositionVector, METH_VARARGS, NULL},
	 { (char *)"csPath_SetUpVector", _wrap_csPath_SetUpVector, METH_VARARGS, NULL},
	 { (char *)"csPath_SetForwardVector", _wrap_csPath_SetForwardVector, METH_VARARGS, NULL},
	 { (char *)"csPath_GetPositionVector", _wrap_csPath_GetPositionVector, METH_VARARGS, NULL},
	 { (char *)"csPath_GetUpVector", _wrap_csPath_GetUpVector, METH_VARARGS, NULL},
	 { (char *)"csPath_GetForwardVector", _wrap_csPath_GetForwardVector, METH_VARARGS, NULL},
	 { (char *)"csPath_GetInterpolatedPosition", _wrap_csPath_GetInterpolatedPosition, METH_VARARGS, NULL},
	 { (char *)"csPath_GetInterpolatedUp", _wrap_csPath_GetInterpolatedUp, METH_VARARGS, NULL},
	 { (char *)"csPath_GetInterpolatedForward", _wrap_csPath_GetInterpolatedForward, METH_VARARGS, NULL},
	 { (char *)"csPath_GetDimensionValues", _wrap_csPath_GetDimensionValues, METH_VARARGS, NULL},
	 { (char *)"csPath_GetDimensionValue", _wrap_csPath_GetDimensionValue, METH_VARARGS, NULL},
	 { (char *)"csPath_InsertPoint", _wrap_csPath_InsertPoint, METH_VARARGS, NULL},
	 { (char *)"csPath_RemovePoint", _wrap_csPath_RemovePoint, METH_VARARGS, NULL},
	 { (char *)"csPath_swigregister", csPath_swigregister, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_IncRef", _wrap_pycsTriangleMesh_IncRef, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_DecRef", _wrap_pycsTriangleMesh_DecRef, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_GetRefCount", _wrap_pycsTriangleMesh_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_QueryInterface", _wrap_pycsTriangleMesh_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_AddRefOwner", _wrap_pycsTriangleMesh_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_RemoveRefOwner", _wrap_pycsTriangleMesh_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_GetInterfaceMetadata", _wrap_pycsTriangleMesh_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMesh_swigregister", pycsTriangleMesh_swigregister, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_IncRef", _wrap_pycsTriangleMeshBox_IncRef, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_DecRef", _wrap_pycsTriangleMeshBox_DecRef, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_GetRefCount", _wrap_pycsTriangleMeshBox_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_QueryInterface", _wrap_pycsTriangleMeshBox_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_AddRefOwner", _wrap_pycsTriangleMeshBox_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_RemoveRefOwner", _wrap_pycsTriangleMeshBox_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_GetInterfaceMetadata", _wrap_pycsTriangleMeshBox_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"pycsTriangleMeshBox_swigregister", pycsTriangleMeshBox_swigregister, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_IncRef", _wrap_scfTriangleMeshPointer_IncRef, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_DecRef", _wrap_scfTriangleMeshPointer_DecRef, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_GetRefCount", _wrap_scfTriangleMeshPointer_GetRefCount, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_QueryInterface", _wrap_scfTriangleMeshPointer_QueryInterface, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_AddRefOwner", _wrap_scfTriangleMeshPointer_AddRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_RemoveRefOwner", _wrap_scfTriangleMeshPointer_RemoveRefOwner, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_GetInterfaceMetadata", _wrap_scfTriangleMeshPointer_GetInterfaceMetadata, METH_VARARGS, NULL},
	 { (char *)"scfTriangleMeshPointer_swigregister", scfTriangleMeshPointer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleMesh", _wrap_new_csTriangleMesh, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleMesh", _wrap_delete_csTriangleMesh, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_AddVertex", _wrap_csTriangleMesh_AddVertex, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_GetVertexCount", _wrap_csTriangleMesh_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_GetVertices", _wrap_csTriangleMesh_GetVertices, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_AddTriangle", _wrap_csTriangleMesh_AddTriangle, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_AddTriangleMesh", _wrap_csTriangleMesh_AddTriangleMesh, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_GetTriangles", _wrap_csTriangleMesh_GetTriangles, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_GetTriangle", _wrap_csTriangleMesh_GetTriangle, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_GetTriangleCount", _wrap_csTriangleMesh_GetTriangleCount, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_Clear", _wrap_csTriangleMesh_Clear, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_SetSize", _wrap_csTriangleMesh_SetSize, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_SetTriangles", _wrap_csTriangleMesh_SetTriangles, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_Lock", _wrap_csTriangleMesh_Lock, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_Unlock", _wrap_csTriangleMesh_Unlock, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_GetFlags", _wrap_csTriangleMesh_GetFlags, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_GetChangeNumber", _wrap_csTriangleMesh_GetChangeNumber, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh___iadd__", _wrap_csTriangleMesh___iadd__, METH_VARARGS, NULL},
	 { (char *)"csTriangleMesh_swigregister", csTriangleMesh_swigregister, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_pos_set", _wrap_csTriangleVertex_pos_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_pos_get", _wrap_csTriangleVertex_pos_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_idx_set", _wrap_csTriangleVertex_idx_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_idx_get", _wrap_csTriangleVertex_idx_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_con_triangles_set", _wrap_csTriangleVertex_con_triangles_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_con_triangles_get", _wrap_csTriangleVertex_con_triangles_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_con_vertices_set", _wrap_csTriangleVertex_con_vertices_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_con_vertices_get", _wrap_csTriangleVertex_con_vertices_get, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleVertex", _wrap_new_csTriangleVertex, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleVertex", _wrap_delete_csTriangleVertex, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_AddTriangle", _wrap_csTriangleVertex_AddTriangle, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_AddVertex", _wrap_csTriangleVertex_AddVertex, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertex_swigregister", csTriangleVertex_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleVertices", _wrap_new_csTriangleVertices, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleVertices", _wrap_delete_csTriangleVertices, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertices_UpdateVertices", _wrap_csTriangleVertices_UpdateVertices, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertices_GetVertexCount", _wrap_csTriangleVertices_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertices_GetVertex", _wrap_csTriangleVertices_GetVertex, METH_VARARGS, NULL},
	 { (char *)"csTriangleVertices_swigregister", csTriangleVertices_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleMeshBox", _wrap_new_csTriangleMeshBox, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleMeshBox", _wrap_delete_csTriangleMeshBox, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_SetBox", _wrap_csTriangleMeshBox_SetBox, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_GetVertexCount", _wrap_csTriangleMeshBox_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_GetVertices", _wrap_csTriangleMeshBox_GetVertices, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_GetTriangleCount", _wrap_csTriangleMeshBox_GetTriangleCount, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_GetTriangles", _wrap_csTriangleMeshBox_GetTriangles, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_Lock", _wrap_csTriangleMeshBox_Lock, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_Unlock", _wrap_csTriangleMeshBox_Unlock, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_GetFlags", _wrap_csTriangleMeshBox_GetFlags, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_GetChangeNumber", _wrap_csTriangleMeshBox_GetChangeNumber, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshBox_swigregister", csTriangleMeshBox_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleMeshPointer", _wrap_new_csTriangleMeshPointer, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleMeshPointer", _wrap_delete_csTriangleMeshPointer, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_GetVertexCount", _wrap_csTriangleMeshPointer_GetVertexCount, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_GetVertices", _wrap_csTriangleMeshPointer_GetVertices, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_GetTriangleCount", _wrap_csTriangleMeshPointer_GetTriangleCount, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_GetTriangles", _wrap_csTriangleMeshPointer_GetTriangles, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_Lock", _wrap_csTriangleMeshPointer_Lock, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_Unlock", _wrap_csTriangleMeshPointer_Unlock, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_GetFlags", _wrap_csTriangleMeshPointer_GetFlags, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_GetChangeNumber", _wrap_csTriangleMeshPointer_GetChangeNumber, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshPointer_swigregister", csTriangleMeshPointer_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csIntArray", _wrap_delete_csIntArray, METH_VARARGS, NULL},
	 { (char *)"new_csIntArray", _wrap_new_csIntArray, METH_VARARGS, NULL},
	 { (char *)"csIntArray_GetSize", _wrap_csIntArray_GetSize, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Get", _wrap_csIntArray_Get, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Put", _wrap_csIntArray_Put, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Push", _wrap_csIntArray_Push, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Merge", _wrap_csIntArray_Merge, METH_VARARGS, NULL},
	 { (char *)"csIntArray_MergeSmart", _wrap_csIntArray_MergeSmart, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Pop", _wrap_csIntArray_Pop, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Top", _wrap_csIntArray_Top, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Insert", _wrap_csIntArray_Insert, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Contains", _wrap_csIntArray_Contains, METH_VARARGS, NULL},
	 { (char *)"csIntArray_DeleteAll", _wrap_csIntArray_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Truncate", _wrap_csIntArray_Truncate, METH_VARARGS, NULL},
	 { (char *)"csIntArray_Empty", _wrap_csIntArray_Empty, METH_VARARGS, NULL},
	 { (char *)"csIntArray_IsEmpty", _wrap_csIntArray_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"csIntArray_SetMinimalCapacity", _wrap_csIntArray_SetMinimalCapacity, METH_VARARGS, NULL},
	 { (char *)"csIntArray_DeleteIndex", _wrap_csIntArray_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"csIntArray_DeleteIndexFast", _wrap_csIntArray_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"csIntArray_DeleteRange", _wrap_csIntArray_DeleteRange, METH_VARARGS, NULL},
	 { (char *)"csIntArray___eq__", _wrap_csIntArray___eq__, METH_VARARGS, NULL},
	 { (char *)"csIntArray___ne__", _wrap_csIntArray___ne__, METH_VARARGS, NULL},
	 { (char *)"csIntArray_GetAllocator", _wrap_csIntArray_GetAllocator, METH_VARARGS, NULL},
	 { (char *)"csIntArray___getitem__", _wrap_csIntArray___getitem__, METH_VARARGS, NULL},
	 { (char *)"csIntArray___contains__", _wrap_csIntArray___contains__, METH_VARARGS, NULL},
	 { (char *)"csIntArray___delitem__", _wrap_csIntArray___delitem__, METH_VARARGS, NULL},
	 { (char *)"csIntArray___len__", _wrap_csIntArray___len__, METH_VARARGS, NULL},
	 { (char *)"csIntArray_append", _wrap_csIntArray_append, METH_VARARGS, NULL},
	 { (char *)"csIntArray_swigregister", csIntArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_csIntArrayArray", _wrap_delete_csIntArrayArray, METH_VARARGS, NULL},
	 { (char *)"new_csIntArrayArray", _wrap_new_csIntArrayArray, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_GetSize", _wrap_csIntArrayArray_GetSize, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Get", _wrap_csIntArrayArray_Get, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Put", _wrap_csIntArrayArray_Put, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Push", _wrap_csIntArrayArray_Push, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Merge", _wrap_csIntArrayArray_Merge, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_MergeSmart", _wrap_csIntArrayArray_MergeSmart, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Pop", _wrap_csIntArrayArray_Pop, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Top", _wrap_csIntArrayArray_Top, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Insert", _wrap_csIntArrayArray_Insert, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_DeleteAll", _wrap_csIntArrayArray_DeleteAll, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Truncate", _wrap_csIntArrayArray_Truncate, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_Empty", _wrap_csIntArrayArray_Empty, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_IsEmpty", _wrap_csIntArrayArray_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_SetMinimalCapacity", _wrap_csIntArrayArray_SetMinimalCapacity, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_DeleteIndex", _wrap_csIntArrayArray_DeleteIndex, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_DeleteIndexFast", _wrap_csIntArrayArray_DeleteIndexFast, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_DeleteRange", _wrap_csIntArrayArray_DeleteRange, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray___eq__", _wrap_csIntArrayArray___eq__, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray___ne__", _wrap_csIntArrayArray___ne__, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_GetAllocator", _wrap_csIntArrayArray_GetAllocator, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray___getitem__", _wrap_csIntArrayArray___getitem__, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray___contains__", _wrap_csIntArrayArray___contains__, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray___delitem__", _wrap_csIntArrayArray___delitem__, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray___len__", _wrap_csIntArrayArray___len__, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_append", _wrap_csIntArrayArray_append, METH_VARARGS, NULL},
	 { (char *)"csIntArrayArray_swigregister", csIntArrayArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"csTriangleMinMax_minx_set", _wrap_csTriangleMinMax_minx_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleMinMax_minx_get", _wrap_csTriangleMinMax_minx_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleMinMax_maxx_set", _wrap_csTriangleMinMax_maxx_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleMinMax_maxx_get", _wrap_csTriangleMinMax_maxx_get, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleMinMax", _wrap_new_csTriangleMinMax, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleMinMax", _wrap_delete_csTriangleMinMax, METH_VARARGS, NULL},
	 { (char *)"csTriangleMinMax_swigregister", csTriangleMinMax_swigregister, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_vt1_set", _wrap_csTriangleMeshEdge_vt1_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_vt1_get", _wrap_csTriangleMeshEdge_vt1_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_vt2_set", _wrap_csTriangleMeshEdge_vt2_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_vt2_get", _wrap_csTriangleMeshEdge_vt2_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_tri1_set", _wrap_csTriangleMeshEdge_tri1_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_tri1_get", _wrap_csTriangleMeshEdge_tri1_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_tri2_set", _wrap_csTriangleMeshEdge_tri2_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_tri2_get", _wrap_csTriangleMeshEdge_tri2_get, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_active_set", _wrap_csTriangleMeshEdge_active_set, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_active_get", _wrap_csTriangleMeshEdge_active_get, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleMeshEdge", _wrap_new_csTriangleMeshEdge, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleMeshEdge", _wrap_delete_csTriangleMeshEdge, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshEdge_swigregister", csTriangleMeshEdge_swigregister, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_CalculateNormals", _wrap_csTriangleMeshTools_CalculateNormals, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_CalculatePlanes", _wrap_csTriangleMeshTools_CalculatePlanes, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_CalculateEdges", _wrap_csTriangleMeshTools_CalculateEdges, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_CheckActiveEdges", _wrap_csTriangleMeshTools_CheckActiveEdges, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_CalculateOutline", _wrap_csTriangleMeshTools_CalculateOutline, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_IsMeshClosed", _wrap_csTriangleMeshTools_IsMeshClosed, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_IsMeshConvex", _wrap_csTriangleMeshTools_IsMeshConvex, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_CloseMesh", _wrap_csTriangleMeshTools_CloseMesh, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_SortTrianglesX", _wrap_csTriangleMeshTools_SortTrianglesX, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_PointInClosedMesh", _wrap_csTriangleMeshTools_PointInClosedMesh, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_LineInClosedMesh", _wrap_csTriangleMeshTools_LineInClosedMesh, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_BoxInClosedMesh", _wrap_csTriangleMeshTools_BoxInClosedMesh, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_CalculateVertexConnections", _wrap_csTriangleMeshTools_CalculateVertexConnections, METH_VARARGS, NULL},
	 { (char *)"new_csTriangleMeshTools", _wrap_new_csTriangleMeshTools, METH_VARARGS, NULL},
	 { (char *)"delete_csTriangleMeshTools", _wrap_delete_csTriangleMeshTools, METH_VARARGS, NULL},
	 { (char *)"csTriangleMeshTools_swigregister", csTriangleMeshTools_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_csTriangleMinMaxTo_p_CS__TriangleTT_int_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::TriangleT< int > *) (csTriangle *) ((csTriangleMinMax *) x));
}
static void *_p_csTriangleTo_p_CS__TriangleTT_int_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::TriangleT< int > *)  ((csTriangle *) x));
}
static void *_p_csBSplineTo_p_csSpline(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csSpline *)  ((csBSpline *) x));
}
static void *_p_csCubicSplineTo_p_csSpline(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csSpline *)  ((csCubicSpline *) x));
}
static void *_p_csCatmullRomSplineTo_p_csSpline(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csSpline *) (csBSpline *) ((csCatmullRomSpline *) x));
}
static void *_p_csReversibleTransformTo_p_csTransform(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csTransform *)  ((csReversibleTransform *) x));
}
static void *_p_csOrthoTransformTo_p_csTransform(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csTransform *) (csReversibleTransform *) ((csOrthoTransform *) x));
}
static void *_p_csOrthoTransformTo_p_csReversibleTransform(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csReversibleTransform *)  ((csOrthoTransform *) x));
}
static void *_p_csTriangleMeshTo_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csTriangleMesh,iTriangleMesh > *)  ((csTriangleMesh *) x));
}
static void *_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_tTo_p_iTriangleMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iTriangleMesh *)  ((scfImplementation1< csTriangleMesh,iTriangleMesh > *) x));
}
static void *_p_csTriangleMeshPointerTo_p_iTriangleMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iTriangleMesh *) (scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) ((csTriangleMeshPointer *) x));
}
static void *_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_tTo_p_iTriangleMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iTriangleMesh *)  ((scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) x));
}
static void *_p_csTriangleMeshBoxTo_p_iTriangleMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iTriangleMesh *) (scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) ((csTriangleMeshBox *) x));
}
static void *_p_csTriangleMeshTo_p_iTriangleMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iTriangleMesh *) (scfImplementation1< csTriangleMesh,iTriangleMesh > *) ((csTriangleMesh *) x));
}
static void *_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_tTo_p_iTriangleMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iTriangleMesh *)  ((scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) x));
}
static void *_p_csTriangleMeshPointerTo_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *)  ((csTriangleMeshPointer *) x));
}
static void *_p_csVector4To_p_csVector4TT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csVector4T< float > *)  ((csVector4 *) x));
}
static void *_p_csPathTo_p_iPath(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iPath *) (scfImplementationExt1< csPath,csObject,iPath > *) ((csPath *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iPath(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iPath *)  ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_csXRotMatrix3To_p_csMatrix3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csMatrix3 *)  ((csXRotMatrix3 *) x));
}
static void *_p_csYRotMatrix3To_p_csMatrix3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csMatrix3 *)  ((csYRotMatrix3 *) x));
}
static void *_p_csZRotMatrix3To_p_csMatrix3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csMatrix3 *)  ((csZRotMatrix3 *) x));
}
static void *_p_csXScaleMatrix3To_p_csMatrix3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csMatrix3 *)  ((csXScaleMatrix3 *) x));
}
static void *_p_csYScaleMatrix3To_p_csMatrix3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csMatrix3 *)  ((csYScaleMatrix3 *) x));
}
static void *_p_csZScaleMatrix3To_p_csMatrix3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csMatrix3 *)  ((csZScaleMatrix3 *) x));
}
static void *_p_csPathTo_p_scfImplementationExt1T_csPath_csObject_iPath_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementationExt1< csPath,csObject,iPath > *)  ((csPath *) x));
}
static void *_p_csTriangleMeshBoxTo_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csTriangleMeshBox,iTriangleMesh > *)  ((csTriangleMeshBox *) x));
}
static void *_p_csTriangleMinMaxTo_p_csTriangle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csTriangle *)  ((csTriangleMinMax *) x));
}
static void *_p_csPathTo_p_iObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iObject *) (scfImplementation1< csObject,iObject > *)(csObject *)(scfImplementationExt1< csPath,csObject,iPath > *) ((csPath *) x));
}
static void *_p_scfImplementation1T_csObject_iObject_tTo_p_iObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iObject *)  ((scfImplementation1< csObject,iObject > *) x));
}
static void *_p_csObjectTo_p_iObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iObject *) (scfImplementation1< csObject,iObject > *) ((csObject *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iObject *) (scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_csPathTo_p_csObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csObject *) (scfImplementationExt1< csPath,csObject,iPath > *) ((csPath *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_csObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csObject *)  ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_csOBBTo_p_csBox3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csBox3 *)  ((csOBB *) x));
}
static void *_p_iArrayChangeElementsT_csVector3_tTo_p_iArrayReadOnlyT_csVector3_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iArrayReadOnly< csVector3 > *)  ((iArrayChangeElements< csVector3 > *) x));
}
static void *_p_iArrayChangeAllT_csVector3_tTo_p_iArrayReadOnlyT_csVector3_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iArrayReadOnly< csVector3 > *) (iArrayChangeElements< csVector3 > *) ((iArrayChangeAll< csVector3 > *) x));
}
static void *_p_iArrayChangeAllT_csVector3_tTo_p_iArrayChangeElementsT_csVector3_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iArrayChangeElements< csVector3 > *)  ((iArrayChangeAll< csVector3 > *) x));
}
static void *_p_iEventOutletTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventOutlet *) x));
}
static void *_p_iPathTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPath *) x));
}
static void *_p_iKeyComposerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyComposer *) x));
}
static void *_p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringSetBase< CS::StringSetTag::General > *) x));
}
static void *_p_iFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFactory *) x));
}
static void *_p_iStringArrayTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringArray *) x));
}
static void *_p_iFrameEventSignpostTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iEventHandler *) ((iFrameEventSignpost *) x));
}
static void *_p_iEventNameRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventNameRegistry *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistry *) x));
}
static void *_p_iVFSTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVFS *) x));
}
static void *_p_iSCFTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSCF *) x));
}
static void *_p_iFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFile *) x));
}
static void *_p_iEventQueueTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventQueue *) x));
}
static void *_p_iDocumentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocument *) x));
}
static void *_p_csTriangleMeshPointerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *)(scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) ((csTriangleMeshPointer *) x));
}
static void *_p_iObjectNameChangeListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectNameChangeListener *) x));
}
static void *_p_iReporterListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterListener *) x));
}
static void *_p_iKeyboardDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyboardDriver *) x));
}
static void *_p_iArrayReadOnlyT_csVector3_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iArrayReadOnly< csVector3 > *) x));
}
static void *_p_iArrayChangeElementsT_csVector3_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csVector3 > *) ((iArrayChangeElements< csVector3 > *) x));
}
static void *_p_iArrayChangeAllT_csVector3_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iArrayReadOnly< csVector3 > *)(iArrayChangeElements< csVector3 > *) ((iArrayChangeAll< csVector3 > *) x));
}
static void *_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *) ((scfImplementation1< csTriangleMesh,iTriangleMesh > *) x));
}
static void *_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *) ((scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *) x));
}
static void *_p_iReporterTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporter *) x));
}
static void *_p_iDocumentSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentSystem *) x));
}
static void *_p_iPluginIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginIterator *) x));
}
static void *_p_iEventAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventAttributeIterator *) x));
}
static void *_p_iObjectRegistryIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistryIterator *) x));
}
static void *_p_iObjectIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectIterator *) x));
}
static void *_p_iReporterIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterIterator *) x));
}
static void *_p_iClipper2DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iClipper2D *) x));
}
static void *_p_iConfigIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigIterator *) x));
}
static void *_p_iDocumentAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttributeIterator *) x));
}
static void *_p_iDocumentNodeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNodeIterator *) x));
}
static void *_p_iCommandLineParserTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCommandLineParser *) x));
}
static void *_p_iDataBufferTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDataBuffer *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventHandler *) x));
}
static void *_p_iComponentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iComponent *) x));
}
static void *_p_iThreadReturnTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadReturn *) x));
}
static void *_p_iEventTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEvent *) x));
}
static void *_p_iMouseDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMouseDriver *) x));
}
static void *_p_iJoystickDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iJoystickDriver *) x));
}
static void *_p_iConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigFile *) x));
}
static void *_p_csConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *)(scfImplementation1< csConfigFile,iConfigFile > *) ((csConfigFile *) x));
}
static void *_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *) ((scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) x));
}
static void *_p_iEventPlugTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventPlug *) x));
}
static void *_p_csObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *) ((csObject *) x));
}
static void *_p_iObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObject *) x));
}
static void *_p_iDocumentAttributeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttribute *) x));
}
static void *_p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((scfImplementation1< csConfigFile,iConfigFile > *) x));
}
static void *_p_iDocumentNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNode *) x));
}
static void *_p_iStringTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iString *) x));
}
static void *_p_csTriangleMeshBoxTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *)(scfImplementation1< csTriangleMeshBox,iTriangleMesh > *) ((csTriangleMeshBox *) x));
}
static void *_p_scfImplementation1T_csObject_iObject_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *) ((scfImplementation1< csObject,iObject > *) x));
}
static void *_p_iStringSetTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iStringSetBase< CS::StringSetTag::General > *) ((iStringSet *) x));
}
static void *_p_iVirtualClockTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVirtualClock *) x));
}
static void *_p_csPathTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *)(scfImplementationExt1< csPath,csObject,iPath > *) ((csPath *) x));
}
static void *_p_iDebugHelperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDebugHelper *) x));
}
static void *_p_iTriangleMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTriangleMesh *) x));
}
static void *_p_csTriangleMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iTriangleMesh *)(scfImplementation1< csTriangleMesh,iTriangleMesh > *) ((csTriangleMesh *) x));
}
static void *_p_iEventCordTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventCord *) x));
}
static void *_p_iPluginManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginManager *) x));
}
static void *_p_iThreadManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadManager *) x));
}
static void *_p_iCacheManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCacheManager *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_iConfigManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((iConfigManager *) x));
}
static void *_p_csVector3ArrayTo_p_csPoly3D(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csPoly3D *)  ((csVector3Array *) x));
}
static void *_p_csPathTo_p_scfImplementation1T_csObject_iObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csObject,iObject > *) (csObject *)(scfImplementationExt1< csPath,csObject,iPath > *) ((csPath *) x));
}
static void *_p_csObjectTo_p_scfImplementation1T_csObject_iObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csObject,iObject > *)  ((csObject *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_scfImplementation1T_csObject_iObject_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((scfImplementation1< csObject,iObject > *) (csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csVector2 > *) x));
}
static void *_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csArray< int > > *) x));
}
static void *_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csVector3 > *) x));
}
static void *_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< unsigned int > *) x));
}
static void *_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csVector4 > *) x));
}
static void *_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< csPluginRequest > *) x));
}
static void *_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csArray< int > *) x));
}
static void *_p_csTriangleMeshEdgeTo_p_CS__Memory__CustomAllocated(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Memory::CustomAllocated *)  ((csTriangleMeshEdge *) x));
}
static void *_p_csCatmullRomSplineTo_p_csBSpline(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csBSpline *)  ((csCatmullRomSpline *) x));
}
static void *_p_csPathTo_p_CS__Utility__InternalRefCount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Utility::InternalRefCount *) (csObject *)(scfImplementationExt1< csPath,csObject,iPath > *) ((csPath *) x));
}
static void *_p_csObjectTo_p_CS__Utility__InternalRefCount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Utility::InternalRefCount *)  ((csObject *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_CS__Utility__InternalRefCount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Utility::InternalRefCount *) (csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static swig_type_info _swigt__p_AllocatorType = {"_p_AllocatorType", "AllocatorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Math__Matrix4 = {"_p_CS__Math__Matrix4", "CS::Math::Matrix4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Memory__AllocatorMalloc = {"_p_CS__Memory__AllocatorMalloc", "CS::Container::ArrayAllocDefault *|CS::Memory::AllocatorMalloc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Memory__CustomAllocated = {"_p_CS__Memory__CustomAllocated", "CS::Memory::CustomAllocated *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_CS__StringIDT_CS__StringSetTag__General_t = {"_p_CS__StringIDT_CS__StringSetTag__General_t", "csStringID *|csEventID *|CS::StringID< CS::StringSetTag::General > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__TriangleTT_int_t = {"_p_CS__TriangleTT_int_t", "CS::TriangleT< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Utility__InternalRefCount = {"_p_CS__Utility__InternalRefCount", "CS::Utility::InternalRefCount *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t = {"_p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t", "csStringSet *|CS::Utility::StringSet< CS::StringSetTag::General,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CapacityHandlerType = {"_p_CapacityHandlerType", "CapacityHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainedType = {"_p_ContainedType", "ContainedType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ElementHandlerType = {"_p_ElementHandlerType", "ElementHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HashType = {"_p_HashType", "HashType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TagType = {"_p_TagType", "TagType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ThisType = {"_p_ThisType", "ThisType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ValueType = {"_p_ValueType", "ValueType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__1_basetype = {"_p__1_basetype", "$1_basetype *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyCharType = {"_p__csKeyCharType", "enum _csKeyCharType *|csKeyCharType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyEventType = {"_p__csKeyEventType", "enum _csKeyEventType *|csKeyEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierNumType = {"_p__csKeyModifierNumType", "enum _csKeyModifierNumType *|csKeyModifierNumType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierType = {"_p__csKeyModifierType", "enum _csKeyModifierType *|csKeyModifierType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifiers = {"_p__csKeyModifiers", "_csKeyModifiers *|csKeyModifiers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csMouseEventType = {"_p__csMouseEventType", "enum _csMouseEventType *|csMouseEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityFixedGrowT_16_t = {"_p_csArrayCapacityFixedGrowT_16_t", "CS::Container::ArrayCapacityDefault *|csArrayCapacityFixedGrow< 16 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityVariableGrow = {"_p_csArrayCapacityVariableGrow", "csArrayCapacityDefault *|csArrayCapacityVariableGrow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csArray< int > > *|csArray< csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault >,csArrayElementHandler< csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csTriangle > *|csArray< csTriangle,csArrayElementHandler< csTriangle >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csVector2,csArrayElementHandler< csVector2 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csArray< csVector2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< csVector3,csArrayElementHandler< csVector3 >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csArray< csVector3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< int,csArrayElementHandler< int >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *|csArray< int,csArrayElementHandler< int >,CS::Memory::AllocatorMalloc,csArrayCapacityFixedGrow< 16 > > *|csArray< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< size_t > *|csArray< size_t,csArrayElementHandler< size_t >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csBSpline = {"_p_csBSpline", "csBSpline *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csBox2 = {"_p_csBox2", "csBox2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csBox3 = {"_p_csBox3", "csBox3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csCatmullRomSpline = {"_p_csCatmullRomSpline", "csCatmullRomSpline *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csCompressVertex = {"_p_csCompressVertex", "csCompressVertex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csCubicSpline = {"_p_csCubicSpline", "csCubicSpline *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csDVector3 = {"_p_csDVector3", "csDVector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csEllipsoid = {"_p_csEllipsoid", "csEllipsoid *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csFlags = {"_p_csFlags", "csFlags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csFrustum = {"_p_csFrustum", "csFrustum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csIntersect2 = {"_p_csIntersect2", "csIntersect2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csIntersect3 = {"_p_csIntersect3", "csIntersect3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csMath2 = {"_p_csMath2", "csMath2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csMath3 = {"_p_csMath3", "csMath3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csMatrix2 = {"_p_csMatrix2", "csMatrix2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csMatrix3 = {"_p_csMatrix3", "csMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csOBB = {"_p_csOBB", "csOBB *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csOBBFrozen = {"_p_csOBBFrozen", "csOBBFrozen *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csObject = {"_p_csObject", "csObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csOrthoTransform = {"_p_csOrthoTransform", "csOrthoTransform *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPath = {"_p_csPath", "csPath *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPlane2 = {"_p_csPlane2", "csPlane2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPlane3 = {"_p_csPlane3", "csPlane3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPoly2D = {"_p_csPoly2D", "csPoly2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPoly2DFactory = {"_p_csPoly2DFactory", "csPoly2DFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPoly3D = {"_p_csPoly3D", "csPoly3D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_csFrustum_t = {"_p_csPtrT_csFrustum_t", "csPtr< csFrustum > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csQuaternion = {"_p_csQuaternion", "csQuaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRect = {"_p_csRect", "csRect *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRectRegion = {"_p_csRectRegion", "csRectRegion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefArrayT_iObject_t = {"_p_csRefArrayT_iObject_t", "csRefArray< iObject > *|csObjectContainer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csReversibleTransform = {"_p_csReversibleTransform", "csReversibleTransform *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csSegment2 = {"_p_csSegment2", "csSegment2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csSegment3 = {"_p_csSegment3", "csSegment3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csSphere = {"_p_csSphere", "csSphere *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csSpline = {"_p_csSpline", "csSpline *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csSquaredDist = {"_p_csSquaredDist", "csSquaredDist *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTransform = {"_p_csTransform", "csTransform *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangle = {"_p_csTriangle", "csTriangle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleMesh = {"_p_csTriangleMesh", "csTriangleMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleMeshBox = {"_p_csTriangleMeshBox", "csTriangleMeshBox *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleMeshEdge = {"_p_csTriangleMeshEdge", "csTriangleMeshEdge *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleMeshPointer = {"_p_csTriangleMeshPointer", "csTriangleMeshPointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleMeshTools = {"_p_csTriangleMeshTools", "csTriangleMeshTools *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleMinMax = {"_p_csTriangleMinMax", "csTriangleMinMax *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleVertex = {"_p_csTriangleVertex", "csTriangleVertex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csTriangleVertices = {"_p_csTriangleVertices", "csTriangleVertices *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector2 = {"_p_csVector2", "csVector2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector3 = {"_p_csVector3", "csVector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector3Array = {"_p_csVector3Array", "csVector3Array *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector4 = {"_p_csVector4", "csVector4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector4TT_float_t = {"_p_csVector4TT_float_t", "csVector4T< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVertexStatus = {"_p_csVertexStatus", "csVertexStatus *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csXRotMatrix3 = {"_p_csXRotMatrix3", "csXRotMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csXScaleMatrix3 = {"_p_csXScaleMatrix3", "csXScaleMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csYRotMatrix3 = {"_p_csYRotMatrix3", "csYRotMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csYScaleMatrix3 = {"_p_csYScaleMatrix3", "csYScaleMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csZRotMatrix3 = {"_p_csZRotMatrix3", "csZRotMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csZScaleMatrix3 = {"_p_csZScaleMatrix3", "csZScaleMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iArrayChangeAllT_csVector3_t = {"_p_iArrayChangeAllT_csVector3_t", "iArrayChangeAll< csVector3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iArrayChangeElementsT_csVector3_t = {"_p_iArrayChangeElementsT_csVector3_t", "iArrayChangeElements< csVector3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iArrayReadOnlyT_csVector3_t = {"_p_iArrayReadOnlyT_csVector3_t", "iArrayReadOnly< csVector3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iBase = {"_p_iBase", "iBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iFile = {"_p_iFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventOutlet = {"_p_iEventOutlet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iKeyComposer = {"_p_iKeyComposer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringArray = {"_p_iStringArray", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFactory = {"_p_iFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFrameEventSignpost = {"_p_iFrameEventSignpost", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectRegistry = {"_p_iObjectRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventNameRegistry = {"_p_iEventNameRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocument = {"_p_iDocument", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventQueue = {"_p_iEventQueue", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringSetBaseT_CS__StringSetTag__General_t = {"_p_iStringSetBaseT_CS__StringSetTag__General_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iKeyboardDriver = {"_p_iKeyboardDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectNameChangeListener = {"_p_iObjectNameChangeListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporterListener = {"_p_iReporterListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEvent = {"_p_iEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporter = {"_p_iReporter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentSystem = {"_p_iDocumentSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPluginIterator = {"_p_iPluginIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventAttributeIterator = {"_p_iEventAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectRegistryIterator = {"_p_iObjectRegistryIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectIterator = {"_p_iObjectIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporterIterator = {"_p_iReporterIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigIterator = {"_p_iConfigIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentAttributeIterator = {"_p_iDocumentAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentNodeIterator = {"_p_iDocumentNodeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCommandLineParser = {"_p_iCommandLineParser", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDataBuffer = {"_p_iDataBuffer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventHandler = {"_p_iEventHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVFS = {"_p_iVFS", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iComponent = {"_p_iComponent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iThreadReturn = {"_p_iThreadReturn", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMouseDriver = {"_p_iMouseDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iJoystickDriver = {"_p_iJoystickDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigFile = {"_p_iConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csConfigFile = {"_p_csConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventPlug = {"_p_iEventPlug", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentAttribute = {"_p_iDocumentAttribute", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentNode = {"_p_iDocumentNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iString = {"_p_iString", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t = {"_p_scfImplementation1T_csConfigFile_iConfigFile_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringSet = {"_p_iStringSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVirtualClock = {"_p_iVirtualClock", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDebugHelper = {"_p_iDebugHelper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventCord = {"_p_iEventCord", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPluginManager = {"_p_iPluginManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iThreadManager = {"_p_iThreadManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCacheManager = {"_p_iCacheManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigManager = {"_p_iConfigManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iClipper2D = {"_p_iClipper2D", "iClipper2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iObject = {"_p_iObject", "iObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iPath = {"_p_iPath", "iPath *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iSCF = {"_p_iSCF", "iSCF *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iTriangleMesh = {"_p_iTriangleMesh", "iTriangleMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|int32 *|scfInterfaceVersion *|int32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int16_t = {"_p_int16_t", "int16 *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *|int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int8_t = {"_p_int8_t", "int8 *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "longlong *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_csPlane3 = {"_p_p_csPlane3", "csPlane3 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_csTriangleMinMax = {"_p_p_csTriangleMinMax", "csTriangleMinMax **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_csVector3 = {"_p_p_csVector3", "csVector3 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csObject_iObject_t = {"_p_scfImplementation1T_csObject_iObject_t", "scfImplementation1< csObject,iObject > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t = {"_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t", "scfImplementation1< csTriangleMeshBox,iTriangleMesh > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t = {"_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t", "scfImplementation1< csTriangleMeshPointer,iTriangleMesh > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t = {"_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t", "scfImplementation1< csTriangleMesh,iTriangleMesh > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t = {"_p_scfImplementationExt1T_csPath_csObject_iPath_t", "scfImplementationExt1< csPath,csObject,iPath > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_scfInterfaceMetadataList = {"_p_scfInterfaceMetadataList", "scfInterfaceMetadataList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint16_t = {"_p_uint16_t", "uint16 *|uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *|uint32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *|uint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "uint8 *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "CS::StringIDValue *|unsigned int *|uint *|csTicks *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|scfInterfaceID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "ulonglong *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_AllocatorType,
  &_swigt__p_CS__Math__Matrix4,
  &_swigt__p_CS__Memory__AllocatorMalloc,
  &_swigt__p_CS__Memory__CustomAllocated,
  &_swigt__p_CS__StringIDT_CS__StringSetTag__General_t,
  &_swigt__p_CS__TriangleTT_int_t,
  &_swigt__p_CS__Utility__InternalRefCount,
  &_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t,
  &_swigt__p_CapacityHandlerType,
  &_swigt__p_ContainedType,
  &_swigt__p_ElementHandlerType,
  &_swigt__p_HashType,
  &_swigt__p_TagType,
  &_swigt__p_ThisType,
  &_swigt__p_ValueType,
  &_swigt__p__1_basetype,
  &_swigt__p__csKeyCharType,
  &_swigt__p__csKeyEventType,
  &_swigt__p__csKeyModifierNumType,
  &_swigt__p__csKeyModifierType,
  &_swigt__p__csKeyModifiers,
  &_swigt__p__csMouseEventType,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_csArrayCapacityFixedGrowT_16_t,
  &_swigt__p_csArrayCapacityVariableGrow,
  &_swigt__p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csBSpline,
  &_swigt__p_csBox2,
  &_swigt__p_csBox3,
  &_swigt__p_csCatmullRomSpline,
  &_swigt__p_csCompressVertex,
  &_swigt__p_csConfigFile,
  &_swigt__p_csCubicSpline,
  &_swigt__p_csDVector3,
  &_swigt__p_csEllipsoid,
  &_swigt__p_csFlags,
  &_swigt__p_csFrustum,
  &_swigt__p_csIntersect2,
  &_swigt__p_csIntersect3,
  &_swigt__p_csMath2,
  &_swigt__p_csMath3,
  &_swigt__p_csMatrix2,
  &_swigt__p_csMatrix3,
  &_swigt__p_csOBB,
  &_swigt__p_csOBBFrozen,
  &_swigt__p_csObject,
  &_swigt__p_csOrthoTransform,
  &_swigt__p_csPath,
  &_swigt__p_csPlane2,
  &_swigt__p_csPlane3,
  &_swigt__p_csPoly2D,
  &_swigt__p_csPoly2DFactory,
  &_swigt__p_csPoly3D,
  &_swigt__p_csPtrT_csFrustum_t,
  &_swigt__p_csQuaternion,
  &_swigt__p_csRect,
  &_swigt__p_csRectRegion,
  &_swigt__p_csRefArrayT_iObject_t,
  &_swigt__p_csReversibleTransform,
  &_swigt__p_csSegment2,
  &_swigt__p_csSegment3,
  &_swigt__p_csSphere,
  &_swigt__p_csSpline,
  &_swigt__p_csSquaredDist,
  &_swigt__p_csTransform,
  &_swigt__p_csTriangle,
  &_swigt__p_csTriangleMesh,
  &_swigt__p_csTriangleMeshBox,
  &_swigt__p_csTriangleMeshEdge,
  &_swigt__p_csTriangleMeshPointer,
  &_swigt__p_csTriangleMeshTools,
  &_swigt__p_csTriangleMinMax,
  &_swigt__p_csTriangleVertex,
  &_swigt__p_csTriangleVertices,
  &_swigt__p_csVector2,
  &_swigt__p_csVector3,
  &_swigt__p_csVector3Array,
  &_swigt__p_csVector4,
  &_swigt__p_csVector4TT_float_t,
  &_swigt__p_csVertexStatus,
  &_swigt__p_csXRotMatrix3,
  &_swigt__p_csXScaleMatrix3,
  &_swigt__p_csYRotMatrix3,
  &_swigt__p_csYScaleMatrix3,
  &_swigt__p_csZRotMatrix3,
  &_swigt__p_csZScaleMatrix3,
  &_swigt__p_float,
  &_swigt__p_iArrayChangeAllT_csVector3_t,
  &_swigt__p_iArrayChangeElementsT_csVector3_t,
  &_swigt__p_iArrayReadOnlyT_csVector3_t,
  &_swigt__p_iBase,
  &_swigt__p_iCacheManager,
  &_swigt__p_iClipper2D,
  &_swigt__p_iCommandLineParser,
  &_swigt__p_iComponent,
  &_swigt__p_iConfigFile,
  &_swigt__p_iConfigIterator,
  &_swigt__p_iConfigManager,
  &_swigt__p_iDataBuffer,
  &_swigt__p_iDebugHelper,
  &_swigt__p_iDocument,
  &_swigt__p_iDocumentAttribute,
  &_swigt__p_iDocumentAttributeIterator,
  &_swigt__p_iDocumentNode,
  &_swigt__p_iDocumentNodeIterator,
  &_swigt__p_iDocumentSystem,
  &_swigt__p_iEvent,
  &_swigt__p_iEventAttributeIterator,
  &_swigt__p_iEventCord,
  &_swigt__p_iEventHandler,
  &_swigt__p_iEventNameRegistry,
  &_swigt__p_iEventOutlet,
  &_swigt__p_iEventPlug,
  &_swigt__p_iEventQueue,
  &_swigt__p_iFactory,
  &_swigt__p_iFile,
  &_swigt__p_iFrameEventSignpost,
  &_swigt__p_iJoystickDriver,
  &_swigt__p_iKeyComposer,
  &_swigt__p_iKeyboardDriver,
  &_swigt__p_iMouseDriver,
  &_swigt__p_iObject,
  &_swigt__p_iObjectIterator,
  &_swigt__p_iObjectNameChangeListener,
  &_swigt__p_iObjectRegistry,
  &_swigt__p_iObjectRegistryIterator,
  &_swigt__p_iPath,
  &_swigt__p_iPluginIterator,
  &_swigt__p_iPluginManager,
  &_swigt__p_iReporter,
  &_swigt__p_iReporterIterator,
  &_swigt__p_iReporterListener,
  &_swigt__p_iSCF,
  &_swigt__p_iString,
  &_swigt__p_iStringArray,
  &_swigt__p_iStringSet,
  &_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t,
  &_swigt__p_iThreadManager,
  &_swigt__p_iThreadReturn,
  &_swigt__p_iTriangleMesh,
  &_swigt__p_iVFS,
  &_swigt__p_iVirtualClock,
  &_swigt__p_int,
  &_swigt__p_int16_t,
  &_swigt__p_int64_t,
  &_swigt__p_int8_t,
  &_swigt__p_long_long,
  &_swigt__p_p_csPlane3,
  &_swigt__p_p_csTriangleMinMax,
  &_swigt__p_p_csVector3,
  &_swigt__p_p_void,
  &_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  &_swigt__p_scfImplementation1T_csObject_iObject_t,
  &_swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t,
  &_swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t,
  &_swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t,
  &_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  &_swigt__p_scfInterfaceMetadataList,
  &_swigt__p_size_t,
  &_swigt__p_uint16_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_uint8_t,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_AllocatorType[] = {  {&_swigt__p_AllocatorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Math__Matrix4[] = {  {&_swigt__p_CS__Math__Matrix4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Memory__AllocatorMalloc[] = {  {&_swigt__p_CS__Memory__AllocatorMalloc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {{&_swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {{&_swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {{&_swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Memory__CustomAllocated[] = {  {&_swigt__p_CS__Memory__CustomAllocated, 0, 0, 0},  {&_swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, _p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_tTo_p_CS__Memory__CustomAllocated, 0, 0},  {&_swigt__p_csTriangleMeshEdge, _p_csTriangleMeshEdgeTo_p_CS__Memory__CustomAllocated, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__StringIDT_CS__StringSetTag__General_t[] = {  {&_swigt__p_CS__StringIDT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__TriangleTT_int_t[] = {  {&_swigt__p_csTriangleMinMax, _p_csTriangleMinMaxTo_p_CS__TriangleTT_int_t, 0, 0},  {&_swigt__p_csTriangle, _p_csTriangleTo_p_CS__TriangleTT_int_t, 0, 0},  {&_swigt__p_CS__TriangleTT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Utility__InternalRefCount[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_CS__Utility__InternalRefCount, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_CS__Utility__InternalRefCount, 0, 0},  {&_swigt__p_CS__Utility__InternalRefCount, 0, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_CS__Utility__InternalRefCount, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t[] = {  {&_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CapacityHandlerType[] = {  {&_swigt__p_CapacityHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainedType[] = {  {&_swigt__p_ContainedType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ElementHandlerType[] = {  {&_swigt__p_ElementHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HashType[] = {  {&_swigt__p_HashType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TagType[] = {  {&_swigt__p_TagType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ThisType[] = {  {&_swigt__p_ThisType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ValueType[] = {  {&_swigt__p_ValueType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__1_basetype[] = {  {&_swigt__p__1_basetype, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyCharType[] = {  {&_swigt__p__csKeyCharType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyEventType[] = {  {&_swigt__p__csKeyEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierNumType[] = {  {&_swigt__p__csKeyModifierNumType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierType[] = {  {&_swigt__p__csKeyModifierType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifiers[] = {  {&_swigt__p__csKeyModifiers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csMouseEventType[] = {  {&_swigt__p__csMouseEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityFixedGrowT_16_t[] = {  {&_swigt__p_csArrayCapacityFixedGrowT_16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityVariableGrow[] = {  {&_swigt__p_csArrayCapacityVariableGrow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csBSpline[] = {  {&_swigt__p_csBSpline, 0, 0, 0},  {&_swigt__p_csCatmullRomSpline, _p_csCatmullRomSplineTo_p_csBSpline, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csBox2[] = {  {&_swigt__p_csBox2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csBox3[] = {  {&_swigt__p_csBox3, 0, 0, 0},  {&_swigt__p_csOBB, _p_csOBBTo_p_csBox3, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csCatmullRomSpline[] = {  {&_swigt__p_csCatmullRomSpline, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csCompressVertex[] = {  {&_swigt__p_csCompressVertex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csCubicSpline[] = {  {&_swigt__p_csCubicSpline, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csDVector3[] = {  {&_swigt__p_csDVector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csEllipsoid[] = {  {&_swigt__p_csEllipsoid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csFlags[] = {  {&_swigt__p_csFlags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csFrustum[] = {  {&_swigt__p_csFrustum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csIntersect2[] = {  {&_swigt__p_csIntersect2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csIntersect3[] = {  {&_swigt__p_csIntersect3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csMath2[] = {  {&_swigt__p_csMath2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csMath3[] = {  {&_swigt__p_csMath3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csMatrix2[] = {  {&_swigt__p_csMatrix2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csMatrix3[] = {  {&_swigt__p_csMatrix3, 0, 0, 0},  {&_swigt__p_csXRotMatrix3, _p_csXRotMatrix3To_p_csMatrix3, 0, 0},  {&_swigt__p_csYRotMatrix3, _p_csYRotMatrix3To_p_csMatrix3, 0, 0},  {&_swigt__p_csZRotMatrix3, _p_csZRotMatrix3To_p_csMatrix3, 0, 0},  {&_swigt__p_csXScaleMatrix3, _p_csXScaleMatrix3To_p_csMatrix3, 0, 0},  {&_swigt__p_csYScaleMatrix3, _p_csYScaleMatrix3To_p_csMatrix3, 0, 0},  {&_swigt__p_csZScaleMatrix3, _p_csZScaleMatrix3To_p_csMatrix3, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csOBB[] = {  {&_swigt__p_csOBB, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csOBBFrozen[] = {  {&_swigt__p_csOBBFrozen, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csObject[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_csObject, 0, 0},  {&_swigt__p_csObject, 0, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_csObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csOrthoTransform[] = {  {&_swigt__p_csOrthoTransform, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPath[] = {  {&_swigt__p_csPath, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPlane2[] = {  {&_swigt__p_csPlane2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPlane3[] = {  {&_swigt__p_csPlane3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPoly2D[] = {  {&_swigt__p_csPoly2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPoly2DFactory[] = {  {&_swigt__p_csPoly2DFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPoly3D[] = {  {&_swigt__p_csPoly3D, 0, 0, 0},  {&_swigt__p_csVector3Array, _p_csVector3ArrayTo_p_csPoly3D, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_csFrustum_t[] = {  {&_swigt__p_csPtrT_csFrustum_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csQuaternion[] = {  {&_swigt__p_csQuaternion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRect[] = {  {&_swigt__p_csRect, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRectRegion[] = {  {&_swigt__p_csRectRegion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefArrayT_iObject_t[] = {  {&_swigt__p_csRefArrayT_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csReversibleTransform[] = {  {&_swigt__p_csReversibleTransform, 0, 0, 0},  {&_swigt__p_csOrthoTransform, _p_csOrthoTransformTo_p_csReversibleTransform, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csSegment2[] = {  {&_swigt__p_csSegment2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csSegment3[] = {  {&_swigt__p_csSegment3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csSphere[] = {  {&_swigt__p_csSphere, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csSpline[] = {  {&_swigt__p_csBSpline, _p_csBSplineTo_p_csSpline, 0, 0},  {&_swigt__p_csSpline, 0, 0, 0},  {&_swigt__p_csCatmullRomSpline, _p_csCatmullRomSplineTo_p_csSpline, 0, 0},  {&_swigt__p_csCubicSpline, _p_csCubicSplineTo_p_csSpline, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csSquaredDist[] = {  {&_swigt__p_csSquaredDist, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTransform[] = {  {&_swigt__p_csTransform, 0, 0, 0},  {&_swigt__p_csReversibleTransform, _p_csReversibleTransformTo_p_csTransform, 0, 0},  {&_swigt__p_csOrthoTransform, _p_csOrthoTransformTo_p_csTransform, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangle[] = {  {&_swigt__p_csTriangleMinMax, _p_csTriangleMinMaxTo_p_csTriangle, 0, 0},  {&_swigt__p_csTriangle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMesh[] = {  {&_swigt__p_csTriangleMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMeshBox[] = {  {&_swigt__p_csTriangleMeshBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMeshEdge[] = {  {&_swigt__p_csTriangleMeshEdge, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMeshPointer[] = {  {&_swigt__p_csTriangleMeshPointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMeshTools[] = {  {&_swigt__p_csTriangleMeshTools, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleMinMax[] = {  {&_swigt__p_csTriangleMinMax, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleVertex[] = {  {&_swigt__p_csTriangleVertex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csTriangleVertices[] = {  {&_swigt__p_csTriangleVertices, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector2[] = {  {&_swigt__p_csVector2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector3[] = {  {&_swigt__p_csVector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector3Array[] = {  {&_swigt__p_csVector3Array, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector4[] = {  {&_swigt__p_csVector4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector4TT_float_t[] = {  {&_swigt__p_csVector4, _p_csVector4To_p_csVector4TT_float_t, 0, 0},  {&_swigt__p_csVector4TT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVertexStatus[] = {  {&_swigt__p_csVertexStatus, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csXRotMatrix3[] = {  {&_swigt__p_csXRotMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csXScaleMatrix3[] = {  {&_swigt__p_csXScaleMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csYRotMatrix3[] = {  {&_swigt__p_csYRotMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csYScaleMatrix3[] = {  {&_swigt__p_csYScaleMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csZRotMatrix3[] = {  {&_swigt__p_csZRotMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csZScaleMatrix3[] = {  {&_swigt__p_csZScaleMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeAllT_csVector3_t[] = {  {&_swigt__p_iArrayChangeAllT_csVector3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayChangeElementsT_csVector3_t[] = {  {&_swigt__p_iArrayChangeElementsT_csVector3_t, 0, 0, 0},  {&_swigt__p_iArrayChangeAllT_csVector3_t, _p_iArrayChangeAllT_csVector3_tTo_p_iArrayChangeElementsT_csVector3_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iArrayReadOnlyT_csVector3_t[] = {  {&_swigt__p_iArrayReadOnlyT_csVector3_t, 0, 0, 0},  {&_swigt__p_iArrayChangeElementsT_csVector3_t, _p_iArrayChangeElementsT_csVector3_tTo_p_iArrayReadOnlyT_csVector3_t, 0, 0},  {&_swigt__p_iArrayChangeAllT_csVector3_t, _p_iArrayChangeAllT_csVector3_tTo_p_iArrayReadOnlyT_csVector3_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFile[] = {{&_swigt__p_iFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventOutlet[] = {{&_swigt__p_iEventOutlet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyComposer[] = {{&_swigt__p_iKeyComposer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringArray[] = {{&_swigt__p_iStringArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFactory[] = {{&_swigt__p_iFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFrameEventSignpost[] = {{&_swigt__p_iFrameEventSignpost, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistry[] = {{&_swigt__p_iObjectRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventNameRegistry[] = {{&_swigt__p_iEventNameRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocument[] = {{&_swigt__p_iDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventQueue[] = {{&_swigt__p_iEventQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t[] = {{&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyboardDriver[] = {{&_swigt__p_iKeyboardDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectNameChangeListener[] = {{&_swigt__p_iObjectNameChangeListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterListener[] = {{&_swigt__p_iReporterListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEvent[] = {{&_swigt__p_iEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporter[] = {{&_swigt__p_iReporter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentSystem[] = {{&_swigt__p_iDocumentSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginIterator[] = {{&_swigt__p_iPluginIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventAttributeIterator[] = {{&_swigt__p_iEventAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistryIterator[] = {{&_swigt__p_iObjectRegistryIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectIterator[] = {{&_swigt__p_iObjectIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterIterator[] = {{&_swigt__p_iReporterIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigIterator[] = {{&_swigt__p_iConfigIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttributeIterator[] = {{&_swigt__p_iDocumentAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNodeIterator[] = {{&_swigt__p_iDocumentNodeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCommandLineParser[] = {{&_swigt__p_iCommandLineParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDataBuffer[] = {{&_swigt__p_iDataBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventHandler[] = {{&_swigt__p_iEventHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVFS[] = {{&_swigt__p_iVFS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iComponent[] = {{&_swigt__p_iComponent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadReturn[] = {{&_swigt__p_iThreadReturn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMouseDriver[] = {{&_swigt__p_iMouseDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iJoystickDriver[] = {{&_swigt__p_iJoystickDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigFile[] = {{&_swigt__p_iConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csConfigFile[] = {{&_swigt__p_csConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventPlug[] = {{&_swigt__p_iEventPlug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttribute[] = {{&_swigt__p_iDocumentAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNode[] = {{&_swigt__p_iDocumentNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iString[] = {{&_swigt__p_iString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t[] = {{&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSet[] = {{&_swigt__p_iStringSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVirtualClock[] = {{&_swigt__p_iVirtualClock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDebugHelper[] = {{&_swigt__p_iDebugHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventCord[] = {{&_swigt__p_iEventCord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginManager[] = {{&_swigt__p_iPluginManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadManager[] = {{&_swigt__p_iThreadManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCacheManager[] = {{&_swigt__p_iCacheManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigManager[] = {{&_swigt__p_iConfigManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBase[] = {  {&_swigt__p_iFile, _p_iFileTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, _p_scfImplementation1T_csObject_iObject_tTo_p_iBase, 0, 0},  {&_swigt__p_iEventOutlet, _p_iEventOutletTo_p_iBase, 0, 0},  {&_swigt__p_iKeyComposer, _p_iKeyComposerTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_tTo_p_iBase, 0, 0},  {&_swigt__p_iStringArray, _p_iStringArrayTo_p_iBase, 0, 0},  {&_swigt__p_iFactory, _p_iFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iFrameEventSignpost, _p_iFrameEventSignpostTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase, 0, 0},  {&_swigt__p_iBase, 0, 0, 0},  {&_swigt__p_iObjectRegistry, _p_iObjectRegistryTo_p_iBase, 0, 0},  {&_swigt__p_iEventNameRegistry, _p_iEventNameRegistryTo_p_iBase, 0, 0},  {&_swigt__p_iDocument, _p_iDocumentTo_p_iBase, 0, 0},  {&_swigt__p_csTriangleMeshPointer, _p_csTriangleMeshPointerTo_p_iBase, 0, 0},  {&_swigt__p_iEventQueue, _p_iEventQueueTo_p_iBase, 0, 0},  {&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, _p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase, 0, 0},  {&_swigt__p_iKeyboardDriver, _p_iKeyboardDriverTo_p_iBase, 0, 0},  {&_swigt__p_iObjectNameChangeListener, _p_iObjectNameChangeListenerTo_p_iBase, 0, 0},  {&_swigt__p_iReporterListener, _p_iReporterListenerTo_p_iBase, 0, 0},  {&_swigt__p_iEvent, _p_iEventTo_p_iBase, 0, 0},  {&_swigt__p_iReporter, _p_iReporterTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentSystem, _p_iDocumentSystemTo_p_iBase, 0, 0},  {&_swigt__p_iPluginIterator, _p_iPluginIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iEventAttributeIterator, _p_iEventAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectRegistryIterator, _p_iObjectRegistryIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectIterator, _p_iObjectIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iReporterIterator, _p_iReporterIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iConfigIterator, _p_iConfigIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttributeIterator, _p_iDocumentAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iArrayReadOnlyT_csVector3_t, _p_iArrayReadOnlyT_csVector3_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeElementsT_csVector3_t, _p_iArrayChangeElementsT_csVector3_tTo_p_iBase, 0, 0},  {&_swigt__p_iArrayChangeAllT_csVector3_t, _p_iArrayChangeAllT_csVector3_tTo_p_iBase, 0, 0},  {&_swigt__p_iClipper2D, _p_iClipper2DTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNodeIterator, _p_iDocumentNodeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iCommandLineParser, _p_iCommandLineParserTo_p_iBase, 0, 0},  {&_swigt__p_iDataBuffer, _p_iDataBufferTo_p_iBase, 0, 0},  {&_swigt__p_iEventHandler, _p_iEventHandlerTo_p_iBase, 0, 0},  {&_swigt__p_iVFS, _p_iVFSTo_p_iBase, 0, 0},  {&_swigt__p_iComponent, _p_iComponentTo_p_iBase, 0, 0},  {&_swigt__p_iThreadReturn, _p_iThreadReturnTo_p_iBase, 0, 0},  {&_swigt__p_iSCF, _p_iSCFTo_p_iBase, 0, 0},  {&_swigt__p_iMouseDriver, _p_iMouseDriverTo_p_iBase, 0, 0},  {&_swigt__p_iJoystickDriver, _p_iJoystickDriverTo_p_iBase, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_iBase, 0, 0},  {&_swigt__p_iConfigFile, _p_iConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_csConfigFile, _p_csConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMesh_iTriangleMesh_tTo_p_iBase, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_iBase, 0, 0},  {&_swigt__p_iEventPlug, _p_iEventPlugTo_p_iBase, 0, 0},  {&_swigt__p_iObject, _p_iObjectTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttribute, _p_iDocumentAttributeTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNode, _p_iDocumentNodeTo_p_iBase, 0, 0},  {&_swigt__p_iString, _p_iStringTo_p_iBase, 0, 0},  {&_swigt__p_csTriangleMeshBox, _p_csTriangleMeshBoxTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_tTo_p_iBase, 0, 0},  {&_swigt__p_iPath, _p_iPathTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, _p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase, 0, 0},  {&_swigt__p_iStringSet, _p_iStringSetTo_p_iBase, 0, 0},  {&_swigt__p_iVirtualClock, _p_iVirtualClockTo_p_iBase, 0, 0},  {&_swigt__p_csTriangleMesh, _p_csTriangleMeshTo_p_iBase, 0, 0},  {&_swigt__p_iDebugHelper, _p_iDebugHelperTo_p_iBase, 0, 0},  {&_swigt__p_iTriangleMesh, _p_iTriangleMeshTo_p_iBase, 0, 0},  {&_swigt__p_iEventCord, _p_iEventCordTo_p_iBase, 0, 0},  {&_swigt__p_iPluginManager, _p_iPluginManagerTo_p_iBase, 0, 0},  {&_swigt__p_iThreadManager, _p_iThreadManagerTo_p_iBase, 0, 0},  {&_swigt__p_iCacheManager, _p_iCacheManagerTo_p_iBase, 0, 0},  {&_swigt__p_iConfigManager, _p_iConfigManagerTo_p_iBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iClipper2D[] = {  {&_swigt__p_iClipper2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObject[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iObject, 0, 0},  {&_swigt__p_iObject, 0, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_iObject, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_iObject, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, _p_scfImplementation1T_csObject_iObject_tTo_p_iObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPath[] = {  {&_swigt__p_iPath, 0, 0, 0},  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iPath, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_iPath, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSCF[] = {  {&_swigt__p_iSCF, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTriangleMesh[] = {  {&_swigt__p_csTriangleMeshPointer, _p_csTriangleMeshPointerTo_p_iTriangleMesh, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_tTo_p_iTriangleMesh, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMesh_iTriangleMesh_tTo_p_iTriangleMesh, 0, 0},  {&_swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, _p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_tTo_p_iTriangleMesh, 0, 0},  {&_swigt__p_csTriangleMeshBox, _p_csTriangleMeshBoxTo_p_iTriangleMesh, 0, 0},  {&_swigt__p_iTriangleMesh, 0, 0, 0},  {&_swigt__p_csTriangleMesh, _p_csTriangleMeshTo_p_iTriangleMesh, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int16_t[] = {  {&_swigt__p_int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int8_t[] = {  {&_swigt__p_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_csPlane3[] = {  {&_swigt__p_p_csPlane3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_csTriangleMinMax[] = {  {&_swigt__p_p_csTriangleMinMax, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_csVector3[] = {  {&_swigt__p_p_csVector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csObject_iObject_t[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_scfImplementation1T_csObject_iObject_t, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_scfImplementation1T_csObject_iObject_t, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, 0, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_scfImplementation1T_csObject_iObject_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t[] = {  {&_swigt__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0, 0, 0},  {&_swigt__p_csTriangleMeshBox, _p_csTriangleMeshBoxTo_p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t[] = {  {&_swigt__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0, 0, 0},  {&_swigt__p_csTriangleMeshPointer, _p_csTriangleMeshPointerTo_p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t[] = {  {&_swigt__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0, 0, 0},  {&_swigt__p_csTriangleMesh, _p_csTriangleMeshTo_p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t[] = {  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, 0, 0, 0},  {&_swigt__p_csPath, _p_csPathTo_p_scfImplementationExt1T_csPath_csObject_iPath_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfInterfaceMetadataList[] = {  {&_swigt__p_scfInterfaceMetadataList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint16_t[] = {  {&_swigt__p_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_AllocatorType,
  _swigc__p_CS__Math__Matrix4,
  _swigc__p_CS__Memory__AllocatorMalloc,
  _swigc__p_CS__Memory__CustomAllocated,
  _swigc__p_CS__StringIDT_CS__StringSetTag__General_t,
  _swigc__p_CS__TriangleTT_int_t,
  _swigc__p_CS__Utility__InternalRefCount,
  _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t,
  _swigc__p_CapacityHandlerType,
  _swigc__p_ContainedType,
  _swigc__p_ElementHandlerType,
  _swigc__p_HashType,
  _swigc__p_TagType,
  _swigc__p_ThisType,
  _swigc__p_ValueType,
  _swigc__p__1_basetype,
  _swigc__p__csKeyCharType,
  _swigc__p__csKeyEventType,
  _swigc__p__csKeyModifierNumType,
  _swigc__p__csKeyModifierType,
  _swigc__p__csKeyModifiers,
  _swigc__p__csMouseEventType,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_csArrayCapacityFixedGrowT_16_t,
  _swigc__p_csArrayCapacityVariableGrow,
  _swigc__p_csArrayT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_csArrayElementHandlerT_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csPluginRequest_csArrayElementHandlerT_csPluginRequest_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csTriangle_csArrayElementHandlerT_csTriangle_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csVector2_csArrayElementHandlerT_csVector2_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csVector3_csArrayElementHandlerT_csVector3_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_csVector4_csArrayElementHandlerT_csVector4_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_int_csArrayElementHandlerT_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csArrayT_unsigned_int_csArrayElementHandlerT_unsigned_int_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csBSpline,
  _swigc__p_csBox2,
  _swigc__p_csBox3,
  _swigc__p_csCatmullRomSpline,
  _swigc__p_csCompressVertex,
  _swigc__p_csConfigFile,
  _swigc__p_csCubicSpline,
  _swigc__p_csDVector3,
  _swigc__p_csEllipsoid,
  _swigc__p_csFlags,
  _swigc__p_csFrustum,
  _swigc__p_csIntersect2,
  _swigc__p_csIntersect3,
  _swigc__p_csMath2,
  _swigc__p_csMath3,
  _swigc__p_csMatrix2,
  _swigc__p_csMatrix3,
  _swigc__p_csOBB,
  _swigc__p_csOBBFrozen,
  _swigc__p_csObject,
  _swigc__p_csOrthoTransform,
  _swigc__p_csPath,
  _swigc__p_csPlane2,
  _swigc__p_csPlane3,
  _swigc__p_csPoly2D,
  _swigc__p_csPoly2DFactory,
  _swigc__p_csPoly3D,
  _swigc__p_csPtrT_csFrustum_t,
  _swigc__p_csQuaternion,
  _swigc__p_csRect,
  _swigc__p_csRectRegion,
  _swigc__p_csRefArrayT_iObject_t,
  _swigc__p_csReversibleTransform,
  _swigc__p_csSegment2,
  _swigc__p_csSegment3,
  _swigc__p_csSphere,
  _swigc__p_csSpline,
  _swigc__p_csSquaredDist,
  _swigc__p_csTransform,
  _swigc__p_csTriangle,
  _swigc__p_csTriangleMesh,
  _swigc__p_csTriangleMeshBox,
  _swigc__p_csTriangleMeshEdge,
  _swigc__p_csTriangleMeshPointer,
  _swigc__p_csTriangleMeshTools,
  _swigc__p_csTriangleMinMax,
  _swigc__p_csTriangleVertex,
  _swigc__p_csTriangleVertices,
  _swigc__p_csVector2,
  _swigc__p_csVector3,
  _swigc__p_csVector3Array,
  _swigc__p_csVector4,
  _swigc__p_csVector4TT_float_t,
  _swigc__p_csVertexStatus,
  _swigc__p_csXRotMatrix3,
  _swigc__p_csXScaleMatrix3,
  _swigc__p_csYRotMatrix3,
  _swigc__p_csYScaleMatrix3,
  _swigc__p_csZRotMatrix3,
  _swigc__p_csZScaleMatrix3,
  _swigc__p_float,
  _swigc__p_iArrayChangeAllT_csVector3_t,
  _swigc__p_iArrayChangeElementsT_csVector3_t,
  _swigc__p_iArrayReadOnlyT_csVector3_t,
  _swigc__p_iBase,
  _swigc__p_iCacheManager,
  _swigc__p_iClipper2D,
  _swigc__p_iCommandLineParser,
  _swigc__p_iComponent,
  _swigc__p_iConfigFile,
  _swigc__p_iConfigIterator,
  _swigc__p_iConfigManager,
  _swigc__p_iDataBuffer,
  _swigc__p_iDebugHelper,
  _swigc__p_iDocument,
  _swigc__p_iDocumentAttribute,
  _swigc__p_iDocumentAttributeIterator,
  _swigc__p_iDocumentNode,
  _swigc__p_iDocumentNodeIterator,
  _swigc__p_iDocumentSystem,
  _swigc__p_iEvent,
  _swigc__p_iEventAttributeIterator,
  _swigc__p_iEventCord,
  _swigc__p_iEventHandler,
  _swigc__p_iEventNameRegistry,
  _swigc__p_iEventOutlet,
  _swigc__p_iEventPlug,
  _swigc__p_iEventQueue,
  _swigc__p_iFactory,
  _swigc__p_iFile,
  _swigc__p_iFrameEventSignpost,
  _swigc__p_iJoystickDriver,
  _swigc__p_iKeyComposer,
  _swigc__p_iKeyboardDriver,
  _swigc__p_iMouseDriver,
  _swigc__p_iObject,
  _swigc__p_iObjectIterator,
  _swigc__p_iObjectNameChangeListener,
  _swigc__p_iObjectRegistry,
  _swigc__p_iObjectRegistryIterator,
  _swigc__p_iPath,
  _swigc__p_iPluginIterator,
  _swigc__p_iPluginManager,
  _swigc__p_iReporter,
  _swigc__p_iReporterIterator,
  _swigc__p_iReporterListener,
  _swigc__p_iSCF,
  _swigc__p_iString,
  _swigc__p_iStringArray,
  _swigc__p_iStringSet,
  _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t,
  _swigc__p_iThreadManager,
  _swigc__p_iThreadReturn,
  _swigc__p_iTriangleMesh,
  _swigc__p_iVFS,
  _swigc__p_iVirtualClock,
  _swigc__p_int,
  _swigc__p_int16_t,
  _swigc__p_int64_t,
  _swigc__p_int8_t,
  _swigc__p_long_long,
  _swigc__p_p_csPlane3,
  _swigc__p_p_csTriangleMinMax,
  _swigc__p_p_csVector3,
  _swigc__p_p_void,
  _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  _swigc__p_scfImplementation1T_csObject_iObject_t,
  _swigc__p_scfImplementation1T_csTriangleMeshBox_iTriangleMesh_t,
  _swigc__p_scfImplementation1T_csTriangleMeshPointer_iTriangleMesh_t,
  _swigc__p_scfImplementation1T_csTriangleMesh_iTriangleMesh_t,
  _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  _swigc__p_scfInterfaceMetadataList,
  _swigc__p_size_t,
  _swigc__p_uint16_t,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_uint8_t,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_long_long,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  SWIG_Python_SetConstant(d, "CS_AXIS_NONE",SWIG_From_int(static_cast< int >(CS_AXIS_NONE)));
  SWIG_Python_SetConstant(d, "CS_AXIS_X",SWIG_From_int(static_cast< int >(CS_AXIS_X)));
  SWIG_Python_SetConstant(d, "CS_AXIS_Y",SWIG_From_int(static_cast< int >(CS_AXIS_Y)));
  SWIG_Python_SetConstant(d, "CS_AXIS_Z",SWIG_From_int(static_cast< int >(CS_AXIS_Z)));
  SWIG_Python_SetConstant(d, "CS_AXIS_W",SWIG_From_int(static_cast< int >(CS_AXIS_W)));
  SWIG_Python_SetConstant(d, "CS_POLY_IN",SWIG_From_int(static_cast< int >(CS_POLY_IN)));
  SWIG_Python_SetConstant(d, "CS_POLY_ON",SWIG_From_int(static_cast< int >(CS_POLY_ON)));
  SWIG_Python_SetConstant(d, "CS_POLY_OUT",SWIG_From_int(static_cast< int >(CS_POLY_OUT)));
  SWIG_Python_SetConstant(d, "CS_POL_SAME_PLANE",SWIG_From_int(static_cast< int >(CS_POL_SAME_PLANE)));
  SWIG_Python_SetConstant(d, "CS_POL_FRONT",SWIG_From_int(static_cast< int >(CS_POL_FRONT)));
  SWIG_Python_SetConstant(d, "CS_POL_BACK",SWIG_From_int(static_cast< int >(CS_POL_BACK)));
  SWIG_Python_SetConstant(d, "CS_POL_SPLIT_NEEDED",SWIG_From_int(static_cast< int >(CS_POL_SPLIT_NEEDED)));
  SWIG_Python_SetConstant(d, "CS_BOUNDINGBOX_MAXVALUE",SWIG_From_double(static_cast< double >(1000000000.)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_xy",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_xy)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_xY",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_xY)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_Xy",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_Xy)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_XY",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_XY)));
  SWIG_Python_SetConstant(d, "CS_BOX_CENTER2",SWIG_From_int(static_cast< int >(CS_BOX_CENTER2)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xy_Xy",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xy_Xy)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_Xy_xy",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_Xy_xy)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_Xy_XY",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_Xy_XY)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XY_Xy",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XY_Xy)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XY_xY",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XY_xY)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xY_XY",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xY_XY)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xY_xy",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xY_xy)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xy_xY",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xy_xY)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_xyz",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_xyZ",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_xyZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_xYz",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_xYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_xYZ",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_xYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_Xyz",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_Xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_XyZ",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_XyZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_XYz",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_XYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_CORNER_XYZ",SWIG_From_int(static_cast< int >(CS_BOX_CORNER_XYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_CENTER3",SWIG_From_int(static_cast< int >(CS_BOX_CENTER3)));
  SWIG_Python_SetConstant(d, "CS_BOX_SIDE_x",SWIG_From_int(static_cast< int >(CS_BOX_SIDE_x)));
  SWIG_Python_SetConstant(d, "CS_BOX_SIDE_X",SWIG_From_int(static_cast< int >(CS_BOX_SIDE_X)));
  SWIG_Python_SetConstant(d, "CS_BOX_SIDE_y",SWIG_From_int(static_cast< int >(CS_BOX_SIDE_y)));
  SWIG_Python_SetConstant(d, "CS_BOX_SIDE_Y",SWIG_From_int(static_cast< int >(CS_BOX_SIDE_Y)));
  SWIG_Python_SetConstant(d, "CS_BOX_SIDE_z",SWIG_From_int(static_cast< int >(CS_BOX_SIDE_z)));
  SWIG_Python_SetConstant(d, "CS_BOX_SIDE_Z",SWIG_From_int(static_cast< int >(CS_BOX_SIDE_Z)));
  SWIG_Python_SetConstant(d, "CS_BOX_INSIDE",SWIG_From_int(static_cast< int >(CS_BOX_INSIDE)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_Xyz_xyz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_Xyz_xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xyz_Xyz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xyz_Xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xyz_xYz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xyz_xYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xYz_xyz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xYz_xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xYz_XYz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xYz_XYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XYz_xYz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XYz_xYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XYz_Xyz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XYz_Xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_Xyz_XYz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_Xyz_XYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_Xyz_XyZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_Xyz_XyZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XyZ_Xyz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XyZ_Xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XyZ_XYZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XyZ_XYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XYZ_XyZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XYZ_XyZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XYZ_XYz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XYZ_XYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XYz_XYZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XYz_XYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XYZ_xYZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XYZ_xYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xYZ_XYZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xYZ_XYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xYZ_xYz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xYZ_xYz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xYz_xYZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xYz_xYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xYZ_xyZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xYZ_xyZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xyZ_xYZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xyZ_xYZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xyZ_xyz",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xyZ_xyz)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xyz_xyZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xyz_xyZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_xyZ_XyZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_xyZ_XyZ)));
  SWIG_Python_SetConstant(d, "CS_BOX_EDGE_XyZ_xyZ",SWIG_From_int(static_cast< int >(CS_BOX_EDGE_XyZ_xyZ)));
}

