;;=============================================================================
;;
;;	Copyright (C)1999-2005 by Eric Sunshine <sunshine@sunshineco.com>
;;
;; The contents of this file are copyrighted by Eric Sunshine.  This work is
;; distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
;; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
;; PARTICULAR PURPOSE.  You may distribute this file provided that this
;; copyright notice is retained.  Send comments to <sunshine@sunshineco.com>.
;;
;;=============================================================================
;;=============================================================================
;; macosx.cfg
;;
;;	Configuration options for MacOS/X.
;;
;;=============================================================================

;;-----------------------------------------------------------------------------
;; Global Configuration
;;
;; This section contains configuration information for each platform covered by
;; the MacOS/X port of Crystal Space.  The proper configuration keys for this
;; section are identified by the key prefix "OSX.global" (for example,
;; "OSX.global.menu").  The following configuration keys are recognized in the
;; global configuration section:
;;
;; "menu"
;;	Identifies the menu configuration keys which describe the application's
;;	main menu.  The value of this key is appended to the string "OSX.Menu"
;;	to form the complete section name (for example, "OSX.Menu.aqua").
;;
;;-----------------------------------------------------------------------------

; MacOS/X (Aqua interface)
OSX.Global.menu = aqua

;;-----------------------------------------------------------------------------
;; Menu Configuration
;;
;; This section contains configuration information describing the layout and
;; operation of the application menu for a particular theme/gui.  The
;; appropriate menu is chosen by the global configuration section as
;; described above.  Two types of configuration information are recognized in
;; this section: menus and items.
;;
;; A menu block can define both the top-level application menu as well as any
;; submenu.  Keys for menus are identified with the prefix "OSX.Menu" (such as
;; "OSX.Menu.aqua").  The following configuration keys are recognized in each
;; menu configuration block:
;;
;; "title"
;;	This optional key defines the menu's title.  This key is most useful
;;	when used with submenus, in which case it defines the title of the menu
;;	item in the parent menu to which the submenu is attached.  Top-level
;;	menus (i.e. menu bars) do not typically require a title, in which case
;;	this key may be omitted.
;;
;; "type"
;;	This optional key defines the menu's special attribute.  Its value can
;;	be one of "window" or "services".  The "window" value designates the
;;	menu as the application's so-called "Window" menu; and "services"
;;	designates the menu as the application's "Services" menu.  See the
;;	documentation for the NSApplication class for a description of these
;;	special menu designations.  If this key is omitted, then no special
;;	designation is applied to the menu.
;;
;; "menu"
;;	This key may appear zero or more times within each menu block.  Each
;;	time it appears, the submenu designated by the key's value is attached
;;	to this menu.  The value of this key is appended to the string
;;	"OSX.Menu" to form the key prefix for the actual submenu definition.
;;	For instance, if the top-level menu contains menu records with the keys
;;	"control" and "help" then keys prefixed with "OSX.Menu.control" and
;;	"OSX.Menu.help" will be consulted to build submenus for this parent
;;	menu.  "menu" keys are processed sequentially so that they appear on
;;	the generated menu in the same order as they appear in the
;;	configuration file.  A limitation of the configuration file syntax is
;;	that it does not allow duplicate keys, so you should suffix each
;;	"menu" key with a unique identifier.  Small integers work well.  This
;;	suffix is otherwise ignored.  For example, "OSX.Menu.control.menu.1",
;;	"OSX.Menu.control.menu.2", etc.
;;
;; "item"
;;	This key may appear zero or more times within each menu section.  Each
;;	time it appears, the menu item designated by the key's value is
;;	attached to this menu.  The value of this key is appended to the string
;;	"OSX.Item" to form the key prefix for the actual item definition.  For
;;	instance, if the value of this key is "quit" then keys prefixed with
;;	"OSX.Item.quit" will be consulted to build the menu item for this
;;	menu.  "item" keys are processed sequentially so that they appear on
;;	the generated menu in the same order as they appear in the
;;	configuration file.  A limitation of the configuration file syntax is
;;	that it does not allow duplicate keys, so you should suffix each
;;	"item" key with a unique identifier.  Small integers work well.  This
;;	suffix is otherwise ignored.  For exmaple, "OSX.Menu.control.item.1",
;;	"OSX.Menu.control.item.2", etc.
;;
;; An item block defines the behavior and appearance of a plain (non-submenu)
;; menu item.  Keys for items are identified with the prefix "OSX.Item" (such
;; as "OSX.Item.quit").  The following configuration keys are recognized in
;; each item configuration block:
;;
;; "title"
;;	Defines the title which appears on the menu item.  The value may
;;	contain whitespace.
;;
;; "shortcut"
;;	Thie optional key defines the item's keyboard shortcut.  The shortcut
;;	should consist of a single character.  For instance, the "Quit" menu
;;	item is often assigned the shortcut "q".  If this key is omitted then
;;	no shortcut will be assigned to the menu item.
;;
;; "action"
;;	Defines the Objective-C selector which should be sent as this item's
;;	action.  The value of this key should be the exact Objective-C method
;;	name of the associated action method including the trailing colon (":")
;;	which is considered part of the selector's name.  For instance, the
;;	value of the action for the "Hide" item should be "hide:".
;;
;; "target"
;;	This optional key defines the target of the item's action.  The value
;;	of this key can be either "application", "delegate", or "assistant".
;;	If it is "application", then the action message is sent directly to the
;;	shared NSApplication object.  If it is "delegate", then the action
;;	message is sent to the application object's delegate.  If it is
;;	"assistant", then the action is sent to the internal Crystal Space
;;	OSXDelegate instance which is owned by the iOSXAssistant which is
;;	created by csPlatformStartup().  If the "target" key is omitted, then
;;	the action message is sent to the application's "first responder".
;;
;; "type"
;;	This optional key defines the item's special attribute.  The only
;;	recognized value for this key is "separator".  When an item is
;;	designated as a separator then a so-called separator line is inserted
;;	into the menu at the designated location and all other keys are
;;	ignored.
;;
;; "inherit"
;;	This optional key allows a menu item to inherit attributes from a
;;	different item definition.  Atributes specified in the local item
;;	definition override inherited attributes.  This key is most useful in
;;	cases where an item is nearly identical to another item except for one
;;	or two attributes (such as, for instance, the title).  The value of
;;	this key is appended to the string "OSX.Item" to form the key prefix
;;	of the item definition from which this item should inherit.  For
;;	instance, if the value of the "inherit" key is "hide", then attributes
;;	will be inherited from the item defined by the "OSX.Item.hide" keys.
;;	The "inherit" key may appear, at most, one time in an item block,
;;	though recursive inheritance is allowed.
;;
;;-----------------------------------------------------------------------------

; MacOS/X Aqua-style menu
OSX.Menu.aqua.menu=application

OSX.Menu.application.title=CrystalSpace
OSX.Menu.application.item.1=pause
OSX.Menu.application.item.2=separator
OSX.Menu.application.item.3=hide.application
OSX.Menu.application.item.4=hide.others
OSX.Menu.application.item.5=show.all
OSX.Menu.application.item.6=separator
OSX.Menu.application.item.7=quit.application

OSX.Item.separator.type=separator

OSX.Item.pause.title=Pause
OSX.Item.pause.shortcut=p
OSX.Item.pause.action=togglePause:
OSX.Item.pause.target=assistant

OSX.Item.hide.application.title=Hide CrystalSpace
OSX.Item.hide.application.shortcut=h
OSX.Item.hide.application.action=hide:
OSX.Item.hide.application.target=application

OSX.Item.hide.others.title=Hide Others
OSX.Item.hide.others.action=hideOtherApplications:
OSX.Item.hide.others.target=application

OSX.Item.show.all.title=Show All
OSX.Item.show.all.action=unhideAllApplications:
OSX.Item.show.all.target=application

OSX.Item.quit.application.title=Quit CrystalSpace
OSX.Item.quit.application.shortcut=q
OSX.Item.quit.application.action=quit:
OSX.Item.quit.application.target=assistant
