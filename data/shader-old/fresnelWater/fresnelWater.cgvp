<cgvp>
<program>
<![CDATA[

struct app2vertex {
	float4 Position : POSITION;
	float3 Normal : NORMAL;
	float2 TexCoord : TEXCOORD0;
	float3 Tangent : TEXCOORD1;
	float3 BiNormal : TEXCOORD2;
};

struct vertex2fragment { 
	float4 Position : POSITION;
	float2 TexCoord : TEXCOORD0;
	float3 oEyeVec : TEXCOORD1;
};

vertex2fragment main (app2vertex IN,
	uniform float4x4 ModelViewI : state.matrix.modelview.inverse,
	  /* The matrices are bound with the state.matrix.... semantics.
	     For more info see the Cg and ARB_vertex_program docs.
	     */
	uniform float4x4 ModelViewIT : state.matrix.modelview.invtrans,
	uniform float4x4 ModelViewProj : state.matrix.mvp)
{
	vertex2fragment OUT;
	
	float3x3 obj2tang;
	obj2tang[0] = IN.Tangent;
	obj2tang[1] = IN.BiNormal;
	obj2tang[2] = IN.Normal;
	
	float3 eyeVec = ModelViewIT[3] - IN.Position;
	float3 tangEyeVec = mul (obj2tang, eyeVec);
	
	
	OUT.Position = mul (ModelViewProj, IN.Position);
	OUT.TexCoord = IN.TexCoord;
	OUT.oEyeVec = normalize(tangEyeVec.xyz);
	
	return OUT;
}

]]>
</program>
</cgvp>
