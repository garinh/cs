<?xml version="1.0" encoding="utf-8" ?> 
<!--
  Copyright (C) 2007 by Frank Richter
	    (C) 2007 by Jorrit Tyberghein

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Library General Public License for more details.

  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<input name="Tangent" type="normal" default="complex" >
  <block location="vertexIn">
    <varying type="normal" name="Tangent" />
  </block>
  
  <block location=":pass">
    <buffer source="tangent" destination="vertexIn.Tangent" />
  </block>
  
  <block location="vertexToFragment">
    <varying type="normal" name="Tangent" />
  </block>
  
  <block location="vertexMain">
    Tangent = vertexIn.Tangent;
  </block>
  
  <block location="fragmentMain">
  #if FRAGMENT_PROGRAM_LEVEL >= 0x200
    // Renormalize, as interpolation will have denormalized it
    Tangent = normalize (Tangent);
  #endif
  </block>
  
</input>
