<!--
  Copyright (C) 2008 by Frank Richter

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Library General Public License for more details.

  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<snippet type="compound">
  <technique priority="100">
    <snippet id="ambientOcclusion" file="/shader-snippets/lighting/ambient-ao.xml"
	     condition='(vars."pass number".int == 0) &amp;&amp; (vars."pass do_ambient")' />
    
    <snippet id="ambient_simple">
      <technique priority="100">
	<combiner name="cg" plugin="crystalspace.graphics3d.shader.combiner.glcg" />
	
	<input name="combinedAmbient" type="rgb" default="complex" private="yes">
	  <block location="cg:variablemap">
	    <variablemap variable="light ambient"
	      destination="fragmentIn.combinedAmbient" />
	  </block>
	  
	  <block location="cg:fragmentIn">
	    <uniform type="rgb" name="combinedAmbient" />
	  </block>
	  
	  <block location="cg:fragmentMain">
	    combinedAmbient = fragmentIn.combinedAmbient;
	  </block>
	
	  <block location="cg:vertexIn">
	    <uniform type="rgb" name="combinedAmbient" />
	  </block>
	  
	  <block location="cg:vertexMain">
	    combinedAmbient = vertexIn.combinedAmbient;
	  </block>
	</input>
	<input name="occlusionFactor" type="float" default="value" defval="1">
	  <attribute name="perfragment" type="bool" defval="false" />
	</input>
	
	<block location="cg:vertexMain">
	  <?if (vars."pass number".int == 0) && (vars."pass do_ambient") ?>
	  ambient = combinedAmbient*occlusionFactor;
	  <?else?>
	  ambient = float3(0);
	  <?endif?>
	  ambient_attr_perfragment = occlusionFactor_attr_perfragment;
	</block>
	  
	<block location="cg:fragmentMain">
	  <?if (vars."pass number".int == 0) && (vars."pass do_ambient") ?>
	  ambient = combinedAmbient*occlusionFactor;
	  <?else?>
	  ambient = float3(0);
	  <?endif?>
	  ambient_attr_perfragment = occlusionFactor_attr_perfragment;
	</block>
	
	<output name="ambient" type="rgb">
	  <attribute name="perfragment" type="bool" />
	</output>
      </technique>
    </snippet>
    <connection from="ambientOcclusion" to="ambient_simple" />
  </technique>
</snippet>
