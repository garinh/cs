// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_lghtngldr[] =
"<?xml version=\"1.0\"?>"
"<!-- lghtngldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.lightning</name>"
"        <implementation>csLightningFactoryLoader</implementation>"
"        <description>Crystal Space Lightning factory loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.lightning</name>"
"        <implementation>csLightningLoader</implementation>"
"        <description>Crystal Space Lightning loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.lightning</name>"
"        <implementation>csLightningFactorySaver</implementation>"
"        <description>Crystal Space Lightning factory saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.lightning</name>"
"        <implementation>csLightningSaver</implementation>"
"        <description>Crystal Space Lightning saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csLightningFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csLightningFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csLightningFactoryLoader) 
  #endif
  #ifndef csLightningLoader_FACTORY_REGISTER_DEFINED 
  #define csLightningLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csLightningLoader) 
  #endif
  #ifndef csLightningFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csLightningFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csLightningFactorySaver) 
  #endif
  #ifndef csLightningSaver_FACTORY_REGISTER_DEFINED 
  #define csLightningSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csLightningSaver) 
  #endif

class lghtngldr
{
SCF_REGISTER_STATIC_LIBRARY(lghtngldr,metainfo_lghtngldr)
  #ifndef csLightningFactoryLoader_FACTORY_REGISTERED 
  #define csLightningFactoryLoader_FACTORY_REGISTERED 
    csLightningFactoryLoader_StaticInit csLightningFactoryLoader_static_init__; 
  #endif
  #ifndef csLightningLoader_FACTORY_REGISTERED 
  #define csLightningLoader_FACTORY_REGISTERED 
    csLightningLoader_StaticInit csLightningLoader_static_init__; 
  #endif
  #ifndef csLightningFactorySaver_FACTORY_REGISTERED 
  #define csLightningFactorySaver_FACTORY_REGISTERED 
    csLightningFactorySaver_StaticInit csLightningFactorySaver_static_init__; 
  #endif
  #ifndef csLightningSaver_FACTORY_REGISTERED 
  #define csLightningSaver_FACTORY_REGISTERED 
    csLightningSaver_StaticInit csLightningSaver_static_init__; 
  #endif
public:
 lghtngldr();
};
lghtngldr::lghtngldr() {}

}
