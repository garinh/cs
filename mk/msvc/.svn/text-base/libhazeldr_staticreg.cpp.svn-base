// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_hazeldr[] =
"<?xml version=\"1.0\"?>"
"<!-- hazeldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.haze</name>"
"        <implementation>csHazeFactoryLoader</implementation>"
"        <description>Crystal Space Haze Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.haze</name>"
"        <implementation>csHazeLoader</implementation>"
"        <description>Crystal Space Haze Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.haze</name>"
"        <implementation>csHazeFactorySaver</implementation>"
"        <description>Crystal Space Haze Factory Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.haze</name>"
"        <implementation>csHazeSaver</implementation>"
"        <description>Crystal Space Haze Mesh Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csHazeFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csHazeFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csHazeFactoryLoader) 
  #endif
  #ifndef csHazeLoader_FACTORY_REGISTER_DEFINED 
  #define csHazeLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csHazeLoader) 
  #endif
  #ifndef csHazeFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csHazeFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csHazeFactorySaver) 
  #endif
  #ifndef csHazeSaver_FACTORY_REGISTER_DEFINED 
  #define csHazeSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csHazeSaver) 
  #endif

class hazeldr
{
SCF_REGISTER_STATIC_LIBRARY(hazeldr,metainfo_hazeldr)
  #ifndef csHazeFactoryLoader_FACTORY_REGISTERED 
  #define csHazeFactoryLoader_FACTORY_REGISTERED 
    csHazeFactoryLoader_StaticInit csHazeFactoryLoader_static_init__; 
  #endif
  #ifndef csHazeLoader_FACTORY_REGISTERED 
  #define csHazeLoader_FACTORY_REGISTERED 
    csHazeLoader_StaticInit csHazeLoader_static_init__; 
  #endif
  #ifndef csHazeFactorySaver_FACTORY_REGISTERED 
  #define csHazeFactorySaver_FACTORY_REGISTERED 
    csHazeFactorySaver_StaticInit csHazeFactorySaver_static_init__; 
  #endif
  #ifndef csHazeSaver_FACTORY_REGISTERED 
  #define csHazeSaver_FACTORY_REGISTERED 
    csHazeSaver_StaticInit csHazeSaver_static_init__; 
  #endif
public:
 hazeldr();
};
hazeldr::hazeldr() {}

}
