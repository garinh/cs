// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_terrainldr[] =
"<?xml version=\"1.0\"?>"
"<!-- chunkldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.terrain</name>"
"        <implementation>csTerrainFactoryLoader</implementation>"
"        <description>Crystal Space Terrain Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.terrain</name>"
"        <implementation>csTerrainObjectLoader</implementation>"
"        <description>Crystal Space Terrain Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.terrain</name>"
"        <implementation>csTerrainFactorySaver</implementation>"
"        <description>Crystal Space Terrain Factory Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.terrain</name>"
"        <implementation>csTerrainObjectSaver</implementation>"
"        <description>Crystal Space Terrain Mesh Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csTerrainFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csTerrainFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csTerrainFactoryLoader) 
  #endif
  #ifndef csTerrainObjectLoader_FACTORY_REGISTER_DEFINED 
  #define csTerrainObjectLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csTerrainObjectLoader) 
  #endif
  #ifndef csTerrainFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csTerrainFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csTerrainFactorySaver) 
  #endif
  #ifndef csTerrainObjectSaver_FACTORY_REGISTER_DEFINED 
  #define csTerrainObjectSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csTerrainObjectSaver) 
  #endif

class terrainldr
{
SCF_REGISTER_STATIC_LIBRARY(terrainldr,metainfo_terrainldr)
  #ifndef csTerrainFactoryLoader_FACTORY_REGISTERED 
  #define csTerrainFactoryLoader_FACTORY_REGISTERED 
    csTerrainFactoryLoader_StaticInit csTerrainFactoryLoader_static_init__; 
  #endif
  #ifndef csTerrainObjectLoader_FACTORY_REGISTERED 
  #define csTerrainObjectLoader_FACTORY_REGISTERED 
    csTerrainObjectLoader_StaticInit csTerrainObjectLoader_static_init__; 
  #endif
  #ifndef csTerrainFactorySaver_FACTORY_REGISTERED 
  #define csTerrainFactorySaver_FACTORY_REGISTERED 
    csTerrainFactorySaver_StaticInit csTerrainFactorySaver_static_init__; 
  #endif
  #ifndef csTerrainObjectSaver_FACTORY_REGISTERED 
  #define csTerrainObjectSaver_FACTORY_REGISTERED 
    csTerrainObjectSaver_StaticInit csTerrainObjectSaver_static_init__; 
  #endif
public:
 terrainldr();
};
terrainldr::terrainldr() {}

}
