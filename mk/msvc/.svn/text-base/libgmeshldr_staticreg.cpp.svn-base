// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_gmeshldr[] =
"<?xml version=\"1.0\"?>"
"<!-- gmeshldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.genmesh</name>"
"        <implementation>csGeneralFactoryLoader</implementation>"
"        <description>Crystal Space General Mesh Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.genmesh</name>"
"        <implementation>csGeneralMeshLoader</implementation>"
"        <description>Crystal Space General Mesh Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.genmesh</name>"
"        <implementation>csGeneralFactorySaver</implementation>"
"        <description>Crystal Space General Mesh Factory Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.genmesh</name>"
"        <implementation>csGeneralMeshSaver</implementation>"
"        <description>Crystal Space General Mesh Mesh Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csGeneralFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csGeneralFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csGeneralFactoryLoader) 
  #endif
  #ifndef csGeneralMeshLoader_FACTORY_REGISTER_DEFINED 
  #define csGeneralMeshLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csGeneralMeshLoader) 
  #endif
  #ifndef csGeneralFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csGeneralFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csGeneralFactorySaver) 
  #endif
  #ifndef csGeneralMeshSaver_FACTORY_REGISTER_DEFINED 
  #define csGeneralMeshSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csGeneralMeshSaver) 
  #endif

class gmeshldr
{
SCF_REGISTER_STATIC_LIBRARY(gmeshldr,metainfo_gmeshldr)
  #ifndef csGeneralFactoryLoader_FACTORY_REGISTERED 
  #define csGeneralFactoryLoader_FACTORY_REGISTERED 
    csGeneralFactoryLoader_StaticInit csGeneralFactoryLoader_static_init__; 
  #endif
  #ifndef csGeneralMeshLoader_FACTORY_REGISTERED 
  #define csGeneralMeshLoader_FACTORY_REGISTERED 
    csGeneralMeshLoader_StaticInit csGeneralMeshLoader_static_init__; 
  #endif
  #ifndef csGeneralFactorySaver_FACTORY_REGISTERED 
  #define csGeneralFactorySaver_FACTORY_REGISTERED 
    csGeneralFactorySaver_StaticInit csGeneralFactorySaver_static_init__; 
  #endif
  #ifndef csGeneralMeshSaver_FACTORY_REGISTERED 
  #define csGeneralMeshSaver_FACTORY_REGISTERED 
    csGeneralMeshSaver_StaticInit csGeneralMeshSaver_static_init__; 
  #endif
public:
 gmeshldr();
};
gmeshldr::gmeshldr() {}

}
