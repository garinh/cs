// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_rendstep_std[] =
"<?xml version=\"1.0\"?>"
"<!-- rlsstd.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.renderloop.step.generic</name>"
"        <implementation>csGenericRSLoader</implementation>"
"        <description>Generic render loop step</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.generic.type</name>"
"        <implementation>csGenericRSType</implementation>"
"        <description>Generic render loop step type</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.lightiter</name>"
"        <implementation>csLightIterRSLoader</implementation>"
"        <description>Light iterator render loop step</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.lightiter.type</name>"
"        <implementation>csLightIterRSType</implementation>"
"        <description>Light iterator render loop step type</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.rendertarget</name>"
"        <implementation>csTargetRSLoader</implementation>"
"        <description>Render target render loop step</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.shadowmap</name>"
"        <implementation>csShadowmapRSLoader</implementation>"
"        <description>Shadowmap target render loop step</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.rendertarget.type</name>"
"        <implementation>csTargetRSType</implementation>"
"        <description>Render target render loop step type</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.shadowmap.type</name>"
"        <implementation>csShadowmapRSType</implementation>"
"        <description>Shadowmap render loop step type</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.fullscreenquad</name>"
"        <implementation>csFullScreenQuadRSLoader</implementation>"
"        <description>Full screen quad render loop step</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.fullscreenquad.type</name>"
"        <implementation>csFullScreenQuadRSType</implementation>"
"        <description>Full screen quad render loop step type</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csGenericRSLoader_FACTORY_REGISTER_DEFINED 
  #define csGenericRSLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csGenericRSLoader) 
  #endif
  #ifndef csGenericRSType_FACTORY_REGISTER_DEFINED 
  #define csGenericRSType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csGenericRSType) 
  #endif
  #ifndef csLightIterRSLoader_FACTORY_REGISTER_DEFINED 
  #define csLightIterRSLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csLightIterRSLoader) 
  #endif
  #ifndef csLightIterRSType_FACTORY_REGISTER_DEFINED 
  #define csLightIterRSType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csLightIterRSType) 
  #endif
  #ifndef csTargetRSLoader_FACTORY_REGISTER_DEFINED 
  #define csTargetRSLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csTargetRSLoader) 
  #endif
  #ifndef csShadowmapRSLoader_FACTORY_REGISTER_DEFINED 
  #define csShadowmapRSLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csShadowmapRSLoader) 
  #endif
  #ifndef csTargetRSType_FACTORY_REGISTER_DEFINED 
  #define csTargetRSType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csTargetRSType) 
  #endif
  #ifndef csShadowmapRSType_FACTORY_REGISTER_DEFINED 
  #define csShadowmapRSType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csShadowmapRSType) 
  #endif
  #ifndef csFullScreenQuadRSLoader_FACTORY_REGISTER_DEFINED 
  #define csFullScreenQuadRSLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFullScreenQuadRSLoader) 
  #endif
  #ifndef csFullScreenQuadRSType_FACTORY_REGISTER_DEFINED 
  #define csFullScreenQuadRSType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFullScreenQuadRSType) 
  #endif

class rendstep_std
{
SCF_REGISTER_STATIC_LIBRARY(rendstep_std,metainfo_rendstep_std)
  #ifndef csGenericRSLoader_FACTORY_REGISTERED 
  #define csGenericRSLoader_FACTORY_REGISTERED 
    csGenericRSLoader_StaticInit csGenericRSLoader_static_init__; 
  #endif
  #ifndef csGenericRSType_FACTORY_REGISTERED 
  #define csGenericRSType_FACTORY_REGISTERED 
    csGenericRSType_StaticInit csGenericRSType_static_init__; 
  #endif
  #ifndef csLightIterRSLoader_FACTORY_REGISTERED 
  #define csLightIterRSLoader_FACTORY_REGISTERED 
    csLightIterRSLoader_StaticInit csLightIterRSLoader_static_init__; 
  #endif
  #ifndef csLightIterRSType_FACTORY_REGISTERED 
  #define csLightIterRSType_FACTORY_REGISTERED 
    csLightIterRSType_StaticInit csLightIterRSType_static_init__; 
  #endif
  #ifndef csTargetRSLoader_FACTORY_REGISTERED 
  #define csTargetRSLoader_FACTORY_REGISTERED 
    csTargetRSLoader_StaticInit csTargetRSLoader_static_init__; 
  #endif
  #ifndef csShadowmapRSLoader_FACTORY_REGISTERED 
  #define csShadowmapRSLoader_FACTORY_REGISTERED 
    csShadowmapRSLoader_StaticInit csShadowmapRSLoader_static_init__; 
  #endif
  #ifndef csTargetRSType_FACTORY_REGISTERED 
  #define csTargetRSType_FACTORY_REGISTERED 
    csTargetRSType_StaticInit csTargetRSType_static_init__; 
  #endif
  #ifndef csShadowmapRSType_FACTORY_REGISTERED 
  #define csShadowmapRSType_FACTORY_REGISTERED 
    csShadowmapRSType_StaticInit csShadowmapRSType_static_init__; 
  #endif
  #ifndef csFullScreenQuadRSLoader_FACTORY_REGISTERED 
  #define csFullScreenQuadRSLoader_FACTORY_REGISTERED 
    csFullScreenQuadRSLoader_StaticInit csFullScreenQuadRSLoader_static_init__; 
  #endif
  #ifndef csFullScreenQuadRSType_FACTORY_REGISTERED 
  #define csFullScreenQuadRSType_FACTORY_REGISTERED 
    csFullScreenQuadRSType_StaticInit csFullScreenQuadRSType_static_init__; 
  #endif
public:
 rendstep_std();
};
rendstep_std::rendstep_std() {}

}
