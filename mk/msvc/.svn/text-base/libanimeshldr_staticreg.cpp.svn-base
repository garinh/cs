// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_animeshldr[] =
"<?xml version=\"1.0\"?>"
"<!-- animeshldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.animesh</name>"
"        <implementation>AnimeshFactoryLoader</implementation>"
"        <description>Crystal Space Animated Mesh Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.animesh</name>"
"        <implementation>AnimeshObjectLoader</implementation>"
"        <description>Crystal Space Animated Mesh Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.animesh</name>"
"        <implementation>AnimeshFactorySaver</implementation>"
"        <description>Crystal Space Animated Mesh Factory Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.animesh</name>"
"        <implementation>AnimeshObjectSaver</implementation>"
"        <description>Crystal Space Animated Mesh Mesh Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef AnimeshFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define AnimeshFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(AnimeshFactoryLoader) 
  #endif
  #ifndef AnimeshObjectLoader_FACTORY_REGISTER_DEFINED 
  #define AnimeshObjectLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(AnimeshObjectLoader) 
  #endif
  #ifndef AnimeshFactorySaver_FACTORY_REGISTER_DEFINED 
  #define AnimeshFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(AnimeshFactorySaver) 
  #endif
  #ifndef AnimeshObjectSaver_FACTORY_REGISTER_DEFINED 
  #define AnimeshObjectSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(AnimeshObjectSaver) 
  #endif

class animeshldr
{
SCF_REGISTER_STATIC_LIBRARY(animeshldr,metainfo_animeshldr)
  #ifndef AnimeshFactoryLoader_FACTORY_REGISTERED 
  #define AnimeshFactoryLoader_FACTORY_REGISTERED 
    AnimeshFactoryLoader_StaticInit AnimeshFactoryLoader_static_init__; 
  #endif
  #ifndef AnimeshObjectLoader_FACTORY_REGISTERED 
  #define AnimeshObjectLoader_FACTORY_REGISTERED 
    AnimeshObjectLoader_StaticInit AnimeshObjectLoader_static_init__; 
  #endif
  #ifndef AnimeshFactorySaver_FACTORY_REGISTERED 
  #define AnimeshFactorySaver_FACTORY_REGISTERED 
    AnimeshFactorySaver_StaticInit AnimeshFactorySaver_static_init__; 
  #endif
  #ifndef AnimeshObjectSaver_FACTORY_REGISTERED 
  #define AnimeshObjectSaver_FACTORY_REGISTERED 
    AnimeshObjectSaver_StaticInit AnimeshObjectSaver_static_init__; 
  #endif
public:
 animeshldr();
};
animeshldr::animeshldr() {}

}
