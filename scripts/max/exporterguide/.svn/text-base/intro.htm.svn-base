<html><head>

<title>PlaneShift 3DSMax Exporters</title><meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type"></head>
<body text="#000000" bgcolor="#ffffff">
<h1>PlaneShift 3DSMax Exporters</h1>
<p>Author: Luca Pancallo (pancallo@netscape.net)</p>
<p>Disclaimer: Don't build a new game! Join the crew at <a href="http://www.planeshift.it">www.planeshift.it</a> 
  to build THE game :)</p>
<h2>Content</h2>
<p><b>Level Exporter </b>(Version 48)<br>
  Used to export complete maps including buildings, skybox, lights.</p>
<p><b>Sanity Check </b>(Version 5)<br>
  Once a separate script, now called by level exporter. It checks the level for 
  invalid polygons, such as lines. It has the option to fix the meshes by deleting 
  those invalid polygons.</p>
<p><b>Lights Exporter</b> (Version 05)<br>
  This script is for PS engine only, can't work in CS walktest. It exports the 
  lights values. One set of values is exported for each hour of the day. PlaneShift 
  engine will interpolate values giving a smooth transition.<br>
</p>
<p><b>Sprite Exporter</b> (Version 07)<br>
  Used to export objects that can be moved in the level (i.e. not static ones) 
  like swords, bottles, pieces of armor, etc... Those are called 'sprites' in 
  our terminology.<br>
  This script is NO MORE USED to export characters. We use cal3d instead.</p>
<p><b>Fix Materials</b> (Version 06)<br>
  You can run this script to reduce the number of materials you have defined in 
  your scene. If two materials in 3dsmax have the same texture file, the script 
  will get the first one and associate it also to the objects using the second 
  material. We used it to fix the duplicate materials generated by the convertion 
  between Maya and 3dsMax.</p>
<p>These scripts have been tested on 3DSMax 5.0 and 6.0 (same scripts should still 
  work on 3DSMax 4.0)</p>
<p>In the doc we use:<br>
  PS stands for PlaneShift, a wonderful game! www.planeshift.it<br>
  CS stands for CrystalSpace, the 3d engine used by PlaneShift</p>
<h2>Features</h2>
<p><br>
  The exporter supports ambient <a href="light.htm">lights</a> (defined in the 
  file properties ) and omni lights, no spot or any directional lights.<br>
  For faster rendering you can use <a href="thinggenmesh.htm#genmeshs" target="text">genmeshes</a> 
  and <a href="thinggenmesh.htm#thingmeshs" target="text">thingmeshes </a> , who 
  act like instances in 3ds max.<br>
  For higher realism you can use the 24 or 48 hours <a href="light.htm">light</a> 
  system ( 1 frame/hour or 1frame/hour for sun and rain) <br>
  You can use helpers for creating particle <a href="emitter.htm">emitters</a> 
  , then use the property tab to set all their parameters<br>
  Both Standard Materials and Multi/Sub Materials are supported <br>
  And obviously you can export meshes<br>
  The exporter supports both right-handed and left-handed objects<br>
  The Exporter can also export <a href="exportsprite.htm">sprites</a>. <br>
</p>
<h2>Quick Guide</H2>
<br>
1) First you have to <a href="installation.htm">install</a> the scripts. Is really 
easy for 3dsmax5 and 6 ( only file copy needed ) and only a bit more complex for 
3dsmax4 ( need to add custom menu )<br>
 <br>
2) Model your level, read the whole help in order to know special feature you 
can use and naming conventions. Once you are done: 
<p>3) Select PlaneShift-&gt;Export Level.</p>
<p>This is the export dialog:</p>
<p><img height="273" width="303" src="pictures/3dsMaxExporters_img1.gif"></p>
<p><b>Export Level To:</b> In the first field you should specify the export filename 
  including its full path. Ex.: d:\myStuff\CS\levels\level1\world.txt</p>
<p><b>Scale:</b> This indicates which is the scale to apply to the current scene 
  while exporting, if you follow the guideline of "1 meter = 1 generic unit" 
  you can place "1" in this field.</p>
<p><b>Export!</b>: This button starts the export.</p>
<p><b>Copy textures to dest dir:</b> If you check this option, a new dir will 
  be created in the same dir of the output file and will be called &lt;filename&gt;textures. 
  In this directory there will be copied all the textures files present in the 
  scene (the ones used by objects). Multimaterials are supported.</p>
<p><b>Generate Fake lights for walktest:</b> ignore that for now. Explanation 
  of it is <a href="exportscene.htm">here</a>.</p>
<p><b>Duration (msecs):</b> ignore that for now. Explanation of it is <a href="exportscene.htm">here</a>.</p>
 
<p>A file will be created in the directory specified, with the name specified. 
  Rename the generated file as "world" (no extension).</p>
<p>4) Create a directory with the name of your scene or whatever name you want. 
  Example if you are using Crystal Space: /&lt;Crystal Space root dir&gt;/data/testlevel.<br>
  Example if you are using GFXPackage*: /&lt;GFXPackage root dir&gt;/levels/testlevel.</p>
<p> 5) Copy the generated file (renamed to 'world') and the textures in the directory 
  you just created.</p>
<p>6) If you are using Crystal Space open a console , cd to your directory (typing 
  cd /the/path/to/CS ) and run "walktest /this/data/my_scene_name -relight".<br>
  If you are using GFXPackage just launch it, select walktest and select the level 
  you want to run.</p>
<h2>Words of wisdom</h2>
<ul>
  <li>Read this guide in details to understand all the options you have to model 
    your level. A level that looks great in 3dsmax can look bad in walktest if 
    you don't model it correctly</li>
  <li>Before modeling a whole level, make some tests to see how the engine renders 
    your models. Tests should include geometry, textures and lights.</li>
  <li>Don't expect the engine to solve all performance problems. Keep a good balance 
    of quality Vs. polycount and remember that less polycount is always better.</li>
  <li>There is a good guide (even if a bit technical) to choose the best techniques 
    depending on level type. You can find it <a href="http://www.planeshift.it/download/temp/levbuilding.html">here</a>.</li>
</ul>
<p>&nbsp;</p>
<p>(*) GFXPackage is a tool developed by PlaneShift team. </p>
</body></html>