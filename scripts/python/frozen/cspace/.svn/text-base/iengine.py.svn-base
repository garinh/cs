# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.

import _iengine
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import core
import ivideo
import csgfx
_SetSCFPointer = _iengine._SetSCFPointer
_GetSCFPointer = _iengine._GetSCFPointer
if not "core" in dir():
    core = __import__("cspace").__dict__["core"]
core.AddSCFLink(_SetSCFPointer)
CSMutableArrayHelper = core.CSMutableArrayHelper

CS_LIGHT_NOSHADOWS = _iengine.CS_LIGHT_NOSHADOWS
CS_LIGHT_ACTIVEHALO = _iengine.CS_LIGHT_ACTIVEHALO
CS_LIGHT_DYNAMICTYPE_STATIC = _iengine.CS_LIGHT_DYNAMICTYPE_STATIC
CS_LIGHT_DYNAMICTYPE_PSEUDO = _iengine.CS_LIGHT_DYNAMICTYPE_PSEUDO
CS_LIGHT_DYNAMICTYPE_DYNAMIC = _iengine.CS_LIGHT_DYNAMICTYPE_DYNAMIC
CS_DEFAULT_LIGHT_LEVEL = _iengine.CS_DEFAULT_LIGHT_LEVEL
CS_NORMAL_LIGHT_LEVEL = _iengine.CS_NORMAL_LIGHT_LEVEL
CS_ATTN_NONE = _iengine.CS_ATTN_NONE
CS_ATTN_LINEAR = _iengine.CS_ATTN_LINEAR
CS_ATTN_INVERSE = _iengine.CS_ATTN_INVERSE
CS_ATTN_REALISTIC = _iengine.CS_ATTN_REALISTIC
CS_ATTN_CLQ = _iengine.CS_ATTN_CLQ
CS_LIGHT_POINTLIGHT = _iengine.CS_LIGHT_POINTLIGHT
CS_LIGHT_DIRECTIONAL = _iengine.CS_LIGHT_DIRECTIONAL
CS_LIGHT_SPOTLIGHT = _iengine.CS_LIGHT_SPOTLIGHT
class iLightCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def OnColorChange(*args): return _iengine.iLightCallback_OnColorChange(*args)
    def OnPositionChange(*args): return _iengine.iLightCallback_OnPositionChange(*args)
    def OnSectorChange(*args): return _iengine.iLightCallback_OnSectorChange(*args)
    def OnRadiusChange(*args): return _iengine.iLightCallback_OnRadiusChange(*args)
    def OnDestroy(*args): return _iengine.iLightCallback_OnDestroy(*args)
    def OnAttenuationChange(*args): return _iengine.iLightCallback_OnAttenuationChange(*args)
    __swig_destroy__ = _iengine.delete_iLightCallback
    __del__ = lambda self : None;
iLightCallback_swigregister = _iengine.iLightCallback_swigregister
iLightCallback_swigregister(iLightCallback)

class iLight(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetLightID(*args): return _iengine.iLight_GetLightID(*args)
    def QueryObject(*args): return _iengine.iLight_QueryObject(*args)
    def GetDynamicType(*args): return _iengine.iLight_GetDynamicType(*args)
    def GetCenter(*args): return _iengine.iLight_GetCenter(*args)
    def GetFullCenter(*args): return _iengine.iLight_GetFullCenter(*args)
    def SetCenter(*args): return _iengine.iLight_SetCenter(*args)
    def GetSector(*args): return _iengine.iLight_GetSector(*args)
    def GetMovable(*args): return _iengine.iLight_GetMovable(*args)
    def QuerySceneNode(*args): return _iengine.iLight_QuerySceneNode(*args)
    def GetColor(*args): return _iengine.iLight_GetColor(*args)
    def SetColor(*args): return _iengine.iLight_SetColor(*args)
    def GetSpecularColor(*args): return _iengine.iLight_GetSpecularColor(*args)
    def SetSpecularColor(*args): return _iengine.iLight_SetSpecularColor(*args)
    def GetType(*args): return _iengine.iLight_GetType(*args)
    def SetType(*args): return _iengine.iLight_SetType(*args)
    def GetAttenuationMode(*args): return _iengine.iLight_GetAttenuationMode(*args)
    def SetAttenuationMode(*args): return _iengine.iLight_SetAttenuationMode(*args)
    def SetAttenuationConstants(*args): return _iengine.iLight_SetAttenuationConstants(*args)
    def GetAttenuationConstants(*args): return _iengine.iLight_GetAttenuationConstants(*args)
    def GetCutoffDistance(*args): return _iengine.iLight_GetCutoffDistance(*args)
    def SetCutoffDistance(*args): return _iengine.iLight_SetCutoffDistance(*args)
    def GetDirectionalCutoffRadius(*args): return _iengine.iLight_GetDirectionalCutoffRadius(*args)
    def SetDirectionalCutoffRadius(*args): return _iengine.iLight_SetDirectionalCutoffRadius(*args)
    def SetSpotLightFalloff(*args): return _iengine.iLight_SetSpotLightFalloff(*args)
    def GetSpotLightFalloff(*args): return _iengine.iLight_GetSpotLightFalloff(*args)
    def CreateCrossHalo(*args): return _iengine.iLight_CreateCrossHalo(*args)
    def CreateNovaHalo(*args): return _iengine.iLight_CreateNovaHalo(*args)
    def CreateFlareHalo(*args): return _iengine.iLight_CreateFlareHalo(*args)
    def GetHalo(*args): return _iengine.iLight_GetHalo(*args)
    def GetBrightnessAtDistance(*args): return _iengine.iLight_GetBrightnessAtDistance(*args)
    def GetFlags(*args): return _iengine.iLight_GetFlags(*args)
    def SetLightCallback(*args): return _iengine.iLight_SetLightCallback(*args)
    def RemoveLightCallback(*args): return _iengine.iLight_RemoveLightCallback(*args)
    def GetLightCallbackCount(*args): return _iengine.iLight_GetLightCallbackCount(*args)
    def GetLightCallback(*args): return _iengine.iLight_GetLightCallback(*args)
    def GetLightNumber(*args): return _iengine.iLight_GetLightNumber(*args)
    def GetSVContext(*args): return _iengine.iLight_GetSVContext(*args)
    def GetLocalBBox(*args): return _iengine.iLight_GetLocalBBox(*args)
    def GetWorldBBox(*args): return _iengine.iLight_GetWorldBBox(*args)
    scfGetVersion = staticmethod(_iengine.iLight_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iLight
    __del__ = lambda self : None;
iLight_swigregister = _iengine.iLight_swigregister
iLight_swigregister(iLight)
iLight_scfGetVersion = _iengine.iLight_scfGetVersion

class iLightList(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCount(*args): return _iengine.iLightList_GetCount(*args)
    def Get(*args): return _iengine.iLightList_Get(*args)
    def Add(*args): return _iengine.iLightList_Add(*args)
    def Remove(*args): return _iengine.iLightList_Remove(*args)
    def RemoveAll(*args): return _iengine.iLightList_RemoveAll(*args)
    def Find(*args): return _iengine.iLightList_Find(*args)
    def FindByName(*args): return _iengine.iLightList_FindByName(*args)
    def FindByID(*args): return _iengine.iLightList_FindByID(*args)
    def __delitem__(*args): return _iengine.iLightList___delitem__(*args)
    def __len__(*args): return _iengine.iLightList___len__(*args)
    def append(*args): return _iengine.iLightList_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __getitem__(*args): return _iengine.iLightList___getitem__(*args)
    def __contains__(*args): return _iengine.iLightList___contains__(*args)
    scfGetVersion = staticmethod(_iengine.iLightList_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iLightList
    __del__ = lambda self : None;
iLightList_swigregister = _iengine.iLightList_swigregister
iLightList_swigregister(iLightList)
iLightList_scfGetVersion = _iengine.iLightList_scfGetVersion

class iLightIterator(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _iengine.iLightIterator_HasNext(*args)
    def Next(*args): return _iengine.iLightIterator_Next(*args)
    def GetLastSector(*args): return _iengine.iLightIterator_GetLastSector(*args)
    def Reset(*args): return _iengine.iLightIterator_Reset(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    scfGetVersion = staticmethod(_iengine.iLightIterator_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iLightIterator
    __del__ = lambda self : None;
iLightIterator_swigregister = _iengine.iLightIterator_swigregister
iLightIterator_swigregister(iLightIterator)
iLightIterator_scfGetVersion = _iengine.iLightIterator_scfGetVersion

CS_FOG_MODE_NONE = _iengine.CS_FOG_MODE_NONE
CS_FOG_MODE_LINEAR = _iengine.CS_FOG_MODE_LINEAR
CS_FOG_MODE_CRYSTALSPACE = _iengine.CS_FOG_MODE_CRYSTALSPACE
CS_FOG_MODE_EXP = _iengine.CS_FOG_MODE_EXP
CS_FOG_MODE_EXP2 = _iengine.CS_FOG_MODE_EXP2
class csFog(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    density = _swig_property(_iengine.csFog_density_get, _iengine.csFog_density_set)
    color = _swig_property(_iengine.csFog_color_get, _iengine.csFog_color_set)
    start = _swig_property(_iengine.csFog_start_get, _iengine.csFog_start_set)
    end = _swig_property(_iengine.csFog_end_get, _iengine.csFog_end_set)
    limit = _swig_property(_iengine.csFog_limit_get, _iengine.csFog_limit_set)
    mode = _swig_property(_iengine.csFog_mode_get, _iengine.csFog_mode_set)
    def __init__(self, *args): 
        this = _iengine.new_csFog(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _iengine.delete_csFog
    __del__ = lambda self : None;
csFog_swigregister = _iengine.csFog_swigregister
csFog_swigregister(csFog)

class iSectorCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Traverse(*args): return _iengine.iSectorCallback_Traverse(*args)
    __swig_destroy__ = _iengine.delete_iSectorCallback
    __del__ = lambda self : None;
iSectorCallback_swigregister = _iengine.iSectorCallback_swigregister
iSectorCallback_swigregister(iSectorCallback)

class iSectorMeshCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewMesh(*args): return _iengine.iSectorMeshCallback_NewMesh(*args)
    def RemoveMesh(*args): return _iengine.iSectorMeshCallback_RemoveMesh(*args)
    __swig_destroy__ = _iengine.delete_iSectorMeshCallback
    __del__ = lambda self : None;
iSectorMeshCallback_swigregister = _iengine.iSectorMeshCallback_swigregister
iSectorMeshCallback_swigregister(iSectorMeshCallback)

class iLightVisibleCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def LightVisible(*args): return _iengine.iLightVisibleCallback_LightVisible(*args)
    __swig_destroy__ = _iengine.delete_iLightVisibleCallback
    __del__ = lambda self : None;
iLightVisibleCallback_swigregister = _iengine.iLightVisibleCallback_swigregister
iLightVisibleCallback_swigregister(iLightVisibleCallback)

class csSectorHitBeamResult(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    mesh = _swig_property(_iengine.csSectorHitBeamResult_mesh_get, _iengine.csSectorHitBeamResult_mesh_set)
    isect = _swig_property(_iengine.csSectorHitBeamResult_isect_get, _iengine.csSectorHitBeamResult_isect_set)
    polygon_idx = _swig_property(_iengine.csSectorHitBeamResult_polygon_idx_get, _iengine.csSectorHitBeamResult_polygon_idx_set)
    final_sector = _swig_property(_iengine.csSectorHitBeamResult_final_sector_get, _iengine.csSectorHitBeamResult_final_sector_set)
    def __init__(self, *args): 
        this = _iengine.new_csSectorHitBeamResult(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _iengine.delete_csSectorHitBeamResult
    __del__ = lambda self : None;
csSectorHitBeamResult_swigregister = _iengine.csSectorHitBeamResult_swigregister
csSectorHitBeamResult_swigregister(csSectorHitBeamResult)

class csSectorVisibleRenderMeshes(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    imesh = _swig_property(_iengine.csSectorVisibleRenderMeshes_imesh_get, _iengine.csSectorVisibleRenderMeshes_imesh_set)
    num = _swig_property(_iengine.csSectorVisibleRenderMeshes_num_get, _iengine.csSectorVisibleRenderMeshes_num_set)
    rmeshes = _swig_property(_iengine.csSectorVisibleRenderMeshes_rmeshes_get, _iengine.csSectorVisibleRenderMeshes_rmeshes_set)
    def __init__(self, *args): 
        this = _iengine.new_csSectorVisibleRenderMeshes(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _iengine.delete_csSectorVisibleRenderMeshes
    __del__ = lambda self : None;
csSectorVisibleRenderMeshes_swigregister = _iengine.csSectorVisibleRenderMeshes_swigregister
csSectorVisibleRenderMeshes_swigregister(csSectorVisibleRenderMeshes)

class iSector(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iSector_QueryObject(*args)
    def GetMeshes(*args): return _iengine.iSector_GetMeshes(*args)
    def GetVisibleMeshes(*args): return _iengine.iSector_GetVisibleMeshes(*args)
    def GetPortalMeshes(*args): return _iengine.iSector_GetPortalMeshes(*args)
    def UnlinkObjects(*args): return _iengine.iSector_UnlinkObjects(*args)
    def AddSectorMeshCallback(*args): return _iengine.iSector_AddSectorMeshCallback(*args)
    def RemoveSectorMeshCallback(*args): return _iengine.iSector_RemoveSectorMeshCallback(*args)
    def Draw(*args): return _iengine.iSector_Draw(*args)
    def PrepareDraw(*args): return _iengine.iSector_PrepareDraw(*args)
    def GetRecLevel(*args): return _iengine.iSector_GetRecLevel(*args)
    def IncRecLevel(*args): return _iengine.iSector_IncRecLevel(*args)
    def DecRecLevel(*args): return _iengine.iSector_DecRecLevel(*args)
    def SetRenderLoop(*args): return _iengine.iSector_SetRenderLoop(*args)
    def SetRenderLoopWait(*args): return _iengine.iSector_SetRenderLoopWait(*args)
    def GetRenderLoop(*args): return _iengine.iSector_GetRenderLoop(*args)
    def CreateMeshGenerator(*args): return _iengine.iSector_CreateMeshGenerator(*args)
    def GetMeshGeneratorCount(*args): return _iengine.iSector_GetMeshGeneratorCount(*args)
    def GetMeshGenerator(*args): return _iengine.iSector_GetMeshGenerator(*args)
    def GetMeshGeneratorByName(*args): return _iengine.iSector_GetMeshGeneratorByName(*args)
    def RemoveMeshGenerator(*args): return _iengine.iSector_RemoveMeshGenerator(*args)
    def RemoveMeshGenerators(*args): return _iengine.iSector_RemoveMeshGenerators(*args)
    def HasFog(*args): return _iengine.iSector_HasFog(*args)
    def GetFog(*args): return _iengine.iSector_GetFog(*args)
    def SetFog(*args): return _iengine.iSector_SetFog(*args)
    def DisableFog(*args): return _iengine.iSector_DisableFog(*args)
    def GetLights(*args): return _iengine.iSector_GetLights(*args)
    def AddLight(*args): return _iengine.iSector_AddLight(*args)
    def AddLightWait(*args): return _iengine.iSector_AddLightWait(*args)
    def SetDynamicAmbientLight(*args): return _iengine.iSector_SetDynamicAmbientLight(*args)
    def GetDynamicAmbientLight(*args): return _iengine.iSector_GetDynamicAmbientLight(*args)
    def GetDynamicAmbientVersion(*args): return _iengine.iSector_GetDynamicAmbientVersion(*args)
    def CalculateSectorBBox(*args): return _iengine.iSector_CalculateSectorBBox(*args)
    def SetVisibilityCullerPlugin(*args): return _iengine.iSector_SetVisibilityCullerPlugin(*args)
    def GetVisibilityCuller(*args): return _iengine.iSector_GetVisibilityCuller(*args)
    def HitBeamPortals(*args): return _iengine.iSector_HitBeamPortals(*args)
    def HitBeam(*args): return _iengine.iSector_HitBeam(*args)
    def FollowSegment(*args): return _iengine.iSector_FollowSegment(*args)
    def SetSectorCallback(*args): return _iengine.iSector_SetSectorCallback(*args)
    def SetSectorCallbackWait(*args): return _iengine.iSector_SetSectorCallbackWait(*args)
    def RemoveSectorCallback(*args): return _iengine.iSector_RemoveSectorCallback(*args)
    def RemoveSectorCallbackWait(*args): return _iengine.iSector_RemoveSectorCallbackWait(*args)
    def GetSectorCallbackCount(*args): return _iengine.iSector_GetSectorCallbackCount(*args)
    def GetSectorCallback(*args): return _iengine.iSector_GetSectorCallback(*args)
    def SetLightCulling(*args): return _iengine.iSector_SetLightCulling(*args)
    def IsLightCullingEnabled(*args): return _iengine.iSector_IsLightCullingEnabled(*args)
    def AddLightVisibleCallback(*args): return _iengine.iSector_AddLightVisibleCallback(*args)
    def RemoveLightVisibleCallback(*args): return _iengine.iSector_RemoveLightVisibleCallback(*args)
    def GetSVContext(*args): return _iengine.iSector_GetSVContext(*args)
    def PrecacheDraw(*args): return _iengine.iSector_PrecacheDraw(*args)
    def CallSectorCallbacks(*args): return _iengine.iSector_CallSectorCallbacks(*args)
    def GetVisibleRenderMeshes(*args): return _iengine.iSector_GetVisibleRenderMeshes(*args)
    scfGetVersion = staticmethod(_iengine.iSector_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iSector
    __del__ = lambda self : None;
iSector_swigregister = _iengine.iSector_swigregister
iSector_swigregister(iSector)
iSector_scfGetVersion = _iengine.iSector_scfGetVersion

class iSectorList(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCount(*args): return _iengine.iSectorList_GetCount(*args)
    def Get(*args): return _iengine.iSectorList_Get(*args)
    def Add(*args): return _iengine.iSectorList_Add(*args)
    def Remove(*args): return _iengine.iSectorList_Remove(*args)
    def RemoveAll(*args): return _iengine.iSectorList_RemoveAll(*args)
    def Find(*args): return _iengine.iSectorList_Find(*args)
    def FindByName(*args): return _iengine.iSectorList_FindByName(*args)
    def __delitem__(*args): return _iengine.iSectorList___delitem__(*args)
    def __len__(*args): return _iengine.iSectorList___len__(*args)
    def append(*args): return _iengine.iSectorList_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __getitem__(*args): return _iengine.iSectorList___getitem__(*args)
    def __contains__(*args): return _iengine.iSectorList___contains__(*args)
    scfGetVersion = staticmethod(_iengine.iSectorList_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iSectorList
    __del__ = lambda self : None;
iSectorList_swigregister = _iengine.iSectorList_swigregister
iSectorList_swigregister(iSectorList)
iSectorList_scfGetVersion = _iengine.iSectorList_scfGetVersion

class iSectorIterator(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _iengine.iSectorIterator_HasNext(*args)
    def Next(*args): return _iengine.iSectorIterator_Next(*args)
    def GetLastPosition(*args): return _iengine.iSectorIterator_GetLastPosition(*args)
    def Reset(*args): return _iengine.iSectorIterator_Reset(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    scfGetVersion = staticmethod(_iengine.iSectorIterator_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iSectorIterator
    __del__ = lambda self : None;
iSectorIterator_swigregister = _iengine.iSectorIterator_swigregister
iSectorIterator_swigregister(iSectorIterator)
iSectorIterator_scfGetVersion = _iengine.iSectorIterator_scfGetVersion

CS_RENDPRI_SORT_NONE = _iengine.CS_RENDPRI_SORT_NONE
CS_RENDPRI_SORT_BACK2FRONT = _iengine.CS_RENDPRI_SORT_BACK2FRONT
CS_RENDPRI_SORT_FRONT2BACK = _iengine.CS_RENDPRI_SORT_FRONT2BACK
class iEngineFrameCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def StartFrame(*args): return _iengine.iEngineFrameCallback_StartFrame(*args)
    __swig_destroy__ = _iengine.delete_iEngineFrameCallback
    __del__ = lambda self : None;
iEngineFrameCallback_swigregister = _iengine.iEngineFrameCallback_swigregister
iEngineFrameCallback_swigregister(iEngineFrameCallback)

class iEngineSectorCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewSector(*args): return _iengine.iEngineSectorCallback_NewSector(*args)
    def RemoveSector(*args): return _iengine.iEngineSectorCallback_RemoveSector(*args)
    __swig_destroy__ = _iengine.delete_iEngineSectorCallback
    __del__ = lambda self : None;
iEngineSectorCallback_swigregister = _iengine.iEngineSectorCallback_swigregister
iEngineSectorCallback_swigregister(iEngineSectorCallback)

class iEngine(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iEngine_QueryObject(*args)
    def Prepare(*args): return _iengine.iEngine_Prepare(*args)
    def PrepareTextures(*args): return _iengine.iEngine_PrepareTextures(*args)
    def PrepareMeshes(*args): return _iengine.iEngine_PrepareMeshes(*args)
    def SetCacheManager(*args): return _iengine.iEngine_SetCacheManager(*args)
    def SetVFSCacheManager(*args): return _iengine.iEngine_SetVFSCacheManager(*args)
    def GetCacheManager(*args): return _iengine.iEngine_GetCacheManager(*args)
    def RegisterRenderPriority(*args): return _iengine.iEngine_RegisterRenderPriority(*args)
    def GetRenderPriority(*args): return _iengine.iEngine_GetRenderPriority(*args)
    def GetRenderPrioritySorting(*args): return _iengine.iEngine_GetRenderPrioritySorting(*args)
    def GetSkyRenderPriority(*args): return _iengine.iEngine_GetSkyRenderPriority(*args)
    def GetPortalRenderPriority(*args): return _iengine.iEngine_GetPortalRenderPriority(*args)
    def GetWallRenderPriority(*args): return _iengine.iEngine_GetWallRenderPriority(*args)
    def GetObjectRenderPriority(*args): return _iengine.iEngine_GetObjectRenderPriority(*args)
    def GetAlphaRenderPriority(*args): return _iengine.iEngine_GetAlphaRenderPriority(*args)
    def ClearRenderPriorities(*args): return _iengine.iEngine_ClearRenderPriorities(*args)
    def GetRenderPriorityCount(*args): return _iengine.iEngine_GetRenderPriorityCount(*args)
    def GetRenderPriorityName(*args): return _iengine.iEngine_GetRenderPriorityName(*args)
    def CreateBaseMaterial(*args): return _iengine.iEngine_CreateBaseMaterial(*args)
    def CreateMaterial(*args): return _iengine.iEngine_CreateMaterial(*args)
    def GetMaterialList(*args): return _iengine.iEngine_GetMaterialList(*args)
    def FindMaterial(*args): return _iengine.iEngine_FindMaterial(*args)
    def CreateTexture(*args): return _iengine.iEngine_CreateTexture(*args)
    def CreateBlackTexture(*args): return _iengine.iEngine_CreateBlackTexture(*args)
    def GetTextureFormat(*args): return _iengine.iEngine_GetTextureFormat(*args)
    def GetTextureList(*args): return _iengine.iEngine_GetTextureList(*args)
    def FindTexture(*args): return _iengine.iEngine_FindTexture(*args)
    def CreateLight(*args): return _iengine.iEngine_CreateLight(*args)
    def FindLight(*args): return _iengine.iEngine_FindLight(*args)
    def FindLightID(*args): return _iengine.iEngine_FindLightID(*args)
    def GetLightIterator(*args): return _iengine.iEngine_GetLightIterator(*args)
    def RemoveLight(*args): return _iengine.iEngine_RemoveLight(*args)
    def SetAmbientLight(*args): return _iengine.iEngine_SetAmbientLight(*args)
    def GetAmbientLight(*args): return _iengine.iEngine_GetAmbientLight(*args)
    def GetDefaultAmbientLight(*args): return _iengine.iEngine_GetDefaultAmbientLight(*args)
    def GetNearbyLights(*args): return _iengine.iEngine_GetNearbyLights(*args)
    def CreateSector(*args): return _iengine.iEngine_CreateSector(*args)
    def GetSectors(*args): return _iengine.iEngine_GetSectors(*args)
    def FindSector(*args): return _iengine.iEngine_FindSector(*args)
    def GetNearbySectors(*args): return _iengine.iEngine_GetNearbySectors(*args)
    def AddEngineFrameCallback(*args): return _iengine.iEngine_AddEngineFrameCallback(*args)
    def RemoveEngineFrameCallback(*args): return _iengine.iEngine_RemoveEngineFrameCallback(*args)
    def AddEngineSectorCallback(*args): return _iengine.iEngine_AddEngineSectorCallback(*args)
    def RemoveEngineSectorCallback(*args): return _iengine.iEngine_RemoveEngineSectorCallback(*args)
    def CreateMeshWrapper(*args): return _iengine.iEngine_CreateMeshWrapper(*args)
    def LoadMeshWrapper(*args): return _iengine.iEngine_LoadMeshWrapper(*args)
    def AddMeshAndChildren(*args): return _iengine.iEngine_AddMeshAndChildren(*args)
    def AddMeshAndChildrenWait(*args): return _iengine.iEngine_AddMeshAndChildrenWait(*args)
    def GetNearbyMeshes(*args): return _iengine.iEngine_GetNearbyMeshes(*args)
    def GetMeshes(*args): return _iengine.iEngine_GetMeshes(*args)
    def FindMeshObject(*args): return _iengine.iEngine_FindMeshObject(*args)
    def WantToDie(*args): return _iengine.iEngine_WantToDie(*args)
    def CreateMeshFactory(*args): return _iengine.iEngine_CreateMeshFactory(*args)
    def LoadMeshFactory(*args): return _iengine.iEngine_LoadMeshFactory(*args)
    def FindMeshFactory(*args): return _iengine.iEngine_FindMeshFactory(*args)
    def GetMeshFactories(*args): return _iengine.iEngine_GetMeshFactories(*args)
    def CreateCollection(*args): return _iengine.iEngine_CreateCollection(*args)
    def GetCollection(*args): return _iengine.iEngine_GetCollection(*args)
    def GetCollections(*args): return _iengine.iEngine_GetCollections(*args)
    def RemoveCollection(*args): return _iengine.iEngine_RemoveCollection(*args)
    def RemoveAllCollections(*args): return _iengine.iEngine_RemoveAllCollections(*args)
    def CreateCamera(*args): return _iengine.iEngine_CreateCamera(*args)
    def FindCameraPosition(*args): return _iengine.iEngine_FindCameraPosition(*args)
    def GetCameraPositions(*args): return _iengine.iEngine_GetCameraPositions(*args)
    def CreatePortal(*args): return _iengine.iEngine_CreatePortal(*args)
    def CreatePortalContainer(*args): return _iengine.iEngine_CreatePortalContainer(*args)
    def SetClearZBuf(*args): return _iengine.iEngine_SetClearZBuf(*args)
    def GetClearZBuf(*args): return _iengine.iEngine_GetClearZBuf(*args)
    def GetDefaultClearZBuf(*args): return _iengine.iEngine_GetDefaultClearZBuf(*args)
    def SetClearScreen(*args): return _iengine.iEngine_SetClearScreen(*args)
    def GetClearScreen(*args): return _iengine.iEngine_GetClearScreen(*args)
    def GetDefaultClearScreen(*args): return _iengine.iEngine_GetDefaultClearScreen(*args)
    def GetBeginDrawFlags(*args): return _iengine.iEngine_GetBeginDrawFlags(*args)
    def GetTopLevelClipper(*args): return _iengine.iEngine_GetTopLevelClipper(*args)
    def PrecacheMesh(*args): return _iengine.iEngine_PrecacheMesh(*args)
    def PrecacheDraw(*args): return _iengine.iEngine_PrecacheDraw(*args)
    def Draw(*args): return _iengine.iEngine_Draw(*args)
    def SetContext(*args): return _iengine.iEngine_SetContext(*args)
    def GetContext(*args): return _iengine.iEngine_GetContext(*args)
    def GetRenderLoopManager(*args): return _iengine.iEngine_GetRenderLoopManager(*args)
    def GetCurrentDefaultRenderloop(*args): return _iengine.iEngine_GetCurrentDefaultRenderloop(*args)
    def SetCurrentDefaultRenderloop(*args): return _iengine.iEngine_SetCurrentDefaultRenderloop(*args)
    def GetCurrentFrameNumber(*args): return _iengine.iEngine_GetCurrentFrameNumber(*args)
    def UpdateNewFrame(*args): return _iengine.iEngine_UpdateNewFrame(*args)
    def SetSaveableFlag(*args): return _iengine.iEngine_SetSaveableFlag(*args)
    def GetSaveableFlag(*args): return _iengine.iEngine_GetSaveableFlag(*args)
    def CreateLoaderContext(*args): return _iengine.iEngine_CreateLoaderContext(*args)
    def SetDefaultKeepImage(*args): return _iengine.iEngine_SetDefaultKeepImage(*args)
    def GetDefaultKeepImage(*args): return _iengine.iEngine_GetDefaultKeepImage(*args)
    def GetNearbyObjects(*args): return _iengine.iEngine_GetNearbyObjects(*args)
    def GetVisibleObjects(*args): return _iengine.iEngine_GetVisibleObjects(*args)
    def GetVisibleMeshes(*args): return _iengine.iEngine_GetVisibleMeshes(*args)
    def CreateObjectWatcher(*args): return _iengine.iEngine_CreateObjectWatcher(*args)
    def GetVariableList(*args): return _iengine.iEngine_GetVariableList(*args)
    def RemoveObject(*args): return _iengine.iEngine_RemoveObject(*args)
    def DelayedRemoveObject(*args): return _iengine.iEngine_DelayedRemoveObject(*args)
    def RemoveDelayedRemoves(*args): return _iengine.iEngine_RemoveDelayedRemoves(*args)
    def DeleteAll(*args): return _iengine.iEngine_DeleteAll(*args)
    def DeleteAllWait(*args): return _iengine.iEngine_DeleteAllWait(*args)
    def ResetWorldSpecificSettings(*args): return _iengine.iEngine_ResetWorldSpecificSettings(*args)
    def FireStartFrame(*args): return _iengine.iEngine_FireStartFrame(*args)
    def CreatePerspectiveCamera(*args): return _iengine.iEngine_CreatePerspectiveCamera(*args)
    def CreateCustomMatrixCamera(*args): return _iengine.iEngine_CreateCustomMatrixCamera(*args)
    def GetRenderManager(*args): return _iengine.iEngine_GetRenderManager(*args)
    def SetRenderManager(*args): return _iengine.iEngine_SetRenderManager(*args)
    def ReloadRenderManager(*args): return _iengine.iEngine_ReloadRenderManager(*args)
    def SyncEngineLists(*args): return _iengine.iEngine_SyncEngineLists(*args)
    def SyncEngineListsWait(*args): return _iengine.iEngine_SyncEngineListsWait(*args)
    def SyncEngineListsNow(*args): return _iengine.iEngine_SyncEngineListsNow(*args)
    scfGetVersion = staticmethod(_iengine.iEngine_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iEngine
    __del__ = lambda self : None;
iEngine_swigregister = _iengine.iEngine_swigregister
iEngine_swigregister(iEngine)
iEngine_scfGetVersion = _iengine.iEngine_scfGetVersion

class iLODControl(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetLOD(*args): return _iengine.iLODControl_SetLOD(*args)
    def GetLOD(*args): return _iengine.iLODControl_GetLOD(*args)
    def GetLODPolygonCount(*args): return _iengine.iLODControl_GetLODPolygonCount(*args)
    def SetLODFade(*args): return _iengine.iLODControl_SetLODFade(*args)
    def GetLODFade(*args): return _iengine.iLODControl_GetLODFade(*args)
    __swig_destroy__ = _iengine.delete_iLODControl
    __del__ = lambda self : None;
iLODControl_swigregister = _iengine.iLODControl_swigregister
iLODControl_swigregister(iLODControl)

class iCameraListener(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewSector(*args): return _iengine.iCameraListener_NewSector(*args)
    def CameraMoved(*args): return _iengine.iCameraListener_CameraMoved(*args)
    __swig_destroy__ = _iengine.delete_iCameraListener
    __del__ = lambda self : None;
iCameraListener_swigregister = _iengine.iCameraListener_swigregister
iCameraListener_swigregister(iCameraListener)

class iCameraSectorListener(iCameraListener):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewSector(*args): return _iengine.iCameraSectorListener_NewSector(*args)
    def CameraMoved(*args): return _iengine.iCameraSectorListener_CameraMoved(*args)
    __swig_destroy__ = _iengine.delete_iCameraSectorListener
    __del__ = lambda self : None;
iCameraSectorListener_swigregister = _iengine.iCameraSectorListener_swigregister
iCameraSectorListener_swigregister(iCameraSectorListener)

class iCamera(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Clone(*args): return _iengine.iCamera_Clone(*args)
    def QuerySceneNode(*args): return _iengine.iCamera_QuerySceneNode(*args)
    def GetFOV(*args): return _iengine.iCamera_GetFOV(*args)
    def GetInvFOV(*args): return _iengine.iCamera_GetInvFOV(*args)
    def GetFOVAngle(*args): return _iengine.iCamera_GetFOVAngle(*args)
    def SetFOV(*args): return _iengine.iCamera_SetFOV(*args)
    def SetFOVAngle(*args): return _iengine.iCamera_SetFOVAngle(*args)
    def GetShiftX(*args): return _iengine.iCamera_GetShiftX(*args)
    def GetShiftY(*args): return _iengine.iCamera_GetShiftY(*args)
    def SetPerspectiveCenter(*args): return _iengine.iCamera_SetPerspectiveCenter(*args)
    def GetTransform(*args): return _iengine.iCamera_GetTransform(*args)
    def SetTransform(*args): return _iengine.iCamera_SetTransform(*args)
    def MoveWorld(*args): return _iengine.iCamera_MoveWorld(*args)
    def Move(*args): return _iengine.iCamera_Move(*args)
    def MoveWorldUnrestricted(*args): return _iengine.iCamera_MoveWorldUnrestricted(*args)
    def MoveUnrestricted(*args): return _iengine.iCamera_MoveUnrestricted(*args)
    def GetSector(*args): return _iengine.iCamera_GetSector(*args)
    def SetSector(*args): return _iengine.iCamera_SetSector(*args)
    def Correct(*args): return _iengine.iCamera_Correct(*args)
    def IsMirrored(*args): return _iengine.iCamera_IsMirrored(*args)
    def SetMirrored(*args): return _iengine.iCamera_SetMirrored(*args)
    def GetFarPlane(*args): return _iengine.iCamera_GetFarPlane(*args)
    def SetFarPlane(*args): return _iengine.iCamera_SetFarPlane(*args)
    def GetCameraNumber(*args): return _iengine.iCamera_GetCameraNumber(*args)
    def Perspective(*args): return _iengine.iCamera_Perspective(*args)
    def InvPerspective(*args): return _iengine.iCamera_InvPerspective(*args)
    def OnlyPortals(*args): return _iengine.iCamera_OnlyPortals(*args)
    def GetOnlyPortals(*args): return _iengine.iCamera_GetOnlyPortals(*args)
    def AddCameraSectorListener(*args): return _iengine.iCamera_AddCameraSectorListener(*args)
    def RemoveCameraSectorListener(*args): return _iengine.iCamera_RemoveCameraSectorListener(*args)
    def AddCameraListener(*args): return _iengine.iCamera_AddCameraListener(*args)
    def RemoveCameraListener(*args): return _iengine.iCamera_RemoveCameraListener(*args)
    def GetProjectionMatrix(*args): return _iengine.iCamera_GetProjectionMatrix(*args)
    def GetVisibleVolume(*args): return _iengine.iCamera_GetVisibleVolume(*args)
    def SetViewportSize(*args): return _iengine.iCamera_SetViewportSize(*args)
    def GetInvProjectionMatrix(*args): return _iengine.iCamera_GetInvProjectionMatrix(*args)
    scfGetVersion = staticmethod(_iengine.iCamera_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iCamera
    __del__ = lambda self : None;
iCamera_swigregister = _iengine.iCamera_swigregister
iCamera_swigregister(iCamera)
iCamera_scfGetVersion = _iengine.iCamera_scfGetVersion

class iPerspectiveCamera(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCamera(*args): return _iengine.iPerspectiveCamera_GetCamera(*args)
    def GetFOV(*args): return _iengine.iPerspectiveCamera_GetFOV(*args)
    def GetInvFOV(*args): return _iengine.iPerspectiveCamera_GetInvFOV(*args)
    def GetFOVAngle(*args): return _iengine.iPerspectiveCamera_GetFOVAngle(*args)
    def SetFOV(*args): return _iengine.iPerspectiveCamera_SetFOV(*args)
    def SetFOVAngle(*args): return _iengine.iPerspectiveCamera_SetFOVAngle(*args)
    def GetShiftX(*args): return _iengine.iPerspectiveCamera_GetShiftX(*args)
    def GetShiftY(*args): return _iengine.iPerspectiveCamera_GetShiftY(*args)
    def SetPerspectiveCenter(*args): return _iengine.iPerspectiveCamera_SetPerspectiveCenter(*args)
    __swig_destroy__ = _iengine.delete_iPerspectiveCamera
    __del__ = lambda self : None;
iPerspectiveCamera_swigregister = _iengine.iPerspectiveCamera_swigregister
iPerspectiveCamera_swigregister(iPerspectiveCamera)

class iCustomMatrixCamera(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCamera(*args): return _iengine.iCustomMatrixCamera_GetCamera(*args)
    def SetProjectionMatrix(*args): return _iengine.iCustomMatrixCamera_SetProjectionMatrix(*args)
    __swig_destroy__ = _iengine.delete_iCustomMatrixCamera
    __del__ = lambda self : None;
iCustomMatrixCamera_swigregister = _iengine.iCustomMatrixCamera_swigregister
iCustomMatrixCamera_swigregister(iCustomMatrixCamera)

class iCameraPosition(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iCameraPosition_QueryObject(*args)
    def Clone(*args): return _iengine.iCameraPosition_Clone(*args)
    def GetSector(*args): return _iengine.iCameraPosition_GetSector(*args)
    def SetSector(*args): return _iengine.iCameraPosition_SetSector(*args)
    def GetPosition(*args): return _iengine.iCameraPosition_GetPosition(*args)
    def SetPosition(*args): return _iengine.iCameraPosition_SetPosition(*args)
    def GetUpwardVector(*args): return _iengine.iCameraPosition_GetUpwardVector(*args)
    def SetUpwardVector(*args): return _iengine.iCameraPosition_SetUpwardVector(*args)
    def GetForwardVector(*args): return _iengine.iCameraPosition_GetForwardVector(*args)
    def SetForwardVector(*args): return _iengine.iCameraPosition_SetForwardVector(*args)
    def Set(*args): return _iengine.iCameraPosition_Set(*args)
    def Load(*args): return _iengine.iCameraPosition_Load(*args)
    def SetFarPlane(*args): return _iengine.iCameraPosition_SetFarPlane(*args)
    def ClearFarPlane(*args): return _iengine.iCameraPosition_ClearFarPlane(*args)
    def GetFarPlane(*args): return _iengine.iCameraPosition_GetFarPlane(*args)
    scfGetVersion = staticmethod(_iengine.iCameraPosition_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iCameraPosition
    __del__ = lambda self : None;
iCameraPosition_swigregister = _iengine.iCameraPosition_swigregister
iCameraPosition_swigregister(iCameraPosition)
iCameraPosition_scfGetVersion = _iengine.iCameraPosition_scfGetVersion

class iCameraPositionList(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewCameraPosition(*args): return _iengine.iCameraPositionList_NewCameraPosition(*args)
    def CreateCameraPosition(*args): return _iengine.iCameraPositionList_CreateCameraPosition(*args)
    def GetCount(*args): return _iengine.iCameraPositionList_GetCount(*args)
    def Get(*args): return _iengine.iCameraPositionList_Get(*args)
    def Add(*args): return _iengine.iCameraPositionList_Add(*args)
    def Remove(*args): return _iengine.iCameraPositionList_Remove(*args)
    def RemoveAll(*args): return _iengine.iCameraPositionList_RemoveAll(*args)
    def Find(*args): return _iengine.iCameraPositionList_Find(*args)
    def FindByName(*args): return _iengine.iCameraPositionList_FindByName(*args)
    def __delitem__(*args): return _iengine.iCameraPositionList___delitem__(*args)
    def __len__(*args): return _iengine.iCameraPositionList___len__(*args)
    def append(*args): return _iengine.iCameraPositionList_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __getitem__(*args): return _iengine.iCameraPositionList___getitem__(*args)
    def __contains__(*args): return _iengine.iCameraPositionList___contains__(*args)
    __swig_destroy__ = _iengine.delete_iCameraPositionList
    __del__ = lambda self : None;
iCameraPositionList_swigregister = _iengine.iCameraPositionList_swigregister
iCameraPositionList_swigregister(iCameraPositionList)

class iTextureCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def UseTexture(*args): return _iengine.iTextureCallback_UseTexture(*args)
    __swig_destroy__ = _iengine.delete_iTextureCallback
    __del__ = lambda self : None;
iTextureCallback_swigregister = _iengine.iTextureCallback_swigregister
iTextureCallback_swigregister(iTextureCallback)

class iTextureWrapper(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iTextureWrapper_QueryObject(*args)
    def Clone(*args): return _iengine.iTextureWrapper_Clone(*args)
    def SetImageFile(*args): return _iengine.iTextureWrapper_SetImageFile(*args)
    def GetImageFile(*args): return _iengine.iTextureWrapper_GetImageFile(*args)
    def SetTextureHandle(*args): return _iengine.iTextureWrapper_SetTextureHandle(*args)
    def GetTextureHandle(*args): return _iengine.iTextureWrapper_GetTextureHandle(*args)
    def SetKeyColor(*args): return _iengine.iTextureWrapper_SetKeyColor(*args)
    def GetKeyColor(*args): return _iengine.iTextureWrapper_GetKeyColor(*args)
    def SetFlags(*args): return _iengine.iTextureWrapper_SetFlags(*args)
    def GetFlags(*args): return _iengine.iTextureWrapper_GetFlags(*args)
    def Register(*args): return _iengine.iTextureWrapper_Register(*args)
    def SetUseCallback(*args): return _iengine.iTextureWrapper_SetUseCallback(*args)
    def GetUseCallback(*args): return _iengine.iTextureWrapper_GetUseCallback(*args)
    def Visit(*args): return _iengine.iTextureWrapper_Visit(*args)
    def IsVisitRequired(*args): return _iengine.iTextureWrapper_IsVisitRequired(*args)
    def SetKeepImage(*args): return _iengine.iTextureWrapper_SetKeepImage(*args)
    def KeepImage(*args): return _iengine.iTextureWrapper_KeepImage(*args)
    def SetTextureClass(*args): return _iengine.iTextureWrapper_SetTextureClass(*args)
    def GetTextureClass(*args): return _iengine.iTextureWrapper_GetTextureClass(*args)
    scfGetVersion = staticmethod(_iengine.iTextureWrapper_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iTextureWrapper
    __del__ = lambda self : None;
iTextureWrapper_swigregister = _iengine.iTextureWrapper_swigregister
iTextureWrapper_swigregister(iTextureWrapper)
iTextureWrapper_scfGetVersion = _iengine.iTextureWrapper_scfGetVersion

class iTextureList(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewTexture(*args): return _iengine.iTextureList_NewTexture(*args)
    def CreateTexture(*args): return _iengine.iTextureList_CreateTexture(*args)
    def GetCount(*args): return _iengine.iTextureList_GetCount(*args)
    def Get(*args): return _iengine.iTextureList_Get(*args)
    def Add(*args): return _iengine.iTextureList_Add(*args)
    def Remove(*args): return _iengine.iTextureList_Remove(*args)
    def RemoveAll(*args): return _iengine.iTextureList_RemoveAll(*args)
    def Find(*args): return _iengine.iTextureList_Find(*args)
    def FindByName(*args): return _iengine.iTextureList_FindByName(*args)
    def __delitem__(*args): return _iengine.iTextureList___delitem__(*args)
    def __len__(*args): return _iengine.iTextureList___len__(*args)
    def append(*args): return _iengine.iTextureList_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __getitem__(*args): return _iengine.iTextureList___getitem__(*args)
    def __contains__(*args): return _iengine.iTextureList___contains__(*args)
    scfGetVersion = staticmethod(_iengine.iTextureList_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iTextureList
    __del__ = lambda self : None;
iTextureList_swigregister = _iengine.iTextureList_swigregister
iTextureList_swigregister(iTextureList)
iTextureList_scfGetVersion = _iengine.iTextureList_scfGetVersion

class iMaterialWrapper(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iMaterialWrapper_QueryObject(*args)
    def SetMaterial(*args): return _iengine.iMaterialWrapper_SetMaterial(*args)
    def GetMaterial(*args): return _iengine.iMaterialWrapper_GetMaterial(*args)
    def Visit(*args): return _iengine.iMaterialWrapper_Visit(*args)
    def IsVisitRequired(*args): return _iengine.iMaterialWrapper_IsVisitRequired(*args)
    scfGetVersion = staticmethod(_iengine.iMaterialWrapper_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iMaterialWrapper
    __del__ = lambda self : None;
iMaterialWrapper_swigregister = _iengine.iMaterialWrapper_swigregister
iMaterialWrapper_swigregister(iMaterialWrapper)
iMaterialWrapper_scfGetVersion = _iengine.iMaterialWrapper_scfGetVersion

class iMaterialEngine(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetTextureWrapper(*args): return _iengine.iMaterialEngine_GetTextureWrapper(*args)
    def Visit(*args): return _iengine.iMaterialEngine_Visit(*args)
    def IsVisitRequired(*args): return _iengine.iMaterialEngine_IsVisitRequired(*args)
    scfGetVersion = staticmethod(_iengine.iMaterialEngine_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iMaterialEngine
    __del__ = lambda self : None;
iMaterialEngine_swigregister = _iengine.iMaterialEngine_swigregister
iMaterialEngine_swigregister(iMaterialEngine)
iMaterialEngine_scfGetVersion = _iengine.iMaterialEngine_scfGetVersion

class iMaterialList(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewMaterial(*args): return _iengine.iMaterialList_NewMaterial(*args)
    def CreateMaterial(*args): return _iengine.iMaterialList_CreateMaterial(*args)
    def GetCount(*args): return _iengine.iMaterialList_GetCount(*args)
    def Get(*args): return _iengine.iMaterialList_Get(*args)
    def Add(*args): return _iengine.iMaterialList_Add(*args)
    def Remove(*args): return _iengine.iMaterialList_Remove(*args)
    def RemoveAll(*args): return _iengine.iMaterialList_RemoveAll(*args)
    def Find(*args): return _iengine.iMaterialList_Find(*args)
    def FindByName(*args): return _iengine.iMaterialList_FindByName(*args)
    def __delitem__(*args): return _iengine.iMaterialList___delitem__(*args)
    def __len__(*args): return _iengine.iMaterialList___len__(*args)
    def append(*args): return _iengine.iMaterialList_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __getitem__(*args): return _iengine.iMaterialList___getitem__(*args)
    def __contains__(*args): return _iengine.iMaterialList___contains__(*args)
    __swig_destroy__ = _iengine.delete_iMaterialList
    __del__ = lambda self : None;
iMaterialList_swigregister = _iengine.iMaterialList_swigregister
iMaterialList_swigregister(iMaterialList)

class iSceneNodeArrayReadOnly(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSize(*args): return _iengine.iSceneNodeArrayReadOnly_GetSize(*args)
    def Get(*args): return _iengine.iSceneNodeArrayReadOnly_Get(*args)
    def Top(*args): return _iengine.iSceneNodeArrayReadOnly_Top(*args)
    def Find(*args): return _iengine.iSceneNodeArrayReadOnly_Find(*args)
    def GetIndex(*args): return _iengine.iSceneNodeArrayReadOnly_GetIndex(*args)
    def IsEmpty(*args): return _iengine.iSceneNodeArrayReadOnly_IsEmpty(*args)
    def GetAll(*args): return _iengine.iSceneNodeArrayReadOnly_GetAll(*args)
    __swig_destroy__ = _iengine.delete_iSceneNodeArrayReadOnly
    __del__ = lambda self : None;
iSceneNodeArrayReadOnly_swigregister = _iengine.iSceneNodeArrayReadOnly_swigregister
iSceneNodeArrayReadOnly_swigregister(iSceneNodeArrayReadOnly)

class iSceneNodeArray(iSceneNodeArrayReadOnly):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    scfGetVersion = staticmethod(_iengine.iSceneNodeArray_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iSceneNodeArray
    __del__ = lambda self : None;
iSceneNodeArray_swigregister = _iengine.iSceneNodeArray_swigregister
iSceneNodeArray_swigregister(iSceneNodeArray)
iSceneNodeArray_scfGetVersion = _iengine.iSceneNodeArray_scfGetVersion

class iSceneNode(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetMovable(*args): return _iengine.iSceneNode_GetMovable(*args)
    def QueryMesh(*args): return _iengine.iSceneNode_QueryMesh(*args)
    def QueryLight(*args): return _iengine.iSceneNode_QueryLight(*args)
    def QueryCamera(*args): return _iengine.iSceneNode_QueryCamera(*args)
    def SetParent(*args): return _iengine.iSceneNode_SetParent(*args)
    def GetParent(*args): return _iengine.iSceneNode_GetParent(*args)
    def GetChildren(*args): return _iengine.iSceneNode_GetChildren(*args)
    def GetChildrenArray(*args): return _iengine.iSceneNode_GetChildrenArray(*args)
    scfGetVersion = staticmethod(_iengine.iSceneNode_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iSceneNode
    __del__ = lambda self : None;
iSceneNode_swigregister = _iengine.iSceneNode_swigregister
iSceneNode_swigregister(iSceneNode)
iSceneNode_scfGetVersion = _iengine.iSceneNode_scfGetVersion

CS_ENTITY_DETAIL = _iengine.CS_ENTITY_DETAIL
CS_ENTITY_CAMERA = _iengine.CS_ENTITY_CAMERA
CS_ENTITY_INVISIBLEMESH = _iengine.CS_ENTITY_INVISIBLEMESH
CS_ENTITY_NOSHADOWCAST = _iengine.CS_ENTITY_NOSHADOWCAST
CS_ENTITY_NOSHADOWS = _iengine.CS_ENTITY_NOSHADOWS
CS_ENTITY_NOLIGHTING = _iengine.CS_ENTITY_NOLIGHTING
CS_ENTITY_NOHITBEAM = _iengine.CS_ENTITY_NOHITBEAM
CS_ENTITY_NOCLIP = _iengine.CS_ENTITY_NOCLIP
CS_ENTITY_NODECAL = _iengine.CS_ENTITY_NODECAL
CS_ENTITY_STATICLIT = _iengine.CS_ENTITY_STATICLIT
CS_ENTITY_NOSHADOWRECEIVE = _iengine.CS_ENTITY_NOSHADOWRECEIVE
CS_ENTITY_LIMITEDSHADOWCAST = _iengine.CS_ENTITY_LIMITEDSHADOWCAST
class iMeshDrawCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def BeforeDrawing(*args): return _iengine.iMeshDrawCallback_BeforeDrawing(*args)
    __swig_destroy__ = _iengine.delete_iMeshDrawCallback
    __del__ = lambda self : None;
iMeshDrawCallback_swigregister = _iengine.iMeshDrawCallback_swigregister
iMeshDrawCallback_swigregister(iMeshDrawCallback)

class csHitBeamResult(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    isect = _swig_property(_iengine.csHitBeamResult_isect_get, _iengine.csHitBeamResult_isect_set)
    r = _swig_property(_iengine.csHitBeamResult_r_get, _iengine.csHitBeamResult_r_set)
    polygon_idx = _swig_property(_iengine.csHitBeamResult_polygon_idx_get, _iengine.csHitBeamResult_polygon_idx_set)
    material = _swig_property(_iengine.csHitBeamResult_material_get, _iengine.csHitBeamResult_material_set)
    materials = _swig_property(_iengine.csHitBeamResult_materials_get, _iengine.csHitBeamResult_materials_set)
    facehit = _swig_property(_iengine.csHitBeamResult_facehit_get, _iengine.csHitBeamResult_facehit_set)
    hit = _swig_property(_iengine.csHitBeamResult_hit_get, _iengine.csHitBeamResult_hit_set)
    def __init__(self, *args): 
        this = _iengine.new_csHitBeamResult(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _iengine.delete_csHitBeamResult
    __del__ = lambda self : None;
csHitBeamResult_swigregister = _iengine.csHitBeamResult_swigregister
csHitBeamResult_swigregister(csHitBeamResult)

class csScreenBoxResult(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    sbox = _swig_property(_iengine.csScreenBoxResult_sbox_get, _iengine.csScreenBoxResult_sbox_set)
    cbox = _swig_property(_iengine.csScreenBoxResult_cbox_get, _iengine.csScreenBoxResult_cbox_set)
    distance = _swig_property(_iengine.csScreenBoxResult_distance_get, _iengine.csScreenBoxResult_distance_set)
    def __init__(self, *args): 
        this = _iengine.new_csScreenBoxResult(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _iengine.delete_csScreenBoxResult
    __del__ = lambda self : None;
csScreenBoxResult_swigregister = _iengine.csScreenBoxResult_swigregister
csScreenBoxResult_swigregister(csScreenBoxResult)

class iMeshWrapper(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iMeshWrapper_QueryObject(*args)
    def GetMeshObject(*args): return _iengine.iMeshWrapper_GetMeshObject(*args)
    def SetMeshObject(*args): return _iengine.iMeshWrapper_SetMeshObject(*args)
    def GetPortalContainer(*args): return _iengine.iMeshWrapper_GetPortalContainer(*args)
    def GetFactory(*args): return _iengine.iMeshWrapper_GetFactory(*args)
    def SetFactory(*args): return _iengine.iMeshWrapper_SetFactory(*args)
    def GetMovable(*args): return _iengine.iMeshWrapper_GetMovable(*args)
    def QuerySceneNode(*args): return _iengine.iMeshWrapper_QuerySceneNode(*args)
    def FindChildByName(*args): return _iengine.iMeshWrapper_FindChildByName(*args)
    def PlaceMesh(*args): return _iengine.iMeshWrapper_PlaceMesh(*args)
    def HitBeamBBox(*args): return _iengine.iMeshWrapper_HitBeamBBox(*args)
    def HitBeamOutline(*args): return _iengine.iMeshWrapper_HitBeamOutline(*args)
    def HitBeamObject(*args): return _iengine.iMeshWrapper_HitBeamObject(*args)
    def HitBeam(*args): return _iengine.iMeshWrapper_HitBeam(*args)
    def SetDrawCallback(*args): return _iengine.iMeshWrapper_SetDrawCallback(*args)
    def RemoveDrawCallback(*args): return _iengine.iMeshWrapper_RemoveDrawCallback(*args)
    def GetDrawCallbackCount(*args): return _iengine.iMeshWrapper_GetDrawCallbackCount(*args)
    def GetDrawCallback(*args): return _iengine.iMeshWrapper_GetDrawCallback(*args)
    def SetRenderPriority(*args): return _iengine.iMeshWrapper_SetRenderPriority(*args)
    def GetRenderPriority(*args): return _iengine.iMeshWrapper_GetRenderPriority(*args)
    def SetRenderPriorityRecursive(*args): return _iengine.iMeshWrapper_SetRenderPriorityRecursive(*args)
    def GetFlags(*args): return _iengine.iMeshWrapper_GetFlags(*args)
    def SetFlagsRecursive(*args): return _iengine.iMeshWrapper_SetFlagsRecursive(*args)
    def SetZBufMode(*args): return _iengine.iMeshWrapper_SetZBufMode(*args)
    def GetZBufMode(*args): return _iengine.iMeshWrapper_GetZBufMode(*args)
    def SetZBufModeRecursive(*args): return _iengine.iMeshWrapper_SetZBufModeRecursive(*args)
    def HardTransform(*args): return _iengine.iMeshWrapper_HardTransform(*args)
    def GetWorldBoundingBox(*args): return _iengine.iMeshWrapper_GetWorldBoundingBox(*args)
    def GetTransformedBoundingBox(*args): return _iengine.iMeshWrapper_GetTransformedBoundingBox(*args)
    def GetScreenBoundingBox(*args): return _iengine.iMeshWrapper_GetScreenBoundingBox(*args)
    def GetRadius(*args): return _iengine.iMeshWrapper_GetRadius(*args)
    def ResetMinMaxRenderDistance(*args): return _iengine.iMeshWrapper_ResetMinMaxRenderDistance(*args)
    def SetMinimumRenderDistance(*args): return _iengine.iMeshWrapper_SetMinimumRenderDistance(*args)
    def GetMinimumRenderDistance(*args): return _iengine.iMeshWrapper_GetMinimumRenderDistance(*args)
    def SetMaximumRenderDistance(*args): return _iengine.iMeshWrapper_SetMaximumRenderDistance(*args)
    def GetMaximumRenderDistance(*args): return _iengine.iMeshWrapper_GetMaximumRenderDistance(*args)
    def SetMinimumRenderDistanceVar(*args): return _iengine.iMeshWrapper_SetMinimumRenderDistanceVar(*args)
    def GetMinimumRenderDistanceVar(*args): return _iengine.iMeshWrapper_GetMinimumRenderDistanceVar(*args)
    def SetMaximumRenderDistanceVar(*args): return _iengine.iMeshWrapper_SetMaximumRenderDistanceVar(*args)
    def GetMaximumRenderDistanceVar(*args): return _iengine.iMeshWrapper_GetMaximumRenderDistanceVar(*args)
    def CreateStaticLOD(*args): return _iengine.iMeshWrapper_CreateStaticLOD(*args)
    def DestroyStaticLOD(*args): return _iengine.iMeshWrapper_DestroyStaticLOD(*args)
    def GetStaticLOD(*args): return _iengine.iMeshWrapper_GetStaticLOD(*args)
    def AddMeshToStaticLOD(*args): return _iengine.iMeshWrapper_AddMeshToStaticLOD(*args)
    def RemoveMeshFromStaticLOD(*args): return _iengine.iMeshWrapper_RemoveMeshFromStaticLOD(*args)
    def GetSVContext(*args): return _iengine.iMeshWrapper_GetSVContext(*args)
    def GetRenderMeshes(*args): return _iengine.iMeshWrapper_GetRenderMeshes(*args)
    def AddExtraRenderMesh(*args): return _iengine.iMeshWrapper_AddExtraRenderMesh(*args)
    def GetExtraRenderMesh(*args): return _iengine.iMeshWrapper_GetExtraRenderMesh(*args)
    def GetExtraRenderMeshCount(*args): return _iengine.iMeshWrapper_GetExtraRenderMeshCount(*args)
    def GetExtraRenderMeshPriority(*args): return _iengine.iMeshWrapper_GetExtraRenderMeshPriority(*args)
    def GetExtraRenderMeshZBufMode(*args): return _iengine.iMeshWrapper_GetExtraRenderMeshZBufMode(*args)
    def RemoveExtraRenderMesh(*args): return _iengine.iMeshWrapper_RemoveExtraRenderMesh(*args)
    def AddInstance(*args): return _iengine.iMeshWrapper_AddInstance(*args)
    def RemoveInstance(*args): return _iengine.iMeshWrapper_RemoveInstance(*args)
    scfGetVersion = staticmethod(_iengine.iMeshWrapper_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iMeshWrapper
    __del__ = lambda self : None;
iMeshWrapper_swigregister = _iengine.iMeshWrapper_swigregister
iMeshWrapper_swigregister(iMeshWrapper)
iMeshWrapper_scfGetVersion = _iengine.iMeshWrapper_scfGetVersion

class iMeshFactoryWrapper(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iMeshFactoryWrapper_QueryObject(*args)
    def GetMeshObjectFactory(*args): return _iengine.iMeshFactoryWrapper_GetMeshObjectFactory(*args)
    def SetMeshObjectFactory(*args): return _iengine.iMeshFactoryWrapper_SetMeshObjectFactory(*args)
    def HardTransform(*args): return _iengine.iMeshFactoryWrapper_HardTransform(*args)
    def CreateMeshWrapper(*args): return _iengine.iMeshFactoryWrapper_CreateMeshWrapper(*args)
    def GetFlags(*args): return _iengine.iMeshFactoryWrapper_GetFlags(*args)
    def GetParentContainer(*args): return _iengine.iMeshFactoryWrapper_GetParentContainer(*args)
    def SetParentContainer(*args): return _iengine.iMeshFactoryWrapper_SetParentContainer(*args)
    def GetChildren(*args): return _iengine.iMeshFactoryWrapper_GetChildren(*args)
    def GetTransform(*args): return _iengine.iMeshFactoryWrapper_GetTransform(*args)
    def SetTransform(*args): return _iengine.iMeshFactoryWrapper_SetTransform(*args)
    def CreateStaticLOD(*args): return _iengine.iMeshFactoryWrapper_CreateStaticLOD(*args)
    def DestroyStaticLOD(*args): return _iengine.iMeshFactoryWrapper_DestroyStaticLOD(*args)
    def SetStaticLOD(*args): return _iengine.iMeshFactoryWrapper_SetStaticLOD(*args)
    def GetStaticLOD(*args): return _iengine.iMeshFactoryWrapper_GetStaticLOD(*args)
    def AddFactoryToStaticLOD(*args): return _iengine.iMeshFactoryWrapper_AddFactoryToStaticLOD(*args)
    def RemoveFactoryFromStaticLOD(*args): return _iengine.iMeshFactoryWrapper_RemoveFactoryFromStaticLOD(*args)
    def SetZBufMode(*args): return _iengine.iMeshFactoryWrapper_SetZBufMode(*args)
    def GetZBufMode(*args): return _iengine.iMeshFactoryWrapper_GetZBufMode(*args)
    def SetZBufModeRecursive(*args): return _iengine.iMeshFactoryWrapper_SetZBufModeRecursive(*args)
    def SetRenderPriority(*args): return _iengine.iMeshFactoryWrapper_SetRenderPriority(*args)
    def GetRenderPriority(*args): return _iengine.iMeshFactoryWrapper_GetRenderPriority(*args)
    def SetRenderPriorityRecursive(*args): return _iengine.iMeshFactoryWrapper_SetRenderPriorityRecursive(*args)
    def GetSVContext(*args): return _iengine.iMeshFactoryWrapper_GetSVContext(*args)
    def SetInstanceFactory(*args): return _iengine.iMeshFactoryWrapper_SetInstanceFactory(*args)
    def GetInstanceFactory(*args): return _iengine.iMeshFactoryWrapper_GetInstanceFactory(*args)
    def AddInstance(*args): return _iengine.iMeshFactoryWrapper_AddInstance(*args)
    def GetInstances(*args): return _iengine.iMeshFactoryWrapper_GetInstances(*args)
    scfGetVersion = staticmethod(_iengine.iMeshFactoryWrapper_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iMeshFactoryWrapper
    __del__ = lambda self : None;
iMeshFactoryWrapper_swigregister = _iengine.iMeshFactoryWrapper_swigregister
iMeshFactoryWrapper_swigregister(iMeshFactoryWrapper)
iMeshFactoryWrapper_scfGetVersion = _iengine.iMeshFactoryWrapper_scfGetVersion

class iMeshList(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCount(*args): return _iengine.iMeshList_GetCount(*args)
    def Get(*args): return _iengine.iMeshList_Get(*args)
    def Add(*args): return _iengine.iMeshList_Add(*args)
    def Remove(*args): return _iengine.iMeshList_Remove(*args)
    def RemoveAll(*args): return _iengine.iMeshList_RemoveAll(*args)
    def Find(*args): return _iengine.iMeshList_Find(*args)
    def FindByName(*args): return _iengine.iMeshList_FindByName(*args)
    def __delitem__(*args): return _iengine.iMeshList___delitem__(*args)
    def __len__(*args): return _iengine.iMeshList___len__(*args)
    def append(*args): return _iengine.iMeshList_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __getitem__(*args): return _iengine.iMeshList___getitem__(*args)
    def __contains__(*args): return _iengine.iMeshList___contains__(*args)
    __swig_destroy__ = _iengine.delete_iMeshList
    __del__ = lambda self : None;
iMeshList_swigregister = _iengine.iMeshList_swigregister
iMeshList_swigregister(iMeshList)

class iMeshFactoryList(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCount(*args): return _iengine.iMeshFactoryList_GetCount(*args)
    def Get(*args): return _iengine.iMeshFactoryList_Get(*args)
    def Add(*args): return _iengine.iMeshFactoryList_Add(*args)
    def Remove(*args): return _iengine.iMeshFactoryList_Remove(*args)
    def RemoveAll(*args): return _iengine.iMeshFactoryList_RemoveAll(*args)
    def Find(*args): return _iengine.iMeshFactoryList_Find(*args)
    def FindByName(*args): return _iengine.iMeshFactoryList_FindByName(*args)
    def __delitem__(*args): return _iengine.iMeshFactoryList___delitem__(*args)
    def __len__(*args): return _iengine.iMeshFactoryList___len__(*args)
    def append(*args): return _iengine.iMeshFactoryList_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __getitem__(*args): return _iengine.iMeshFactoryList___getitem__(*args)
    def __contains__(*args): return _iengine.iMeshFactoryList___contains__(*args)
    __swig_destroy__ = _iengine.delete_iMeshFactoryList
    __del__ = lambda self : None;
iMeshFactoryList_swigregister = _iengine.iMeshFactoryList_swigregister
iMeshFactoryList_swigregister(iMeshFactoryList)

class iMeshFactoryWrapperIterator(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Next(*args): return _iengine.iMeshFactoryWrapperIterator_Next(*args)
    def Reset(*args): return _iengine.iMeshFactoryWrapperIterator_Reset(*args)
    def HasNext(*args): return _iengine.iMeshFactoryWrapperIterator_HasNext(*args)
    __swig_destroy__ = _iengine.delete_iMeshFactoryWrapperIterator
    __del__ = lambda self : None;
iMeshFactoryWrapperIterator_swigregister = _iengine.iMeshFactoryWrapperIterator_swigregister
iMeshFactoryWrapperIterator_swigregister(iMeshFactoryWrapperIterator)

class iMeshWrapperIterator(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Next(*args): return _iengine.iMeshWrapperIterator_Next(*args)
    def Reset(*args): return _iengine.iMeshWrapperIterator_Reset(*args)
    def HasNext(*args): return _iengine.iMeshWrapperIterator_HasNext(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    scfGetVersion = staticmethod(_iengine.iMeshWrapperIterator_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iMeshWrapperIterator
    __del__ = lambda self : None;
iMeshWrapperIterator_swigregister = _iengine.iMeshWrapperIterator_swigregister
iMeshWrapperIterator_swigregister(iMeshWrapperIterator)
iMeshWrapperIterator_scfGetVersion = _iengine.iMeshWrapperIterator_scfGetVersion

class iMovableListener(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def MovableChanged(*args): return _iengine.iMovableListener_MovableChanged(*args)
    def MovableDestroyed(*args): return _iengine.iMovableListener_MovableDestroyed(*args)
    scfGetVersion = staticmethod(_iengine.iMovableListener_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iMovableListener
    __del__ = lambda self : None;
iMovableListener_swigregister = _iengine.iMovableListener_swigregister
iMovableListener_swigregister(iMovableListener)
iMovableListener_scfGetVersion = _iengine.iMovableListener_scfGetVersion

class iMovable(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSceneNode(*args): return _iengine.iMovable_GetSceneNode(*args)
    def SetSector(*args): return _iengine.iMovable_SetSector(*args)
    def ClearSectors(*args): return _iengine.iMovable_ClearSectors(*args)
    def GetSectors(*args): return _iengine.iMovable_GetSectors(*args)
    def InSector(*args): return _iengine.iMovable_InSector(*args)
    def SetPosition(*args): return _iengine.iMovable_SetPosition(*args)
    def GetPosition(*args): return _iengine.iMovable_GetPosition(*args)
    def GetFullPosition(*args): return _iengine.iMovable_GetFullPosition(*args)
    def SetTransform(*args): return _iengine.iMovable_SetTransform(*args)
    def GetTransform(*args): return _iengine.iMovable_GetTransform(*args)
    def GetFullTransform(*args): return _iengine.iMovable_GetFullTransform(*args)
    def MovePosition(*args): return _iengine.iMovable_MovePosition(*args)
    def Transform(*args): return _iengine.iMovable_Transform(*args)
    def AddListener(*args): return _iengine.iMovable_AddListener(*args)
    def RemoveListener(*args): return _iengine.iMovable_RemoveListener(*args)
    def UpdateMove(*args): return _iengine.iMovable_UpdateMove(*args)
    def GetUpdateNumber(*args): return _iengine.iMovable_GetUpdateNumber(*args)
    def IsTransformIdentity(*args): return _iengine.iMovable_IsTransformIdentity(*args)
    def IsFullTransformIdentity(*args): return _iengine.iMovable_IsFullTransformIdentity(*args)
    def TransformIdentity(*args): return _iengine.iMovable_TransformIdentity(*args)
    scfGetVersion = staticmethod(_iengine.iMovable_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iMovable
    __del__ = lambda self : None;
iMovable_swigregister = _iengine.iMovable_swigregister
iMovable_swigregister(iMovable)
iMovable_scfGetVersion = _iengine.iMovable_scfGetVersion

class iVisibilityObjectIterator(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _iengine.iVisibilityObjectIterator_HasNext(*args)
    def Next(*args): return _iengine.iVisibilityObjectIterator_Next(*args)
    def Reset(*args): return _iengine.iVisibilityObjectIterator_Reset(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    __swig_destroy__ = _iengine.delete_iVisibilityObjectIterator
    __del__ = lambda self : None;
iVisibilityObjectIterator_swigregister = _iengine.iVisibilityObjectIterator_swigregister
iVisibilityObjectIterator_swigregister(iVisibilityObjectIterator)

class iVisibilityCullerListener(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def ObjectVisible(*args): return _iengine.iVisibilityCullerListener_ObjectVisible(*args)
    __swig_destroy__ = _iengine.delete_iVisibilityCullerListener
    __del__ = lambda self : None;
iVisibilityCullerListener_swigregister = _iengine.iVisibilityCullerListener_swigregister
iVisibilityCullerListener_swigregister(iVisibilityCullerListener)

class iVisibilityCuller(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Setup(*args): return _iengine.iVisibilityCuller_Setup(*args)
    def RegisterVisObject(*args): return _iengine.iVisibilityCuller_RegisterVisObject(*args)
    def UnregisterVisObject(*args): return _iengine.iVisibilityCuller_UnregisterVisObject(*args)
    def PrecacheCulling(*args): return _iengine.iVisibilityCuller_PrecacheCulling(*args)
    def VisTest(*args): return _iengine.iVisibilityCuller_VisTest(*args)
    def IntersectSegmentSloppy(*args): return _iengine.iVisibilityCuller_IntersectSegmentSloppy(*args)
    def IntersectSegment(*args): return _iengine.iVisibilityCuller_IntersectSegment(*args)
    def ParseCullerParameters(*args): return _iengine.iVisibilityCuller_ParseCullerParameters(*args)
    scfGetVersion = staticmethod(_iengine.iVisibilityCuller_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iVisibilityCuller
    __del__ = lambda self : None;
iVisibilityCuller_swigregister = _iengine.iVisibilityCuller_swigregister
iVisibilityCuller_swigregister(iVisibilityCuller)
iVisibilityCuller_scfGetVersion = _iengine.iVisibilityCuller_scfGetVersion

CS_CULLER_HINT_GOODOCCLUDER = _iengine.CS_CULLER_HINT_GOODOCCLUDER
CS_CULLER_HINT_BADOCCLUDER = _iengine.CS_CULLER_HINT_BADOCCLUDER
class iVisibilityObject(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetMovable(*args): return _iengine.iVisibilityObject_GetMovable(*args)
    def GetMeshWrapper(*args): return _iengine.iVisibilityObject_GetMeshWrapper(*args)
    def GetObjectModel(*args): return _iengine.iVisibilityObject_GetObjectModel(*args)
    def GetCullerFlags(*args): return _iengine.iVisibilityObject_GetCullerFlags(*args)
    __swig_destroy__ = _iengine.delete_iVisibilityObject
    __del__ = lambda self : None;
iVisibilityObject_swigregister = _iengine.iVisibilityObject_swigregister
iVisibilityObject_swigregister(iVisibilityObject)

CS_PORTAL_CLIPDEST = _iengine.CS_PORTAL_CLIPDEST
CS_PORTAL_CLIPSTRADDLING = _iengine.CS_PORTAL_CLIPSTRADDLING
CS_PORTAL_ZFILL = _iengine.CS_PORTAL_ZFILL
CS_PORTAL_WARP = _iengine.CS_PORTAL_WARP
CS_PORTAL_MIRROR = _iengine.CS_PORTAL_MIRROR
CS_PORTAL_STATICDEST = _iengine.CS_PORTAL_STATICDEST
CS_PORTAL_FLOAT = _iengine.CS_PORTAL_FLOAT
CS_PORTAL_COLLDET = _iengine.CS_PORTAL_COLLDET
CS_PORTAL_VISCULL = _iengine.CS_PORTAL_VISCULL
class iPortalCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Traverse(*args): return _iengine.iPortalCallback_Traverse(*args)
    __swig_destroy__ = _iengine.delete_iPortalCallback
    __del__ = lambda self : None;
iPortalCallback_swigregister = _iengine.iPortalCallback_swigregister
iPortalCallback_swigregister(iPortalCallback)

class iPortal(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetName(*args): return _iengine.iPortal_SetName(*args)
    def GetName(*args): return _iengine.iPortal_GetName(*args)
    def GetSector(*args): return _iengine.iPortal_GetSector(*args)
    def GetVertices(*args): return _iengine.iPortal_GetVertices(*args)
    def GetWorldVertices(*args): return _iengine.iPortal_GetWorldVertices(*args)
    def GetVertexIndices(*args): return _iengine.iPortal_GetVertexIndices(*args)
    def GetVertexIndicesCount(*args): return _iengine.iPortal_GetVertexIndicesCount(*args)
    def GetObjectPlane(*args): return _iengine.iPortal_GetObjectPlane(*args)
    def GetWorldPlane(*args): return _iengine.iPortal_GetWorldPlane(*args)
    def GetObjectSphere(*args): return _iengine.iPortal_GetObjectSphere(*args)
    def GetWorldSphere(*args): return _iengine.iPortal_GetWorldSphere(*args)
    def ComputeCameraPlane(*args): return _iengine.iPortal_ComputeCameraPlane(*args)
    def PointOnPolygon(*args): return _iengine.iPortal_PointOnPolygon(*args)
    def SetSector(*args): return _iengine.iPortal_SetSector(*args)
    def GetFlags(*args): return _iengine.iPortal_GetFlags(*args)
    def SetMaximumSectorVisit(*args): return _iengine.iPortal_SetMaximumSectorVisit(*args)
    def GetMaximumSectorVisit(*args): return _iengine.iPortal_GetMaximumSectorVisit(*args)
    def SetPortalCallback(*args): return _iengine.iPortal_SetPortalCallback(*args)
    def RemovePortalCallback(*args): return _iengine.iPortal_RemovePortalCallback(*args)
    def GetPortalCallbackCount(*args): return _iengine.iPortal_GetPortalCallbackCount(*args)
    def GetPortalCallback(*args): return _iengine.iPortal_GetPortalCallback(*args)
    def SetMissingSectorCallback(*args): return _iengine.iPortal_SetMissingSectorCallback(*args)
    def RemoveMissingSectorCallback(*args): return _iengine.iPortal_RemoveMissingSectorCallback(*args)
    def GetMissingSectorCallbackCount(*args): return _iengine.iPortal_GetMissingSectorCallbackCount(*args)
    def GetMissingSectorCallback(*args): return _iengine.iPortal_GetMissingSectorCallback(*args)
    def GetTextureFilter(*args): return _iengine.iPortal_GetTextureFilter(*args)
    def SetFilter(*args): return _iengine.iPortal_SetFilter(*args)
    def GetColorFilter(*args): return _iengine.iPortal_GetColorFilter(*args)
    def SetWarp(*args): return _iengine.iPortal_SetWarp(*args)
    def SetMirror(*args): return _iengine.iPortal_SetMirror(*args)
    def GetWarp(*args): return _iengine.iPortal_GetWarp(*args)
    def HardTransform(*args): return _iengine.iPortal_HardTransform(*args)
    def ObjectToWorld(*args): return _iengine.iPortal_ObjectToWorld(*args)
    def Warp(*args): return _iengine.iPortal_Warp(*args)
    def WarpSpace(*args): return _iengine.iPortal_WarpSpace(*args)
    def CompleteSector(*args): return _iengine.iPortal_CompleteSector(*args)
    def HitBeamPortals(*args): return _iengine.iPortal_HitBeamPortals(*args)
    def GetVerticesCount(*args): return _iengine.iPortal_GetVerticesCount(*args)
    def GetMaterial(*args): return _iengine.iPortal_GetMaterial(*args)
    def SetMaterial(*args): return _iengine.iPortal_SetMaterial(*args)
    scfGetVersion = staticmethod(_iengine.iPortal_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iPortal
    __del__ = lambda self : None;
iPortal_swigregister = _iengine.iPortal_swigregister
iPortal_swigregister(iPortal)
iPortal_scfGetVersion = _iengine.iPortal_scfGetVersion

class iPortalContainer(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetPortalCount(*args): return _iengine.iPortalContainer_GetPortalCount(*args)
    def GetPortal(*args): return _iengine.iPortalContainer_GetPortal(*args)
    def CreatePortal(*args): return _iengine.iPortalContainer_CreatePortal(*args)
    def RemovePortal(*args): return _iengine.iPortalContainer_RemovePortal(*args)
    def Draw(*args): return _iengine.iPortalContainer_Draw(*args)
    def ComputeScreenPolygons(*args): return _iengine.iPortalContainer_ComputeScreenPolygons(*args)
    def GetTotalVertexCount(*args): return _iengine.iPortalContainer_GetTotalVertexCount(*args)
    scfGetVersion = staticmethod(_iengine.iPortalContainer_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iPortalContainer
    __del__ = lambda self : None;
iPortalContainer_swigregister = _iengine.iPortalContainer_swigregister
iPortalContainer_swigregister(iPortalContainer)
iPortalContainer_scfGetVersion = _iengine.iPortalContainer_scfGetVersion

class iRenderStepContainer(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AddStep(*args): return _iengine.iRenderStepContainer_AddStep(*args)
    def DeleteStep(*args): return _iengine.iRenderStepContainer_DeleteStep(*args)
    def GetStep(*args): return _iengine.iRenderStepContainer_GetStep(*args)
    def Find(*args): return _iengine.iRenderStepContainer_Find(*args)
    def GetStepCount(*args): return _iengine.iRenderStepContainer_GetStepCount(*args)
    __swig_destroy__ = _iengine.delete_iRenderStepContainer
    __del__ = lambda self : None;
iRenderStepContainer_swigregister = _iengine.iRenderStepContainer_swigregister
iRenderStepContainer_swigregister(iRenderStepContainer)

CS_DEFAULT_RENDERLOOP_NAME = _iengine.CS_DEFAULT_RENDERLOOP_NAME
class iRenderLoop(iRenderStepContainer):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Draw(*args): return _iengine.iRenderLoop_Draw(*args)
    scfGetVersion = staticmethod(_iengine.iRenderLoop_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iRenderLoop
    __del__ = lambda self : None;
iRenderLoop_swigregister = _iengine.iRenderLoop_swigregister
iRenderLoop_swigregister(iRenderLoop)
iRenderLoop_scfGetVersion = _iengine.iRenderLoop_scfGetVersion

class iRenderLoopManager(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Create(*args): return _iengine.iRenderLoopManager_Create(*args)
    def Register(*args): return _iengine.iRenderLoopManager_Register(*args)
    def Retrieve(*args): return _iengine.iRenderLoopManager_Retrieve(*args)
    def GetName(*args): return _iengine.iRenderLoopManager_GetName(*args)
    def Unregister(*args): return _iengine.iRenderLoopManager_Unregister(*args)
    def Load(*args): return _iengine.iRenderLoopManager_Load(*args)
    def UnregisterAll(*args): return _iengine.iRenderLoopManager_UnregisterAll(*args)
    scfGetVersion = staticmethod(_iengine.iRenderLoopManager_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iRenderLoopManager
    __del__ = lambda self : None;
iRenderLoopManager_swigregister = _iengine.iRenderLoopManager_swigregister
iRenderLoopManager_swigregister(iRenderLoopManager)
iRenderLoopManager_scfGetVersion = _iengine.iRenderLoopManager_scfGetVersion

class iRenderManager(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def RenderView(*args): return _iengine.iRenderManager_RenderView(*args)
    def PrecacheView(*args): return _iengine.iRenderManager_PrecacheView(*args)
    scfGetVersion = staticmethod(_iengine.iRenderManager_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iRenderManager
    __del__ = lambda self : None;
iRenderManager_swigregister = _iengine.iRenderManager_swigregister
iRenderManager_swigregister(iRenderManager)
iRenderManager_scfGetVersion = _iengine.iRenderManager_scfGetVersion

class iRenderManagerTargets(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    updateOnce = _iengine.iRenderManagerTargets_updateOnce
    assumeAlwaysUsed = _iengine.iRenderManagerTargets_assumeAlwaysUsed
    clearScreen = _iengine.iRenderManagerTargets_clearScreen
    def RegisterRenderTarget(*args): return _iengine.iRenderManagerTargets_RegisterRenderTarget(*args)
    def UnregisterRenderTarget(*args): return _iengine.iRenderManagerTargets_UnregisterRenderTarget(*args)
    def MarkAsUsed(*args): return _iengine.iRenderManagerTargets_MarkAsUsed(*args)
    scfGetVersion = staticmethod(_iengine.iRenderManagerTargets_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iRenderManagerTargets
    __del__ = lambda self : None;
iRenderManagerTargets_swigregister = _iengine.iRenderManagerTargets_swigregister
iRenderManagerTargets_swigregister(iRenderManagerTargets)
iRenderManagerTargets_scfGetVersion = _iengine.iRenderManagerTargets_scfGetVersion

class iRenderManagerPostEffects(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def ClearLayers(*args): return _iengine.iRenderManagerPostEffects_ClearLayers(*args)
    def AddLayersFromDocument(*args): return _iengine.iRenderManagerPostEffects_AddLayersFromDocument(*args)
    def AddLayersFromFile(*args): return _iengine.iRenderManagerPostEffects_AddLayersFromFile(*args)
    scfGetVersion = staticmethod(_iengine.iRenderManagerPostEffects_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iRenderManagerPostEffects
    __del__ = lambda self : None;
iRenderManagerPostEffects_swigregister = _iengine.iRenderManagerPostEffects_swigregister
iRenderManagerPostEffects_swigregister(iRenderManagerPostEffects)
iRenderManagerPostEffects_scfGetVersion = _iengine.iRenderManagerPostEffects_scfGetVersion

class iSwigCollectionArray(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSize(*args): return _iengine.iSwigCollectionArray_GetSize(*args)
    def Get(*args): return _iengine.iSwigCollectionArray_Get(*args)
    def Top(*args): return _iengine.iSwigCollectionArray_Top(*args)
    def Find(*args): return _iengine.iSwigCollectionArray_Find(*args)
    def GetIndex(*args): return _iengine.iSwigCollectionArray_GetIndex(*args)
    def IsEmpty(*args): return _iengine.iSwigCollectionArray_IsEmpty(*args)
    def GetAll(*args): return _iengine.iSwigCollectionArray_GetAll(*args)
    __swig_destroy__ = _iengine.delete_iSwigCollectionArray
    __del__ = lambda self : None;
iSwigCollectionArray_swigregister = _iengine.iSwigCollectionArray_swigregister
iSwigCollectionArray_swigregister(iSwigCollectionArray)

class iCollection(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def QueryObject(*args): return _iengine.iCollection_QueryObject(*args)
    def Add(*args): return _iengine.iCollection_Add(*args)
    def Remove(*args): return _iengine.iCollection_Remove(*args)
    def ReleaseAllObjects(*args): return _iengine.iCollection_ReleaseAllObjects(*args)
    def IsParentOf(*args): return _iengine.iCollection_IsParentOf(*args)
    def FindSector(*args): return _iengine.iCollection_FindSector(*args)
    def FindMeshObject(*args): return _iengine.iCollection_FindMeshObject(*args)
    def FindMeshFactory(*args): return _iengine.iCollection_FindMeshFactory(*args)
    def FindTexture(*args): return _iengine.iCollection_FindTexture(*args)
    def FindMaterial(*args): return _iengine.iCollection_FindMaterial(*args)
    def FindShader(*args): return _iengine.iCollection_FindShader(*args)
    def FindCameraPosition(*args): return _iengine.iCollection_FindCameraPosition(*args)
    scfGetVersion = staticmethod(_iengine.iCollection_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iCollection
    __del__ = lambda self : None;
iCollection_swigregister = _iengine.iCollection_swigregister
iCollection_swigregister(iCollection)
iCollection_scfGetVersion = _iengine.iCollection_scfGetVersion

class iCollectionArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    scfGetVersion = staticmethod(_iengine.iCollectionArray_scfGetVersion)
    __swig_destroy__ = _iengine.delete_iCollectionArray
    __del__ = lambda self : None;
iCollectionArray_swigregister = _iengine.iCollectionArray_swigregister
iCollectionArray_swigregister(iCollectionArray)
iCollectionArray_scfGetVersion = _iengine.iCollectionArray_scfGetVersion

def CS_REQUEST_ENGINE ():
   return core.CS_REQUEST_PLUGIN("crystalspace.engine.3d", iEngine)



