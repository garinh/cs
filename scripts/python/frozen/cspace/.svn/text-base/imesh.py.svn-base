# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.

import _imesh
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import core
import ivaria
import csgeom
import ivideo
import csgfx
_SetSCFPointer = _imesh._SetSCFPointer
_GetSCFPointer = _imesh._GetSCFPointer
if not "core" in dir():
    core = __import__("cspace").__dict__["core"]
core.AddSCFLink(_SetSCFPointer)
CSMutableArrayHelper = core.CSMutableArrayHelper

class iObjectModelListener(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def ObjectModelChanged(*args): return _imesh.iObjectModelListener_ObjectModelChanged(*args)
    scfGetVersion = staticmethod(_imesh.iObjectModelListener_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iObjectModelListener
    __del__ = lambda self : None;
iObjectModelListener_swigregister = _imesh.iObjectModelListener_swigregister
iObjectModelListener_swigregister(iObjectModelListener)
iObjectModelListener_scfGetVersion = _imesh.iObjectModelListener_scfGetVersion

class iTriangleMeshIterator(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _imesh.iTriangleMeshIterator_HasNext(*args)
    def Next(*args): return _imesh.iTriangleMeshIterator_Next(*args)
    scfGetVersion = staticmethod(_imesh.iTriangleMeshIterator_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTriangleMeshIterator
    __del__ = lambda self : None;
iTriangleMeshIterator_swigregister = _imesh.iTriangleMeshIterator_swigregister
iTriangleMeshIterator_swigregister(iTriangleMeshIterator)
iTriangleMeshIterator_scfGetVersion = _imesh.iTriangleMeshIterator_scfGetVersion

class iObjectModel(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetShapeNumber(*args): return _imesh.iObjectModel_GetShapeNumber(*args)
    def GetTriangleData(*args): return _imesh.iObjectModel_GetTriangleData(*args)
    def GetTriangleDataIterator(*args): return _imesh.iObjectModel_GetTriangleDataIterator(*args)
    def SetTriangleData(*args): return _imesh.iObjectModel_SetTriangleData(*args)
    def IsTriangleDataSet(*args): return _imesh.iObjectModel_IsTriangleDataSet(*args)
    def ResetTriangleData(*args): return _imesh.iObjectModel_ResetTriangleData(*args)
    def GetTerraFormerColldet(*args): return _imesh.iObjectModel_GetTerraFormerColldet(*args)
    def GetTerrainColldet(*args): return _imesh.iObjectModel_GetTerrainColldet(*args)
    def GetObjectBoundingBox(*args): return _imesh.iObjectModel_GetObjectBoundingBox(*args)
    def SetObjectBoundingBox(*args): return _imesh.iObjectModel_SetObjectBoundingBox(*args)
    def GetRadius(*args): return _imesh.iObjectModel_GetRadius(*args)
    def AddListener(*args): return _imesh.iObjectModel_AddListener(*args)
    def RemoveListener(*args): return _imesh.iObjectModel_RemoveListener(*args)
    scfGetVersion = staticmethod(_imesh.iObjectModel_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iObjectModel
    __del__ = lambda self : None;
iObjectModel_swigregister = _imesh.iObjectModel_swigregister
iObjectModel_swigregister(iObjectModel)
iObjectModel_scfGetVersion = _imesh.iObjectModel_scfGetVersion

class iGeneralMeshSubMesh(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetIndices(*args): return _imesh.iGeneralMeshSubMesh_GetIndices(*args)
    def GetMaterial(*args): return _imesh.iGeneralMeshSubMesh_GetMaterial(*args)
    def GetName(*args): return _imesh.iGeneralMeshSubMesh_GetName(*args)
    def GetMixmode(*args): return _imesh.iGeneralMeshSubMesh_GetMixmode(*args)
    def SetMaterial(*args): return _imesh.iGeneralMeshSubMesh_SetMaterial(*args)
    def GetZMode(*args): return _imesh.iGeneralMeshSubMesh_GetZMode(*args)
    def SetZMode(*args): return _imesh.iGeneralMeshSubMesh_SetZMode(*args)
    def GetRenderPriority(*args): return _imesh.iGeneralMeshSubMesh_GetRenderPriority(*args)
    def SetRenderPriority(*args): return _imesh.iGeneralMeshSubMesh_SetRenderPriority(*args)
    def SetMixmode(*args): return _imesh.iGeneralMeshSubMesh_SetMixmode(*args)
    def SetBack2Front(*args): return _imesh.iGeneralMeshSubMesh_SetBack2Front(*args)
    def GetBack2Front(*args): return _imesh.iGeneralMeshSubMesh_GetBack2Front(*args)
    __swig_destroy__ = _imesh.delete_iGeneralMeshSubMesh
    __del__ = lambda self : None;
iGeneralMeshSubMesh_swigregister = _imesh.iGeneralMeshSubMesh_swigregister
iGeneralMeshSubMesh_swigregister(iGeneralMeshSubMesh)

class iGeneralMeshCommonState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetLighting(*args): return _imesh.iGeneralMeshCommonState_SetLighting(*args)
    def IsLighting(*args): return _imesh.iGeneralMeshCommonState_IsLighting(*args)
    def SetManualColors(*args): return _imesh.iGeneralMeshCommonState_SetManualColors(*args)
    def IsManualColors(*args): return _imesh.iGeneralMeshCommonState_IsManualColors(*args)
    def SetShadowCasting(*args): return _imesh.iGeneralMeshCommonState_SetShadowCasting(*args)
    def IsShadowCasting(*args): return _imesh.iGeneralMeshCommonState_IsShadowCasting(*args)
    def SetShadowReceiving(*args): return _imesh.iGeneralMeshCommonState_SetShadowReceiving(*args)
    def IsShadowReceiving(*args): return _imesh.iGeneralMeshCommonState_IsShadowReceiving(*args)
    def GetRenderBufferCount(*args): return _imesh.iGeneralMeshCommonState_GetRenderBufferCount(*args)
    def GetRenderBufferName(*args): return _imesh.iGeneralMeshCommonState_GetRenderBufferName(*args)
    def AddRenderBuffer(*args): return _imesh.iGeneralMeshCommonState_AddRenderBuffer(*args)
    def RemoveRenderBuffer(*args): return _imesh.iGeneralMeshCommonState_RemoveRenderBuffer(*args)
    def GetRenderBuffer(*args): return _imesh.iGeneralMeshCommonState_GetRenderBuffer(*args)
    __swig_destroy__ = _imesh.delete_iGeneralMeshCommonState
    __del__ = lambda self : None;
iGeneralMeshCommonState_swigregister = _imesh.iGeneralMeshCommonState_swigregister
iGeneralMeshCommonState_swigregister(iGeneralMeshCommonState)

class iGeneralMeshState(iGeneralMeshCommonState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetAnimationControl(*args): return _imesh.iGeneralMeshState_SetAnimationControl(*args)
    def GetAnimationControl(*args): return _imesh.iGeneralMeshState_GetAnimationControl(*args)
    def FindSubMesh(*args): return _imesh.iGeneralMeshState_FindSubMesh(*args)
    scfGetVersion = staticmethod(_imesh.iGeneralMeshState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iGeneralMeshState
    __del__ = lambda self : None;
iGeneralMeshState_swigregister = _imesh.iGeneralMeshState_swigregister
iGeneralMeshState_swigregister(iGeneralMeshState)
iGeneralMeshState_scfGetVersion = _imesh.iGeneralMeshState_scfGetVersion

class iGeneralFactoryState(iGeneralMeshCommonState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetColor(*args): return _imesh.iGeneralFactoryState_SetColor(*args)
    def GetColor(*args): return _imesh.iGeneralFactoryState_GetColor(*args)
    def AddVertex(*args): return _imesh.iGeneralFactoryState_AddVertex(*args)
    def SetVertexCount(*args): return _imesh.iGeneralFactoryState_SetVertexCount(*args)
    def GetVertexCount(*args): return _imesh.iGeneralFactoryState_GetVertexCount(*args)
    def GetVertices(self):
      return CSMutableArrayHelper(self.GetVertexByIndex, self.GetVertexCount)


    def GetTexels(self):
      return CSMutableArrayHelper(self.GetTexelByIndex, self.GetVertexCount)


    def GetNormals(self):
      # iGeneralFactoryState::GetVertices()
      return CSMutableArrayHelper(self.GetNormalByIndex, self.GetVertexCount)


    def GetColors(self):
      return CSMutableArrayHelper(self.GetColorByIndex, self.GetVertexCount)


    def AddTriangle(*args): return _imesh.iGeneralFactoryState_AddTriangle(*args)
    def SetTriangleCount(*args): return _imesh.iGeneralFactoryState_SetTriangleCount(*args)
    def GetTriangleCount(*args): return _imesh.iGeneralFactoryState_GetTriangleCount(*args)
    def GetTriangles(self):
      return CSMutableArrayHelper(self.GetTriangleByIndex, self.GetTriangleCount)


    def Invalidate(*args): return _imesh.iGeneralFactoryState_Invalidate(*args)
    def CalculateNormals(*args): return _imesh.iGeneralFactoryState_CalculateNormals(*args)
    def Compress(*args): return _imesh.iGeneralFactoryState_Compress(*args)
    def GenerateBox(*args): return _imesh.iGeneralFactoryState_GenerateBox(*args)
    def GenerateCapsule(*args): return _imesh.iGeneralFactoryState_GenerateCapsule(*args)
    def GenerateSphere(*args): return _imesh.iGeneralFactoryState_GenerateSphere(*args)
    def SetBack2Front(*args): return _imesh.iGeneralFactoryState_SetBack2Front(*args)
    def IsAutoNormals(*args): return _imesh.iGeneralFactoryState_IsAutoNormals(*args)
    def IsBack2Front(*args): return _imesh.iGeneralFactoryState_IsBack2Front(*args)
    def SetAnimationControlFactory(*args): return _imesh.iGeneralFactoryState_SetAnimationControlFactory(*args)
    def GetAnimationControlFactory(*args): return _imesh.iGeneralFactoryState_GetAnimationControlFactory(*args)
    def ClearSubMeshes(*args): return _imesh.iGeneralFactoryState_ClearSubMeshes(*args)
    def AddSubMesh(*args): return _imesh.iGeneralFactoryState_AddSubMesh(*args)
    def FindSubMesh(*args): return _imesh.iGeneralFactoryState_FindSubMesh(*args)
    def DeleteSubMesh(*args): return _imesh.iGeneralFactoryState_DeleteSubMesh(*args)
    def GetSubMeshCount(*args): return _imesh.iGeneralFactoryState_GetSubMeshCount(*args)
    def GetSubMesh(*args): return _imesh.iGeneralFactoryState_GetSubMesh(*args)
    def DisableAutoNormals(*args): return _imesh.iGeneralFactoryState_DisableAutoNormals(*args)
    def GenerateCylinder(*args): return _imesh.iGeneralFactoryState_GenerateCylinder(*args)
    def GetVertexByIndex(*args): return _imesh.iGeneralFactoryState_GetVertexByIndex(*args)
    def GetTexelByIndex(*args): return _imesh.iGeneralFactoryState_GetTexelByIndex(*args)
    def GetNormalByIndex(*args): return _imesh.iGeneralFactoryState_GetNormalByIndex(*args)
    def GetTriangleByIndex(*args): return _imesh.iGeneralFactoryState_GetTriangleByIndex(*args)
    def GetColorByIndex(*args): return _imesh.iGeneralFactoryState_GetColorByIndex(*args)
    def GetVerticesAsBuffer(*args): return _imesh.iGeneralFactoryState_GetVerticesAsBuffer(*args)
    def GetNormalsAsBuffer(*args): return _imesh.iGeneralFactoryState_GetNormalsAsBuffer(*args)
    def GetColorsAsBuffer(*args): return _imesh.iGeneralFactoryState_GetColorsAsBuffer(*args)
    def GetTrianglesAsBuffer(*args): return _imesh.iGeneralFactoryState_GetTrianglesAsBuffer(*args)
    scfGetVersion = staticmethod(_imesh.iGeneralFactoryState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iGeneralFactoryState
    __del__ = lambda self : None;
iGeneralFactoryState_swigregister = _imesh.iGeneralFactoryState_swigregister
iGeneralFactoryState_swigregister(iGeneralFactoryState)
iGeneralFactoryState_scfGetVersion = _imesh.iGeneralFactoryState_scfGetVersion

class iGenMeshAnimationControl(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AnimatesVertices(*args): return _imesh.iGenMeshAnimationControl_AnimatesVertices(*args)
    def AnimatesTexels(*args): return _imesh.iGenMeshAnimationControl_AnimatesTexels(*args)
    def AnimatesNormals(*args): return _imesh.iGenMeshAnimationControl_AnimatesNormals(*args)
    def AnimatesColors(*args): return _imesh.iGenMeshAnimationControl_AnimatesColors(*args)
    def Update(*args): return _imesh.iGenMeshAnimationControl_Update(*args)
    def UpdateVertices(*args): return _imesh.iGenMeshAnimationControl_UpdateVertices(*args)
    def UpdateTexels(*args): return _imesh.iGenMeshAnimationControl_UpdateTexels(*args)
    def UpdateNormals(*args): return _imesh.iGenMeshAnimationControl_UpdateNormals(*args)
    def UpdateColors(*args): return _imesh.iGenMeshAnimationControl_UpdateColors(*args)
    __swig_destroy__ = _imesh.delete_iGenMeshAnimationControl
    __del__ = lambda self : None;
iGenMeshAnimationControl_swigregister = _imesh.iGenMeshAnimationControl_swigregister
iGenMeshAnimationControl_swigregister(iGenMeshAnimationControl)

class iGenMeshAnimationControlFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateAnimationControl(*args): return _imesh.iGenMeshAnimationControlFactory_CreateAnimationControl(*args)
    def Load(*args): return _imesh.iGenMeshAnimationControlFactory_Load(*args)
    def Save(*args): return _imesh.iGenMeshAnimationControlFactory_Save(*args)
    __swig_destroy__ = _imesh.delete_iGenMeshAnimationControlFactory
    __del__ = lambda self : None;
iGenMeshAnimationControlFactory_swigregister = _imesh.iGenMeshAnimationControlFactory_swigregister
iGenMeshAnimationControlFactory_swigregister(iGenMeshAnimationControlFactory)

class iGenMeshAnimationControlType(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateAnimationControlFactory(*args): return _imesh.iGenMeshAnimationControlType_CreateAnimationControlFactory(*args)
    __swig_destroy__ = _imesh.delete_iGenMeshAnimationControlType
    __del__ = lambda self : None;
iGenMeshAnimationControlType_swigregister = _imesh.iGenMeshAnimationControlType_swigregister
iGenMeshAnimationControlType_swigregister(iGenMeshAnimationControlType)

CS_BTT_NONE = _imesh.CS_BTT_NONE
CS_BTT_SCRIPT = _imesh.CS_BTT_SCRIPT
CS_BTT_RIGID_BODY = _imesh.CS_BTT_RIGID_BODY
CS_BGT_NONE = _imesh.CS_BGT_NONE
CS_BGT_BOX = _imesh.CS_BGT_BOX
CS_BGT_SPHERE = _imesh.CS_BGT_SPHERE
CS_BGT_CYLINDER = _imesh.CS_BGT_CYLINDER
class iSkeletonBone(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonBone_GetName(*args)
    def SetName(*args): return _imesh.iSkeletonBone_SetName(*args)
    def GetTransform(*args): return _imesh.iSkeletonBone_GetTransform(*args)
    def SetTransform(*args): return _imesh.iSkeletonBone_SetTransform(*args)
    def GetFullTransform(*args): return _imesh.iSkeletonBone_GetFullTransform(*args)
    def SetParent(*args): return _imesh.iSkeletonBone_SetParent(*args)
    def GetParent(*args): return _imesh.iSkeletonBone_GetParent(*args)
    def GetChildrenCount(*args): return _imesh.iSkeletonBone_GetChildrenCount(*args)
    def GetChild(*args): return _imesh.iSkeletonBone_GetChild(*args)
    def FindChild(*args): return _imesh.iSkeletonBone_FindChild(*args)
    def FindChildIndex(*args): return _imesh.iSkeletonBone_FindChildIndex(*args)
    def SetSkinBox(*args): return _imesh.iSkeletonBone_SetSkinBox(*args)
    def GetSkinBox(*args): return _imesh.iSkeletonBone_GetSkinBox(*args)
    def SetUpdateCallback(*args): return _imesh.iSkeletonBone_SetUpdateCallback(*args)
    def GetUpdateCallback(*args): return _imesh.iSkeletonBone_GetUpdateCallback(*args)
    def GetFactory(*args): return _imesh.iSkeletonBone_GetFactory(*args)
    def SetTransformMode(*args): return _imesh.iSkeletonBone_SetTransformMode(*args)
    def GetTransformMode(*args): return _imesh.iSkeletonBone_GetTransformMode(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonBone_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonBone
    __del__ = lambda self : None;
iSkeletonBone_swigregister = _imesh.iSkeletonBone_swigregister
iSkeletonBone_swigregister(iSkeletonBone)
iSkeletonBone_scfGetVersion = _imesh.iSkeletonBone_scfGetVersion

class iSkeletonBoneUpdateCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def UpdateTransform(*args): return _imesh.iSkeletonBoneUpdateCallback_UpdateTransform(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonBoneUpdateCallback
    __del__ = lambda self : None;
iSkeletonBoneUpdateCallback_swigregister = _imesh.iSkeletonBoneUpdateCallback_swigregister
iSkeletonBoneUpdateCallback_swigregister(iSkeletonBoneUpdateCallback)

class iSkeletonAnimationKeyFrame(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonAnimationKeyFrame_GetName(*args)
    def SetName(*args): return _imesh.iSkeletonAnimationKeyFrame_SetName(*args)
    def GetDuration(*args): return _imesh.iSkeletonAnimationKeyFrame_GetDuration(*args)
    def SetDuration(*args): return _imesh.iSkeletonAnimationKeyFrame_SetDuration(*args)
    def GetTransformsCount(*args): return _imesh.iSkeletonAnimationKeyFrame_GetTransformsCount(*args)
    def AddTransform(*args): return _imesh.iSkeletonAnimationKeyFrame_AddTransform(*args)
    def GetTransform(*args): return _imesh.iSkeletonAnimationKeyFrame_GetTransform(*args)
    def SetTransform(*args): return _imesh.iSkeletonAnimationKeyFrame_SetTransform(*args)
    def GetKeyFrameData(*args): return _imesh.iSkeletonAnimationKeyFrame_GetKeyFrameData(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimationKeyFrame
    __del__ = lambda self : None;
iSkeletonAnimationKeyFrame_swigregister = _imesh.iSkeletonAnimationKeyFrame_swigregister
iSkeletonAnimationKeyFrame_swigregister(iSkeletonAnimationKeyFrame)

class iSkeletonAnimation(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonAnimation_GetName(*args)
    def SetName(*args): return _imesh.iSkeletonAnimation_SetName(*args)
    def GetTime(*args): return _imesh.iSkeletonAnimation_GetTime(*args)
    def SetTime(*args): return _imesh.iSkeletonAnimation_SetTime(*args)
    def GetSpeed(*args): return _imesh.iSkeletonAnimation_GetSpeed(*args)
    def SetSpeed(*args): return _imesh.iSkeletonAnimation_SetSpeed(*args)
    def SetFactor(*args): return _imesh.iSkeletonAnimation_SetFactor(*args)
    def GetFactor(*args): return _imesh.iSkeletonAnimation_GetFactor(*args)
    def SetLoop(*args): return _imesh.iSkeletonAnimation_SetLoop(*args)
    def GetLoop(*args): return _imesh.iSkeletonAnimation_GetLoop(*args)
    def CreateFrame(*args): return _imesh.iSkeletonAnimation_CreateFrame(*args)
    def GetFramesCount(*args): return _imesh.iSkeletonAnimation_GetFramesCount(*args)
    def GetFrame(*args): return _imesh.iSkeletonAnimation_GetFrame(*args)
    def FindFrameIndex(*args): return _imesh.iSkeletonAnimation_FindFrameIndex(*args)
    def RemoveFrame(*args): return _imesh.iSkeletonAnimation_RemoveFrame(*args)
    def RemoveAllFrames(*args): return _imesh.iSkeletonAnimation_RemoveAllFrames(*args)
    def RecalcSpline(*args): return _imesh.iSkeletonAnimation_RecalcSpline(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimation
    __del__ = lambda self : None;
iSkeletonAnimation_swigregister = _imesh.iSkeletonAnimation_swigregister
iSkeletonAnimation_swigregister(iSkeletonAnimation)

class iSkeletonAnimationCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Execute(*args): return _imesh.iSkeletonAnimationCallback_Execute(*args)
    def OnFinish(*args): return _imesh.iSkeletonAnimationCallback_OnFinish(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimationCallback
    __del__ = lambda self : None;
iSkeletonAnimationCallback_swigregister = _imesh.iSkeletonAnimationCallback_swigregister
iSkeletonAnimationCallback_swigregister(iSkeletonAnimationCallback)

class iSkeletonUpdateCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Execute(*args): return _imesh.iSkeletonUpdateCallback_Execute(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonUpdateCallback
    __del__ = lambda self : None;
iSkeletonUpdateCallback_swigregister = _imesh.iSkeletonUpdateCallback_swigregister
iSkeletonUpdateCallback_swigregister(iSkeletonUpdateCallback)

class iSkeletonAnimationInstance(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSpeed(*args): return _imesh.iSkeletonAnimationInstance_GetSpeed(*args)
    def SetSpeed(*args): return _imesh.iSkeletonAnimationInstance_SetSpeed(*args)
    def SetFactor(*args): return _imesh.iSkeletonAnimationInstance_SetFactor(*args)
    def GetFactor(*args): return _imesh.iSkeletonAnimationInstance_GetFactor(*args)
    def GetDuration(*args): return _imesh.iSkeletonAnimationInstance_GetDuration(*args)
    def SetDuration(*args): return _imesh.iSkeletonAnimationInstance_SetDuration(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimationInstance
    __del__ = lambda self : None;
iSkeletonAnimationInstance_swigregister = _imesh.iSkeletonAnimationInstance_swigregister
iSkeletonAnimationInstance_swigregister(iSkeletonAnimationInstance)

class iSkeleton(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeleton_GetName(*args)
    def SetName(*args): return _imesh.iSkeleton_SetName(*args)
    def GetBonesCount(*args): return _imesh.iSkeleton_GetBonesCount(*args)
    def GetBone(*args): return _imesh.iSkeleton_GetBone(*args)
    def FindBone(*args): return _imesh.iSkeleton_FindBone(*args)
    def FindBoneIndex(*args): return _imesh.iSkeleton_FindBoneIndex(*args)
    def Execute(*args): return _imesh.iSkeleton_Execute(*args)
    def Append(*args): return _imesh.iSkeleton_Append(*args)
    def Play(*args): return _imesh.iSkeleton_Play(*args)
    def ClearPendingAnimations(*args): return _imesh.iSkeleton_ClearPendingAnimations(*args)
    def GetAnimationsCount(*args): return _imesh.iSkeleton_GetAnimationsCount(*args)
    def GetAnimation(*args): return _imesh.iSkeleton_GetAnimation(*args)
    def FindAnimation(*args): return _imesh.iSkeleton_FindAnimation(*args)
    def FindSocket(*args): return _imesh.iSkeleton_FindSocket(*args)
    def StopAll(*args): return _imesh.iSkeleton_StopAll(*args)
    def Stop(*args): return _imesh.iSkeleton_Stop(*args)
    def GetFactory(*args): return _imesh.iSkeleton_GetFactory(*args)
    def SetAnimationCallback(*args): return _imesh.iSkeleton_SetAnimationCallback(*args)
    def AddUpdateCallback(*args): return _imesh.iSkeleton_AddUpdateCallback(*args)
    def GetUpdateCallbacksCount(*args): return _imesh.iSkeleton_GetUpdateCallbacksCount(*args)
    def GetUpdateCallback(*args): return _imesh.iSkeleton_GetUpdateCallback(*args)
    def RemoveUpdateCallback(*args): return _imesh.iSkeleton_RemoveUpdateCallback(*args)
    def UpdateAnimation(*args): return _imesh.iSkeleton_UpdateAnimation(*args)
    def UpdateBones(*args): return _imesh.iSkeleton_UpdateBones(*args)
    scfGetVersion = staticmethod(_imesh.iSkeleton_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeleton
    __del__ = lambda self : None;
iSkeleton_swigregister = _imesh.iSkeleton_swigregister
iSkeleton_swigregister(iSkeleton)
iSkeleton_scfGetVersion = _imesh.iSkeleton_scfGetVersion

class iSkeletonSocket(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonSocket_GetName(*args)
    def SetName(*args): return _imesh.iSkeletonSocket_SetName(*args)
    def GetTransform(*args): return _imesh.iSkeletonSocket_GetTransform(*args)
    def SetTransform(*args): return _imesh.iSkeletonSocket_SetTransform(*args)
    def GetFullTransform(*args): return _imesh.iSkeletonSocket_GetFullTransform(*args)
    def SetBone(*args): return _imesh.iSkeletonSocket_SetBone(*args)
    def GetBone(*args): return _imesh.iSkeletonSocket_GetBone(*args)
    def SetSceneNode(*args): return _imesh.iSkeletonSocket_SetSceneNode(*args)
    def GetSceneNode(*args): return _imesh.iSkeletonSocket_GetSceneNode(*args)
    def GetFactory(*args): return _imesh.iSkeletonSocket_GetFactory(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonSocket_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonSocket
    __del__ = lambda self : None;
iSkeletonSocket_swigregister = _imesh.iSkeletonSocket_swigregister
iSkeletonSocket_swigregister(iSkeletonSocket)
iSkeletonSocket_scfGetVersion = _imesh.iSkeletonSocket_scfGetVersion

class iSkeletonBoneRagdollInfo(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetEnabled(*args): return _imesh.iSkeletonBoneRagdollInfo_SetEnabled(*args)
    def GetEnabled(*args): return _imesh.iSkeletonBoneRagdollInfo_GetEnabled(*args)
    def SetAttachToParent(*args): return _imesh.iSkeletonBoneRagdollInfo_SetAttachToParent(*args)
    def GetAttachToParent(*args): return _imesh.iSkeletonBoneRagdollInfo_GetAttachToParent(*args)
    def SetGeomName(*args): return _imesh.iSkeletonBoneRagdollInfo_SetGeomName(*args)
    def GetGeomName(*args): return _imesh.iSkeletonBoneRagdollInfo_GetGeomName(*args)
    def SetGeomType(*args): return _imesh.iSkeletonBoneRagdollInfo_SetGeomType(*args)
    def GetGeomType(*args): return _imesh.iSkeletonBoneRagdollInfo_GetGeomType(*args)
    def SetGeomDimensions(*args): return _imesh.iSkeletonBoneRagdollInfo_SetGeomDimensions(*args)
    def GetGeomDimensions(*args): return _imesh.iSkeletonBoneRagdollInfo_GetGeomDimensions(*args)
    def SetFriction(*args): return _imesh.iSkeletonBoneRagdollInfo_SetFriction(*args)
    def GetFriction(*args): return _imesh.iSkeletonBoneRagdollInfo_GetFriction(*args)
    def SetElasticity(*args): return _imesh.iSkeletonBoneRagdollInfo_SetElasticity(*args)
    def GetElasticity(*args): return _imesh.iSkeletonBoneRagdollInfo_GetElasticity(*args)
    def SetSoftness(*args): return _imesh.iSkeletonBoneRagdollInfo_SetSoftness(*args)
    def GetSoftness(*args): return _imesh.iSkeletonBoneRagdollInfo_GetSoftness(*args)
    def SetSlip(*args): return _imesh.iSkeletonBoneRagdollInfo_SetSlip(*args)
    def GetSlip(*args): return _imesh.iSkeletonBoneRagdollInfo_GetSlip(*args)
    def SetBodyName(*args): return _imesh.iSkeletonBoneRagdollInfo_SetBodyName(*args)
    def GetBodyName(*args): return _imesh.iSkeletonBoneRagdollInfo_GetBodyName(*args)
    def SetBodyMass(*args): return _imesh.iSkeletonBoneRagdollInfo_SetBodyMass(*args)
    def GetBodyMass(*args): return _imesh.iSkeletonBoneRagdollInfo_GetBodyMass(*args)
    def SetBodyGravmode(*args): return _imesh.iSkeletonBoneRagdollInfo_SetBodyGravmode(*args)
    def GetBodyGravmode(*args): return _imesh.iSkeletonBoneRagdollInfo_GetBodyGravmode(*args)
    def SetJointName(*args): return _imesh.iSkeletonBoneRagdollInfo_SetJointName(*args)
    def GetJointName(*args): return _imesh.iSkeletonBoneRagdollInfo_GetJointName(*args)
    def SetJointMinRotContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_SetJointMinRotContraints(*args)
    def GetJointMinRotContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_GetJointMinRotContraints(*args)
    def SetJointMaxRotContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_SetJointMaxRotContraints(*args)
    def GetJointMaxRotContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_GetJointMaxRotContraints(*args)
    def SetJointMinTransContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_SetJointMinTransContraints(*args)
    def GetJointMinTransContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_GetJointMinTransContraints(*args)
    def SetJointMaxTransContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_SetJointMaxTransContraints(*args)
    def GetJointMaxTransContraints(*args): return _imesh.iSkeletonBoneRagdollInfo_GetJointMaxTransContraints(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonBoneRagdollInfo_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonBoneRagdollInfo
    __del__ = lambda self : None;
iSkeletonBoneRagdollInfo_swigregister = _imesh.iSkeletonBoneRagdollInfo_swigregister
iSkeletonBoneRagdollInfo_swigregister(iSkeletonBoneRagdollInfo)
iSkeletonBoneRagdollInfo_scfGetVersion = _imesh.iSkeletonBoneRagdollInfo_scfGetVersion

class iSkeletonBoneFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonBoneFactory_GetName(*args)
    def SetName(*args): return _imesh.iSkeletonBoneFactory_SetName(*args)
    def GetTransform(*args): return _imesh.iSkeletonBoneFactory_GetTransform(*args)
    def SetTransform(*args): return _imesh.iSkeletonBoneFactory_SetTransform(*args)
    def GetFullTransform(*args): return _imesh.iSkeletonBoneFactory_GetFullTransform(*args)
    def SetParent(*args): return _imesh.iSkeletonBoneFactory_SetParent(*args)
    def GetParent(*args): return _imesh.iSkeletonBoneFactory_GetParent(*args)
    def GetChildrenCount(*args): return _imesh.iSkeletonBoneFactory_GetChildrenCount(*args)
    def GetChild(*args): return _imesh.iSkeletonBoneFactory_GetChild(*args)
    def FindChild(*args): return _imesh.iSkeletonBoneFactory_FindChild(*args)
    def FindChildIndex(*args): return _imesh.iSkeletonBoneFactory_FindChildIndex(*args)
    def SetSkinBox(*args): return _imesh.iSkeletonBoneFactory_SetSkinBox(*args)
    def GetSkinBox(*args): return _imesh.iSkeletonBoneFactory_GetSkinBox(*args)
    def GetRagdollInfo(*args): return _imesh.iSkeletonBoneFactory_GetRagdollInfo(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonBoneFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonBoneFactory
    __del__ = lambda self : None;
iSkeletonBoneFactory_swigregister = _imesh.iSkeletonBoneFactory_swigregister
iSkeletonBoneFactory_swigregister(iSkeletonBoneFactory)
iSkeletonBoneFactory_scfGetVersion = _imesh.iSkeletonBoneFactory_scfGetVersion

class iSkeletonSocketFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonSocketFactory_GetName(*args)
    def SetName(*args): return _imesh.iSkeletonSocketFactory_SetName(*args)
    def GetTransform(*args): return _imesh.iSkeletonSocketFactory_GetTransform(*args)
    def SetTransform(*args): return _imesh.iSkeletonSocketFactory_SetTransform(*args)
    def GetFullTransform(*args): return _imesh.iSkeletonSocketFactory_GetFullTransform(*args)
    def SetBone(*args): return _imesh.iSkeletonSocketFactory_SetBone(*args)
    def GetBone(*args): return _imesh.iSkeletonSocketFactory_GetBone(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonSocketFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonSocketFactory
    __del__ = lambda self : None;
iSkeletonSocketFactory_swigregister = _imesh.iSkeletonSocketFactory_swigregister
iSkeletonSocketFactory_swigregister(iSkeletonSocketFactory)
iSkeletonSocketFactory_scfGetVersion = _imesh.iSkeletonSocketFactory_scfGetVersion

class iSkeletonFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonFactory_GetName(*args)
    def SetName(*args): return _imesh.iSkeletonFactory_SetName(*args)
    def CreateBone(*args): return _imesh.iSkeletonFactory_CreateBone(*args)
    def CreateAnimation(*args): return _imesh.iSkeletonFactory_CreateAnimation(*args)
    def FindAnimation(*args): return _imesh.iSkeletonFactory_FindAnimation(*args)
    def GetAnimationsCount(*args): return _imesh.iSkeletonFactory_GetAnimationsCount(*args)
    def GetAnimation(*args): return _imesh.iSkeletonFactory_GetAnimation(*args)
    def FindBone(*args): return _imesh.iSkeletonFactory_FindBone(*args)
    def FindBoneIndex(*args): return _imesh.iSkeletonFactory_FindBoneIndex(*args)
    def GetBonesCount(*args): return _imesh.iSkeletonFactory_GetBonesCount(*args)
    def GetBone(*args): return _imesh.iSkeletonFactory_GetBone(*args)
    def GetGraveyard(*args): return _imesh.iSkeletonFactory_GetGraveyard(*args)
    def CreateSocket(*args): return _imesh.iSkeletonFactory_CreateSocket(*args)
    def FindSocket(*args): return _imesh.iSkeletonFactory_FindSocket(*args)
    def GetSocket(*args): return _imesh.iSkeletonFactory_GetSocket(*args)
    def RemoveSocket(*args): return _imesh.iSkeletonFactory_RemoveSocket(*args)
    def GetSocketsCount(*args): return _imesh.iSkeletonFactory_GetSocketsCount(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonFactory
    __del__ = lambda self : None;
iSkeletonFactory_swigregister = _imesh.iSkeletonFactory_swigregister
iSkeletonFactory_swigregister(iSkeletonFactory)
iSkeletonFactory_scfGetVersion = _imesh.iSkeletonFactory_scfGetVersion

class iSkeletonGraveyard(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetFactoriesCount(*args): return _imesh.iSkeletonGraveyard_GetFactoriesCount(*args)
    def CreateFactory(*args): return _imesh.iSkeletonGraveyard_CreateFactory(*args)
    def LoadFactory(*args): return _imesh.iSkeletonGraveyard_LoadFactory(*args)
    def FindFactory(*args): return _imesh.iSkeletonGraveyard_FindFactory(*args)
    def CreateSkeleton(*args): return _imesh.iSkeletonGraveyard_CreateSkeleton(*args)
    def SetManualUpdates(*args): return _imesh.iSkeletonGraveyard_SetManualUpdates(*args)
    def Update(*args): return _imesh.iSkeletonGraveyard_Update(*args)
    def AddSkeleton(*args): return _imesh.iSkeletonGraveyard_AddSkeleton(*args)
    def RemoveSkeleton(*args): return _imesh.iSkeletonGraveyard_RemoveSkeleton(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonGraveyard_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonGraveyard
    __del__ = lambda self : None;
iSkeletonGraveyard_swigregister = _imesh.iSkeletonGraveyard_swigregister
iSkeletonGraveyard_swigregister(iSkeletonGraveyard)
iSkeletonGraveyard_scfGetVersion = _imesh.iSkeletonGraveyard_scfGetVersion

class iGenMeshSkeletonControlState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetAnimatedVertices(*args): return _imesh.iGenMeshSkeletonControlState_GetAnimatedVertices(*args)
    def GetAnimatedVerticesCount(*args): return _imesh.iGenMeshSkeletonControlState_GetAnimatedVerticesCount(*args)
    def GetAnimatedFaceNormals(*args): return _imesh.iGenMeshSkeletonControlState_GetAnimatedFaceNormals(*args)
    def GetAnimatedFaceNormalsCount(*args): return _imesh.iGenMeshSkeletonControlState_GetAnimatedFaceNormalsCount(*args)
    def GetAnimatedVertNormals(*args): return _imesh.iGenMeshSkeletonControlState_GetAnimatedVertNormals(*args)
    def GetAnimatedVertNormalsCount(*args): return _imesh.iGenMeshSkeletonControlState_GetAnimatedVertNormalsCount(*args)
    def GetSkeleton(*args): return _imesh.iGenMeshSkeletonControlState_GetSkeleton(*args)
    scfGetVersion = staticmethod(_imesh.iGenMeshSkeletonControlState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iGenMeshSkeletonControlState
    __del__ = lambda self : None;
iGenMeshSkeletonControlState_swigregister = _imesh.iGenMeshSkeletonControlState_swigregister
iGenMeshSkeletonControlState_swigregister(iGenMeshSkeletonControlState)
iGenMeshSkeletonControlState_scfGetVersion = _imesh.iGenMeshSkeletonControlState_scfGetVersion

class csAnimatedMeshBoneInfluence(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    bone = _swig_property(_imesh.csAnimatedMeshBoneInfluence_bone_get, _imesh.csAnimatedMeshBoneInfluence_bone_set)
    influenceWeight = _swig_property(_imesh.csAnimatedMeshBoneInfluence_influenceWeight_get, _imesh.csAnimatedMeshBoneInfluence_influenceWeight_set)
    def __init__(self, *args): 
        this = _imesh.new_csAnimatedMeshBoneInfluence(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csAnimatedMeshBoneInfluence
    __del__ = lambda self : None;
csAnimatedMeshBoneInfluence_swigregister = _imesh.csAnimatedMeshBoneInfluence_swigregister
csAnimatedMeshBoneInfluence_swigregister(csAnimatedMeshBoneInfluence)

class iAnimatedMeshSocketFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iAnimatedMeshSocketFactory_GetName(*args)
    def SetName(*args): return _imesh.iAnimatedMeshSocketFactory_SetName(*args)
    def GetTransform(*args): return _imesh.iAnimatedMeshSocketFactory_GetTransform(*args)
    def SetTransform(*args): return _imesh.iAnimatedMeshSocketFactory_SetTransform(*args)
    def GetBone(*args): return _imesh.iAnimatedMeshSocketFactory_GetBone(*args)
    def SetBone(*args): return _imesh.iAnimatedMeshSocketFactory_SetBone(*args)
    def GetFactory(*args): return _imesh.iAnimatedMeshSocketFactory_GetFactory(*args)
    __swig_destroy__ = _imesh.delete_iAnimatedMeshSocketFactory
    __del__ = lambda self : None;
iAnimatedMeshSocketFactory_swigregister = _imesh.iAnimatedMeshSocketFactory_swigregister
iAnimatedMeshSocketFactory_swigregister(iAnimatedMeshSocketFactory)

class iAnimatedMeshSocket(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iAnimatedMeshSocket_GetName(*args)
    def GetFactory(*args): return _imesh.iAnimatedMeshSocket_GetFactory(*args)
    def GetTransform(*args): return _imesh.iAnimatedMeshSocket_GetTransform(*args)
    def SetTransform(*args): return _imesh.iAnimatedMeshSocket_SetTransform(*args)
    def GetFullTransform(*args): return _imesh.iAnimatedMeshSocket_GetFullTransform(*args)
    def GetBone(*args): return _imesh.iAnimatedMeshSocket_GetBone(*args)
    def GetMesh(*args): return _imesh.iAnimatedMeshSocket_GetMesh(*args)
    def GetSceneNode(*args): return _imesh.iAnimatedMeshSocket_GetSceneNode(*args)
    def SetSceneNode(*args): return _imesh.iAnimatedMeshSocket_SetSceneNode(*args)
    __swig_destroy__ = _imesh.delete_iAnimatedMeshSocket
    __del__ = lambda self : None;
iAnimatedMeshSocket_swigregister = _imesh.iAnimatedMeshSocket_swigregister
iAnimatedMeshSocket_swigregister(iAnimatedMeshSocket)

class iAnimatedMeshFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateSubMesh(*args): return _imesh.iAnimatedMeshFactory_CreateSubMesh(*args)
    def GetSubMesh(*args): return _imesh.iAnimatedMeshFactory_GetSubMesh(*args)
    def FindSubMesh(*args): return _imesh.iAnimatedMeshFactory_FindSubMesh(*args)
    def GetSubMeshCount(*args): return _imesh.iAnimatedMeshFactory_GetSubMeshCount(*args)
    def DeleteSubMesh(*args): return _imesh.iAnimatedMeshFactory_DeleteSubMesh(*args)
    def GetVertexCount(*args): return _imesh.iAnimatedMeshFactory_GetVertexCount(*args)
    def GetVertices(*args): return _imesh.iAnimatedMeshFactory_GetVertices(*args)
    def SetVertices(*args): return _imesh.iAnimatedMeshFactory_SetVertices(*args)
    def GetTexCoords(*args): return _imesh.iAnimatedMeshFactory_GetTexCoords(*args)
    def SetTexCoords(*args): return _imesh.iAnimatedMeshFactory_SetTexCoords(*args)
    def GetNormals(*args): return _imesh.iAnimatedMeshFactory_GetNormals(*args)
    def SetNormals(*args): return _imesh.iAnimatedMeshFactory_SetNormals(*args)
    def GetTangents(*args): return _imesh.iAnimatedMeshFactory_GetTangents(*args)
    def SetTangents(*args): return _imesh.iAnimatedMeshFactory_SetTangents(*args)
    def GetBinormals(*args): return _imesh.iAnimatedMeshFactory_GetBinormals(*args)
    def SetBinormals(*args): return _imesh.iAnimatedMeshFactory_SetBinormals(*args)
    def GetColors(*args): return _imesh.iAnimatedMeshFactory_GetColors(*args)
    def SetColors(*args): return _imesh.iAnimatedMeshFactory_SetColors(*args)
    def Invalidate(*args): return _imesh.iAnimatedMeshFactory_Invalidate(*args)
    def SetSkeletonFactory(*args): return _imesh.iAnimatedMeshFactory_SetSkeletonFactory(*args)
    def GetSkeletonFactory(*args): return _imesh.iAnimatedMeshFactory_GetSkeletonFactory(*args)
    def SetBoneInfluencesPerVertex(*args): return _imesh.iAnimatedMeshFactory_SetBoneInfluencesPerVertex(*args)
    def GetBoneInfluencesPerVertex(*args): return _imesh.iAnimatedMeshFactory_GetBoneInfluencesPerVertex(*args)
    def GetBoneInfluences(*args): return _imesh.iAnimatedMeshFactory_GetBoneInfluences(*args)
    def CreateMorphTarget(*args): return _imesh.iAnimatedMeshFactory_CreateMorphTarget(*args)
    def GetMorphTarget(*args): return _imesh.iAnimatedMeshFactory_GetMorphTarget(*args)
    def GetMorphTargetCount(*args): return _imesh.iAnimatedMeshFactory_GetMorphTargetCount(*args)
    def ClearMorphTargets(*args): return _imesh.iAnimatedMeshFactory_ClearMorphTargets(*args)
    def FindMorphTarget(*args): return _imesh.iAnimatedMeshFactory_FindMorphTarget(*args)
    def CreateSocket(*args): return _imesh.iAnimatedMeshFactory_CreateSocket(*args)
    def GetSocketCount(*args): return _imesh.iAnimatedMeshFactory_GetSocketCount(*args)
    def GetSocket(*args): return _imesh.iAnimatedMeshFactory_GetSocket(*args)
    def FindSocket(*args): return _imesh.iAnimatedMeshFactory_FindSocket(*args)
    scfGetVersion = staticmethod(_imesh.iAnimatedMeshFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iAnimatedMeshFactory
    __del__ = lambda self : None;
iAnimatedMeshFactory_swigregister = _imesh.iAnimatedMeshFactory_swigregister
iAnimatedMeshFactory_swigregister(iAnimatedMeshFactory)
iAnimatedMeshFactory_scfGetVersion = _imesh.iAnimatedMeshFactory_scfGetVersion

class iAnimatedMeshFactorySubMesh(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetIndices(*args): return _imesh.iAnimatedMeshFactorySubMesh_GetIndices(*args)
    def GetIndexSetCount(*args): return _imesh.iAnimatedMeshFactorySubMesh_GetIndexSetCount(*args)
    def GetBoneIndices(*args): return _imesh.iAnimatedMeshFactorySubMesh_GetBoneIndices(*args)
    def GetMaterial(*args): return _imesh.iAnimatedMeshFactorySubMesh_GetMaterial(*args)
    def SetMaterial(*args): return _imesh.iAnimatedMeshFactorySubMesh_SetMaterial(*args)
    def GetName(*args): return _imesh.iAnimatedMeshFactorySubMesh_GetName(*args)
    scfGetVersion = staticmethod(_imesh.iAnimatedMeshFactorySubMesh_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iAnimatedMeshFactorySubMesh
    __del__ = lambda self : None;
iAnimatedMeshFactorySubMesh_swigregister = _imesh.iAnimatedMeshFactorySubMesh_swigregister
iAnimatedMeshFactorySubMesh_swigregister(iAnimatedMeshFactorySubMesh)
iAnimatedMeshFactorySubMesh_scfGetVersion = _imesh.iAnimatedMeshFactorySubMesh_scfGetVersion

class iAnimatedMesh(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetSkeleton(*args): return _imesh.iAnimatedMesh_SetSkeleton(*args)
    def GetSkeleton(*args): return _imesh.iAnimatedMesh_GetSkeleton(*args)
    def GetSubMesh(*args): return _imesh.iAnimatedMesh_GetSubMesh(*args)
    def GetSubMeshCount(*args): return _imesh.iAnimatedMesh_GetSubMeshCount(*args)
    def SetMorphTargetWeight(*args): return _imesh.iAnimatedMesh_SetMorphTargetWeight(*args)
    def GetMorphTargetWeight(*args): return _imesh.iAnimatedMesh_GetMorphTargetWeight(*args)
    def GetSocketCount(*args): return _imesh.iAnimatedMesh_GetSocketCount(*args)
    def GetSocket(*args): return _imesh.iAnimatedMesh_GetSocket(*args)
    scfGetVersion = staticmethod(_imesh.iAnimatedMesh_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iAnimatedMesh
    __del__ = lambda self : None;
iAnimatedMesh_swigregister = _imesh.iAnimatedMesh_swigregister
iAnimatedMesh_swigregister(iAnimatedMesh)
iAnimatedMesh_scfGetVersion = _imesh.iAnimatedMesh_scfGetVersion

class iAnimatedMeshSubMesh(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetFactorySubMesh(*args): return _imesh.iAnimatedMeshSubMesh_GetFactorySubMesh(*args)
    def SetRendering(*args): return _imesh.iAnimatedMeshSubMesh_SetRendering(*args)
    def IsRendering(*args): return _imesh.iAnimatedMeshSubMesh_IsRendering(*args)
    def GetShaderVariableContext(*args): return _imesh.iAnimatedMeshSubMesh_GetShaderVariableContext(*args)
    def GetMaterial(*args): return _imesh.iAnimatedMeshSubMesh_GetMaterial(*args)
    def SetMaterial(*args): return _imesh.iAnimatedMeshSubMesh_SetMaterial(*args)
    scfGetVersion = staticmethod(_imesh.iAnimatedMeshSubMesh_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iAnimatedMeshSubMesh
    __del__ = lambda self : None;
iAnimatedMeshSubMesh_swigregister = _imesh.iAnimatedMeshSubMesh_swigregister
iAnimatedMeshSubMesh_swigregister(iAnimatedMeshSubMesh)
iAnimatedMeshSubMesh_scfGetVersion = _imesh.iAnimatedMeshSubMesh_scfGetVersion

class iAnimatedMeshMorphTarget(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetVertexOffsets(*args): return _imesh.iAnimatedMeshMorphTarget_SetVertexOffsets(*args)
    def GetVertexOffsets(*args): return _imesh.iAnimatedMeshMorphTarget_GetVertexOffsets(*args)
    def Invalidate(*args): return _imesh.iAnimatedMeshMorphTarget_Invalidate(*args)
    def GetName(*args): return _imesh.iAnimatedMeshMorphTarget_GetName(*args)
    scfGetVersion = staticmethod(_imesh.iAnimatedMeshMorphTarget_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iAnimatedMeshMorphTarget
    __del__ = lambda self : None;
iAnimatedMeshMorphTarget_swigregister = _imesh.iAnimatedMeshMorphTarget_swigregister
iAnimatedMeshMorphTarget_swigregister(iAnimatedMeshMorphTarget)
iAnimatedMeshMorphTarget_scfGetVersion = _imesh.iAnimatedMeshMorphTarget_scfGetVersion

class iSkeletonManager2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateSkeletonFactory(*args): return _imesh.iSkeletonManager2_CreateSkeletonFactory(*args)
    def FindSkeletonFactory(*args): return _imesh.iSkeletonManager2_FindSkeletonFactory(*args)
    def ClearSkeletonFactories(*args): return _imesh.iSkeletonManager2_ClearSkeletonFactories(*args)
    def CreateAnimPacketFactory(*args): return _imesh.iSkeletonManager2_CreateAnimPacketFactory(*args)
    def FindAnimPacketFactory(*args): return _imesh.iSkeletonManager2_FindAnimPacketFactory(*args)
    def ClearAnimPacketFactories(*args): return _imesh.iSkeletonManager2_ClearAnimPacketFactories(*args)
    def ClearAll(*args): return _imesh.iSkeletonManager2_ClearAll(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonManager2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonManager2
    __del__ = lambda self : None;
iSkeletonManager2_swigregister = _imesh.iSkeletonManager2_swigregister
iSkeletonManager2_swigregister(iSkeletonManager2)
cvar = _imesh.cvar
InvalidBoneID = cvar.InvalidBoneID
iSkeletonManager2_scfGetVersion = _imesh.iSkeletonManager2_scfGetVersion

class iSkeletonFactory2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateBone(*args): return _imesh.iSkeletonFactory2_CreateBone(*args)
    def FindBone(*args): return _imesh.iSkeletonFactory2_FindBone(*args)
    def RemoveBone(*args): return _imesh.iSkeletonFactory2_RemoveBone(*args)
    def GetBoneParent(*args): return _imesh.iSkeletonFactory2_GetBoneParent(*args)
    def HasBone(*args): return _imesh.iSkeletonFactory2_HasBone(*args)
    def SetBoneName(*args): return _imesh.iSkeletonFactory2_SetBoneName(*args)
    def GetBoneName(*args): return _imesh.iSkeletonFactory2_GetBoneName(*args)
    def GetTopBoneID(*args): return _imesh.iSkeletonFactory2_GetTopBoneID(*args)
    def GetTransformBoneSpace(*args): return _imesh.iSkeletonFactory2_GetTransformBoneSpace(*args)
    def SetTransformBoneSpace(*args): return _imesh.iSkeletonFactory2_SetTransformBoneSpace(*args)
    def GetTransformAbsSpace(*args): return _imesh.iSkeletonFactory2_GetTransformAbsSpace(*args)
    def SetTransformAbsSpace(*args): return _imesh.iSkeletonFactory2_SetTransformAbsSpace(*args)
    def CreateSkeleton(*args): return _imesh.iSkeletonFactory2_CreateSkeleton(*args)
    def GetAnimationPacket(*args): return _imesh.iSkeletonFactory2_GetAnimationPacket(*args)
    def SetAnimationPacket(*args): return _imesh.iSkeletonFactory2_SetAnimationPacket(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonFactory2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonFactory2
    __del__ = lambda self : None;
iSkeletonFactory2_swigregister = _imesh.iSkeletonFactory2_swigregister
iSkeletonFactory2_swigregister(iSkeletonFactory2)
iSkeletonFactory2_scfGetVersion = _imesh.iSkeletonFactory2_scfGetVersion

class iSkeleton2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSceneNode(*args): return _imesh.iSkeleton2_GetSceneNode(*args)
    def GetTransformBoneSpace(*args): return _imesh.iSkeleton2_GetTransformBoneSpace(*args)
    def SetTransformBoneSpace(*args): return _imesh.iSkeleton2_SetTransformBoneSpace(*args)
    def GetTransformAbsSpace(*args): return _imesh.iSkeleton2_GetTransformAbsSpace(*args)
    def SetTransformAbsSpace(*args): return _imesh.iSkeleton2_SetTransformAbsSpace(*args)
    def GetTransformBindSpace(*args): return _imesh.iSkeleton2_GetTransformBindSpace(*args)
    def SetTransformBindSpace(*args): return _imesh.iSkeleton2_SetTransformBindSpace(*args)
    def GetStateAbsSpace(*args): return _imesh.iSkeleton2_GetStateAbsSpace(*args)
    def GetStateBoneSpace(*args): return _imesh.iSkeleton2_GetStateBoneSpace(*args)
    def GetStateBindSpace(*args): return _imesh.iSkeleton2_GetStateBindSpace(*args)
    def GetFactory(*args): return _imesh.iSkeleton2_GetFactory(*args)
    def GetAnimationPacket(*args): return _imesh.iSkeleton2_GetAnimationPacket(*args)
    def SetAnimationPacket(*args): return _imesh.iSkeleton2_SetAnimationPacket(*args)
    def RecreateSkeleton(*args): return _imesh.iSkeleton2_RecreateSkeleton(*args)
    def UpdateSkeleton(*args): return _imesh.iSkeleton2_UpdateSkeleton(*args)
    def GetSkeletonStateVersion(*args): return _imesh.iSkeleton2_GetSkeletonStateVersion(*args)
    scfGetVersion = staticmethod(_imesh.iSkeleton2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeleton2
    __del__ = lambda self : None;
iSkeleton2_swigregister = _imesh.iSkeleton2_swigregister
iSkeleton2_swigregister(iSkeleton2)
iSkeleton2_scfGetVersion = _imesh.iSkeleton2_scfGetVersion

class csSkeletalState2(core.csRefCount):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _imesh.new_csSkeletalState2(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csSkeletalState2
    __del__ = lambda self : None;
    def GetVector(*args): return _imesh.csSkeletalState2_GetVector(*args)
    def GetQuaternion(*args): return _imesh.csSkeletalState2_GetQuaternion(*args)
    def IsBoneUsed(*args): return _imesh.csSkeletalState2_IsBoneUsed(*args)
    def SetBoneUsed(*args): return _imesh.csSkeletalState2_SetBoneUsed(*args)
    def GetBoneCount(*args): return _imesh.csSkeletalState2_GetBoneCount(*args)
    def Setup(*args): return _imesh.csSkeletalState2_Setup(*args)
csSkeletalState2_swigregister = _imesh.csSkeletalState2_swigregister
csSkeletalState2_swigregister(csSkeletalState2)

SYNC_NONE = _imesh.SYNC_NONE
SYNC_FIRSTFRAME = _imesh.SYNC_FIRSTFRAME
class iSkeletonAnimPacketFactory2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateInstance(*args): return _imesh.iSkeletonAnimPacketFactory2_CreateInstance(*args)
    def CreateAnimation(*args): return _imesh.iSkeletonAnimPacketFactory2_CreateAnimation(*args)
    def FindAnimation(*args): return _imesh.iSkeletonAnimPacketFactory2_FindAnimation(*args)
    def ClearAnimations(*args): return _imesh.iSkeletonAnimPacketFactory2_ClearAnimations(*args)
    def GetAnimation(*args): return _imesh.iSkeletonAnimPacketFactory2_GetAnimation(*args)
    def GetAnimationCount(*args): return _imesh.iSkeletonAnimPacketFactory2_GetAnimationCount(*args)
    def SetAnimationRoot(*args): return _imesh.iSkeletonAnimPacketFactory2_SetAnimationRoot(*args)
    def GetAnimationRoot(*args): return _imesh.iSkeletonAnimPacketFactory2_GetAnimationRoot(*args)
    def CreateAnimationNode(*args): return _imesh.iSkeletonAnimPacketFactory2_CreateAnimationNode(*args)
    def CreateBlendNode(*args): return _imesh.iSkeletonAnimPacketFactory2_CreateBlendNode(*args)
    def CreatePriorityNode(*args): return _imesh.iSkeletonAnimPacketFactory2_CreatePriorityNode(*args)
    def CreateRandomNode(*args): return _imesh.iSkeletonAnimPacketFactory2_CreateRandomNode(*args)
    def CreateFSMNode(*args): return _imesh.iSkeletonAnimPacketFactory2_CreateFSMNode(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonAnimPacketFactory2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimPacketFactory2
    __del__ = lambda self : None;
iSkeletonAnimPacketFactory2_swigregister = _imesh.iSkeletonAnimPacketFactory2_swigregister
iSkeletonAnimPacketFactory2_swigregister(iSkeletonAnimPacketFactory2)
InvalidChannelID = cvar.InvalidChannelID
InvalidKeyframeID = cvar.InvalidKeyframeID
InvalidStateID = cvar.InvalidStateID
iSkeletonAnimPacketFactory2_scfGetVersion = _imesh.iSkeletonAnimPacketFactory2_scfGetVersion

class iSkeletonAnimPacket2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetFactory(*args): return _imesh.iSkeletonAnimPacket2_GetFactory(*args)
    def GetAnimationRoot(*args): return _imesh.iSkeletonAnimPacket2_GetAnimationRoot(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonAnimPacket2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimPacket2
    __del__ = lambda self : None;
iSkeletonAnimPacket2_swigregister = _imesh.iSkeletonAnimPacket2_swigregister
iSkeletonAnimPacket2_swigregister(iSkeletonAnimPacket2)
iSkeletonAnimPacket2_scfGetVersion = _imesh.iSkeletonAnimPacket2_scfGetVersion

class iSkeletonAnimation2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _imesh.iSkeletonAnimation2_GetName(*args)
    def AddChannel(*args): return _imesh.iSkeletonAnimation2_AddChannel(*args)
    def FindChannel(*args): return _imesh.iSkeletonAnimation2_FindChannel(*args)
    def AddKeyFrame(*args): return _imesh.iSkeletonAnimation2_AddKeyFrame(*args)
    def GetKeyFrameCount(*args): return _imesh.iSkeletonAnimation2_GetKeyFrameCount(*args)
    def GetKeyFrame(*args): return _imesh.iSkeletonAnimation2_GetKeyFrame(*args)
    def GetTwoKeyFrames(*args): return _imesh.iSkeletonAnimation2_GetTwoKeyFrames(*args)
    def BlendState(*args): return _imesh.iSkeletonAnimation2_BlendState(*args)
    def GetDuration(*args): return _imesh.iSkeletonAnimation2_GetDuration(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonAnimation2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimation2
    __del__ = lambda self : None;
iSkeletonAnimation2_swigregister = _imesh.iSkeletonAnimation2_swigregister
iSkeletonAnimation2_swigregister(iSkeletonAnimation2)
iSkeletonAnimation2_scfGetVersion = _imesh.iSkeletonAnimation2_scfGetVersion

class iSkeletonAnimCallback2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AnimationFinished(*args): return _imesh.iSkeletonAnimCallback2_AnimationFinished(*args)
    def AnimationCycled(*args): return _imesh.iSkeletonAnimCallback2_AnimationCycled(*args)
    def PlayStateChanged(*args): return _imesh.iSkeletonAnimCallback2_PlayStateChanged(*args)
    def DurationChanged(*args): return _imesh.iSkeletonAnimCallback2_DurationChanged(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimCallback2
    __del__ = lambda self : None;
iSkeletonAnimCallback2_swigregister = _imesh.iSkeletonAnimCallback2_swigregister
iSkeletonAnimCallback2_swigregister(iSkeletonAnimCallback2)

class iSkeletonAnimNodeFactory2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateInstance(*args): return _imesh.iSkeletonAnimNodeFactory2_CreateInstance(*args)
    def GetNodeName(*args): return _imesh.iSkeletonAnimNodeFactory2_GetNodeName(*args)
    def FindNode(*args): return _imesh.iSkeletonAnimNodeFactory2_FindNode(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonAnimNodeFactory2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimNodeFactory2
    __del__ = lambda self : None;
iSkeletonAnimNodeFactory2_swigregister = _imesh.iSkeletonAnimNodeFactory2_swigregister
iSkeletonAnimNodeFactory2_swigregister(iSkeletonAnimNodeFactory2)
iSkeletonAnimNodeFactory2_scfGetVersion = _imesh.iSkeletonAnimNodeFactory2_scfGetVersion

class iSkeletonAnimNode2(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Play(*args): return _imesh.iSkeletonAnimNode2_Play(*args)
    def Stop(*args): return _imesh.iSkeletonAnimNode2_Stop(*args)
    def SetPlaybackPosition(*args): return _imesh.iSkeletonAnimNode2_SetPlaybackPosition(*args)
    def GetPlaybackPosition(*args): return _imesh.iSkeletonAnimNode2_GetPlaybackPosition(*args)
    def GetDuration(*args): return _imesh.iSkeletonAnimNode2_GetDuration(*args)
    def SetPlaybackSpeed(*args): return _imesh.iSkeletonAnimNode2_SetPlaybackSpeed(*args)
    def GetPlaybackSpeed(*args): return _imesh.iSkeletonAnimNode2_GetPlaybackSpeed(*args)
    def BlendState(*args): return _imesh.iSkeletonAnimNode2_BlendState(*args)
    def TickAnimation(*args): return _imesh.iSkeletonAnimNode2_TickAnimation(*args)
    def IsActive(*args): return _imesh.iSkeletonAnimNode2_IsActive(*args)
    def GetFactory(*args): return _imesh.iSkeletonAnimNode2_GetFactory(*args)
    def FindNode(*args): return _imesh.iSkeletonAnimNode2_FindNode(*args)
    def AddAnimationCallback(*args): return _imesh.iSkeletonAnimNode2_AddAnimationCallback(*args)
    def RemoveAnimationCallback(*args): return _imesh.iSkeletonAnimNode2_RemoveAnimationCallback(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonAnimNode2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimNode2
    __del__ = lambda self : None;
iSkeletonAnimNode2_swigregister = _imesh.iSkeletonAnimNode2_swigregister
iSkeletonAnimNode2_swigregister(iSkeletonAnimNode2)
iSkeletonAnimNode2_scfGetVersion = _imesh.iSkeletonAnimNode2_scfGetVersion

class iSkeletonAnimationNodeFactory2(iSkeletonAnimNodeFactory2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetAnimation(*args): return _imesh.iSkeletonAnimationNodeFactory2_SetAnimation(*args)
    def GetAnimation(*args): return _imesh.iSkeletonAnimationNodeFactory2_GetAnimation(*args)
    def SetCyclic(*args): return _imesh.iSkeletonAnimationNodeFactory2_SetCyclic(*args)
    def IsCyclic(*args): return _imesh.iSkeletonAnimationNodeFactory2_IsCyclic(*args)
    def SetPlaybackSpeed(*args): return _imesh.iSkeletonAnimationNodeFactory2_SetPlaybackSpeed(*args)
    def GetPlaybackSpeed(*args): return _imesh.iSkeletonAnimationNodeFactory2_GetPlaybackSpeed(*args)
    def SetAutomaticReset(*args): return _imesh.iSkeletonAnimationNodeFactory2_SetAutomaticReset(*args)
    def GetAutomaticReset(*args): return _imesh.iSkeletonAnimationNodeFactory2_GetAutomaticReset(*args)
    def SetAutomaticStop(*args): return _imesh.iSkeletonAnimationNodeFactory2_SetAutomaticStop(*args)
    def GetAutomaticStop(*args): return _imesh.iSkeletonAnimationNodeFactory2_GetAutomaticStop(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonAnimationNodeFactory2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimationNodeFactory2
    __del__ = lambda self : None;
iSkeletonAnimationNodeFactory2_swigregister = _imesh.iSkeletonAnimationNodeFactory2_swigregister
iSkeletonAnimationNodeFactory2_swigregister(iSkeletonAnimationNodeFactory2)
iSkeletonAnimationNodeFactory2_scfGetVersion = _imesh.iSkeletonAnimationNodeFactory2_scfGetVersion

class iSkeletonAnimationNode2(iSkeletonAnimNode2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    scfGetVersion = staticmethod(_imesh.iSkeletonAnimationNode2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonAnimationNode2
    __del__ = lambda self : None;
iSkeletonAnimationNode2_swigregister = _imesh.iSkeletonAnimationNode2_swigregister
iSkeletonAnimationNode2_swigregister(iSkeletonAnimationNode2)
iSkeletonAnimationNode2_scfGetVersion = _imesh.iSkeletonAnimationNode2_scfGetVersion

class iSkeletonBlendNodeFactory2(iSkeletonAnimNodeFactory2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AddNode(*args): return _imesh.iSkeletonBlendNodeFactory2_AddNode(*args)
    def SetNodeWeight(*args): return _imesh.iSkeletonBlendNodeFactory2_SetNodeWeight(*args)
    def NormalizeWeights(*args): return _imesh.iSkeletonBlendNodeFactory2_NormalizeWeights(*args)
    def GetNode(*args): return _imesh.iSkeletonBlendNodeFactory2_GetNode(*args)
    def GetNodeCount(*args): return _imesh.iSkeletonBlendNodeFactory2_GetNodeCount(*args)
    def ClearNodes(*args): return _imesh.iSkeletonBlendNodeFactory2_ClearNodes(*args)
    def SetSynchronizationMode(*args): return _imesh.iSkeletonBlendNodeFactory2_SetSynchronizationMode(*args)
    def GetSynchronizationMode(*args): return _imesh.iSkeletonBlendNodeFactory2_GetSynchronizationMode(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonBlendNodeFactory2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonBlendNodeFactory2
    __del__ = lambda self : None;
iSkeletonBlendNodeFactory2_swigregister = _imesh.iSkeletonBlendNodeFactory2_swigregister
iSkeletonBlendNodeFactory2_swigregister(iSkeletonBlendNodeFactory2)
iSkeletonBlendNodeFactory2_scfGetVersion = _imesh.iSkeletonBlendNodeFactory2_scfGetVersion

class iSkeletonBlendNode2(iSkeletonAnimNode2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetNodeWeight(*args): return _imesh.iSkeletonBlendNode2_SetNodeWeight(*args)
    def NormalizeWeights(*args): return _imesh.iSkeletonBlendNode2_NormalizeWeights(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonBlendNode2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonBlendNode2
    __del__ = lambda self : None;
iSkeletonBlendNode2_swigregister = _imesh.iSkeletonBlendNode2_swigregister
iSkeletonBlendNode2_swigregister(iSkeletonBlendNode2)
iSkeletonBlendNode2_scfGetVersion = _imesh.iSkeletonBlendNode2_scfGetVersion

class iSkeletonPriorityNodeFactory2(iSkeletonAnimNodeFactory2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AddNode(*args): return _imesh.iSkeletonPriorityNodeFactory2_AddNode(*args)
    def SetNodePriority(*args): return _imesh.iSkeletonPriorityNodeFactory2_SetNodePriority(*args)
    def GetNode(*args): return _imesh.iSkeletonPriorityNodeFactory2_GetNode(*args)
    def GetNodeCount(*args): return _imesh.iSkeletonPriorityNodeFactory2_GetNodeCount(*args)
    def ClearNodes(*args): return _imesh.iSkeletonPriorityNodeFactory2_ClearNodes(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonPriorityNodeFactory2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonPriorityNodeFactory2
    __del__ = lambda self : None;
iSkeletonPriorityNodeFactory2_swigregister = _imesh.iSkeletonPriorityNodeFactory2_swigregister
iSkeletonPriorityNodeFactory2_swigregister(iSkeletonPriorityNodeFactory2)
iSkeletonPriorityNodeFactory2_scfGetVersion = _imesh.iSkeletonPriorityNodeFactory2_scfGetVersion

class iSkeletonPriorityNode2(iSkeletonAnimNode2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetNodePriority(*args): return _imesh.iSkeletonPriorityNode2_SetNodePriority(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonPriorityNode2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonPriorityNode2
    __del__ = lambda self : None;
iSkeletonPriorityNode2_swigregister = _imesh.iSkeletonPriorityNode2_swigregister
iSkeletonPriorityNode2_swigregister(iSkeletonPriorityNode2)
iSkeletonPriorityNode2_scfGetVersion = _imesh.iSkeletonPriorityNode2_scfGetVersion

class iSkeletonRandomNodeFactory2(iSkeletonAnimNodeFactory2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AddNode(*args): return _imesh.iSkeletonRandomNodeFactory2_AddNode(*args)
    def SetNodeProbability(*args): return _imesh.iSkeletonRandomNodeFactory2_SetNodeProbability(*args)
    def SetAutomaticSwitch(*args): return _imesh.iSkeletonRandomNodeFactory2_SetAutomaticSwitch(*args)
    def GetNode(*args): return _imesh.iSkeletonRandomNodeFactory2_GetNode(*args)
    def GetNodeCount(*args): return _imesh.iSkeletonRandomNodeFactory2_GetNodeCount(*args)
    def ClearNodes(*args): return _imesh.iSkeletonRandomNodeFactory2_ClearNodes(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonRandomNodeFactory2
    __del__ = lambda self : None;
iSkeletonRandomNodeFactory2_swigregister = _imesh.iSkeletonRandomNodeFactory2_swigregister
iSkeletonRandomNodeFactory2_swigregister(iSkeletonRandomNodeFactory2)

class iSkeletonRandomNode2(iSkeletonAnimNode2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Switch(*args): return _imesh.iSkeletonRandomNode2_Switch(*args)
    def GetCurrentNode(*args): return _imesh.iSkeletonRandomNode2_GetCurrentNode(*args)
    __swig_destroy__ = _imesh.delete_iSkeletonRandomNode2
    __del__ = lambda self : None;
iSkeletonRandomNode2_swigregister = _imesh.iSkeletonRandomNode2_swigregister
iSkeletonRandomNode2_swigregister(iSkeletonRandomNode2)

class iSkeletonFSMNodeFactory2(iSkeletonAnimNodeFactory2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetStateNode(*args): return _imesh.iSkeletonFSMNodeFactory2_SetStateNode(*args)
    def GetStateNode(*args): return _imesh.iSkeletonFSMNodeFactory2_GetStateNode(*args)
    def SetStateName(*args): return _imesh.iSkeletonFSMNodeFactory2_SetStateName(*args)
    def GetStateName(*args): return _imesh.iSkeletonFSMNodeFactory2_GetStateName(*args)
    def FindState(*args): return _imesh.iSkeletonFSMNodeFactory2_FindState(*args)
    def SetStartState(*args): return _imesh.iSkeletonFSMNodeFactory2_SetStartState(*args)
    def GetStartState(*args): return _imesh.iSkeletonFSMNodeFactory2_GetStartState(*args)
    def GetStateCount(*args): return _imesh.iSkeletonFSMNodeFactory2_GetStateCount(*args)
    def ClearStates(*args): return _imesh.iSkeletonFSMNodeFactory2_ClearStates(*args)
    def SetStateTransition(*args): return _imesh.iSkeletonFSMNodeFactory2_SetStateTransition(*args)
    def SetTransitionCrossfade(*args): return _imesh.iSkeletonFSMNodeFactory2_SetTransitionCrossfade(*args)
    def AddState(*args): return _imesh.iSkeletonFSMNodeFactory2_AddState(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonFSMNodeFactory2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonFSMNodeFactory2
    __del__ = lambda self : None;
iSkeletonFSMNodeFactory2_swigregister = _imesh.iSkeletonFSMNodeFactory2_swigregister
iSkeletonFSMNodeFactory2_swigregister(iSkeletonFSMNodeFactory2)
iSkeletonFSMNodeFactory2_scfGetVersion = _imesh.iSkeletonFSMNodeFactory2_scfGetVersion

class iSkeletonFSMNode2(iSkeletonAnimNode2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SwitchToState(*args): return _imesh.iSkeletonFSMNode2_SwitchToState(*args)
    def GetCurrentState(*args): return _imesh.iSkeletonFSMNode2_GetCurrentState(*args)
    def GetStateNode(*args): return _imesh.iSkeletonFSMNode2_GetStateNode(*args)
    scfGetVersion = staticmethod(_imesh.iSkeletonFSMNode2_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSkeletonFSMNode2
    __del__ = lambda self : None;
iSkeletonFSMNode2_swigregister = _imesh.iSkeletonFSMNode2_swigregister
iSkeletonFSMNode2_swigregister(iSkeletonFSMNode2)
iSkeletonFSMNode2_scfGetVersion = _imesh.iSkeletonFSMNode2_scfGetVersion

class csSprite2DVertexArrayReadOnly(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSize(*args): return _imesh.csSprite2DVertexArrayReadOnly_GetSize(*args)
    def Get(*args): return _imesh.csSprite2DVertexArrayReadOnly_Get(*args)
    def Top(*args): return _imesh.csSprite2DVertexArrayReadOnly_Top(*args)
    def Find(*args): return _imesh.csSprite2DVertexArrayReadOnly_Find(*args)
    def GetIndex(*args): return _imesh.csSprite2DVertexArrayReadOnly_GetIndex(*args)
    def IsEmpty(*args): return _imesh.csSprite2DVertexArrayReadOnly_IsEmpty(*args)
    def GetAll(*args): return _imesh.csSprite2DVertexArrayReadOnly_GetAll(*args)
    __swig_destroy__ = _imesh.delete_csSprite2DVertexArrayReadOnly
    __del__ = lambda self : None;
csSprite2DVertexArrayReadOnly_swigregister = _imesh.csSprite2DVertexArrayReadOnly_swigregister
csSprite2DVertexArrayReadOnly_swigregister(csSprite2DVertexArrayReadOnly)

class csSprite2DVertexArrayChangeElements(csSprite2DVertexArrayReadOnly):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Get(*args): return _imesh.csSprite2DVertexArrayChangeElements_Get(*args)
    def Top(*args): return _imesh.csSprite2DVertexArrayChangeElements_Top(*args)
    __swig_destroy__ = _imesh.delete_csSprite2DVertexArrayChangeElements
    __del__ = lambda self : None;
csSprite2DVertexArrayChangeElements_swigregister = _imesh.csSprite2DVertexArrayChangeElements_swigregister
csSprite2DVertexArrayChangeElements_swigregister(csSprite2DVertexArrayChangeElements)

class csSprite2DVertexArrayChangeAll(csSprite2DVertexArrayChangeElements):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetSize(*args): return _imesh.csSprite2DVertexArrayChangeAll_SetSize(*args)
    def GetExtend(*args): return _imesh.csSprite2DVertexArrayChangeAll_GetExtend(*args)
    def Put(*args): return _imesh.csSprite2DVertexArrayChangeAll_Put(*args)
    def Push(*args): return _imesh.csSprite2DVertexArrayChangeAll_Push(*args)
    def PushSmart(*args): return _imesh.csSprite2DVertexArrayChangeAll_PushSmart(*args)
    def Pop(*args): return _imesh.csSprite2DVertexArrayChangeAll_Pop(*args)
    def Insert(*args): return _imesh.csSprite2DVertexArrayChangeAll_Insert(*args)
    def DeleteAll(*args): return _imesh.csSprite2DVertexArrayChangeAll_DeleteAll(*args)
    def Truncate(*args): return _imesh.csSprite2DVertexArrayChangeAll_Truncate(*args)
    def Empty(*args): return _imesh.csSprite2DVertexArrayChangeAll_Empty(*args)
    def DeleteIndex(*args): return _imesh.csSprite2DVertexArrayChangeAll_DeleteIndex(*args)
    def DeleteIndexFast(*args): return _imesh.csSprite2DVertexArrayChangeAll_DeleteIndexFast(*args)
    def Delete(*args): return _imesh.csSprite2DVertexArrayChangeAll_Delete(*args)
    __swig_destroy__ = _imesh.delete_csSprite2DVertexArrayChangeAll
    __del__ = lambda self : None;
csSprite2DVertexArrayChangeAll_swigregister = _imesh.csSprite2DVertexArrayChangeAll_swigregister
csSprite2DVertexArrayChangeAll_swigregister(csSprite2DVertexArrayChangeAll)

class csSprite2DVertex(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    pos = _swig_property(_imesh.csSprite2DVertex_pos_get, _imesh.csSprite2DVertex_pos_set)
    color_init = _swig_property(_imesh.csSprite2DVertex_color_init_get, _imesh.csSprite2DVertex_color_init_set)
    color = _swig_property(_imesh.csSprite2DVertex_color_get, _imesh.csSprite2DVertex_color_set)
    u = _swig_property(_imesh.csSprite2DVertex_u_get, _imesh.csSprite2DVertex_u_set)
    v = _swig_property(_imesh.csSprite2DVertex_v_get, _imesh.csSprite2DVertex_v_set)
    def __eq__(*args): return _imesh.csSprite2DVertex___eq__(*args)
    def __init__(self, *args): 
        this = _imesh.new_csSprite2DVertex(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csSprite2DVertex
    __del__ = lambda self : None;
csSprite2DVertex_swigregister = _imesh.csSprite2DVertex_swigregister
csSprite2DVertex_swigregister(csSprite2DVertex)

class iColoredVertices(csSprite2DVertexArrayChangeAll):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _imesh.delete_iColoredVertices
    __del__ = lambda self : None;
iColoredVertices_swigregister = _imesh.iColoredVertices_swigregister
iColoredVertices_swigregister(iColoredVertices)

class iSprite2DUVAnimationFrame(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetName(*args): return _imesh.iSprite2DUVAnimationFrame_SetName(*args)
    def GetName(*args): return _imesh.iSprite2DUVAnimationFrame_GetName(*args)
    def GetUVCoo(*args): return _imesh.iSprite2DUVAnimationFrame_GetUVCoo(*args)
    def GetUVCount(*args): return _imesh.iSprite2DUVAnimationFrame_GetUVCount(*args)
    def SetUV(*args): return _imesh.iSprite2DUVAnimationFrame_SetUV(*args)
    def SetFrameData(*args): return _imesh.iSprite2DUVAnimationFrame_SetFrameData(*args)
    def RemoveUV(*args): return _imesh.iSprite2DUVAnimationFrame_RemoveUV(*args)
    def GetDuration(*args): return _imesh.iSprite2DUVAnimationFrame_GetDuration(*args)
    def SetDuration(*args): return _imesh.iSprite2DUVAnimationFrame_SetDuration(*args)
    __swig_destroy__ = _imesh.delete_iSprite2DUVAnimationFrame
    __del__ = lambda self : None;
iSprite2DUVAnimationFrame_swigregister = _imesh.iSprite2DUVAnimationFrame_swigregister
iSprite2DUVAnimationFrame_swigregister(iSprite2DUVAnimationFrame)

class iSprite2DUVAnimation(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetName(*args): return _imesh.iSprite2DUVAnimation_SetName(*args)
    def GetName(*args): return _imesh.iSprite2DUVAnimation_GetName(*args)
    def GetFrameCount(*args): return _imesh.iSprite2DUVAnimation_GetFrameCount(*args)
    def GetFrame(*args): return _imesh.iSprite2DUVAnimation_GetFrame(*args)
    def CreateFrame(*args): return _imesh.iSprite2DUVAnimation_CreateFrame(*args)
    def MoveFrame(*args): return _imesh.iSprite2DUVAnimation_MoveFrame(*args)
    def RemoveFrame(*args): return _imesh.iSprite2DUVAnimation_RemoveFrame(*args)
    __swig_destroy__ = _imesh.delete_iSprite2DUVAnimation
    __del__ = lambda self : None;
iSprite2DUVAnimation_swigregister = _imesh.iSprite2DUVAnimation_swigregister
iSprite2DUVAnimation_swigregister(iSprite2DUVAnimation)

class iSprite2DFactoryState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetVertices(*args): return _imesh.iSprite2DFactoryState_GetVertices(*args)
    def SetLighting(*args): return _imesh.iSprite2DFactoryState_SetLighting(*args)
    def HasLighting(*args): return _imesh.iSprite2DFactoryState_HasLighting(*args)
    def GetUVAnimationCount(*args): return _imesh.iSprite2DFactoryState_GetUVAnimationCount(*args)
    def CreateUVAnimation(*args): return _imesh.iSprite2DFactoryState_CreateUVAnimation(*args)
    def RemoveUVAnimation(*args): return _imesh.iSprite2DFactoryState_RemoveUVAnimation(*args)
    def GetUVAnimation(*args): return _imesh.iSprite2DFactoryState_GetUVAnimation(*args)
    __swig_destroy__ = _imesh.delete_iSprite2DFactoryState
    __del__ = lambda self : None;
iSprite2DFactoryState_swigregister = _imesh.iSprite2DFactoryState_swigregister
iSprite2DFactoryState_swigregister(iSprite2DFactoryState)

class iSprite2DState(iSprite2DFactoryState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateRegularVertices(*args): return _imesh.iSprite2DState_CreateRegularVertices(*args)
    def SetUVAnimation(*args): return _imesh.iSprite2DState_SetUVAnimation(*args)
    def GetUVAnimation(*args): return _imesh.iSprite2DState_GetUVAnimation(*args)
    def StopUVAnimation(*args): return _imesh.iSprite2DState_StopUVAnimation(*args)
    def PlayUVAnimation(*args): return _imesh.iSprite2DState_PlayUVAnimation(*args)
    def EnsureVertexCopy(*args): return _imesh.iSprite2DState_EnsureVertexCopy(*args)
    def GetVertexByIndex(*args): return _imesh.iSprite2DState_GetVertexByIndex(*args)
    def GetVertexCount(*args): return _imesh.iSprite2DState_GetVertexCount(*args)
    scfGetVersion = staticmethod(_imesh.iSprite2DState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSprite2DState
    __del__ = lambda self : None;
iSprite2DState_swigregister = _imesh.iSprite2DState_swigregister
iSprite2DState_swigregister(iSprite2DState)
iSprite2DState_scfGetVersion = _imesh.iSprite2DState_scfGetVersion

CS_SPR_LIGHTING_HQ = _imesh.CS_SPR_LIGHTING_HQ
CS_SPR_LIGHTING_LQ = _imesh.CS_SPR_LIGHTING_LQ
CS_SPR_LIGHTING_FAST = _imesh.CS_SPR_LIGHTING_FAST
CS_SPR_LIGHTING_RANDOM = _imesh.CS_SPR_LIGHTING_RANDOM
CS_SPR_LIGHT_GLOBAL = _imesh.CS_SPR_LIGHT_GLOBAL
CS_SPR_LIGHT_TEMPLATE = _imesh.CS_SPR_LIGHT_TEMPLATE
CS_SPR_LIGHT_LOCAL = _imesh.CS_SPR_LIGHT_LOCAL
CS_SPR_LOD_GLOBAL = _imesh.CS_SPR_LOD_GLOBAL
CS_SPR_LOD_TEMPLATE = _imesh.CS_SPR_LOD_TEMPLATE
CS_SPR_LOD_LOCAL = _imesh.CS_SPR_LOD_LOCAL
class iSpriteFrame(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetName(*args): return _imesh.iSpriteFrame_SetName(*args)
    def GetName(*args): return _imesh.iSpriteFrame_GetName(*args)
    def GetAnmIndex(*args): return _imesh.iSpriteFrame_GetAnmIndex(*args)
    def GetTexIndex(*args): return _imesh.iSpriteFrame_GetTexIndex(*args)
    __swig_destroy__ = _imesh.delete_iSpriteFrame
    __del__ = lambda self : None;
iSpriteFrame_swigregister = _imesh.iSpriteFrame_swigregister
iSpriteFrame_swigregister(iSpriteFrame)

class iSpriteAction(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetName(*args): return _imesh.iSpriteAction_SetName(*args)
    def GetName(*args): return _imesh.iSpriteAction_GetName(*args)
    def GetFrameCount(*args): return _imesh.iSpriteAction_GetFrameCount(*args)
    def GetFrame(*args): return _imesh.iSpriteAction_GetFrame(*args)
    def GetNextFrame(*args): return _imesh.iSpriteAction_GetNextFrame(*args)
    def GetFrameDelay(*args): return _imesh.iSpriteAction_GetFrameDelay(*args)
    def GetFrameDisplacement(*args): return _imesh.iSpriteAction_GetFrameDisplacement(*args)
    def AddFrame(*args): return _imesh.iSpriteAction_AddFrame(*args)
    __swig_destroy__ = _imesh.delete_iSpriteAction
    __del__ = lambda self : None;
iSpriteAction_swigregister = _imesh.iSpriteAction_swigregister
iSpriteAction_swigregister(iSpriteAction)

class iSpriteSocket(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetName(*args): return _imesh.iSpriteSocket_SetName(*args)
    def GetName(*args): return _imesh.iSpriteSocket_GetName(*args)
    def SetMeshWrapper(*args): return _imesh.iSpriteSocket_SetMeshWrapper(*args)
    def GetMeshWrapper(*args): return _imesh.iSpriteSocket_GetMeshWrapper(*args)
    def SetTriangleIndex(*args): return _imesh.iSpriteSocket_SetTriangleIndex(*args)
    def GetTriangleIndex(*args): return _imesh.iSpriteSocket_GetTriangleIndex(*args)
    __swig_destroy__ = _imesh.delete_iSpriteSocket
    __del__ = lambda self : None;
iSpriteSocket_swigregister = _imesh.iSpriteSocket_swigregister
iSpriteSocket_swigregister(iSpriteSocket)

class iSprite3DFactoryState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AddVertices(*args): return _imesh.iSprite3DFactoryState_AddVertices(*args)
    def GetVertexCount(*args): return _imesh.iSprite3DFactoryState_GetVertexCount(*args)
    def GetVertex(*args): return _imesh.iSprite3DFactoryState_GetVertex(*args)
    def SetVertex(*args): return _imesh.iSprite3DFactoryState_SetVertex(*args)
    def GetVertices(*args): return _imesh.iSprite3DFactoryState_GetVertices(*args)
    def SetVertices(*args): return _imesh.iSprite3DFactoryState_SetVertices(*args)
    def GetTexel(*args): return _imesh.iSprite3DFactoryState_GetTexel(*args)
    def SetTexel(*args): return _imesh.iSprite3DFactoryState_SetTexel(*args)
    def GetTexels(*args): return _imesh.iSprite3DFactoryState_GetTexels(*args)
    def SetTexels(*args): return _imesh.iSprite3DFactoryState_SetTexels(*args)
    def GetNormal(*args): return _imesh.iSprite3DFactoryState_GetNormal(*args)
    def SetNormal(*args): return _imesh.iSprite3DFactoryState_SetNormal(*args)
    def GetNormals(*args): return _imesh.iSprite3DFactoryState_GetNormals(*args)
    def SetNormals(*args): return _imesh.iSprite3DFactoryState_SetNormals(*args)
    def AddTriangle(*args): return _imesh.iSprite3DFactoryState_AddTriangle(*args)
    def GetTriangle(*args): return _imesh.iSprite3DFactoryState_GetTriangle(*args)
    def GetTriangles(*args): return _imesh.iSprite3DFactoryState_GetTriangles(*args)
    def GetTriangleCount(*args): return _imesh.iSprite3DFactoryState_GetTriangleCount(*args)
    def SetTriangleCount(*args): return _imesh.iSprite3DFactoryState_SetTriangleCount(*args)
    def SetTriangles(*args): return _imesh.iSprite3DFactoryState_SetTriangles(*args)
    def AddFrame(*args): return _imesh.iSprite3DFactoryState_AddFrame(*args)
    def FindFrame(*args): return _imesh.iSprite3DFactoryState_FindFrame(*args)
    def GetFrameCount(*args): return _imesh.iSprite3DFactoryState_GetFrameCount(*args)
    def GetFrame(*args): return _imesh.iSprite3DFactoryState_GetFrame(*args)
    def AddAction(*args): return _imesh.iSprite3DFactoryState_AddAction(*args)
    def FindAction(*args): return _imesh.iSprite3DFactoryState_FindAction(*args)
    def GetFirstAction(*args): return _imesh.iSprite3DFactoryState_GetFirstAction(*args)
    def GetActionCount(*args): return _imesh.iSprite3DFactoryState_GetActionCount(*args)
    def GetAction(*args): return _imesh.iSprite3DFactoryState_GetAction(*args)
    def AddSocket(*args): return _imesh.iSprite3DFactoryState_AddSocket(*args)
    def FindSocket(*args): return _imesh.iSprite3DFactoryState_FindSocket(*args)
    def GetSocketCount(*args): return _imesh.iSprite3DFactoryState_GetSocketCount(*args)
    def GetSocket(*args): return _imesh.iSprite3DFactoryState_GetSocket(*args)
    def EnableTweening(*args): return _imesh.iSprite3DFactoryState_EnableTweening(*args)
    def IsTweeningEnabled(*args): return _imesh.iSprite3DFactoryState_IsTweeningEnabled(*args)
    def SetLightingQuality(*args): return _imesh.iSprite3DFactoryState_SetLightingQuality(*args)
    def GetLightingQuality(*args): return _imesh.iSprite3DFactoryState_GetLightingQuality(*args)
    def SetLightingQualityConfig(*args): return _imesh.iSprite3DFactoryState_SetLightingQualityConfig(*args)
    def GetLightingQualityConfig(*args): return _imesh.iSprite3DFactoryState_GetLightingQualityConfig(*args)
    def SetLodLevelConfig(*args): return _imesh.iSprite3DFactoryState_SetLodLevelConfig(*args)
    def GetLodLevelConfig(*args): return _imesh.iSprite3DFactoryState_GetLodLevelConfig(*args)
    def MergeNormals(*args): return _imesh.iSprite3DFactoryState_MergeNormals(*args)
    __swig_destroy__ = _imesh.delete_iSprite3DFactoryState
    __del__ = lambda self : None;
iSprite3DFactoryState_swigregister = _imesh.iSprite3DFactoryState_swigregister
iSprite3DFactoryState_swigregister(iSprite3DFactoryState)

class iSprite3DState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetMixMode(*args): return _imesh.iSprite3DState_SetMixMode(*args)
    def GetMixMode(*args): return _imesh.iSprite3DState_GetMixMode(*args)
    def SetLighting(*args): return _imesh.iSprite3DState_SetLighting(*args)
    def IsLighting(*args): return _imesh.iSprite3DState_IsLighting(*args)
    def SetFrame(*args): return _imesh.iSprite3DState_SetFrame(*args)
    def GetCurFrame(*args): return _imesh.iSprite3DState_GetCurFrame(*args)
    def GetFrameCount(*args): return _imesh.iSprite3DState_GetFrameCount(*args)
    def SetAction(*args): return _imesh.iSprite3DState_SetAction(*args)
    def SetReverseAction(*args): return _imesh.iSprite3DState_SetReverseAction(*args)
    def SetSingleStepAction(*args): return _imesh.iSprite3DState_SetSingleStepAction(*args)
    def SetOverrideAction(*args): return _imesh.iSprite3DState_SetOverrideAction(*args)
    def PropagateAction(*args): return _imesh.iSprite3DState_PropagateAction(*args)
    def GetCurAction(*args): return _imesh.iSprite3DState_GetCurAction(*args)
    def GetReverseAction(*args): return _imesh.iSprite3DState_GetReverseAction(*args)
    def EnableTweening(*args): return _imesh.iSprite3DState_EnableTweening(*args)
    def IsTweeningEnabled(*args): return _imesh.iSprite3DState_IsTweeningEnabled(*args)
    def UnsetTexture(*args): return _imesh.iSprite3DState_UnsetTexture(*args)
    def GetLightingQuality(*args): return _imesh.iSprite3DState_GetLightingQuality(*args)
    def SetLocalLightingQuality(*args): return _imesh.iSprite3DState_SetLocalLightingQuality(*args)
    def SetLightingQualityConfig(*args): return _imesh.iSprite3DState_SetLightingQualityConfig(*args)
    def GetLightingQualityConfig(*args): return _imesh.iSprite3DState_GetLightingQualityConfig(*args)
    def SetLodLevelConfig(*args): return _imesh.iSprite3DState_SetLodLevelConfig(*args)
    def GetLodLevelConfig(*args): return _imesh.iSprite3DState_GetLodLevelConfig(*args)
    def IsLodEnabled(*args): return _imesh.iSprite3DState_IsLodEnabled(*args)
    def FindSocket(*args): return _imesh.iSprite3DState_FindSocket(*args)
    scfGetVersion = staticmethod(_imesh.iSprite3DState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSprite3DState
    __del__ = lambda self : None;
iSprite3DState_swigregister = _imesh.iSprite3DState_swigregister
iSprite3DState_swigregister(iSprite3DState)
iSprite3DState_scfGetVersion = _imesh.iSprite3DState_scfGetVersion

class iSpriteCal3DSocket(iSpriteSocket):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetSubmeshIndex(*args): return _imesh.iSpriteCal3DSocket_SetSubmeshIndex(*args)
    def GetSubmeshIndex(*args): return _imesh.iSpriteCal3DSocket_GetSubmeshIndex(*args)
    def SetMeshIndex(*args): return _imesh.iSpriteCal3DSocket_SetMeshIndex(*args)
    def GetMeshIndex(*args): return _imesh.iSpriteCal3DSocket_GetMeshIndex(*args)
    def SetTransform(*args): return _imesh.iSpriteCal3DSocket_SetTransform(*args)
    def GetTransform(*args): return _imesh.iSpriteCal3DSocket_GetTransform(*args)
    def GetSecondaryCount(*args): return _imesh.iSpriteCal3DSocket_GetSecondaryCount(*args)
    def GetSecondaryMesh(*args): return _imesh.iSpriteCal3DSocket_GetSecondaryMesh(*args)
    def GetSecondaryTransform(*args): return _imesh.iSpriteCal3DSocket_GetSecondaryTransform(*args)
    def SetSecondaryTransform(*args): return _imesh.iSpriteCal3DSocket_SetSecondaryTransform(*args)
    def AttachSecondary(*args): return _imesh.iSpriteCal3DSocket_AttachSecondary(*args)
    def DetachSecondary(*args): return _imesh.iSpriteCal3DSocket_DetachSecondary(*args)
    def FindSecondary(*args): return _imesh.iSpriteCal3DSocket_FindSecondary(*args)
    __swig_destroy__ = _imesh.delete_iSpriteCal3DSocket
    __del__ = lambda self : None;
iSpriteCal3DSocket_swigregister = _imesh.iSpriteCal3DSocket_swigregister
iSpriteCal3DSocket_swigregister(iSpriteCal3DSocket)

class iSpriteCal3DFactoryState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Create(*args): return _imesh.iSpriteCal3DFactoryState_Create(*args)
    def ReportLastError(*args): return _imesh.iSpriteCal3DFactoryState_ReportLastError(*args)
    def SetLoadFlags(*args): return _imesh.iSpriteCal3DFactoryState_SetLoadFlags(*args)
    def SetBasePath(*args): return _imesh.iSpriteCal3DFactoryState_SetBasePath(*args)
    def LoadCoreSkeleton(*args): return _imesh.iSpriteCal3DFactoryState_LoadCoreSkeleton(*args)
    def RescaleFactory(*args): return _imesh.iSpriteCal3DFactoryState_RescaleFactory(*args)
    def LoadCoreAnimation(*args): return _imesh.iSpriteCal3DFactoryState_LoadCoreAnimation(*args)
    def LoadCoreMesh(*args): return _imesh.iSpriteCal3DFactoryState_LoadCoreMesh(*args)
    def LoadCoreMorphTarget(*args): return _imesh.iSpriteCal3DFactoryState_LoadCoreMorphTarget(*args)
    def AddMorphAnimation(*args): return _imesh.iSpriteCal3DFactoryState_AddMorphAnimation(*args)
    def AddMorphTarget(*args): return _imesh.iSpriteCal3DFactoryState_AddMorphTarget(*args)
    def AddCoreMaterial(*args): return _imesh.iSpriteCal3DFactoryState_AddCoreMaterial(*args)
    def CalculateAllBoneBoundingBoxes(*args): return _imesh.iSpriteCal3DFactoryState_CalculateAllBoneBoundingBoxes(*args)
    def BindMaterials(*args): return _imesh.iSpriteCal3DFactoryState_BindMaterials(*args)
    def GetMeshCount(*args): return _imesh.iSpriteCal3DFactoryState_GetMeshCount(*args)
    def GetMorphAnimationCount(*args): return _imesh.iSpriteCal3DFactoryState_GetMorphAnimationCount(*args)
    def GetMorphTargetCount(*args): return _imesh.iSpriteCal3DFactoryState_GetMorphTargetCount(*args)
    def GetMeshName(*args): return _imesh.iSpriteCal3DFactoryState_GetMeshName(*args)
    def FindMeshName(*args): return _imesh.iSpriteCal3DFactoryState_FindMeshName(*args)
    def GetDefaultMaterial(*args): return _imesh.iSpriteCal3DFactoryState_GetDefaultMaterial(*args)
    def GetMorphAnimationName(*args): return _imesh.iSpriteCal3DFactoryState_GetMorphAnimationName(*args)
    def FindMorphAnimationName(*args): return _imesh.iSpriteCal3DFactoryState_FindMorphAnimationName(*args)
    def IsMeshDefault(*args): return _imesh.iSpriteCal3DFactoryState_IsMeshDefault(*args)
    def AddSocket(*args): return _imesh.iSpriteCal3DFactoryState_AddSocket(*args)
    def FindSocket(*args): return _imesh.iSpriteCal3DFactoryState_FindSocket(*args)
    def GetSocketCount(*args): return _imesh.iSpriteCal3DFactoryState_GetSocketCount(*args)
    def GetSocket(*args): return _imesh.iSpriteCal3DFactoryState_GetSocket(*args)
    def GetCal3DCoreModel(*args): return _imesh.iSpriteCal3DFactoryState_GetCal3DCoreModel(*args)
    def RegisterAnimCallback(*args): return _imesh.iSpriteCal3DFactoryState_RegisterAnimCallback(*args)
    def RemoveAnimCallback(*args): return _imesh.iSpriteCal3DFactoryState_RemoveAnimCallback(*args)
    def AbsoluteRescaleFactory(*args): return _imesh.iSpriteCal3DFactoryState_AbsoluteRescaleFactory(*args)
    __swig_destroy__ = _imesh.delete_iSpriteCal3DFactoryState
    __del__ = lambda self : None;
iSpriteCal3DFactoryState_swigregister = _imesh.iSpriteCal3DFactoryState_swigregister
iSpriteCal3DFactoryState_swigregister(iSpriteCal3DFactoryState)

class iAnimTimeUpdateHandler(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def UpdatePosition(*args): return _imesh.iAnimTimeUpdateHandler_UpdatePosition(*args)
    __swig_destroy__ = _imesh.delete_iAnimTimeUpdateHandler
    __del__ = lambda self : None;
iAnimTimeUpdateHandler_swigregister = _imesh.iAnimTimeUpdateHandler_swigregister
iAnimTimeUpdateHandler_swigregister(iAnimTimeUpdateHandler)

class csSpriteCal3DActiveAnim(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    index = _swig_property(_imesh.csSpriteCal3DActiveAnim_index_get, _imesh.csSpriteCal3DActiveAnim_index_set)
    weight = _swig_property(_imesh.csSpriteCal3DActiveAnim_weight_get, _imesh.csSpriteCal3DActiveAnim_weight_set)
    def __init__(self, *args): 
        this = _imesh.new_csSpriteCal3DActiveAnim(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csSpriteCal3DActiveAnim
    __del__ = lambda self : None;
csSpriteCal3DActiveAnim_swigregister = _imesh.csSpriteCal3DActiveAnim_swigregister
csSpriteCal3DActiveAnim_swigregister(csSpriteCal3DActiveAnim)

class iSpriteCal3DState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    C3D_ANIM_TYPE_NONE = _imesh.iSpriteCal3DState_C3D_ANIM_TYPE_NONE
    C3D_ANIM_TYPE_IDLE = _imesh.iSpriteCal3DState_C3D_ANIM_TYPE_IDLE
    C3D_ANIM_TYPE_TRAVEL = _imesh.iSpriteCal3DState_C3D_ANIM_TYPE_TRAVEL
    C3D_ANIM_TYPE_CYCLE = _imesh.iSpriteCal3DState_C3D_ANIM_TYPE_CYCLE
    C3D_ANIM_TYPE_STYLE_CYCLE = _imesh.iSpriteCal3DState_C3D_ANIM_TYPE_STYLE_CYCLE
    C3D_ANIM_TYPE_ACTION = _imesh.iSpriteCal3DState_C3D_ANIM_TYPE_ACTION
    def GetAnimCount(*args): return _imesh.iSpriteCal3DState_GetAnimCount(*args)
    def GetAnimName(*args): return _imesh.iSpriteCal3DState_GetAnimName(*args)
    def GetAnimType(*args): return _imesh.iSpriteCal3DState_GetAnimType(*args)
    def FindAnim(*args): return _imesh.iSpriteCal3DState_FindAnim(*args)
    def ClearAllAnims(*args): return _imesh.iSpriteCal3DState_ClearAllAnims(*args)
    def SetAnimCycle(*args): return _imesh.iSpriteCal3DState_SetAnimCycle(*args)
    def AddAnimCycle(*args): return _imesh.iSpriteCal3DState_AddAnimCycle(*args)
    def ClearAnimCycle(*args): return _imesh.iSpriteCal3DState_ClearAnimCycle(*args)
    def GetActiveAnimCount(*args): return _imesh.iSpriteCal3DState_GetActiveAnimCount(*args)
    def GetActiveAnims(*args): return _imesh.iSpriteCal3DState_GetActiveAnims(*args)
    def SetActiveAnims(*args): return _imesh.iSpriteCal3DState_SetActiveAnims(*args)
    def SetAnimAction(*args): return _imesh.iSpriteCal3DState_SetAnimAction(*args)
    def SetVelocity(*args): return _imesh.iSpriteCal3DState_SetVelocity(*args)
    def SetDefaultIdleAnim(*args): return _imesh.iSpriteCal3DState_SetDefaultIdleAnim(*args)
    def SetCyclicBlendFactor(*args): return _imesh.iSpriteCal3DState_SetCyclicBlendFactor(*args)
    def SetLOD(*args): return _imesh.iSpriteCal3DState_SetLOD(*args)
    def AttachCoreMesh(*args): return _imesh.iSpriteCal3DState_AttachCoreMesh(*args)
    def DetachCoreMesh(*args): return _imesh.iSpriteCal3DState_DetachCoreMesh(*args)
    def BlendMorphTarget(*args): return _imesh.iSpriteCal3DState_BlendMorphTarget(*args)
    def ClearMorphTarget(*args): return _imesh.iSpriteCal3DState_ClearMorphTarget(*args)
    def FindSocket(*args): return _imesh.iSpriteCal3DState_FindSocket(*args)
    def SetMaterial(*args): return _imesh.iSpriteCal3DState_SetMaterial(*args)
    def SetTimeFactor(*args): return _imesh.iSpriteCal3DState_SetTimeFactor(*args)
    def GetTimeFactor(*args): return _imesh.iSpriteCal3DState_GetTimeFactor(*args)
    def GetAnimationTime(*args): return _imesh.iSpriteCal3DState_GetAnimationTime(*args)
    def GetAnimationDuration(*args): return _imesh.iSpriteCal3DState_GetAnimationDuration(*args)
    def SetAnimationTime(*args): return _imesh.iSpriteCal3DState_SetAnimationTime(*args)
    def SetAnimTimeUpdateHandler(*args): return _imesh.iSpriteCal3DState_SetAnimTimeUpdateHandler(*args)
    def SetUserData(*args): return _imesh.iSpriteCal3DState_SetUserData(*args)
    def GetCoreMeshShaderVarContext(*args): return _imesh.iSpriteCal3DState_GetCoreMeshShaderVarContext(*args)
    def GetSkeleton(*args): return _imesh.iSpriteCal3DState_GetSkeleton(*args)
    def GetCal3DModel(*args): return _imesh.iSpriteCal3DState_GetCal3DModel(*args)
    scfGetVersion = staticmethod(_imesh.iSpriteCal3DState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iSpriteCal3DState
    __del__ = lambda self : None;
iSpriteCal3DState_swigregister = _imesh.iSpriteCal3DState_swigregister
iSpriteCal3DState_swigregister(iSpriteCal3DState)
iSpriteCal3DState_scfGetVersion = _imesh.iSpriteCal3DState_scfGetVersion

CS_MESH_STATICPOS = _imesh.CS_MESH_STATICPOS
CS_MESH_STATICSHAPE = _imesh.CS_MESH_STATICSHAPE
CS_FACTORY_STATICSHAPE = _imesh.CS_FACTORY_STATICSHAPE
class iMeshObjectDrawCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def BeforeDrawing(*args): return _imesh.iMeshObjectDrawCallback_BeforeDrawing(*args)
    __swig_destroy__ = _imesh.delete_iMeshObjectDrawCallback
    __del__ = lambda self : None;
iMeshObjectDrawCallback_swigregister = _imesh.iMeshObjectDrawCallback_swigregister
iMeshObjectDrawCallback_swigregister(iMeshObjectDrawCallback)

class iMeshObject(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetFactory(*args): return _imesh.iMeshObject_GetFactory(*args)
    def GetFlags(*args): return _imesh.iMeshObject_GetFlags(*args)
    def Clone(*args): return _imesh.iMeshObject_Clone(*args)
    def GetRenderMeshes(*args): return _imesh.iMeshObject_GetRenderMeshes(*args)
    def SetVisibleCallback(*args): return _imesh.iMeshObject_SetVisibleCallback(*args)
    def GetVisibleCallback(*args): return _imesh.iMeshObject_GetVisibleCallback(*args)
    def NextFrame(*args): return _imesh.iMeshObject_NextFrame(*args)
    def HardTransform(*args): return _imesh.iMeshObject_HardTransform(*args)
    def SupportsHardTransform(*args): return _imesh.iMeshObject_SupportsHardTransform(*args)
    def HitBeamOutline(*args): return _imesh.iMeshObject_HitBeamOutline(*args)
    def HitBeamObject(*args): return _imesh.iMeshObject_HitBeamObject(*args)
    def SetMeshWrapper(*args): return _imesh.iMeshObject_SetMeshWrapper(*args)
    def GetMeshWrapper(*args): return _imesh.iMeshObject_GetMeshWrapper(*args)
    def GetObjectModel(*args): return _imesh.iMeshObject_GetObjectModel(*args)
    def SetColor(*args): return _imesh.iMeshObject_SetColor(*args)
    def GetColor(*args): return _imesh.iMeshObject_GetColor(*args)
    def SetMaterialWrapper(*args): return _imesh.iMeshObject_SetMaterialWrapper(*args)
    def GetMaterialWrapper(*args): return _imesh.iMeshObject_GetMaterialWrapper(*args)
    def SetMixMode(*args): return _imesh.iMeshObject_SetMixMode(*args)
    def GetMixMode(*args): return _imesh.iMeshObject_GetMixMode(*args)
    def PositionChild(*args): return _imesh.iMeshObject_PositionChild(*args)
    def BuildDecal(*args): return _imesh.iMeshObject_BuildDecal(*args)
    scfGetVersion = staticmethod(_imesh.iMeshObject_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iMeshObject
    __del__ = lambda self : None;
iMeshObject_swigregister = _imesh.iMeshObject_swigregister
iMeshObject_swigregister(iMeshObject)
iMeshObject_scfGetVersion = _imesh.iMeshObject_scfGetVersion

class iMeshObjectFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetFlags(*args): return _imesh.iMeshObjectFactory_GetFlags(*args)
    def NewInstance(*args): return _imesh.iMeshObjectFactory_NewInstance(*args)
    def Clone(*args): return _imesh.iMeshObjectFactory_Clone(*args)
    def HardTransform(*args): return _imesh.iMeshObjectFactory_HardTransform(*args)
    def SupportsHardTransform(*args): return _imesh.iMeshObjectFactory_SupportsHardTransform(*args)
    def SetMeshFactoryWrapper(*args): return _imesh.iMeshObjectFactory_SetMeshFactoryWrapper(*args)
    def GetMeshFactoryWrapper(*args): return _imesh.iMeshObjectFactory_GetMeshFactoryWrapper(*args)
    def GetMeshObjectType(*args): return _imesh.iMeshObjectFactory_GetMeshObjectType(*args)
    def GetObjectModel(*args): return _imesh.iMeshObjectFactory_GetObjectModel(*args)
    def SetMaterialWrapper(*args): return _imesh.iMeshObjectFactory_SetMaterialWrapper(*args)
    def GetMaterialWrapper(*args): return _imesh.iMeshObjectFactory_GetMaterialWrapper(*args)
    def SetMixMode(*args): return _imesh.iMeshObjectFactory_SetMixMode(*args)
    def GetMixMode(*args): return _imesh.iMeshObjectFactory_GetMixMode(*args)
    scfGetVersion = staticmethod(_imesh.iMeshObjectFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iMeshObjectFactory
    __del__ = lambda self : None;
iMeshObjectFactory_swigregister = _imesh.iMeshObjectFactory_swigregister
iMeshObjectFactory_swigregister(iMeshObjectFactory)
iMeshObjectFactory_scfGetVersion = _imesh.iMeshObjectFactory_scfGetVersion

class iMeshObjectType(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NewFactory(*args): return _imesh.iMeshObjectType_NewFactory(*args)
    scfGetVersion = staticmethod(_imesh.iMeshObjectType_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iMeshObjectType
    __del__ = lambda self : None;
iMeshObjectType_swigregister = _imesh.iMeshObjectType_swigregister
iMeshObjectType_swigregister(iMeshObjectType)
iMeshObjectType_scfGetVersion = _imesh.iMeshObjectType_scfGetVersion

class csCharArrayArray(core.CustomAllocated):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _imesh.delete_csCharArrayArray
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _imesh.new_csCharArrayArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetSize(*args): return _imesh.csCharArrayArray_GetSize(*args)
    def Get(*args): return _imesh.csCharArrayArray_Get(*args)
    def Put(*args): return _imesh.csCharArrayArray_Put(*args)
    def Push(*args): return _imesh.csCharArrayArray_Push(*args)
    def Merge(*args): return _imesh.csCharArrayArray_Merge(*args)
    def MergeSmart(*args): return _imesh.csCharArrayArray_MergeSmart(*args)
    def Pop(*args): return _imesh.csCharArrayArray_Pop(*args)
    def Top(*args): return _imesh.csCharArrayArray_Top(*args)
    def Insert(*args): return _imesh.csCharArrayArray_Insert(*args)
    def Contains(*args): return _imesh.csCharArrayArray_Contains(*args)
    def DeleteAll(*args): return _imesh.csCharArrayArray_DeleteAll(*args)
    def Truncate(*args): return _imesh.csCharArrayArray_Truncate(*args)
    def Empty(*args): return _imesh.csCharArrayArray_Empty(*args)
    def IsEmpty(*args): return _imesh.csCharArrayArray_IsEmpty(*args)
    def SetMinimalCapacity(*args): return _imesh.csCharArrayArray_SetMinimalCapacity(*args)
    def DeleteIndex(*args): return _imesh.csCharArrayArray_DeleteIndex(*args)
    def DeleteIndexFast(*args): return _imesh.csCharArrayArray_DeleteIndexFast(*args)
    def DeleteRange(*args): return _imesh.csCharArrayArray_DeleteRange(*args)
    def __eq__(*args): return _imesh.csCharArrayArray___eq__(*args)
    def __ne__(*args): return _imesh.csCharArrayArray___ne__(*args)
    def GetAllocator(*args): return _imesh.csCharArrayArray_GetAllocator(*args)
csCharArrayArray_swigregister = _imesh.csCharArrayArray_swigregister
csCharArrayArray_swigregister(csCharArrayArray)

class iTerrainObjectState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetMaterialPalette(*args): return _imesh.iTerrainObjectState_SetMaterialPalette(*args)
    def GetMaterialPalette(*args): return _imesh.iTerrainObjectState_GetMaterialPalette(*args)
    def SetMaterialMap(*args): return _imesh.iTerrainObjectState_SetMaterialMap(*args)
    def SetMaterialAlphaMaps(*args): return _imesh.iTerrainObjectState_SetMaterialAlphaMaps(*args)
    def SetLODValue(*args): return _imesh.iTerrainObjectState_SetLODValue(*args)
    def GetLODValue(*args): return _imesh.iTerrainObjectState_GetLODValue(*args)
    def SaveState(*args): return _imesh.iTerrainObjectState_SaveState(*args)
    def RestoreState(*args): return _imesh.iTerrainObjectState_RestoreState(*args)
    def CollisionDetect(*args): return _imesh.iTerrainObjectState_CollisionDetect(*args)
    def SetStaticLighting(*args): return _imesh.iTerrainObjectState_SetStaticLighting(*args)
    def GetStaticLighting(*args): return _imesh.iTerrainObjectState_GetStaticLighting(*args)
    def SetCastShadows(*args): return _imesh.iTerrainObjectState_SetCastShadows(*args)
    def GetCastShadows(*args): return _imesh.iTerrainObjectState_GetCastShadows(*args)
    def SetMaterialMapFile(*args): return _imesh.iTerrainObjectState_SetMaterialMapFile(*args)
    def GetMaterialMapFile(*args): return _imesh.iTerrainObjectState_GetMaterialMapFile(*args)
    def SetTopNeighbor(*args): return _imesh.iTerrainObjectState_SetTopNeighbor(*args)
    def SetRightNeighbor(*args): return _imesh.iTerrainObjectState_SetRightNeighbor(*args)
    def SetLeftNeighbor(*args): return _imesh.iTerrainObjectState_SetLeftNeighbor(*args)
    def SetBottomNeighbor(*args): return _imesh.iTerrainObjectState_SetBottomNeighbor(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainObjectState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainObjectState
    __del__ = lambda self : None;
iTerrainObjectState_swigregister = _imesh.iTerrainObjectState_swigregister
iTerrainObjectState_swigregister(iTerrainObjectState)
iTerrainObjectState_scfGetVersion = _imesh.iTerrainObjectState_scfGetVersion

class iTerrainFactoryState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetTerraFormer(*args): return _imesh.iTerrainFactoryState_SetTerraFormer(*args)
    def GetTerraFormer(*args): return _imesh.iTerrainFactoryState_GetTerraFormer(*args)
    def SetSamplerRegion(*args): return _imesh.iTerrainFactoryState_SetSamplerRegion(*args)
    def GetSamplerRegion(*args): return _imesh.iTerrainFactoryState_GetSamplerRegion(*args)
    def SaveState(*args): return _imesh.iTerrainFactoryState_SaveState(*args)
    def RestoreState(*args): return _imesh.iTerrainFactoryState_RestoreState(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainFactoryState_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainFactoryState
    __del__ = lambda self : None;
iTerrainFactoryState_swigregister = _imesh.iTerrainFactoryState_swigregister
iTerrainFactoryState_swigregister(iTerrainFactoryState)
iTerrainFactoryState_scfGetVersion = _imesh.iTerrainFactoryState_scfGetVersion

class csLockedHeightData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    data = _swig_property(_imesh.csLockedHeightData_data_get, _imesh.csLockedHeightData_data_set)
    pitch = _swig_property(_imesh.csLockedHeightData_pitch_get, _imesh.csLockedHeightData_pitch_set)
    def Get(*args): return _imesh.csLockedHeightData_Get(*args)
    def Set(*args): return _imesh.csLockedHeightData_Set(*args)
    def __init__(self, *args): 
        this = _imesh.new_csLockedHeightData(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csLockedHeightData
    __del__ = lambda self : None;
csLockedHeightData_swigregister = _imesh.csLockedHeightData_swigregister
csLockedHeightData_swigregister(csLockedHeightData)

class csLockedMaterialMap(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    data = _swig_property(_imesh.csLockedMaterialMap_data_get, _imesh.csLockedMaterialMap_data_set)
    pitch = _swig_property(_imesh.csLockedMaterialMap_pitch_get, _imesh.csLockedMaterialMap_pitch_set)
    def Get(*args): return _imesh.csLockedMaterialMap_Get(*args)
    def Set(*args): return _imesh.csLockedMaterialMap_Set(*args)
    def __init__(self, *args): 
        this = _imesh.new_csLockedMaterialMap(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csLockedMaterialMap
    __del__ = lambda self : None;
csLockedMaterialMap_swigregister = _imesh.csLockedMaterialMap_swigregister
csLockedMaterialMap_swigregister(csLockedMaterialMap)

class iTerrainVector3Array(csgeom.csVector3ArrayChangeAll):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _imesh.delete_iTerrainVector3Array
    __del__ = lambda self : None;
iTerrainVector3Array_swigregister = _imesh.iTerrainVector3Array_swigregister
iTerrainVector3Array_swigregister(iTerrainVector3Array)

class iTerrainCollisionPairArray(ivaria.csCollisionPairArrayChangeAll):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _imesh.delete_iTerrainCollisionPairArray
    __del__ = lambda self : None;
iTerrainCollisionPairArray_swigregister = _imesh.iTerrainCollisionPairArray_swigregister
iTerrainCollisionPairArray_swigregister(iTerrainCollisionPairArray)

class iTerrainCellCollisionProperties(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCollidable(*args): return _imesh.iTerrainCellCollisionProperties_GetCollidable(*args)
    def SetCollidable(*args): return _imesh.iTerrainCellCollisionProperties_SetCollidable(*args)
    def SetParameter(*args): return _imesh.iTerrainCellCollisionProperties_SetParameter(*args)
    def Clone(*args): return _imesh.iTerrainCellCollisionProperties_Clone(*args)
    def GetParameterCount(*args): return _imesh.iTerrainCellCollisionProperties_GetParameterCount(*args)
    def GetParameterName(*args): return _imesh.iTerrainCellCollisionProperties_GetParameterName(*args)
    def GetParameterValue(*args): return _imesh.iTerrainCellCollisionProperties_GetParameterValue(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainCellCollisionProperties_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainCellCollisionProperties
    __del__ = lambda self : None;
iTerrainCellCollisionProperties_swigregister = _imesh.iTerrainCellCollisionProperties_swigregister
iTerrainCellCollisionProperties_swigregister(iTerrainCellCollisionProperties)
iTerrainCellCollisionProperties_scfGetVersion = _imesh.iTerrainCellCollisionProperties_scfGetVersion

class iTerrainCellRenderProperties(ivideo.iShaderVariableContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetVisible(*args): return _imesh.iTerrainCellRenderProperties_GetVisible(*args)
    def SetVisible(*args): return _imesh.iTerrainCellRenderProperties_SetVisible(*args)
    def SetParameter(*args): return _imesh.iTerrainCellRenderProperties_SetParameter(*args)
    def Clone(*args): return _imesh.iTerrainCellRenderProperties_Clone(*args)
    def GetParameterCount(*args): return _imesh.iTerrainCellRenderProperties_GetParameterCount(*args)
    def GetParameterName(*args): return _imesh.iTerrainCellRenderProperties_GetParameterName(*args)
    def GetParameterValue(*args): return _imesh.iTerrainCellRenderProperties_GetParameterValue(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainCellRenderProperties_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainCellRenderProperties
    __del__ = lambda self : None;
iTerrainCellRenderProperties_swigregister = _imesh.iTerrainCellRenderProperties_swigregister
iTerrainCellRenderProperties_swigregister(iTerrainCellRenderProperties)
iTerrainCellRenderProperties_scfGetVersion = _imesh.iTerrainCellRenderProperties_scfGetVersion

class iTerrainCellFeederProperties(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetHeightmapSource(*args): return _imesh.iTerrainCellFeederProperties_SetHeightmapSource(*args)
    def SetMaterialMapSource(*args): return _imesh.iTerrainCellFeederProperties_SetMaterialMapSource(*args)
    def SetHeightOffset(*args): return _imesh.iTerrainCellFeederProperties_SetHeightOffset(*args)
    def AddAlphaMap(*args): return _imesh.iTerrainCellFeederProperties_AddAlphaMap(*args)
    def SetParameter(*args): return _imesh.iTerrainCellFeederProperties_SetParameter(*args)
    def Clone(*args): return _imesh.iTerrainCellFeederProperties_Clone(*args)
    def GetParameterCount(*args): return _imesh.iTerrainCellFeederProperties_GetParameterCount(*args)
    def GetParameterName(*args): return _imesh.iTerrainCellFeederProperties_GetParameterName(*args)
    def GetParameterValue(*args): return _imesh.iTerrainCellFeederProperties_GetParameterValue(*args)
    def GetAlphaMapCount(*args): return _imesh.iTerrainCellFeederProperties_GetAlphaMapCount(*args)
    def GetAlphaMapMaterial(*args): return _imesh.iTerrainCellFeederProperties_GetAlphaMapMaterial(*args)
    def GetAlphaMapSource(*args): return _imesh.iTerrainCellFeederProperties_GetAlphaMapSource(*args)
    def SetHeightmapSmooth(*args): return _imesh.iTerrainCellFeederProperties_SetHeightmapSmooth(*args)
    def GetHeightmapSmooth(*args): return _imesh.iTerrainCellFeederProperties_GetHeightmapSmooth(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainCellFeederProperties_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainCellFeederProperties
    __del__ = lambda self : None;
iTerrainCellFeederProperties_swigregister = _imesh.iTerrainCellFeederProperties_swigregister
iTerrainCellFeederProperties_swigregister(iTerrainCellFeederProperties)
iTerrainCellFeederProperties_scfGetVersion = _imesh.iTerrainCellFeederProperties_scfGetVersion

class iTerrainDataFeeder(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateProperties(*args): return _imesh.iTerrainDataFeeder_CreateProperties(*args)
    def PreLoad(*args): return _imesh.iTerrainDataFeeder_PreLoad(*args)
    def Load(*args): return _imesh.iTerrainDataFeeder_Load(*args)
    def SetParameter(*args): return _imesh.iTerrainDataFeeder_SetParameter(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainDataFeeder_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainDataFeeder
    __del__ = lambda self : None;
iTerrainDataFeeder_swigregister = _imesh.iTerrainDataFeeder_swigregister
iTerrainDataFeeder_swigregister(iTerrainDataFeeder)
iTerrainDataFeeder_scfGetVersion = _imesh.iTerrainDataFeeder_scfGetVersion

class csTerrainColliderCollideSegmentResult(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    hit = _swig_property(_imesh.csTerrainColliderCollideSegmentResult_hit_get, _imesh.csTerrainColliderCollideSegmentResult_hit_set)
    isect = _swig_property(_imesh.csTerrainColliderCollideSegmentResult_isect_get, _imesh.csTerrainColliderCollideSegmentResult_isect_set)
    a = _swig_property(_imesh.csTerrainColliderCollideSegmentResult_a_get, _imesh.csTerrainColliderCollideSegmentResult_a_set)
    b = _swig_property(_imesh.csTerrainColliderCollideSegmentResult_b_get, _imesh.csTerrainColliderCollideSegmentResult_b_set)
    c = _swig_property(_imesh.csTerrainColliderCollideSegmentResult_c_get, _imesh.csTerrainColliderCollideSegmentResult_c_set)
    def __init__(self, *args): 
        this = _imesh.new_csTerrainColliderCollideSegmentResult(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csTerrainColliderCollideSegmentResult
    __del__ = lambda self : None;
csTerrainColliderCollideSegmentResult_swigregister = _imesh.csTerrainColliderCollideSegmentResult_swigregister
csTerrainColliderCollideSegmentResult_swigregister(csTerrainColliderCollideSegmentResult)

class iTerrainCollider(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateProperties(*args): return _imesh.iTerrainCollider_CreateProperties(*args)
    def CollideSegment(*args): return _imesh.iTerrainCollider_CollideSegment(*args)
    def CollideTriangles(*args): return _imesh.iTerrainCollider_CollideTriangles(*args)
    def Collide(*args): return _imesh.iTerrainCollider_Collide(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainCollider_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainCollider
    __del__ = lambda self : None;
iTerrainCollider_swigregister = _imesh.iTerrainCollider_swigregister
iTerrainCollider_swigregister(iTerrainCollider)
iTerrainCollider_scfGetVersion = _imesh.iTerrainCollider_scfGetVersion

class iTerrainRenderer(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateProperties(*args): return _imesh.iTerrainRenderer_CreateProperties(*args)
    def ConnectTerrain(*args): return _imesh.iTerrainRenderer_ConnectTerrain(*args)
    def DisconnectTerrain(*args): return _imesh.iTerrainRenderer_DisconnectTerrain(*args)
    def GetRenderMeshes(*args): return _imesh.iTerrainRenderer_GetRenderMeshes(*args)
    def OnMaterialPaletteUpdate(*args): return _imesh.iTerrainRenderer_OnMaterialPaletteUpdate(*args)
    def OnMaterialMaskUpdate(*args): return _imesh.iTerrainRenderer_OnMaterialMaskUpdate(*args)
    def OnAlphaMapUpdate(*args): return _imesh.iTerrainRenderer_OnAlphaMapUpdate(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainRenderer_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainRenderer
    __del__ = lambda self : None;
iTerrainRenderer_swigregister = _imesh.iTerrainRenderer_swigregister
iTerrainRenderer_swigregister(iTerrainRenderer)
iTerrainRenderer_scfGetVersion = _imesh.iTerrainRenderer_scfGetVersion

class iTerrainCellHeightDataCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def OnHeightUpdate(*args): return _imesh.iTerrainCellHeightDataCallback_OnHeightUpdate(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainCellHeightDataCallback_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainCellHeightDataCallback
    __del__ = lambda self : None;
iTerrainCellHeightDataCallback_swigregister = _imesh.iTerrainCellHeightDataCallback_swigregister
iTerrainCellHeightDataCallback_swigregister(iTerrainCellHeightDataCallback)
iTerrainCellHeightDataCallback_scfGetVersion = _imesh.iTerrainCellHeightDataCallback_scfGetVersion

class iTerrainCellLoadCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def OnCellLoad(*args): return _imesh.iTerrainCellLoadCallback_OnCellLoad(*args)
    def OnCellPreLoad(*args): return _imesh.iTerrainCellLoadCallback_OnCellPreLoad(*args)
    def OnCellUnload(*args): return _imesh.iTerrainCellLoadCallback_OnCellUnload(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainCellLoadCallback_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainCellLoadCallback
    __del__ = lambda self : None;
iTerrainCellLoadCallback_swigregister = _imesh.iTerrainCellLoadCallback_swigregister
iTerrainCellLoadCallback_swigregister(iTerrainCellLoadCallback)
iTerrainCellLoadCallback_scfGetVersion = _imesh.iTerrainCellLoadCallback_scfGetVersion

class iTerrainSystem(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetCell(*args): return _imesh.iTerrainSystem_GetCell(*args)
    def GetCellCount(*args): return _imesh.iTerrainSystem_GetCellCount(*args)
    def GetMaterialPalette(*args): return _imesh.iTerrainSystem_GetMaterialPalette(*args)
    def SetMaterialPalette(*args): return _imesh.iTerrainSystem_SetMaterialPalette(*args)
    def CollideSegment(*args): return _imesh.iTerrainSystem_CollideSegment(*args)
    def CollideTriangles(*args): return _imesh.iTerrainSystem_CollideTriangles(*args)
    def Collide(*args): return _imesh.iTerrainSystem_Collide(*args)
    def GetVirtualViewDistance(*args): return _imesh.iTerrainSystem_GetVirtualViewDistance(*args)
    def SetVirtualViewDistance(*args): return _imesh.iTerrainSystem_SetVirtualViewDistance(*args)
    def GetAutoPreLoad(*args): return _imesh.iTerrainSystem_GetAutoPreLoad(*args)
    def SetAutoPreLoad(*args): return _imesh.iTerrainSystem_SetAutoPreLoad(*args)
    def PreLoadCells(*args): return _imesh.iTerrainSystem_PreLoadCells(*args)
    def GetHeight(*args): return _imesh.iTerrainSystem_GetHeight(*args)
    def GetTangent(*args): return _imesh.iTerrainSystem_GetTangent(*args)
    def GetBinormal(*args): return _imesh.iTerrainSystem_GetBinormal(*args)
    def GetNormal(*args): return _imesh.iTerrainSystem_GetNormal(*args)
    def GetMaxLoadedCells(*args): return _imesh.iTerrainSystem_GetMaxLoadedCells(*args)
    def SetMaxLoadedCells(*args): return _imesh.iTerrainSystem_SetMaxLoadedCells(*args)
    def UnloadOldCells(*args): return _imesh.iTerrainSystem_UnloadOldCells(*args)
    def AddCellLoadListener(*args): return _imesh.iTerrainSystem_AddCellLoadListener(*args)
    def RemoveCellLoadListener(*args): return _imesh.iTerrainSystem_RemoveCellLoadListener(*args)
    def AddCellHeightUpdateListener(*args): return _imesh.iTerrainSystem_AddCellHeightUpdateListener(*args)
    def RemoveCellHeightUpdateListener(*args): return _imesh.iTerrainSystem_RemoveCellHeightUpdateListener(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainSystem_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainSystem
    __del__ = lambda self : None;
iTerrainSystem_swigregister = _imesh.iTerrainSystem_swigregister
iTerrainSystem_swigregister(iTerrainSystem)
iTerrainSystem_scfGetVersion = _imesh.iTerrainSystem_scfGetVersion

class iTerrainCell(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    NotLoaded = _imesh.iTerrainCell_NotLoaded
    PreLoaded = _imesh.iTerrainCell_PreLoaded
    Loaded = _imesh.iTerrainCell_Loaded
    def GetLoadState(*args): return _imesh.iTerrainCell_GetLoadState(*args)
    def SetLoadState(*args): return _imesh.iTerrainCell_SetLoadState(*args)
    def GetTerrain(*args): return _imesh.iTerrainCell_GetTerrain(*args)
    def GetName(*args): return _imesh.iTerrainCell_GetName(*args)
    def GetRenderProperties(*args): return _imesh.iTerrainCell_GetRenderProperties(*args)
    def GetCollisionProperties(*args): return _imesh.iTerrainCell_GetCollisionProperties(*args)
    def GetFeederProperties(*args): return _imesh.iTerrainCell_GetFeederProperties(*args)
    def GetGridWidth(*args): return _imesh.iTerrainCell_GetGridWidth(*args)
    def GetGridHeight(*args): return _imesh.iTerrainCell_GetGridHeight(*args)
    def GetHeightData(*args): return _imesh.iTerrainCell_GetHeightData(*args)
    def LockHeightData(*args): return _imesh.iTerrainCell_LockHeightData(*args)
    def UnlockHeightData(*args): return _imesh.iTerrainCell_UnlockHeightData(*args)
    def GetPosition(*args): return _imesh.iTerrainCell_GetPosition(*args)
    def GetSize(*args): return _imesh.iTerrainCell_GetSize(*args)
    def GetMaterialMapWidth(*args): return _imesh.iTerrainCell_GetMaterialMapWidth(*args)
    def GetMaterialMapHeight(*args): return _imesh.iTerrainCell_GetMaterialMapHeight(*args)
    def GetMaterialPersistent(*args): return _imesh.iTerrainCell_GetMaterialPersistent(*args)
    def LockMaterialMap(*args): return _imesh.iTerrainCell_LockMaterialMap(*args)
    def UnlockMaterialMap(*args): return _imesh.iTerrainCell_UnlockMaterialMap(*args)
    def SetMaterialMask(*args): return _imesh.iTerrainCell_SetMaterialMask(*args)
    def SetAlphaMask(*args): return _imesh.iTerrainCell_SetAlphaMask(*args)
    def SetBaseMaterial(*args): return _imesh.iTerrainCell_SetBaseMaterial(*args)
    def GetBaseMaterial(*args): return _imesh.iTerrainCell_GetBaseMaterial(*args)
    def CollideSegment(*args): return _imesh.iTerrainCell_CollideSegment(*args)
    def CollideTriangles(*args): return _imesh.iTerrainCell_CollideTriangles(*args)
    def Collide(*args): return _imesh.iTerrainCell_Collide(*args)
    def GetHeight(*args): return _imesh.iTerrainCell_GetHeight(*args)
    def GetTangent(*args): return _imesh.iTerrainCell_GetTangent(*args)
    def GetBinormal(*args): return _imesh.iTerrainCell_GetBinormal(*args)
    def GetNormal(*args): return _imesh.iTerrainCell_GetNormal(*args)
    def GetRenderData(*args): return _imesh.iTerrainCell_GetRenderData(*args)
    def SetRenderData(*args): return _imesh.iTerrainCell_SetRenderData(*args)
    def GetCollisionData(*args): return _imesh.iTerrainCell_GetCollisionData(*args)
    def SetCollisionData(*args): return _imesh.iTerrainCell_SetCollisionData(*args)
    def GetFeederData(*args): return _imesh.iTerrainCell_GetFeederData(*args)
    def SetFeederData(*args): return _imesh.iTerrainCell_SetFeederData(*args)
    def SetName(*args): return _imesh.iTerrainCell_SetName(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainCell_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainCell
    __del__ = lambda self : None;
iTerrainCell_swigregister = _imesh.iTerrainCell_swigregister
iTerrainCell_swigregister(iTerrainCell)
iTerrainCell_scfGetVersion = _imesh.iTerrainCell_scfGetVersion

class iTerrainFactoryCell(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetRenderProperties(*args): return _imesh.iTerrainFactoryCell_GetRenderProperties(*args)
    def GetCollisionProperties(*args): return _imesh.iTerrainFactoryCell_GetCollisionProperties(*args)
    def GetFeederProperties(*args): return _imesh.iTerrainFactoryCell_GetFeederProperties(*args)
    def SetBaseMaterial(*args): return _imesh.iTerrainFactoryCell_SetBaseMaterial(*args)
    def GetName(*args): return _imesh.iTerrainFactoryCell_GetName(*args)
    def SetName(*args): return _imesh.iTerrainFactoryCell_SetName(*args)
    def GetGridWidth(*args): return _imesh.iTerrainFactoryCell_GetGridWidth(*args)
    def GetGridHeight(*args): return _imesh.iTerrainFactoryCell_GetGridHeight(*args)
    def GetPosition(*args): return _imesh.iTerrainFactoryCell_GetPosition(*args)
    def GetSize(*args): return _imesh.iTerrainFactoryCell_GetSize(*args)
    def GetMaterialMapWidth(*args): return _imesh.iTerrainFactoryCell_GetMaterialMapWidth(*args)
    def GetMaterialMapHeight(*args): return _imesh.iTerrainFactoryCell_GetMaterialMapHeight(*args)
    def GetBaseMaterial(*args): return _imesh.iTerrainFactoryCell_GetBaseMaterial(*args)
    def GetMaterialPersistent(*args): return _imesh.iTerrainFactoryCell_GetMaterialPersistent(*args)
    def SetGridWidth(*args): return _imesh.iTerrainFactoryCell_SetGridWidth(*args)
    def SetGridHeight(*args): return _imesh.iTerrainFactoryCell_SetGridHeight(*args)
    def SetPosition(*args): return _imesh.iTerrainFactoryCell_SetPosition(*args)
    def SetSize(*args): return _imesh.iTerrainFactoryCell_SetSize(*args)
    def SetMaterialMapWidth(*args): return _imesh.iTerrainFactoryCell_SetMaterialMapWidth(*args)
    def SetMaterialMapHeight(*args): return _imesh.iTerrainFactoryCell_SetMaterialMapHeight(*args)
    def SetMaterialPersistent(*args): return _imesh.iTerrainFactoryCell_SetMaterialPersistent(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainFactoryCell_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainFactoryCell
    __del__ = lambda self : None;
iTerrainFactoryCell_swigregister = _imesh.iTerrainFactoryCell_swigregister
iTerrainFactoryCell_swigregister(iTerrainFactoryCell)
iTerrainFactoryCell_scfGetVersion = _imesh.iTerrainFactoryCell_scfGetVersion

class iTerrainFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetRenderer(*args): return _imesh.iTerrainFactory_SetRenderer(*args)
    def SetCollider(*args): return _imesh.iTerrainFactory_SetCollider(*args)
    def SetFeeder(*args): return _imesh.iTerrainFactory_SetFeeder(*args)
    def SetMaxLoadedCells(*args): return _imesh.iTerrainFactory_SetMaxLoadedCells(*args)
    def SetVirtualViewDistance(*args): return _imesh.iTerrainFactory_SetVirtualViewDistance(*args)
    def SetAutoPreLoad(*args): return _imesh.iTerrainFactory_SetAutoPreLoad(*args)
    def GetRenderer(*args): return _imesh.iTerrainFactory_GetRenderer(*args)
    def GetCollider(*args): return _imesh.iTerrainFactory_GetCollider(*args)
    def GetFeeder(*args): return _imesh.iTerrainFactory_GetFeeder(*args)
    def GetMaxLoadedCells(*args): return _imesh.iTerrainFactory_GetMaxLoadedCells(*args)
    def GetCellCount(*args): return _imesh.iTerrainFactory_GetCellCount(*args)
    def GetDefaultCell(*args): return _imesh.iTerrainFactory_GetDefaultCell(*args)
    def AddCell(*args): return _imesh.iTerrainFactory_AddCell(*args)
    def GetCell(*args): return _imesh.iTerrainFactory_GetCell(*args)
    scfGetVersion = staticmethod(_imesh.iTerrainFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iTerrainFactory
    __del__ = lambda self : None;
iTerrainFactory_swigregister = _imesh.iTerrainFactory_swigregister
iTerrainFactory_swigregister(iTerrainFactory)
iTerrainFactory_scfGetVersion = _imesh.iTerrainFactory_scfGetVersion

CS_PARTICLE_SORT_NONE = _imesh.CS_PARTICLE_SORT_NONE
CS_PARTICLE_SORT_DISTANCE = _imesh.CS_PARTICLE_SORT_DISTANCE
CS_PARTICLE_SORT_DOT = _imesh.CS_PARTICLE_SORT_DOT
CS_PARTICLE_CAMERAFACE = _imesh.CS_PARTICLE_CAMERAFACE
CS_PARTICLE_CAMERAFACE_APPROX = _imesh.CS_PARTICLE_CAMERAFACE_APPROX
CS_PARTICLE_ORIENT_COMMON = _imesh.CS_PARTICLE_ORIENT_COMMON
CS_PARTICLE_ORIENT_COMMON_APPROX = _imesh.CS_PARTICLE_ORIENT_COMMON_APPROX
CS_PARTICLE_ORIENT_VELOCITY = _imesh.CS_PARTICLE_ORIENT_VELOCITY
CS_PARTICLE_ORIENT_SELF = _imesh.CS_PARTICLE_ORIENT_SELF
CS_PARTICLE_ORIENT_SELF_FORWARD = _imesh.CS_PARTICLE_ORIENT_SELF_FORWARD
CS_PARTICLE_ROTATE_NONE = _imesh.CS_PARTICLE_ROTATE_NONE
CS_PARTICLE_ROTATE_TEXCOORD = _imesh.CS_PARTICLE_ROTATE_TEXCOORD
CS_PARTICLE_ROTATE_VERTICES = _imesh.CS_PARTICLE_ROTATE_VERTICES
CS_PARTICLE_INTEGRATE_NONE = _imesh.CS_PARTICLE_INTEGRATE_NONE
CS_PARTICLE_INTEGRATE_LINEAR = _imesh.CS_PARTICLE_INTEGRATE_LINEAR
CS_PARTICLE_INTEGRATE_BOTH = _imesh.CS_PARTICLE_INTEGRATE_BOTH
CS_PARTICLE_LOCAL_MODE = _imesh.CS_PARTICLE_LOCAL_MODE
CS_PARTICLE_LOCAL_EMITTER = _imesh.CS_PARTICLE_LOCAL_EMITTER
CS_PARTICLE_WORLD_MODE = _imesh.CS_PARTICLE_WORLD_MODE
class csParticle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    position = _swig_property(_imesh.csParticle_position_get, _imesh.csParticle_position_set)
    mass = _swig_property(_imesh.csParticle_mass_get, _imesh.csParticle_mass_set)
    orientation = _swig_property(_imesh.csParticle_orientation_get, _imesh.csParticle_orientation_set)
    linearVelocity = _swig_property(_imesh.csParticle_linearVelocity_get, _imesh.csParticle_linearVelocity_set)
    timeToLive = _swig_property(_imesh.csParticle_timeToLive_get, _imesh.csParticle_timeToLive_set)
    angularVelocity = _swig_property(_imesh.csParticle_angularVelocity_get, _imesh.csParticle_angularVelocity_set)
    pad = _swig_property(_imesh.csParticle_pad_get, _imesh.csParticle_pad_set)
    def __init__(self, *args): 
        this = _imesh.new_csParticle(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csParticle
    __del__ = lambda self : None;
csParticle_swigregister = _imesh.csParticle_swigregister
csParticle_swigregister(csParticle)

class csParticleAux(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    color = _swig_property(_imesh.csParticleAux_color_get, _imesh.csParticleAux_color_set)
    particleSize = _swig_property(_imesh.csParticleAux_particleSize_get, _imesh.csParticleAux_particleSize_set)
    pad = _swig_property(_imesh.csParticleAux_pad_get, _imesh.csParticleAux_pad_set)
    def __init__(self, *args): 
        this = _imesh.new_csParticleAux(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csParticleAux
    __del__ = lambda self : None;
csParticleAux_swigregister = _imesh.csParticleAux_swigregister
csParticleAux_swigregister(csParticleAux)

class csParticleBuffer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    particleData = _swig_property(_imesh.csParticleBuffer_particleData_get, _imesh.csParticleBuffer_particleData_set)
    particleAuxData = _swig_property(_imesh.csParticleBuffer_particleAuxData_get, _imesh.csParticleBuffer_particleAuxData_set)
    particleCount = _swig_property(_imesh.csParticleBuffer_particleCount_get, _imesh.csParticleBuffer_particleCount_set)
    def __init__(self, *args): 
        this = _imesh.new_csParticleBuffer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imesh.delete_csParticleBuffer
    __del__ = lambda self : None;
csParticleBuffer_swigregister = _imesh.csParticleBuffer_swigregister
csParticleBuffer_swigregister(csParticleBuffer)

class iParticleEmitter(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetEnabled(*args): return _imesh.iParticleEmitter_SetEnabled(*args)
    def GetEnabled(*args): return _imesh.iParticleEmitter_GetEnabled(*args)
    def SetStartTime(*args): return _imesh.iParticleEmitter_SetStartTime(*args)
    def GetStartTime(*args): return _imesh.iParticleEmitter_GetStartTime(*args)
    def SetDuration(*args): return _imesh.iParticleEmitter_SetDuration(*args)
    def GetDuration(*args): return _imesh.iParticleEmitter_GetDuration(*args)
    def SetEmissionRate(*args): return _imesh.iParticleEmitter_SetEmissionRate(*args)
    def GetEmissionRate(*args): return _imesh.iParticleEmitter_GetEmissionRate(*args)
    def SetInitialTTL(*args): return _imesh.iParticleEmitter_SetInitialTTL(*args)
    def GetInitialTTL(*args): return _imesh.iParticleEmitter_GetInitialTTL(*args)
    def SetInitialMass(*args): return _imesh.iParticleEmitter_SetInitialMass(*args)
    def GetInitialMass(*args): return _imesh.iParticleEmitter_GetInitialMass(*args)
    def Clone(*args): return _imesh.iParticleEmitter_Clone(*args)
    def ParticlesToEmit(*args): return _imesh.iParticleEmitter_ParticlesToEmit(*args)
    def EmitParticles(*args): return _imesh.iParticleEmitter_EmitParticles(*args)
    scfGetVersion = staticmethod(_imesh.iParticleEmitter_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleEmitter
    __del__ = lambda self : None;
iParticleEmitter_swigregister = _imesh.iParticleEmitter_swigregister
iParticleEmitter_swigregister(iParticleEmitter)
iParticleEmitter_scfGetVersion = _imesh.iParticleEmitter_scfGetVersion

class iParticleEffector(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Clone(*args): return _imesh.iParticleEffector_Clone(*args)
    def EffectParticles(*args): return _imesh.iParticleEffector_EffectParticles(*args)
    scfGetVersion = staticmethod(_imesh.iParticleEffector_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleEffector
    __del__ = lambda self : None;
iParticleEffector_swigregister = _imesh.iParticleEffector_swigregister
iParticleEffector_swigregister(iParticleEffector)
iParticleEffector_scfGetVersion = _imesh.iParticleEffector_scfGetVersion

class iParticleSystemBase(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetParticleRenderOrientation(*args): return _imesh.iParticleSystemBase_SetParticleRenderOrientation(*args)
    def GetParticleRenderOrientation(*args): return _imesh.iParticleSystemBase_GetParticleRenderOrientation(*args)
    def SetRotationMode(*args): return _imesh.iParticleSystemBase_SetRotationMode(*args)
    def GetRotationMode(*args): return _imesh.iParticleSystemBase_GetRotationMode(*args)
    def SetSortMode(*args): return _imesh.iParticleSystemBase_SetSortMode(*args)
    def GetSortMode(*args): return _imesh.iParticleSystemBase_GetSortMode(*args)
    def SetIntegrationMode(*args): return _imesh.iParticleSystemBase_SetIntegrationMode(*args)
    def GetIntegrationMode(*args): return _imesh.iParticleSystemBase_GetIntegrationMode(*args)
    def SetCommonDirection(*args): return _imesh.iParticleSystemBase_SetCommonDirection(*args)
    def GetCommonDirection(*args): return _imesh.iParticleSystemBase_GetCommonDirection(*args)
    def SetTransformMode(*args): return _imesh.iParticleSystemBase_SetTransformMode(*args)
    def GetTransformMode(*args): return _imesh.iParticleSystemBase_GetTransformMode(*args)
    def SetUseIndividualSize(*args): return _imesh.iParticleSystemBase_SetUseIndividualSize(*args)
    def GetUseIndividualSize(*args): return _imesh.iParticleSystemBase_GetUseIndividualSize(*args)
    def SetParticleSize(*args): return _imesh.iParticleSystemBase_SetParticleSize(*args)
    def GetParticleSize(*args): return _imesh.iParticleSystemBase_GetParticleSize(*args)
    def SetMinBoundingBox(*args): return _imesh.iParticleSystemBase_SetMinBoundingBox(*args)
    def GetMinBoundingBox(*args): return _imesh.iParticleSystemBase_GetMinBoundingBox(*args)
    def AddEmitter(*args): return _imesh.iParticleSystemBase_AddEmitter(*args)
    def GetEmitter(*args): return _imesh.iParticleSystemBase_GetEmitter(*args)
    def RemoveEmitter(*args): return _imesh.iParticleSystemBase_RemoveEmitter(*args)
    def GetEmitterCount(*args): return _imesh.iParticleSystemBase_GetEmitterCount(*args)
    def AddEffector(*args): return _imesh.iParticleSystemBase_AddEffector(*args)
    def GetEffector(*args): return _imesh.iParticleSystemBase_GetEffector(*args)
    def RemoveEffector(*args): return _imesh.iParticleSystemBase_RemoveEffector(*args)
    def GetEffectorCount(*args): return _imesh.iParticleSystemBase_GetEffectorCount(*args)
    scfGetVersion = staticmethod(_imesh.iParticleSystemBase_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleSystemBase
    __del__ = lambda self : None;
iParticleSystemBase_swigregister = _imesh.iParticleSystemBase_swigregister
iParticleSystemBase_swigregister(iParticleSystemBase)
iParticleSystemBase_scfGetVersion = _imesh.iParticleSystemBase_scfGetVersion

class iParticleSystemFactory(iParticleSystemBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetDeepCreation(*args): return _imesh.iParticleSystemFactory_SetDeepCreation(*args)
    def GetDeepCreation(*args): return _imesh.iParticleSystemFactory_GetDeepCreation(*args)
    scfGetVersion = staticmethod(_imesh.iParticleSystemFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleSystemFactory
    __del__ = lambda self : None;
iParticleSystemFactory_swigregister = _imesh.iParticleSystemFactory_swigregister
iParticleSystemFactory_swigregister(iParticleSystemFactory)
iParticleSystemFactory_scfGetVersion = _imesh.iParticleSystemFactory_scfGetVersion

class iParticleSystem(iParticleSystemBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetParticleCount(*args): return _imesh.iParticleSystem_GetParticleCount(*args)
    def GetParticle(*args): return _imesh.iParticleSystem_GetParticle(*args)
    def GetParticleAux(*args): return _imesh.iParticleSystem_GetParticleAux(*args)
    def LockForExternalControl(*args): return _imesh.iParticleSystem_LockForExternalControl(*args)
    def Advance(*args): return _imesh.iParticleSystem_Advance(*args)
    scfGetVersion = staticmethod(_imesh.iParticleSystem_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleSystem
    __del__ = lambda self : None;
iParticleSystem_swigregister = _imesh.iParticleSystem_swigregister
iParticleSystem_swigregister(iParticleSystem)
iParticleSystem_scfGetVersion = _imesh.iParticleSystem_scfGetVersion

CS_PARTICLE_BUILTIN_CENTER = _imesh.CS_PARTICLE_BUILTIN_CENTER
CS_PARTICLE_BUILTIN_VOLUME = _imesh.CS_PARTICLE_BUILTIN_VOLUME
CS_PARTICLE_BUILTIN_SURFACE = _imesh.CS_PARTICLE_BUILTIN_SURFACE
class iParticleBuiltinEmitterBase(iParticleEmitter):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetPosition(*args): return _imesh.iParticleBuiltinEmitterBase_SetPosition(*args)
    def GetPosition(*args): return _imesh.iParticleBuiltinEmitterBase_GetPosition(*args)
    def SetParticlePlacement(*args): return _imesh.iParticleBuiltinEmitterBase_SetParticlePlacement(*args)
    def GetParticlePlacement(*args): return _imesh.iParticleBuiltinEmitterBase_GetParticlePlacement(*args)
    def SetUniformVelocity(*args): return _imesh.iParticleBuiltinEmitterBase_SetUniformVelocity(*args)
    def GetUniformVelocity(*args): return _imesh.iParticleBuiltinEmitterBase_GetUniformVelocity(*args)
    def SetInitialVelocity(*args): return _imesh.iParticleBuiltinEmitterBase_SetInitialVelocity(*args)
    def GetInitialVelocity(*args): return _imesh.iParticleBuiltinEmitterBase_GetInitialVelocity(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEmitterBase_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEmitterBase
    __del__ = lambda self : None;
iParticleBuiltinEmitterBase_swigregister = _imesh.iParticleBuiltinEmitterBase_swigregister
iParticleBuiltinEmitterBase_swigregister(iParticleBuiltinEmitterBase)
iParticleBuiltinEmitterBase_scfGetVersion = _imesh.iParticleBuiltinEmitterBase_scfGetVersion

class iParticleBuiltinEmitterSphere(iParticleBuiltinEmitterBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetRadius(*args): return _imesh.iParticleBuiltinEmitterSphere_SetRadius(*args)
    def GetRadius(*args): return _imesh.iParticleBuiltinEmitterSphere_GetRadius(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEmitterSphere_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEmitterSphere
    __del__ = lambda self : None;
iParticleBuiltinEmitterSphere_swigregister = _imesh.iParticleBuiltinEmitterSphere_swigregister
iParticleBuiltinEmitterSphere_swigregister(iParticleBuiltinEmitterSphere)
iParticleBuiltinEmitterSphere_scfGetVersion = _imesh.iParticleBuiltinEmitterSphere_scfGetVersion

class iParticleBuiltinEmitterCone(iParticleBuiltinEmitterBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetExtent(*args): return _imesh.iParticleBuiltinEmitterCone_SetExtent(*args)
    def GetExtent(*args): return _imesh.iParticleBuiltinEmitterCone_GetExtent(*args)
    def SetConeAngle(*args): return _imesh.iParticleBuiltinEmitterCone_SetConeAngle(*args)
    def GetConeAngle(*args): return _imesh.iParticleBuiltinEmitterCone_GetConeAngle(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEmitterCone_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEmitterCone
    __del__ = lambda self : None;
iParticleBuiltinEmitterCone_swigregister = _imesh.iParticleBuiltinEmitterCone_swigregister
iParticleBuiltinEmitterCone_swigregister(iParticleBuiltinEmitterCone)
iParticleBuiltinEmitterCone_scfGetVersion = _imesh.iParticleBuiltinEmitterCone_scfGetVersion

class iParticleBuiltinEmitterBox(iParticleBuiltinEmitterBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetBox(*args): return _imesh.iParticleBuiltinEmitterBox_SetBox(*args)
    def GetBox(*args): return _imesh.iParticleBuiltinEmitterBox_GetBox(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEmitterBox_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEmitterBox
    __del__ = lambda self : None;
iParticleBuiltinEmitterBox_swigregister = _imesh.iParticleBuiltinEmitterBox_swigregister
iParticleBuiltinEmitterBox_swigregister(iParticleBuiltinEmitterBox)
iParticleBuiltinEmitterBox_scfGetVersion = _imesh.iParticleBuiltinEmitterBox_scfGetVersion

class iParticleBuiltinEmitterCylinder(iParticleBuiltinEmitterBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetRadius(*args): return _imesh.iParticleBuiltinEmitterCylinder_SetRadius(*args)
    def GetRadius(*args): return _imesh.iParticleBuiltinEmitterCylinder_GetRadius(*args)
    def SetExtent(*args): return _imesh.iParticleBuiltinEmitterCylinder_SetExtent(*args)
    def GetExtent(*args): return _imesh.iParticleBuiltinEmitterCylinder_GetExtent(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEmitterCylinder_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEmitterCylinder
    __del__ = lambda self : None;
iParticleBuiltinEmitterCylinder_swigregister = _imesh.iParticleBuiltinEmitterCylinder_swigregister
iParticleBuiltinEmitterCylinder_swigregister(iParticleBuiltinEmitterCylinder)
iParticleBuiltinEmitterCylinder_scfGetVersion = _imesh.iParticleBuiltinEmitterCylinder_scfGetVersion

class iParticleBuiltinEmitterFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateSphere(*args): return _imesh.iParticleBuiltinEmitterFactory_CreateSphere(*args)
    def CreateCone(*args): return _imesh.iParticleBuiltinEmitterFactory_CreateCone(*args)
    def CreateBox(*args): return _imesh.iParticleBuiltinEmitterFactory_CreateBox(*args)
    def CreateCylinder(*args): return _imesh.iParticleBuiltinEmitterFactory_CreateCylinder(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEmitterFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEmitterFactory
    __del__ = lambda self : None;
iParticleBuiltinEmitterFactory_swigregister = _imesh.iParticleBuiltinEmitterFactory_swigregister
iParticleBuiltinEmitterFactory_swigregister(iParticleBuiltinEmitterFactory)
iParticleBuiltinEmitterFactory_scfGetVersion = _imesh.iParticleBuiltinEmitterFactory_scfGetVersion

class iParticleBuiltinEffectorForce(iParticleEffector):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetAcceleration(*args): return _imesh.iParticleBuiltinEffectorForce_SetAcceleration(*args)
    def GetAcceleration(*args): return _imesh.iParticleBuiltinEffectorForce_GetAcceleration(*args)
    def SetForce(*args): return _imesh.iParticleBuiltinEffectorForce_SetForce(*args)
    def GetForce(*args): return _imesh.iParticleBuiltinEffectorForce_GetForce(*args)
    def SetRandomAcceleration(*args): return _imesh.iParticleBuiltinEffectorForce_SetRandomAcceleration(*args)
    def GetRandomAcceleration(*args): return _imesh.iParticleBuiltinEffectorForce_GetRandomAcceleration(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEffectorForce_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEffectorForce
    __del__ = lambda self : None;
iParticleBuiltinEffectorForce_swigregister = _imesh.iParticleBuiltinEffectorForce_swigregister
iParticleBuiltinEffectorForce_swigregister(iParticleBuiltinEffectorForce)
iParticleBuiltinEffectorForce_scfGetVersion = _imesh.iParticleBuiltinEffectorForce_scfGetVersion

class iParticleBuiltinEffectorLinColor(iParticleEffector):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def AddColor(*args): return _imesh.iParticleBuiltinEffectorLinColor_AddColor(*args)
    def RemoveColor(*args): return _imesh.iParticleBuiltinEffectorLinColor_RemoveColor(*args)
    def Clear(*args): return _imesh.iParticleBuiltinEffectorLinColor_Clear(*args)
    def SetColor(*args): return _imesh.iParticleBuiltinEffectorLinColor_SetColor(*args)
    def SetEndTTL(*args): return _imesh.iParticleBuiltinEffectorLinColor_SetEndTTL(*args)
    def GetColor(*args): return _imesh.iParticleBuiltinEffectorLinColor_GetColor(*args)
    def GetEndTTL(*args): return _imesh.iParticleBuiltinEffectorLinColor_GetEndTTL(*args)
    def GetColorCount(*args): return _imesh.iParticleBuiltinEffectorLinColor_GetColorCount(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEffectorLinColor_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEffectorLinColor
    __del__ = lambda self : None;
iParticleBuiltinEffectorLinColor_swigregister = _imesh.iParticleBuiltinEffectorLinColor_swigregister
iParticleBuiltinEffectorLinColor_swigregister(iParticleBuiltinEffectorLinColor)
iParticleBuiltinEffectorLinColor_scfGetVersion = _imesh.iParticleBuiltinEffectorLinColor_scfGetVersion

CS_PARTICLE_BUILTIN_SPIRAL = _imesh.CS_PARTICLE_BUILTIN_SPIRAL
CS_PARTICLE_BUILTIN_RADIALPOINT = _imesh.CS_PARTICLE_BUILTIN_RADIALPOINT
class iParticleBuiltinEffectorVelocityField(iParticleEffector):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetType(*args): return _imesh.iParticleBuiltinEffectorVelocityField_SetType(*args)
    def GetType(*args): return _imesh.iParticleBuiltinEffectorVelocityField_GetType(*args)
    def SetFParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_SetFParameter(*args)
    def GetFParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_GetFParameter(*args)
    def GetFParameterCount(*args): return _imesh.iParticleBuiltinEffectorVelocityField_GetFParameterCount(*args)
    def AddFParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_AddFParameter(*args)
    def RemoveFParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_RemoveFParameter(*args)
    def SetVParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_SetVParameter(*args)
    def GetVParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_GetVParameter(*args)
    def GetVParameterCount(*args): return _imesh.iParticleBuiltinEffectorVelocityField_GetVParameterCount(*args)
    def AddVParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_AddVParameter(*args)
    def RemoveVParameter(*args): return _imesh.iParticleBuiltinEffectorVelocityField_RemoveVParameter(*args)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEffectorVelocityField
    __del__ = lambda self : None;
iParticleBuiltinEffectorVelocityField_swigregister = _imesh.iParticleBuiltinEffectorVelocityField_swigregister
iParticleBuiltinEffectorVelocityField_swigregister(iParticleBuiltinEffectorVelocityField)

CS_PARTICLE_MASK_MASS = _imesh.CS_PARTICLE_MASK_MASS
CS_PARTICLE_MASK_LINEARVELOCITY = _imesh.CS_PARTICLE_MASK_LINEARVELOCITY
CS_PARTICLE_MASK_ANGULARVELOCITY = _imesh.CS_PARTICLE_MASK_ANGULARVELOCITY
CS_PARTICLE_MASK_COLOR = _imesh.CS_PARTICLE_MASK_COLOR
CS_PARTICLE_MASK_PARTICLESIZE = _imesh.CS_PARTICLE_MASK_PARTICLESIZE
CS_PARTICLE_MASK_ALL = _imesh.CS_PARTICLE_MASK_ALL
class csParticleParameterSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    mass = _swig_property(_imesh.csParticleParameterSet_mass_get, _imesh.csParticleParameterSet_mass_set)
    linearVelocity = _swig_property(_imesh.csParticleParameterSet_linearVelocity_get, _imesh.csParticleParameterSet_linearVelocity_set)
    angularVelocity = _swig_property(_imesh.csParticleParameterSet_angularVelocity_get, _imesh.csParticleParameterSet_angularVelocity_set)
    color = _swig_property(_imesh.csParticleParameterSet_color_get, _imesh.csParticleParameterSet_color_set)
    particleSize = _swig_property(_imesh.csParticleParameterSet_particleSize_get, _imesh.csParticleParameterSet_particleSize_set)
    def __init__(self, *args): 
        this = _imesh.new_csParticleParameterSet(*args)
        try: self.this.append(this)
        except: self.this = this
    def Clear(*args): return _imesh.csParticleParameterSet_Clear(*args)
    __swig_destroy__ = _imesh.delete_csParticleParameterSet
    __del__ = lambda self : None;
csParticleParameterSet_swigregister = _imesh.csParticleParameterSet_swigregister
csParticleParameterSet_swigregister(csParticleParameterSet)

class iParticleBuiltinEffectorLinear(iParticleEffector):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetMask(*args): return _imesh.iParticleBuiltinEffectorLinear_SetMask(*args)
    def GetMask(*args): return _imesh.iParticleBuiltinEffectorLinear_GetMask(*args)
    def AddParameterSet(*args): return _imesh.iParticleBuiltinEffectorLinear_AddParameterSet(*args)
    def RemoveParameterSet(*args): return _imesh.iParticleBuiltinEffectorLinear_RemoveParameterSet(*args)
    def Clear(*args): return _imesh.iParticleBuiltinEffectorLinear_Clear(*args)
    def SetParameterSet(*args): return _imesh.iParticleBuiltinEffectorLinear_SetParameterSet(*args)
    def SetEndTTL(*args): return _imesh.iParticleBuiltinEffectorLinear_SetEndTTL(*args)
    def GetParameterSet(*args): return _imesh.iParticleBuiltinEffectorLinear_GetParameterSet(*args)
    def GetEndTTL(*args): return _imesh.iParticleBuiltinEffectorLinear_GetEndTTL(*args)
    def GetParameterSetCount(*args): return _imesh.iParticleBuiltinEffectorLinear_GetParameterSetCount(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEffectorLinear_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEffectorLinear
    __del__ = lambda self : None;
iParticleBuiltinEffectorLinear_swigregister = _imesh.iParticleBuiltinEffectorLinear_swigregister
iParticleBuiltinEffectorLinear_swigregister(iParticleBuiltinEffectorLinear)
iParticleBuiltinEffectorLinear_scfGetVersion = _imesh.iParticleBuiltinEffectorLinear_scfGetVersion

class iParticleBuiltinEffectorFactory(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateForce(*args): return _imesh.iParticleBuiltinEffectorFactory_CreateForce(*args)
    def CreateLinColor(*args): return _imesh.iParticleBuiltinEffectorFactory_CreateLinColor(*args)
    def CreateVelocityField(*args): return _imesh.iParticleBuiltinEffectorFactory_CreateVelocityField(*args)
    def CreateLinear(*args): return _imesh.iParticleBuiltinEffectorFactory_CreateLinear(*args)
    scfGetVersion = staticmethod(_imesh.iParticleBuiltinEffectorFactory_scfGetVersion)
    __swig_destroy__ = _imesh.delete_iParticleBuiltinEffectorFactory
    __del__ = lambda self : None;
iParticleBuiltinEffectorFactory_swigregister = _imesh.iParticleBuiltinEffectorFactory_swigregister
iParticleBuiltinEffectorFactory_swigregister(iParticleBuiltinEffectorFactory)
iParticleBuiltinEffectorFactory_scfGetVersion = _imesh.iParticleBuiltinEffectorFactory_scfGetVersion



