# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.

import _core
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


CS_COMPILER_NAME = _core.CS_COMPILER_NAME
CS_PLATFORM_NAME = _core.CS_PLATFORM_NAME
CS_PROCESSOR_SIZE = _core.CS_PROCESSOR_SIZE
CS_LONG_SIZE = _core.CS_LONG_SIZE
CS_PROCESSOR_NAME = _core.CS_PROCESSOR_NAME
CS_WCHAR_T_SIZE = _core.CS_WCHAR_T_SIZE
CS_PACKAGE_NAME = _core.CS_PACKAGE_NAME
CS_PACKAGE_VERSION = _core.CS_PACKAGE_VERSION
class csWrapPtr(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Ref = _swig_property(_core.csWrapPtr_Ref_get, _core.csWrapPtr_Ref_set)
    Type = _swig_property(_core.csWrapPtr_Type_get)
    Version = _swig_property(_core.csWrapPtr_Version_get, _core.csWrapPtr_Version_set)
    def __init__(self, *args): 
        this = _core.new_csWrapPtr(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csWrapPtr
    __del__ = lambda self : None;
csWrapPtr_swigregister = _core.csWrapPtr_swigregister
csWrapPtr_swigregister(csWrapPtr)

def fix_args(funct):
    def _inner(self, args):
        if type(args) == tuple:
            args = (self,) + args
        else:
            args = (self, args)
        return funct(*args)
    return _inner

class CustomAllocated(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_CustomAllocated(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_CustomAllocated
    __del__ = lambda self : None;
CustomAllocated_swigregister = _core.CustomAllocated_swigregister
CustomAllocated_swigregister(CustomAllocated)

class csArrayThresholdVariable(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csArrayThresholdVariable(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetThreshold(*args): return _core.csArrayThresholdVariable_GetThreshold(*args)
    __swig_destroy__ = _core.delete_csArrayThresholdVariable
    __del__ = lambda self : None;
csArrayThresholdVariable_swigregister = _core.csArrayThresholdVariable_swigregister
csArrayThresholdVariable_swigregister(csArrayThresholdVariable)

class csArrayThresholdVariableCapacityLinear(csArrayThresholdVariable):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csArrayThresholdVariableCapacityLinear(*args)
        try: self.this.append(this)
        except: self.this = this
    def IsCapacityExcessive(*args): return _core.csArrayThresholdVariableCapacityLinear_IsCapacityExcessive(*args)
    def GetCapacity(*args): return _core.csArrayThresholdVariableCapacityLinear_GetCapacity(*args)
    __swig_destroy__ = _core.delete_csArrayThresholdVariableCapacityLinear
    __del__ = lambda self : None;
csArrayThresholdVariableCapacityLinear_swigregister = _core.csArrayThresholdVariableCapacityLinear_swigregister
csArrayThresholdVariableCapacityLinear_swigregister(csArrayThresholdVariableCapacityLinear)

class csArrayCapacityVariableGrow(csArrayThresholdVariableCapacityLinear):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csArrayCapacityVariableGrow(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csArrayCapacityVariableGrow
    __del__ = lambda self : None;
csArrayCapacityVariableGrow_swigregister = _core.csArrayCapacityVariableGrow_swigregister
csArrayCapacityVariableGrow_swigregister(csArrayCapacityVariableGrow)

class Vector2Array(CustomAllocated):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_Vector2Array
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _core.new_Vector2Array(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetSize(*args): return _core.Vector2Array_GetSize(*args)
    def Get(*args): return _core.Vector2Array_Get(*args)
    def Put(*args): return _core.Vector2Array_Put(*args)
    def Push(*args): return _core.Vector2Array_Push(*args)
    def Merge(*args): return _core.Vector2Array_Merge(*args)
    def MergeSmart(*args): return _core.Vector2Array_MergeSmart(*args)
    def Pop(*args): return _core.Vector2Array_Pop(*args)
    def Top(*args): return _core.Vector2Array_Top(*args)
    def Insert(*args): return _core.Vector2Array_Insert(*args)
    def Contains(*args): return _core.Vector2Array_Contains(*args)
    def DeleteAll(*args): return _core.Vector2Array_DeleteAll(*args)
    def Truncate(*args): return _core.Vector2Array_Truncate(*args)
    def Empty(*args): return _core.Vector2Array_Empty(*args)
    def IsEmpty(*args): return _core.Vector2Array_IsEmpty(*args)
    def SetMinimalCapacity(*args): return _core.Vector2Array_SetMinimalCapacity(*args)
    def DeleteIndex(*args): return _core.Vector2Array_DeleteIndex(*args)
    def DeleteIndexFast(*args): return _core.Vector2Array_DeleteIndexFast(*args)
    def DeleteRange(*args): return _core.Vector2Array_DeleteRange(*args)
    def __eq__(*args): return _core.Vector2Array___eq__(*args)
    def __ne__(*args): return _core.Vector2Array___ne__(*args)
    def GetAllocator(*args): return _core.Vector2Array_GetAllocator(*args)
Vector2Array_swigregister = _core.Vector2Array_swigregister
Vector2Array_swigregister(Vector2Array)
cvar = _core.cvar
csArrayItemNotFound = cvar.csArrayItemNotFound

class Vector2DirtyAccessArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_Vector2DirtyAccessArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetArray(*args): return _core.Vector2DirtyAccessArray_GetArray(*args)
    def GetArrayCopy(*args): return _core.Vector2DirtyAccessArray_GetArrayCopy(*args)
    __swig_destroy__ = _core.delete_Vector2DirtyAccessArray
    __del__ = lambda self : None;
Vector2DirtyAccessArray_swigregister = _core.Vector2DirtyAccessArray_swigregister
Vector2DirtyAccessArray_swigregister(Vector2DirtyAccessArray)

class Vector3Array(CustomAllocated):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_Vector3Array
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _core.new_Vector3Array(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetSize(*args): return _core.Vector3Array_GetSize(*args)
    def Get(*args): return _core.Vector3Array_Get(*args)
    def Put(*args): return _core.Vector3Array_Put(*args)
    def Push(*args): return _core.Vector3Array_Push(*args)
    def Merge(*args): return _core.Vector3Array_Merge(*args)
    def MergeSmart(*args): return _core.Vector3Array_MergeSmart(*args)
    def Pop(*args): return _core.Vector3Array_Pop(*args)
    def Top(*args): return _core.Vector3Array_Top(*args)
    def Insert(*args): return _core.Vector3Array_Insert(*args)
    def Contains(*args): return _core.Vector3Array_Contains(*args)
    def DeleteAll(*args): return _core.Vector3Array_DeleteAll(*args)
    def Truncate(*args): return _core.Vector3Array_Truncate(*args)
    def Empty(*args): return _core.Vector3Array_Empty(*args)
    def IsEmpty(*args): return _core.Vector3Array_IsEmpty(*args)
    def SetMinimalCapacity(*args): return _core.Vector3Array_SetMinimalCapacity(*args)
    def DeleteIndex(*args): return _core.Vector3Array_DeleteIndex(*args)
    def DeleteIndexFast(*args): return _core.Vector3Array_DeleteIndexFast(*args)
    def DeleteRange(*args): return _core.Vector3Array_DeleteRange(*args)
    def __eq__(*args): return _core.Vector3Array___eq__(*args)
    def __ne__(*args): return _core.Vector3Array___ne__(*args)
    def GetAllocator(*args): return _core.Vector3Array_GetAllocator(*args)
Vector3Array_swigregister = _core.Vector3Array_swigregister
Vector3Array_swigregister(Vector3Array)

class Vector3DirtyAccessArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_Vector3DirtyAccessArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetArray(*args): return _core.Vector3DirtyAccessArray_GetArray(*args)
    def GetArrayCopy(*args): return _core.Vector3DirtyAccessArray_GetArrayCopy(*args)
    __swig_destroy__ = _core.delete_Vector3DirtyAccessArray
    __del__ = lambda self : None;
Vector3DirtyAccessArray_swigregister = _core.Vector3DirtyAccessArray_swigregister
Vector3DirtyAccessArray_swigregister(Vector3DirtyAccessArray)

class Vector4Array(CustomAllocated):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_Vector4Array
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _core.new_Vector4Array(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetSize(*args): return _core.Vector4Array_GetSize(*args)
    def Get(*args): return _core.Vector4Array_Get(*args)
    def Put(*args): return _core.Vector4Array_Put(*args)
    def Push(*args): return _core.Vector4Array_Push(*args)
    def Merge(*args): return _core.Vector4Array_Merge(*args)
    def MergeSmart(*args): return _core.Vector4Array_MergeSmart(*args)
    def Pop(*args): return _core.Vector4Array_Pop(*args)
    def Top(*args): return _core.Vector4Array_Top(*args)
    def Insert(*args): return _core.Vector4Array_Insert(*args)
    def Contains(*args): return _core.Vector4Array_Contains(*args)
    def DeleteAll(*args): return _core.Vector4Array_DeleteAll(*args)
    def Truncate(*args): return _core.Vector4Array_Truncate(*args)
    def Empty(*args): return _core.Vector4Array_Empty(*args)
    def IsEmpty(*args): return _core.Vector4Array_IsEmpty(*args)
    def SetMinimalCapacity(*args): return _core.Vector4Array_SetMinimalCapacity(*args)
    def DeleteIndex(*args): return _core.Vector4Array_DeleteIndex(*args)
    def DeleteIndexFast(*args): return _core.Vector4Array_DeleteIndexFast(*args)
    def DeleteRange(*args): return _core.Vector4Array_DeleteRange(*args)
    def __eq__(*args): return _core.Vector4Array___eq__(*args)
    def __ne__(*args): return _core.Vector4Array___ne__(*args)
    def GetAllocator(*args): return _core.Vector4Array_GetAllocator(*args)
Vector4Array_swigregister = _core.Vector4Array_swigregister
Vector4Array_swigregister(Vector4Array)

class Vector4DirtyAccessArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_Vector4DirtyAccessArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetArray(*args): return _core.Vector4DirtyAccessArray_GetArray(*args)
    def GetArrayCopy(*args): return _core.Vector4DirtyAccessArray_GetArrayCopy(*args)
    __swig_destroy__ = _core.delete_Vector4DirtyAccessArray
    __del__ = lambda self : None;
Vector4DirtyAccessArray_swigregister = _core.Vector4DirtyAccessArray_swigregister
Vector4DirtyAccessArray_swigregister(Vector4DirtyAccessArray)

class UIntArray(CustomAllocated):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_UIntArray
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _core.new_UIntArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetSize(*args): return _core.UIntArray_GetSize(*args)
    def Get(*args): return _core.UIntArray_Get(*args)
    def Put(*args): return _core.UIntArray_Put(*args)
    def Push(*args): return _core.UIntArray_Push(*args)
    def Merge(*args): return _core.UIntArray_Merge(*args)
    def MergeSmart(*args): return _core.UIntArray_MergeSmart(*args)
    def Pop(*args): return _core.UIntArray_Pop(*args)
    def Top(*args): return _core.UIntArray_Top(*args)
    def Insert(*args): return _core.UIntArray_Insert(*args)
    def Contains(*args): return _core.UIntArray_Contains(*args)
    def DeleteAll(*args): return _core.UIntArray_DeleteAll(*args)
    def Truncate(*args): return _core.UIntArray_Truncate(*args)
    def Empty(*args): return _core.UIntArray_Empty(*args)
    def IsEmpty(*args): return _core.UIntArray_IsEmpty(*args)
    def SetMinimalCapacity(*args): return _core.UIntArray_SetMinimalCapacity(*args)
    def DeleteIndex(*args): return _core.UIntArray_DeleteIndex(*args)
    def DeleteIndexFast(*args): return _core.UIntArray_DeleteIndexFast(*args)
    def DeleteRange(*args): return _core.UIntArray_DeleteRange(*args)
    def __eq__(*args): return _core.UIntArray___eq__(*args)
    def __ne__(*args): return _core.UIntArray___ne__(*args)
    def GetAllocator(*args): return _core.UIntArray_GetAllocator(*args)
UIntArray_swigregister = _core.UIntArray_swigregister
UIntArray_swigregister(UIntArray)

class UIntDirtyAccessArray(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_UIntDirtyAccessArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetArray(*args): return _core.UIntDirtyAccessArray_GetArray(*args)
    def GetArrayCopy(*args): return _core.UIntDirtyAccessArray_GetArrayCopy(*args)
    __swig_destroy__ = _core.delete_UIntDirtyAccessArray
    __del__ = lambda self : None;
UIntDirtyAccessArray_swigregister = _core.UIntDirtyAccessArray_swigregister
UIntDirtyAccessArray_swigregister(UIntDirtyAccessArray)

SetCoreSCFPointer = _core.SetCoreSCFPointer
scfCompatibleVersion = _core.scfCompatibleVersion
class scfInterfaceMetadata(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    interfaceName = _swig_property(_core.scfInterfaceMetadata_interfaceName_get)
    interfaceID = _swig_property(_core.scfInterfaceMetadata_interfaceID_get, _core.scfInterfaceMetadata_interfaceID_set)
    interfaceVersion = _swig_property(_core.scfInterfaceMetadata_interfaceVersion_get, _core.scfInterfaceMetadata_interfaceVersion_set)
    def __init__(self, *args): 
        this = _core.new_scfInterfaceMetadata(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_scfInterfaceMetadata
    __del__ = lambda self : None;
scfInterfaceMetadata_swigregister = _core.scfInterfaceMetadata_swigregister
scfInterfaceMetadata_swigregister(scfInterfaceMetadata)

class scfInterfaceMetadataList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    metadata = _swig_property(_core.scfInterfaceMetadataList_metadata_get, _core.scfInterfaceMetadataList_metadata_set)
    metadataCount = _swig_property(_core.scfInterfaceMetadataList_metadataCount_get, _core.scfInterfaceMetadataList_metadataCount_set)
    def __len__(*args): return _core.scfInterfaceMetadataList___len__(*args)
    def __getitem__(*args): return _core.scfInterfaceMetadataList___getitem__(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    def __init__(self, *args): 
        this = _core.new_scfInterfaceMetadataList(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_scfInterfaceMetadataList
    __del__ = lambda self : None;
scfInterfaceMetadataList_swigregister = _core.scfInterfaceMetadataList_swigregister
scfInterfaceMetadataList_swigregister(scfInterfaceMetadataList)

class iBase(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def IncRef(*args): return _core.iBase_IncRef(*args)
    def DecRef(*args): return _core.iBase_DecRef(*args)
    def GetRefCount(*args): return _core.iBase_GetRefCount(*args)
    def AddRefOwner(*args): return _core.iBase_AddRefOwner(*args)
    def RemoveRefOwner(*args): return _core.iBase_RemoveRefOwner(*args)
    def GetInterfaceMetadata(*args): return _core.iBase_GetInterfaceMetadata(*args)
    def QueryInterface(*args): return _core.iBase_QueryInterface(*args)
    scfGetVersion = staticmethod(_core.iBase_scfGetVersion)
    def __eq__(self,other):
        if isinstance(other,iBase):
            return self.this == other.this
        return False
    def __ne__(self,other):
        if isinstance(other,iBase):
            return not self.this == other.this
        return True

iBase_swigregister = _core.iBase_swigregister
iBase_swigregister(iBase)
iBase_scfGetVersion = _core.iBase_scfGetVersion

class iSCF(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    SCF = _swig_property(_core.iSCF_SCF_get)
    def RegisterClasses(*args): return _core.iSCF_RegisterClasses(*args)
    def ClassRegistered(*args): return _core.iSCF_ClassRegistered(*args)
    def CreateInstance(*args): return _core.iSCF_CreateInstance(*args)
    def GetClassDescription(*args): return _core.iSCF_GetClassDescription(*args)
    def GetClassDependencies(*args): return _core.iSCF_GetClassDependencies(*args)
    def GetPluginMetadata(*args): return _core.iSCF_GetPluginMetadata(*args)
    def UnloadUnusedModules(*args): return _core.iSCF_UnloadUnusedModules(*args)
    def RegisterClass(*args): return _core.iSCF_RegisterClass(*args)
    def RegisterFactoryFunc(*args): return _core.iSCF_RegisterFactoryFunc(*args)
    def UnregisterClass(*args): return _core.iSCF_UnregisterClass(*args)
    def GetInterfaceName(*args): return _core.iSCF_GetInterfaceName(*args)
    def GetInterfaceID(*args): return _core.iSCF_GetInterfaceID(*args)
    def Finish(*args): return _core.iSCF_Finish(*args)
    def QueryClassList(*args): return _core.iSCF_QueryClassList(*args)
    def ScanPluginsPath(*args): return _core.iSCF_ScanPluginsPath(*args)
    def RegisterPlugin(*args): return _core.iSCF_RegisterPlugin(*args)
    scfGetVersion = staticmethod(_core.iSCF_scfGetVersion)
    __swig_destroy__ = _core.delete_iSCF
    __del__ = lambda self : None;
iSCF_swigregister = _core.iSCF_swigregister
iSCF_swigregister(iSCF)
iSCF_scfGetVersion = _core.iSCF_scfGetVersion

SCF_STATIC_CLASS_CONTEXT = _core.SCF_STATIC_CLASS_CONTEXT
class iFactory(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateInstance(*args): return _core.iFactory_CreateInstance(*args)
    def TryUnload(*args): return _core.iFactory_TryUnload(*args)
    def QueryDescription(*args): return _core.iFactory_QueryDescription(*args)
    def QueryDependencies(*args): return _core.iFactory_QueryDependencies(*args)
    def QueryClassID(*args): return _core.iFactory_QueryClassID(*args)
    def QueryModuleName(*args): return _core.iFactory_QueryModuleName(*args)
    scfGetVersion = staticmethod(_core.iFactory_scfGetVersion)
    __swig_destroy__ = _core.delete_iFactory
    __del__ = lambda self : None;
iFactory_swigregister = _core.iFactory_swigregister
iFactory_swigregister(iFactory)
iFactory_scfGetVersion = _core.iFactory_scfGetVersion

SCF_VERBOSE_NONE = _core.SCF_VERBOSE_NONE
SCF_VERBOSE_PLUGIN_SCAN = _core.SCF_VERBOSE_PLUGIN_SCAN
SCF_VERBOSE_PLUGIN_LOAD = _core.SCF_VERBOSE_PLUGIN_LOAD
SCF_VERBOSE_PLUGIN_REGISTER = _core.SCF_VERBOSE_PLUGIN_REGISTER
SCF_VERBOSE_CLASS_REGISTER = _core.SCF_VERBOSE_CLASS_REGISTER
SCF_VERBOSE_ALL = _core.SCF_VERBOSE_ALL
scfRegisterStaticClasses = _core.scfRegisterStaticClasses
scfRegisterStaticFactoryFunc = _core.scfRegisterStaticFactoryFunc
class iThreadReturn(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def IsFinished(*args): return _core.iThreadReturn_IsFinished(*args)
    def WasSuccessful(*args): return _core.iThreadReturn_WasSuccessful(*args)
    def GetResultPtr(*args): return _core.iThreadReturn_GetResultPtr(*args)
    def GetResultRefPtr(*args): return _core.iThreadReturn_GetResultRefPtr(*args)
    def MarkFinished(*args): return _core.iThreadReturn_MarkFinished(*args)
    def MarkSuccessful(*args): return _core.iThreadReturn_MarkSuccessful(*args)
    def SetResult(*args): return _core.iThreadReturn_SetResult(*args)
    def Copy(*args): return _core.iThreadReturn_Copy(*args)
    def Wait(*args): return _core.iThreadReturn_Wait(*args)
    def SetWaitPtrs(*args): return _core.iThreadReturn_SetWaitPtrs(*args)
    def SetJob(*args): return _core.iThreadReturn_SetJob(*args)
    def GetJob(*args): return _core.iThreadReturn_GetJob(*args)
    __swig_destroy__ = _core.delete_iThreadReturn
    __del__ = lambda self : None;
iThreadReturn_swigregister = _core.iThreadReturn_swigregister
iThreadReturn_swigregister(iThreadReturn)
scfRegisterStaticClass = _core.scfRegisterStaticClass

THREADED = _core.THREADED
THREADEDL = _core.THREADEDL
HIGH = _core.HIGH
MED = _core.MED
LOW = _core.LOW
class iThreadManager(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Init(*args): return _core.iThreadManager_Init(*args)
    def Process(*args): return _core.iThreadManager_Process(*args)
    def PushToQueue(*args): return _core.iThreadManager_PushToQueue(*args)
    def Wait(*args): return _core.iThreadManager_Wait(*args)
    def RunNow(*args): return _core.iThreadManager_RunNow(*args)
    def GetThreadCount(*args): return _core.iThreadManager_GetThreadCount(*args)
    def SetAlwaysRunNow(*args): return _core.iThreadManager_SetAlwaysRunNow(*args)
    def GetAlwaysRunNow(*args): return _core.iThreadManager_GetAlwaysRunNow(*args)
    def Exiting(*args): return _core.iThreadManager_Exiting(*args)
    __swig_destroy__ = _core.delete_iThreadManager
    __del__ = lambda self : None;
iThreadManager_swigregister = _core.iThreadManager_swigregister
iThreadManager_swigregister(iThreadManager)

CS_DBGHELP_BENCHMARK = _core.CS_DBGHELP_BENCHMARK
CS_DBGHELP_TXTDUMP = _core.CS_DBGHELP_TXTDUMP
CS_DBGHELP_GFXDUMP = _core.CS_DBGHELP_GFXDUMP
CS_DBGHELP_STATETEST = _core.CS_DBGHELP_STATETEST
class iDebugHelper(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSupportedTests(*args): return _core.iDebugHelper_GetSupportedTests(*args)
    def StateTest(*args): return _core.iDebugHelper_StateTest(*args)
    def Benchmark(*args): return _core.iDebugHelper_Benchmark(*args)
    def Dump(*args): return _core.iDebugHelper_Dump(*args)
    def DebugCommand(*args): return _core.iDebugHelper_DebugCommand(*args)
    scfGetVersion = staticmethod(_core.iDebugHelper_scfGetVersion)
    __swig_destroy__ = _core.delete_iDebugHelper
    __del__ = lambda self : None;
iDebugHelper_swigregister = _core.iDebugHelper_swigregister
iDebugHelper_swigregister(iDebugHelper)
iDebugHelper_scfGetVersion = _core.iDebugHelper_scfGetVersion

class iCommandLineParser(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Initialize(*args): return _core.iCommandLineParser_Initialize(*args)
    def Reset(*args): return _core.iCommandLineParser_Reset(*args)
    def GetName(*args): return _core.iCommandLineParser_GetName(*args)
    def AddOption(*args): return _core.iCommandLineParser_AddOption(*args)
    def AddName(*args): return _core.iCommandLineParser_AddName(*args)
    def ReplaceOption(*args): return _core.iCommandLineParser_ReplaceOption(*args)
    def ReplaceName(*args): return _core.iCommandLineParser_ReplaceName(*args)
    def GetBoolOption(*args): return _core.iCommandLineParser_GetBoolOption(*args)
    def GetResourceDir(*args): return _core.iCommandLineParser_GetResourceDir(*args)
    def GetAppDir(*args): return _core.iCommandLineParser_GetAppDir(*args)
    def GetAppPath(*args): return _core.iCommandLineParser_GetAppPath(*args)
    def GetOptionName(*args): return _core.iCommandLineParser_GetOptionName(*args)
    def GetOption(*args): return _core.iCommandLineParser_GetOption(*args)
    scfGetVersion = staticmethod(_core.iCommandLineParser_scfGetVersion)
    __swig_destroy__ = _core.delete_iCommandLineParser
    __del__ = lambda self : None;
iCommandLineParser_swigregister = _core.iCommandLineParser_swigregister
iCommandLineParser_swigregister(iCommandLineParser)
iCommandLineParser_scfGetVersion = _core.iCommandLineParser_scfGetVersion

class csColor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    red = _swig_property(_core.csColor_red_get, _core.csColor_red_set)
    green = _swig_property(_core.csColor_green_get, _core.csColor_green_set)
    blue = _swig_property(_core.csColor_blue_get, _core.csColor_blue_set)
    def __init__(self, *args): 
        this = _core.new_csColor(*args)
        try: self.this.append(this)
        except: self.this = this
    def Set(*args): return _core.csColor_Set(*args)
    def Clamp(*args): return _core.csColor_Clamp(*args)
    def ClampDown(*args): return _core.csColor_ClampDown(*args)
    def IsBlack(*args): return _core.csColor_IsBlack(*args)
    def assign(*args): return _core.csColor_assign(*args)
    def __iadd__(*args): return _core.csColor___iadd__(*args)
    def __isub__(*args): return _core.csColor___isub__(*args)
    def __imul__(*args): return _core.csColor___imul__(*args)
    def __mul__(*args): return _core.csColor___mul__(*args)
    def __eq__(*args): return _core.csColor___eq__(*args)
    def __ne__(*args): return _core.csColor___ne__(*args)
    def Add(*args): return _core.csColor_Add(*args)
    def Subtract(*args): return _core.csColor_Subtract(*args)
    def Luminance(*args): return _core.csColor_Luminance(*args)
    def __add__(*args): return _core.csColor___add__(*args)
    def __sub__(*args): return _core.csColor___sub__(*args)
    def __rmul__(*args): return _core.csColor___rmul__(*args)
    __swig_destroy__ = _core.delete_csColor
    __del__ = lambda self : None;
csColor_swigregister = _core.csColor_swigregister
csColor_swigregister(csColor)

class csColor4(csColor):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    alpha = _swig_property(_core.csColor4_alpha_get, _core.csColor4_alpha_set)
    def __init__(self, *args): 
        this = _core.new_csColor4(*args)
        try: self.this.append(this)
        except: self.this = this
    def Set(*args): return _core.csColor4_Set(*args)
    def assign(*args): return _core.csColor4_assign(*args)
    def __imul__(*args): return _core.csColor4___imul__(*args)
    def __iadd__(*args): return _core.csColor4___iadd__(*args)
    def __isub__(*args): return _core.csColor4___isub__(*args)
    def __eq__(*args): return _core.csColor4___eq__(*args)
    def __ne__(*args): return _core.csColor4___ne__(*args)
    __swig_destroy__ = _core.delete_csColor4
    __del__ = lambda self : None;
csColor4_swigregister = _core.csColor4_swigregister
csColor4_swigregister(csColor4)

class csCommandLineHelper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Help = staticmethod(_core.csCommandLineHelper_Help)
    CheckHelp = staticmethod(_core.csCommandLineHelper_CheckHelp)
    def __init__(self, *args): 
        this = _core.new_csCommandLineHelper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csCommandLineHelper
    __del__ = lambda self : None;
csCommandLineHelper_swigregister = _core.csCommandLineHelper_swigregister
csCommandLineHelper_swigregister(csCommandLineHelper)
csCommandLineHelper_Help = _core.csCommandLineHelper_Help
csCommandLineHelper_CheckHelp = _core.csCommandLineHelper_CheckHelp

class csFlags(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csFlags(*args)
        try: self.this.append(this)
        except: self.this = this
    def SetAll(*args): return _core.csFlags_SetAll(*args)
    def Reset(*args): return _core.csFlags_Reset(*args)
    def Set(*args): return _core.csFlags_Set(*args)
    def SetBool(*args): return _core.csFlags_SetBool(*args)
    def Get(*args): return _core.csFlags_Get(*args)
    def Check(*args): return _core.csFlags_Check(*args)
    def CheckAll(*args): return _core.csFlags_CheckAll(*args)
    def __eq__(*args): return _core.csFlags___eq__(*args)
    def __ne__(*args): return _core.csFlags___ne__(*args)
    def __and__(*args): return _core.csFlags___and__(*args)
    def __invert__(*args): return _core.csFlags___invert__(*args)
    __swig_destroy__ = _core.delete_csFlags
    __del__ = lambda self : None;
csFlags_swigregister = _core.csFlags_swigregister
csFlags_swigregister(csFlags)

class iGeneralStringSetBase(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Request(*args): return _core.iGeneralStringSetBase_Request(*args)
    def Contains(*args): return _core.iGeneralStringSetBase_Contains(*args)
    def Delete(*args): return _core.iGeneralStringSetBase_Delete(*args)
    def Empty(*args): return _core.iGeneralStringSetBase_Empty(*args)
    def Clear(*args): return _core.iGeneralStringSetBase_Clear(*args)
    def GetSize(*args): return _core.iGeneralStringSetBase_GetSize(*args)
    def IsEmpty(*args): return _core.iGeneralStringSetBase_IsEmpty(*args)
    __swig_destroy__ = _core.delete_iGeneralStringSetBase
    __del__ = lambda self : None;
iGeneralStringSetBase_swigregister = _core.iGeneralStringSetBase_swigregister
iGeneralStringSetBase_swigregister(iGeneralStringSetBase)

class iStringSet(iGeneralStringSetBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    scfGetVersion = staticmethod(_core.iStringSet_scfGetVersion)
    __swig_destroy__ = _core.delete_iStringSet
    __del__ = lambda self : None;
iStringSet_swigregister = _core.iStringSet_swigregister
iStringSet_swigregister(iStringSet)
iStringSet_scfGetVersion = _core.iStringSet_scfGetVersion

class csStringIDSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csStringIDSet(*args)
        try: self.this.append(this)
        except: self.this = this
    def Add(*args): return _core.csStringIDSet_Add(*args)
    def AddNoTest(*args): return _core.csStringIDSet_AddNoTest(*args)
    def Contains(*args): return _core.csStringIDSet_Contains(*args)
    def In(*args): return _core.csStringIDSet_In(*args)
    def DeleteAll(*args): return _core.csStringIDSet_DeleteAll(*args)
    def Empty(*args): return _core.csStringIDSet_Empty(*args)
    def Delete(*args): return _core.csStringIDSet_Delete(*args)
    def GetSize(*args): return _core.csStringIDSet_GetSize(*args)
    def IsEmpty(*args): return _core.csStringIDSet_IsEmpty(*args)
    def __len__(*args): return _core.csStringIDSet___len__(*args)
    def __contains__(*args): return _core.csStringIDSet___contains__(*args)
    def append(*args): return _core.csStringIDSet_append(*args)
    def __delitem__(*args): return _core.csStringIDSet___delitem__(*args)
    __swig_destroy__ = _core.delete_csStringIDSet
    __del__ = lambda self : None;
csStringIDSet_swigregister = _core.csStringIDSet_swigregister
csStringIDSet_swigregister(csStringIDSet)

class csRefCount(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csRefCount(*args)
        try: self.this.append(this)
        except: self.this = this
    def IncRef(*args): return _core.csRefCount_IncRef(*args)
    def DecRef(*args): return _core.csRefCount_DecRef(*args)
    def GetRefCount(*args): return _core.csRefCount_GetRefCount(*args)
csRefCount_swigregister = _core.csRefCount_swigregister
csRefCount_swigregister(csRefCount)

class InternalRefCount(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_InternalRefCount(*args)
        try: self.this.append(this)
        except: self.this = this
    def InternalIncRef(*args): return _core.InternalRefCount_InternalIncRef(*args)
    def InternalDecRef(*args): return _core.InternalRefCount_InternalDecRef(*args)
    def GetInternalRefCount(*args): return _core.InternalRefCount_GetInternalRefCount(*args)
InternalRefCount_swigregister = _core.InternalRefCount_swigregister
InternalRefCount_swigregister(InternalRefCount)

csDefaultRunLoop = _core.csDefaultRunLoop
csPlatformStartup = _core.csPlatformStartup
csPlatformShutdown = _core.csPlatformShutdown
csPrintf = _core.csPrintf
csFPrintf = _core.csFPrintf
csPrintfErr = _core.csPrintfErr
csGetTicks = _core.csGetTicks
csGetMicroTicks = _core.csGetMicroTicks
csSleep = _core.csSleep
csGetUsername = _core.csGetUsername
class csPluginRequest(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csPluginRequest(*args)
        try: self.this.append(this)
        except: self.this = this
    def assign(*args): return _core.csPluginRequest_assign(*args)
    def __eq__(*args): return _core.csPluginRequest___eq__(*args)
    def __ne__(*args): return _core.csPluginRequest___ne__(*args)
    def GetClassName(*args): return _core.csPluginRequest_GetClassName(*args)
    def GetInterfaceName(*args): return _core.csPluginRequest_GetInterfaceName(*args)
    def GetInterfaceID(*args): return _core.csPluginRequest_GetInterfaceID(*args)
    def GetInterfaceVersion(*args): return _core.csPluginRequest_GetInterfaceVersion(*args)
    __swig_destroy__ = _core.delete_csPluginRequest
    __del__ = lambda self : None;
csPluginRequest_swigregister = _core.csPluginRequest_swigregister
csPluginRequest_swigregister(csPluginRequest)
csGetPlatformConfigPath = _core.csGetPlatformConfigPath

class csInitializer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    _CreateEnvironment2 = staticmethod(_core.csInitializer__CreateEnvironment2)
    _CreateEnvironment = staticmethod(_core.csInitializer__CreateEnvironment)
    _InitializeSCF = staticmethod(_core.csInitializer__InitializeSCF)
    CreateObjectRegistry = staticmethod(_core.csInitializer_CreateObjectRegistry)
    CreatePluginManager = staticmethod(_core.csInitializer_CreatePluginManager)
    CreateEventQueue = staticmethod(_core.csInitializer_CreateEventQueue)
    CreateThreadManager = staticmethod(_core.csInitializer_CreateThreadManager)
    CreateVirtualClock = staticmethod(_core.csInitializer_CreateVirtualClock)
    CreateCommandLineParser = staticmethod(_core.csInitializer_CreateCommandLineParser)
    CreateVerbosityManager = staticmethod(_core.csInitializer_CreateVerbosityManager)
    CreateConfigManager = staticmethod(_core.csInitializer_CreateConfigManager)
    CreateInputDrivers = staticmethod(_core.csInitializer_CreateInputDrivers)
    CreateStringSet = staticmethod(_core.csInitializer_CreateStringSet)
    CreateSystemOpenManager = staticmethod(_core.csInitializer_CreateSystemOpenManager)
    SetupConfigManager = staticmethod(_core.csInitializer_SetupConfigManager)
    SetupVFS = staticmethod(_core.csInitializer_SetupVFS)
    _RequestPlugins = staticmethod(_core.csInitializer__RequestPlugins)
    OpenApplication = staticmethod(_core.csInitializer_OpenApplication)
    CloseApplication = staticmethod(_core.csInitializer_CloseApplication)
    _SetupEventHandler = staticmethod(_core.csInitializer__SetupEventHandler)
    DestroyApplication = staticmethod(_core.csInitializer_DestroyApplication)
    GetDefaultAppID = staticmethod(_core.csInitializer_GetDefaultAppID)
    def __init__(self, *args): 
        this = _core.new_csInitializer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csInitializer
    __del__ = lambda self : None;
csInitializer_swigregister = _core.csInitializer_swigregister
csInitializer_swigregister(csInitializer)
csInitializer__CreateEnvironment2 = _core.csInitializer__CreateEnvironment2
csInitializer__CreateEnvironment = _core.csInitializer__CreateEnvironment
csInitializer__InitializeSCF = _core.csInitializer__InitializeSCF
csInitializer_CreateObjectRegistry = _core.csInitializer_CreateObjectRegistry
csInitializer_CreatePluginManager = _core.csInitializer_CreatePluginManager
csInitializer_CreateEventQueue = _core.csInitializer_CreateEventQueue
csInitializer_CreateThreadManager = _core.csInitializer_CreateThreadManager
csInitializer_CreateVirtualClock = _core.csInitializer_CreateVirtualClock
csInitializer_CreateCommandLineParser = _core.csInitializer_CreateCommandLineParser
csInitializer_CreateVerbosityManager = _core.csInitializer_CreateVerbosityManager
csInitializer_CreateConfigManager = _core.csInitializer_CreateConfigManager
csInitializer_CreateInputDrivers = _core.csInitializer_CreateInputDrivers
csInitializer_CreateStringSet = _core.csInitializer_CreateStringSet
csInitializer_CreateSystemOpenManager = _core.csInitializer_CreateSystemOpenManager
csInitializer_SetupConfigManager = _core.csInitializer_SetupConfigManager
csInitializer_SetupVFS = _core.csInitializer_SetupVFS
csInitializer__RequestPlugins = _core.csInitializer__RequestPlugins
csInitializer_OpenApplication = _core.csInitializer_OpenApplication
csInitializer_CloseApplication = _core.csInitializer_CloseApplication
csInitializer__SetupEventHandler = _core.csInitializer__SetupEventHandler
csInitializer_DestroyApplication = _core.csInitializer_DestroyApplication
csInitializer_GetDefaultAppID = _core.csInitializer_GetDefaultAppID

class csPluginRequestArray(CustomAllocated):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_csPluginRequestArray
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _core.new_csPluginRequestArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetSize(*args): return _core.csPluginRequestArray_GetSize(*args)
    def Get(*args): return _core.csPluginRequestArray_Get(*args)
    def Push(*args): return _core.csPluginRequestArray_Push(*args)
    def Merge(*args): return _core.csPluginRequestArray_Merge(*args)
    def MergeSmart(*args): return _core.csPluginRequestArray_MergeSmart(*args)
    def Pop(*args): return _core.csPluginRequestArray_Pop(*args)
    def Top(*args): return _core.csPluginRequestArray_Top(*args)
    def Insert(*args): return _core.csPluginRequestArray_Insert(*args)
    def Contains(*args): return _core.csPluginRequestArray_Contains(*args)
    def Truncate(*args): return _core.csPluginRequestArray_Truncate(*args)
    def Empty(*args): return _core.csPluginRequestArray_Empty(*args)
    def IsEmpty(*args): return _core.csPluginRequestArray_IsEmpty(*args)
    def SetMinimalCapacity(*args): return _core.csPluginRequestArray_SetMinimalCapacity(*args)
    def DeleteIndex(*args): return _core.csPluginRequestArray_DeleteIndex(*args)
    def DeleteIndexFast(*args): return _core.csPluginRequestArray_DeleteIndexFast(*args)
    def DeleteRange(*args): return _core.csPluginRequestArray_DeleteRange(*args)
    def __eq__(*args): return _core.csPluginRequestArray___eq__(*args)
    def __ne__(*args): return _core.csPluginRequestArray___ne__(*args)
    def GetAllocator(*args): return _core.csPluginRequestArray_GetAllocator(*args)
csPluginRequestArray_swigregister = _core.csPluginRequestArray_swigregister
csPluginRequestArray_swigregister(csPluginRequestArray)

CS_REPORTER_SEVERITY_BUG = _core.CS_REPORTER_SEVERITY_BUG
CS_REPORTER_SEVERITY_ERROR = _core.CS_REPORTER_SEVERITY_ERROR
CS_REPORTER_SEVERITY_WARNING = _core.CS_REPORTER_SEVERITY_WARNING
CS_REPORTER_SEVERITY_NOTIFY = _core.CS_REPORTER_SEVERITY_NOTIFY
CS_REPORTER_SEVERITY_DEBUG = _core.CS_REPORTER_SEVERITY_DEBUG
class iReporterListener(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Report(*args): return _core.iReporterListener_Report(*args)
    def ReportWait(*args): return _core.iReporterListener_ReportWait(*args)
    scfGetVersion = staticmethod(_core.iReporterListener_scfGetVersion)
    __swig_destroy__ = _core.delete_iReporterListener
    __del__ = lambda self : None;
iReporterListener_swigregister = _core.iReporterListener_swigregister
iReporterListener_swigregister(iReporterListener)
iReporterListener_scfGetVersion = _core.iReporterListener_scfGetVersion

class iReporterIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _core.iReporterIterator_HasNext(*args)
    def Next(*args): return _core.iReporterIterator_Next(*args)
    def GetMessageSeverity(*args): return _core.iReporterIterator_GetMessageSeverity(*args)
    def GetMessageId(*args): return _core.iReporterIterator_GetMessageId(*args)
    def GetMessageDescription(*args): return _core.iReporterIterator_GetMessageDescription(*args)
    scfGetVersion = staticmethod(_core.iReporterIterator_scfGetVersion)
    __swig_destroy__ = _core.delete_iReporterIterator
    __del__ = lambda self : None;
iReporterIterator_swigregister = _core.iReporterIterator_swigregister
iReporterIterator_swigregister(iReporterIterator)
iReporterIterator_scfGetVersion = _core.iReporterIterator_scfGetVersion

class iReporter(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Report(*args): return _core.iReporter_Report(*args)
    def Clear(*args): return _core.iReporter_Clear(*args)
    def GetMessageIterator(*args): return _core.iReporter_GetMessageIterator(*args)
    def AddReporterListener(*args): return _core.iReporter_AddReporterListener(*args)
    def RemoveReporterListener(*args): return _core.iReporter_RemoveReporterListener(*args)
    def FindReporterListener(*args): return _core.iReporter_FindReporterListener(*args)
    def ReportError(*args): return _core.iReporter_ReportError(*args)
    def ReportWarning(*args): return _core.iReporter_ReportWarning(*args)
    def ReportNotify(*args): return _core.iReporter_ReportNotify(*args)
    def ReportBug(*args): return _core.iReporter_ReportBug(*args)
    def ReportDebug(*args): return _core.iReporter_ReportDebug(*args)
    scfGetVersion = staticmethod(_core.iReporter_scfGetVersion)
    __swig_destroy__ = _core.delete_iReporter
    __del__ = lambda self : None;
iReporter_swigregister = _core.iReporter_swigregister
iReporter_swigregister(iReporter)
iReporter_scfGetVersion = _core.iReporter_scfGetVersion

class csReporterHelper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Report = staticmethod(_core.csReporterHelper_Report)
    def __init__(self, *args): 
        this = _core.new_csReporterHelper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csReporterHelper
    __del__ = lambda self : None;
csReporterHelper_swigregister = _core.csReporterHelper_swigregister
csReporterHelper_swigregister(csReporterHelper)
csReporterHelper_Report = _core.csReporterHelper_Report

class iComponent(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Initialize(*args): return _core.iComponent_Initialize(*args)
    scfGetVersion = staticmethod(_core.iComponent_scfGetVersion)
    __swig_destroy__ = _core.delete_iComponent
    __del__ = lambda self : None;
iComponent_swigregister = _core.iComponent_swigregister
iComponent_swigregister(iComponent)
iComponent_scfGetVersion = _core.iComponent_scfGetVersion

class iCacheManager(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetReadOnly(*args): return _core.iCacheManager_SetReadOnly(*args)
    def IsReadOnly(*args): return _core.iCacheManager_IsReadOnly(*args)
    def SetCurrentType(*args): return _core.iCacheManager_SetCurrentType(*args)
    def GetCurrentType(*args): return _core.iCacheManager_GetCurrentType(*args)
    def SetCurrentScope(*args): return _core.iCacheManager_SetCurrentScope(*args)
    def GetCurrentScope(*args): return _core.iCacheManager_GetCurrentScope(*args)
    def CacheData(*args): return _core.iCacheManager_CacheData(*args)
    def ReadCache(*args): return _core.iCacheManager_ReadCache(*args)
    def ClearCache(*args): return _core.iCacheManager_ClearCache(*args)
    def Flush(*args): return _core.iCacheManager_Flush(*args)
    scfGetVersion = staticmethod(_core.iCacheManager_scfGetVersion)
    __swig_destroy__ = _core.delete_iCacheManager
    __del__ = lambda self : None;
iCacheManager_swigregister = _core.iCacheManager_swigregister
iCacheManager_swigregister(iCacheManager)
iCacheManager_scfGetVersion = _core.iCacheManager_scfGetVersion

class csFileTime(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    sec = _swig_property(_core.csFileTime_sec_get, _core.csFileTime_sec_set)
    min = _swig_property(_core.csFileTime_min_get, _core.csFileTime_min_set)
    hour = _swig_property(_core.csFileTime_hour_get, _core.csFileTime_hour_set)
    day = _swig_property(_core.csFileTime_day_get, _core.csFileTime_day_set)
    mon = _swig_property(_core.csFileTime_mon_get, _core.csFileTime_mon_set)
    year = _swig_property(_core.csFileTime_year_get, _core.csFileTime_year_set)
    def __init__(self, *args): 
        this = _core.new_csFileTime(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csFileTime
    __del__ = lambda self : None;
csFileTime_swigregister = _core.csFileTime_swigregister
csFileTime_swigregister(csFileTime)

VFS_PATH_DIVIDER = _core.VFS_PATH_DIVIDER
VFS_PATH_SEPARATOR = _core.VFS_PATH_SEPARATOR
VFS_MAX_PATH_LEN = _core.VFS_MAX_PATH_LEN
VFS_FILE_MODE = _core.VFS_FILE_MODE
VFS_FILE_READ = _core.VFS_FILE_READ
VFS_FILE_WRITE = _core.VFS_FILE_WRITE
VFS_FILE_APPEND = _core.VFS_FILE_APPEND
VFS_FILE_UNCOMPRESSED = _core.VFS_FILE_UNCOMPRESSED
VFS_STATUS_OK = _core.VFS_STATUS_OK
VFS_STATUS_OTHER = _core.VFS_STATUS_OTHER
VFS_STATUS_NOSPACE = _core.VFS_STATUS_NOSPACE
VFS_STATUS_RESOURCES = _core.VFS_STATUS_RESOURCES
VFS_STATUS_ACCESSDENIED = _core.VFS_STATUS_ACCESSDENIED
VFS_STATUS_IOERROR = _core.VFS_STATUS_IOERROR
class iFile(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _core.iFile_GetName(*args)
    def GetSize(*args): return _core.iFile_GetSize(*args)
    def GetStatus(*args): return _core.iFile_GetStatus(*args)
    def Read(*args): return _core.iFile_Read(*args)
    def Write(*args): return _core.iFile_Write(*args)
    def Flush(*args): return _core.iFile_Flush(*args)
    def AtEOF(*args): return _core.iFile_AtEOF(*args)
    def GetPos(*args): return _core.iFile_GetPos(*args)
    def SetPos(*args): return _core.iFile_SetPos(*args)
    def GetAllData(*args): return _core.iFile_GetAllData(*args)
    scfGetVersion = staticmethod(_core.iFile_scfGetVersion)
    __swig_destroy__ = _core.delete_iFile
    __del__ = lambda self : None;
iFile_swigregister = _core.iFile_swigregister
iFile_swigregister(iFile)
iFile_scfGetVersion = _core.iFile_scfGetVersion

class iVFS(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def ChDir(*args): return _core.iVFS_ChDir(*args)
    def GetCwd(*args): return _core.iVFS_GetCwd(*args)
    def PushDir(*args): return _core.iVFS_PushDir(*args)
    def PopDir(*args): return _core.iVFS_PopDir(*args)
    def ExpandPath(*args): return _core.iVFS_ExpandPath(*args)
    def Exists(*args): return _core.iVFS_Exists(*args)
    def FindFiles(*args): return _core.iVFS_FindFiles(*args)
    def Open(*args): return _core.iVFS_Open(*args)
    def ReadFile(*args): return _core.iVFS_ReadFile(*args)
    def WriteFile(*args): return _core.iVFS_WriteFile(*args)
    def DeleteFile(*args): return _core.iVFS_DeleteFile(*args)
    def Sync(*args): return _core.iVFS_Sync(*args)
    def SymbolicLink(*args): return _core.iVFS_SymbolicLink(*args)
    def Mount(*args): return _core.iVFS_Mount(*args)
    def Unmount(*args): return _core.iVFS_Unmount(*args)
    def MountRoot(*args): return _core.iVFS_MountRoot(*args)
    def SaveMounts(*args): return _core.iVFS_SaveMounts(*args)
    def LoadMountsFromFile(*args): return _core.iVFS_LoadMountsFromFile(*args)
    def ChDirAuto(*args): return _core.iVFS_ChDirAuto(*args)
    def GetFileTime(*args): return _core.iVFS_GetFileTime(*args)
    def SetFileTime(*args): return _core.iVFS_SetFileTime(*args)
    def GetFileSize(*args): return _core.iVFS_GetFileSize(*args)
    def GetRealPath(*args): return _core.iVFS_GetRealPath(*args)
    def GetMounts(*args): return _core.iVFS_GetMounts(*args)
    def GetRealMountPaths(*args): return _core.iVFS_GetRealMountPaths(*args)
    scfGetVersion = staticmethod(_core.iVFS_scfGetVersion)
    __swig_destroy__ = _core.delete_iVFS
    __del__ = lambda self : None;
iVFS_swigregister = _core.iVFS_swigregister
iVFS_swigregister(iVFS)
iVFS_scfGetVersion = _core.iVFS_scfGetVersion

class iObjectNameChangeListener(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def NameChanged(*args): return _core.iObjectNameChangeListener_NameChanged(*args)
    __swig_destroy__ = _core.delete_iObjectNameChangeListener
    __del__ = lambda self : None;
iObjectNameChangeListener_swigregister = _core.iObjectNameChangeListener_swigregister
iObjectNameChangeListener_swigregister(iObjectNameChangeListener)

class iObject(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetName(*args): return _core.iObject_SetName(*args)
    def GetName(*args): return _core.iObject_GetName(*args)
    def GetID(*args): return _core.iObject_GetID(*args)
    def SetObjectParent(*args): return _core.iObject_SetObjectParent(*args)
    def GetObjectParent(*args): return _core.iObject_GetObjectParent(*args)
    def ObjAdd(*args): return _core.iObject_ObjAdd(*args)
    def ObjRemove(*args): return _core.iObject_ObjRemove(*args)
    def ObjRemoveAll(*args): return _core.iObject_ObjRemoveAll(*args)
    def ObjAddChildren(*args): return _core.iObject_ObjAddChildren(*args)
    def GetChildByName(*args): return _core.iObject_GetChildByName(*args)
    def GetIterator(*args): return _core.iObject_GetIterator(*args)
    def ObjReleaseOld(*args): return _core.iObject_ObjReleaseOld(*args)
    def AddNameChangeListener(*args): return _core.iObject_AddNameChangeListener(*args)
    def RemoveNameChangeListener(*args): return _core.iObject_RemoveNameChangeListener(*args)
    def GetChild(*args): return _core.iObject_GetChild(*args)
    scfGetVersion = staticmethod(_core.iObject_scfGetVersion)
    __swig_destroy__ = _core.delete_iObject
    __del__ = lambda self : None;
iObject_swigregister = _core.iObject_swigregister
iObject_swigregister(iObject)
iObject_scfGetVersion = _core.iObject_scfGetVersion

class iObjectIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Next(*args): return _core.iObjectIterator_Next(*args)
    def Reset(*args): return _core.iObjectIterator_Reset(*args)
    def GetParentObj(*args): return _core.iObjectIterator_GetParentObj(*args)
    def HasNext(*args): return _core.iObjectIterator_HasNext(*args)
    def FindName(*args): return _core.iObjectIterator_FindName(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    scfGetVersion = staticmethod(_core.iObjectIterator_scfGetVersion)
    __swig_destroy__ = _core.delete_iObjectIterator
    __del__ = lambda self : None;
iObjectIterator_swigregister = _core.iObjectIterator_swigregister
iObjectIterator_swigregister(iObjectIterator)
iObjectIterator_scfGetVersion = _core.iObjectIterator_scfGetVersion

class iObjectRegistry(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Clear(*args): return _core.iObjectRegistry_Clear(*args)
    def Register(*args): return _core.iObjectRegistry_Register(*args)
    def Unregister(*args): return _core.iObjectRegistry_Unregister(*args)
    def Get(*args): return _core.iObjectRegistry_Get(*args)
    scfGetVersion = staticmethod(_core.iObjectRegistry_scfGetVersion)
    __swig_destroy__ = _core.delete_iObjectRegistry
    __del__ = lambda self : None;
iObjectRegistry_swigregister = _core.iObjectRegistry_swigregister
iObjectRegistry_swigregister(iObjectRegistry)
iObjectRegistry_scfGetVersion = _core.iObjectRegistry_scfGetVersion

class iObjectRegistryIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Reset(*args): return _core.iObjectRegistryIterator_Reset(*args)
    def GetCurrentTag(*args): return _core.iObjectRegistryIterator_GetCurrentTag(*args)
    def HasNext(*args): return _core.iObjectRegistryIterator_HasNext(*args)
    def Next(*args): return _core.iObjectRegistryIterator_Next(*args)
    __swig_destroy__ = _core.delete_iObjectRegistryIterator
    __del__ = lambda self : None;
iObjectRegistryIterator_swigregister = _core.iObjectRegistryIterator_swigregister
iObjectRegistryIterator_swigregister(iObjectRegistryIterator)

csQueryRegistryTag = _core.csQueryRegistryTag
class iVirtualClock(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Advance(*args): return _core.iVirtualClock_Advance(*args)
    def Suspend(*args): return _core.iVirtualClock_Suspend(*args)
    def Resume(*args): return _core.iVirtualClock_Resume(*args)
    def GetElapsedTicks(*args): return _core.iVirtualClock_GetElapsedTicks(*args)
    def GetCurrentTicks(*args): return _core.iVirtualClock_GetCurrentTicks(*args)
    scfGetVersion = staticmethod(_core.iVirtualClock_scfGetVersion)
    __swig_destroy__ = _core.delete_iVirtualClock
    __del__ = lambda self : None;
iVirtualClock_swigregister = _core.iVirtualClock_swigregister
iVirtualClock_swigregister(iVirtualClock)
iVirtualClock_scfGetVersion = _core.iVirtualClock_scfGetVersion

CS_MAX_MOUSE_COUNT = _core.CS_MAX_MOUSE_COUNT
CS_MAX_MOUSE_AXES = _core.CS_MAX_MOUSE_AXES
CS_MAX_MOUSE_BUTTONS = _core.CS_MAX_MOUSE_BUTTONS
CS_MAX_JOYSTICK_COUNT = _core.CS_MAX_JOYSTICK_COUNT
CS_MAX_JOYSTICK_BUTTONS = _core.CS_MAX_JOYSTICK_BUTTONS
CS_MAX_JOYSTICK_AXES = _core.CS_MAX_JOYSTICK_AXES
class iEventAttributeIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _core.iEventAttributeIterator_HasNext(*args)
    def Next(*args): return _core.iEventAttributeIterator_Next(*args)
    def Reset(*args): return _core.iEventAttributeIterator_Reset(*args)
    scfGetVersion = staticmethod(_core.iEventAttributeIterator_scfGetVersion)
    __swig_destroy__ = _core.delete_iEventAttributeIterator
    __del__ = lambda self : None;
iEventAttributeIterator_swigregister = _core.iEventAttributeIterator_swigregister
iEventAttributeIterator_swigregister(iEventAttributeIterator)
iEventAttributeIterator_scfGetVersion = _core.iEventAttributeIterator_scfGetVersion

class csKeyEventData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    eventType = _swig_property(_core.csKeyEventData_eventType_get, _core.csKeyEventData_eventType_set)
    codeRaw = _swig_property(_core.csKeyEventData_codeRaw_get, _core.csKeyEventData_codeRaw_set)
    codeCooked = _swig_property(_core.csKeyEventData_codeCooked_get, _core.csKeyEventData_codeCooked_set)
    modifiers = _swig_property(_core.csKeyEventData_modifiers_get, _core.csKeyEventData_modifiers_set)
    autoRepeat = _swig_property(_core.csKeyEventData_autoRepeat_get, _core.csKeyEventData_autoRepeat_set)
    charType = _swig_property(_core.csKeyEventData_charType_get, _core.csKeyEventData_charType_set)
    def __init__(self, *args): 
        this = _core.new_csKeyEventData(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csKeyEventData
    __del__ = lambda self : None;
csKeyEventData_swigregister = _core.csKeyEventData_swigregister
csKeyEventData_swigregister(csKeyEventData)

class csMouseEventData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    x = _swig_property(_core.csMouseEventData_x_get, _core.csMouseEventData_x_set)
    y = _swig_property(_core.csMouseEventData_y_get, _core.csMouseEventData_y_set)
    axes = _swig_property(_core.csMouseEventData_axes_get, _core.csMouseEventData_axes_set)
    numAxes = _swig_property(_core.csMouseEventData_numAxes_get, _core.csMouseEventData_numAxes_set)
    Button = _swig_property(_core.csMouseEventData_Button_get, _core.csMouseEventData_Button_set)
    Modifiers = _swig_property(_core.csMouseEventData_Modifiers_get, _core.csMouseEventData_Modifiers_set)
    def __init__(self, *args): 
        this = _core.new_csMouseEventData(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csMouseEventData
    __del__ = lambda self : None;
csMouseEventData_swigregister = _core.csMouseEventData_swigregister
csMouseEventData_swigregister(csMouseEventData)

class csJoystickEventData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    number = _swig_property(_core.csJoystickEventData_number_get, _core.csJoystickEventData_number_set)
    axes = _swig_property(_core.csJoystickEventData_axes_get, _core.csJoystickEventData_axes_set)
    numAxes = _swig_property(_core.csJoystickEventData_numAxes_get, _core.csJoystickEventData_numAxes_set)
    axesChanged = _swig_property(_core.csJoystickEventData_axesChanged_get, _core.csJoystickEventData_axesChanged_set)
    Button = _swig_property(_core.csJoystickEventData_Button_get, _core.csJoystickEventData_Button_set)
    Modifiers = _swig_property(_core.csJoystickEventData_Modifiers_get, _core.csJoystickEventData_Modifiers_set)
    def __init__(self, *args): 
        this = _core.new_csJoystickEventData(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csJoystickEventData
    __del__ = lambda self : None;
csJoystickEventData_swigregister = _core.csJoystickEventData_swigregister
csJoystickEventData_swigregister(csJoystickEventData)

class csCommandEventData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Code = _swig_property(_core.csCommandEventData_Code_get, _core.csCommandEventData_Code_set)
    Info = _swig_property(_core.csCommandEventData_Info_get, _core.csCommandEventData_Info_set)
    def __init__(self, *args): 
        this = _core.new_csCommandEventData(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csCommandEventData
    __del__ = lambda self : None;
csCommandEventData_swigregister = _core.csCommandEventData_swigregister
csCommandEventData_swigregister(csCommandEventData)

csEventErrNone = _core.csEventErrNone
csEventErrLossy = _core.csEventErrLossy
csEventErrNotFound = _core.csEventErrNotFound
csEventErrMismatchInt = _core.csEventErrMismatchInt
csEventErrMismatchUInt = _core.csEventErrMismatchUInt
csEventErrMismatchFloat = _core.csEventErrMismatchFloat
csEventErrMismatchBuffer = _core.csEventErrMismatchBuffer
csEventErrMismatchEvent = _core.csEventErrMismatchEvent
csEventErrMismatchIBase = _core.csEventErrMismatchIBase
csEventErrUhOhUnknown = _core.csEventErrUhOhUnknown
csEventAttrUnknown = _core.csEventAttrUnknown
csEventAttrInt = _core.csEventAttrInt
csEventAttrUInt = _core.csEventAttrUInt
csEventAttrFloat = _core.csEventAttrFloat
csEventAttrDatabuffer = _core.csEventAttrDatabuffer
csEventAttrEvent = _core.csEventAttrEvent
csEventAttriBase = _core.csEventAttriBase
class iEvent(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _core.iEvent_GetName(*args)
    Time = _swig_property(_core.iEvent_Time_get, _core.iEvent_Time_set)
    Broadcast = _swig_property(_core.iEvent_Broadcast_get, _core.iEvent_Broadcast_set)
    def AddInt8(*args): return _core.iEvent_AddInt8(*args)
    def AddUInt8(*args): return _core.iEvent_AddUInt8(*args)
    def AddInt16(*args): return _core.iEvent_AddInt16(*args)
    def AddUInt16(*args): return _core.iEvent_AddUInt16(*args)
    def AddInt32(*args): return _core.iEvent_AddInt32(*args)
    def AddUInt32(*args): return _core.iEvent_AddUInt32(*args)
    def AddFloat(*args): return _core.iEvent_AddFloat(*args)
    def AddDouble(*args): return _core.iEvent_AddDouble(*args)
    def AddBool(*args): return _core.iEvent_AddBool(*args)
    def Add(*args): return _core.iEvent_Add(*args)
    def RetrieveInt8(*args): return _core.iEvent_RetrieveInt8(*args)
    def RetrieveUInt8(*args): return _core.iEvent_RetrieveUInt8(*args)
    def RetrieveInt16(*args): return _core.iEvent_RetrieveInt16(*args)
    def RetrieveUInt16(*args): return _core.iEvent_RetrieveUInt16(*args)
    def RetrieveInt32(*args): return _core.iEvent_RetrieveInt32(*args)
    def RetrieveUInt32(*args): return _core.iEvent_RetrieveUInt32(*args)
    def RetrieveFloat(*args): return _core.iEvent_RetrieveFloat(*args)
    def RetrieveDouble(*args): return _core.iEvent_RetrieveDouble(*args)
    def RetrieveBool(*args): return _core.iEvent_RetrieveBool(*args)
    def Retrieve(*args): return _core.iEvent_Retrieve(*args)
    def AttributeExists(*args): return _core.iEvent_AttributeExists(*args)
    def GetAttributeType(*args): return _core.iEvent_GetAttributeType(*args)
    def Remove(*args): return _core.iEvent_Remove(*args)
    def RemoveAll(*args): return _core.iEvent_RemoveAll(*args)
    def GetAttributeIterator(*args): return _core.iEvent_GetAttributeIterator(*args)
    def RetrieveString(*args): return _core.iEvent_RetrieveString(*args)
    Mouse = _swig_property(_core.iEvent_Mouse_get)
    Joystick = _swig_property(_core.iEvent_Joystick_get)
    Command = _swig_property(_core.iEvent_Command_get)
    scfGetVersion = staticmethod(_core.iEvent_scfGetVersion)
    __swig_destroy__ = _core.delete_iEvent
    __del__ = lambda self : None;
    Name = property(GetName)

iEvent_swigregister = _core.iEvent_swigregister
iEvent_swigregister(iEvent)
iEvent_scfGetVersion = _core.iEvent_scfGetVersion

class iEventPlug(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetPotentiallyConflictingEvents(*args): return _core.iEventPlug_GetPotentiallyConflictingEvents(*args)
    def QueryEventPriority(*args): return _core.iEventPlug_QueryEventPriority(*args)
    def EnableEvents(*args): return _core.iEventPlug_EnableEvents(*args)
    scfGetVersion = staticmethod(_core.iEventPlug_scfGetVersion)
    __swig_destroy__ = _core.delete_iEventPlug
    __del__ = lambda self : None;
iEventPlug_swigregister = _core.iEventPlug_swigregister
iEventPlug_swigregister(iEventPlug)
iEventPlug_scfGetVersion = _core.iEventPlug_scfGetVersion

class iEventOutlet(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateEvent(*args): return _core.iEventOutlet_CreateEvent(*args)
    def Post(*args): return _core.iEventOutlet_Post(*args)
    def Key(*args): return _core.iEventOutlet_Key(*args)
    def Mouse(*args): return _core.iEventOutlet_Mouse(*args)
    def Joystick(*args): return _core.iEventOutlet_Joystick(*args)
    def Broadcast(*args): return _core.iEventOutlet_Broadcast(*args)
    def ImmediateBroadcast(*args): return _core.iEventOutlet_ImmediateBroadcast(*args)
    scfGetVersion = staticmethod(_core.iEventOutlet_scfGetVersion)
    __swig_destroy__ = _core.delete_iEventOutlet
    __del__ = lambda self : None;
iEventOutlet_swigregister = _core.iEventOutlet_swigregister
iEventOutlet_swigregister(iEventOutlet)
iEventOutlet_scfGetVersion = _core.iEventOutlet_scfGetVersion

class iEventCord(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Insert(*args): return _core.iEventCord_Insert(*args)
    def Remove(*args): return _core.iEventCord_Remove(*args)
    def GetPass(*args): return _core.iEventCord_GetPass(*args)
    def SetPass(*args): return _core.iEventCord_SetPass(*args)
    def GetName(*args): return _core.iEventCord_GetName(*args)
    __swig_destroy__ = _core.delete_iEventCord
    __del__ = lambda self : None;
iEventCord_swigregister = _core.iEventCord_swigregister
iEventCord_swigregister(iEventCord)

class csKeyEventHelper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetRawCode = staticmethod(_core.csKeyEventHelper_GetRawCode)
    GetCookedCode = staticmethod(_core.csKeyEventHelper_GetCookedCode)
    GetEventType = staticmethod(_core.csKeyEventHelper_GetEventType)
    GetAutoRepeat = staticmethod(_core.csKeyEventHelper_GetAutoRepeat)
    GetCharacterType = staticmethod(_core.csKeyEventHelper_GetCharacterType)
    GetEventData = staticmethod(_core.csKeyEventHelper_GetEventData)
    GetModifiersBits = staticmethod(_core.csKeyEventHelper_GetModifiersBits)
    GetModifiers = staticmethod(_core.csKeyEventHelper_GetModifiers)
    def __init__(self, *args): 
        this = _core.new_csKeyEventHelper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csKeyEventHelper
    __del__ = lambda self : None;
csKeyEventHelper_swigregister = _core.csKeyEventHelper_swigregister
csKeyEventHelper_swigregister(csKeyEventHelper)
csKeyEventHelper_GetRawCode = _core.csKeyEventHelper_GetRawCode
csKeyEventHelper_GetCookedCode = _core.csKeyEventHelper_GetCookedCode
csKeyEventHelper_GetEventType = _core.csKeyEventHelper_GetEventType
csKeyEventHelper_GetAutoRepeat = _core.csKeyEventHelper_GetAutoRepeat
csKeyEventHelper_GetCharacterType = _core.csKeyEventHelper_GetCharacterType
csKeyEventHelper_GetEventData = _core.csKeyEventHelper_GetEventData
csKeyEventHelper_GetModifiersBits = _core.csKeyEventHelper_GetModifiersBits
csKeyEventHelper_GetModifiers = _core.csKeyEventHelper_GetModifiers

class csMouseEventHelper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NewEvent = staticmethod(_core.csMouseEventHelper_NewEvent)
    GetEventType = staticmethod(_core.csMouseEventHelper_GetEventType)
    GetNumber = staticmethod(_core.csMouseEventHelper_GetNumber)
    GetX = staticmethod(_core.csMouseEventHelper_GetX)
    GetY = staticmethod(_core.csMouseEventHelper_GetY)
    GetAxis = staticmethod(_core.csMouseEventHelper_GetAxis)
    GetNumAxes = staticmethod(_core.csMouseEventHelper_GetNumAxes)
    GetButton = staticmethod(_core.csMouseEventHelper_GetButton)
    GetButtonState = staticmethod(_core.csMouseEventHelper_GetButtonState)
    GetButtonMask = staticmethod(_core.csMouseEventHelper_GetButtonMask)
    GetModifiers = staticmethod(_core.csMouseEventHelper_GetModifiers)
    GetEventData = staticmethod(_core.csMouseEventHelper_GetEventData)
    def __init__(self, *args): 
        this = _core.new_csMouseEventHelper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csMouseEventHelper
    __del__ = lambda self : None;
csMouseEventHelper_swigregister = _core.csMouseEventHelper_swigregister
csMouseEventHelper_swigregister(csMouseEventHelper)
csMouseEventHelper_NewEvent = _core.csMouseEventHelper_NewEvent
csMouseEventHelper_GetEventType = _core.csMouseEventHelper_GetEventType
csMouseEventHelper_GetNumber = _core.csMouseEventHelper_GetNumber
csMouseEventHelper_GetX = _core.csMouseEventHelper_GetX
csMouseEventHelper_GetY = _core.csMouseEventHelper_GetY
csMouseEventHelper_GetAxis = _core.csMouseEventHelper_GetAxis
csMouseEventHelper_GetNumAxes = _core.csMouseEventHelper_GetNumAxes
csMouseEventHelper_GetButton = _core.csMouseEventHelper_GetButton
csMouseEventHelper_GetButtonState = _core.csMouseEventHelper_GetButtonState
csMouseEventHelper_GetButtonMask = _core.csMouseEventHelper_GetButtonMask
csMouseEventHelper_GetModifiers = _core.csMouseEventHelper_GetModifiers
csMouseEventHelper_GetEventData = _core.csMouseEventHelper_GetEventData

class csJoystickEventHelper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NewEvent = staticmethod(_core.csJoystickEventHelper_NewEvent)
    GetNumber = staticmethod(_core.csJoystickEventHelper_GetNumber)
    GetAxis = staticmethod(_core.csJoystickEventHelper_GetAxis)
    GetNumAxes = staticmethod(_core.csJoystickEventHelper_GetNumAxes)
    GetButton = staticmethod(_core.csJoystickEventHelper_GetButton)
    GetButtonState = staticmethod(_core.csJoystickEventHelper_GetButtonState)
    GetButtonMask = staticmethod(_core.csJoystickEventHelper_GetButtonMask)
    GetModifiers = staticmethod(_core.csJoystickEventHelper_GetModifiers)
    GetEventData = staticmethod(_core.csJoystickEventHelper_GetEventData)
    def __init__(self, *args): 
        this = _core.new_csJoystickEventHelper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csJoystickEventHelper
    __del__ = lambda self : None;
csJoystickEventHelper_swigregister = _core.csJoystickEventHelper_swigregister
csJoystickEventHelper_swigregister(csJoystickEventHelper)
csJoystickEventHelper_NewEvent = _core.csJoystickEventHelper_NewEvent
csJoystickEventHelper_GetNumber = _core.csJoystickEventHelper_GetNumber
csJoystickEventHelper_GetAxis = _core.csJoystickEventHelper_GetAxis
csJoystickEventHelper_GetNumAxes = _core.csJoystickEventHelper_GetNumAxes
csJoystickEventHelper_GetButton = _core.csJoystickEventHelper_GetButton
csJoystickEventHelper_GetButtonState = _core.csJoystickEventHelper_GetButtonState
csJoystickEventHelper_GetButtonMask = _core.csJoystickEventHelper_GetButtonMask
csJoystickEventHelper_GetModifiers = _core.csJoystickEventHelper_GetModifiers
csJoystickEventHelper_GetEventData = _core.csJoystickEventHelper_GetEventData

class csInputEventHelper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    GetButton = staticmethod(_core.csInputEventHelper_GetButton)
    GetButtonState = staticmethod(_core.csInputEventHelper_GetButtonState)
    def __init__(self, *args): 
        this = _core.new_csInputEventHelper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csInputEventHelper
    __del__ = lambda self : None;
csInputEventHelper_swigregister = _core.csInputEventHelper_swigregister
csInputEventHelper_swigregister(csInputEventHelper)
csInputEventHelper_GetButton = _core.csInputEventHelper_GetButton
csInputEventHelper_GetButtonState = _core.csInputEventHelper_GetButtonState

class csCommandEventHelper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NewEvent = staticmethod(_core.csCommandEventHelper_NewEvent)
    GetCode = staticmethod(_core.csCommandEventHelper_GetCode)
    GetInfo = staticmethod(_core.csCommandEventHelper_GetInfo)
    GetEventData = staticmethod(_core.csCommandEventHelper_GetEventData)
    def __init__(self, *args): 
        this = _core.new_csCommandEventHelper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csCommandEventHelper
    __del__ = lambda self : None;
csCommandEventHelper_swigregister = _core.csCommandEventHelper_swigregister
csCommandEventHelper_swigregister(csCommandEventHelper)
csCommandEventHelper_NewEvent = _core.csCommandEventHelper_NewEvent
csCommandEventHelper_GetCode = _core.csCommandEventHelper_GetCode
csCommandEventHelper_GetInfo = _core.csCommandEventHelper_GetInfo
csCommandEventHelper_GetEventData = _core.csCommandEventHelper_GetEventData

RemoveWeakListener = _core.RemoveWeakListener
csKeyEventTypeUp = _core.csKeyEventTypeUp
csKeyEventTypeDown = _core.csKeyEventTypeDown
csMouseEventTypeMove = _core.csMouseEventTypeMove
csMouseEventTypeUp = _core.csMouseEventTypeUp
csMouseEventTypeDown = _core.csMouseEventTypeDown
csMouseEventTypeClick = _core.csMouseEventTypeClick
csMouseEventTypeDoubleClick = _core.csMouseEventTypeDoubleClick
csmbNone = _core.csmbNone
csmbLeft = _core.csmbLeft
csmbRight = _core.csmbRight
csmbMiddle = _core.csmbMiddle
csmbWheelUp = _core.csmbWheelUp
csmbWheelDown = _core.csmbWheelDown
csmbExtra1 = _core.csmbExtra1
csmbExtra2 = _core.csmbExtra2
csKeyModifierTypeShift = _core.csKeyModifierTypeShift
csKeyModifierTypeCtrl = _core.csKeyModifierTypeCtrl
csKeyModifierTypeAlt = _core.csKeyModifierTypeAlt
csKeyModifierTypeCapsLock = _core.csKeyModifierTypeCapsLock
csKeyModifierTypeNumLock = _core.csKeyModifierTypeNumLock
csKeyModifierTypeScrollLock = _core.csKeyModifierTypeScrollLock
csKeyModifierTypeLast = _core.csKeyModifierTypeLast
csKeyModifierNumLeft = _core.csKeyModifierNumLeft
csKeyModifierNumRight = _core.csKeyModifierNumRight
csKeyModifierNumAny = _core.csKeyModifierNumAny
class csKeyModifiers(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    modifiers = _swig_property(_core.csKeyModifiers_modifiers_get, _core.csKeyModifiers_modifiers_set)
    def __getitem__(*args): return _core.csKeyModifiers___getitem__(*args)
    def __init__(self, *args): 
        this = _core.new_csKeyModifiers(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csKeyModifiers
    __del__ = lambda self : None;
csKeyModifiers_swigregister = _core.csKeyModifiers_swigregister
csKeyModifiers_swigregister(csKeyModifiers)
RegisterWeakListener = _core.RegisterWeakListener

CSKEY_ESC = _core.CSKEY_ESC
CSKEY_ENTER = _core.CSKEY_ENTER
CSKEY_TAB = _core.CSKEY_TAB
CSKEY_BACKSPACE = _core.CSKEY_BACKSPACE
CSKEY_SPACE = _core.CSKEY_SPACE
CSKEY_SPECIAL_FIRST = _core.CSKEY_SPECIAL_FIRST
CSKEY_SPECIAL_LAST = _core.CSKEY_SPECIAL_LAST
CSKEY_UP = _core.CSKEY_UP
CSKEY_DOWN = _core.CSKEY_DOWN
CSKEY_LEFT = _core.CSKEY_LEFT
CSKEY_RIGHT = _core.CSKEY_RIGHT
CSKEY_PGUP = _core.CSKEY_PGUP
CSKEY_PGDN = _core.CSKEY_PGDN
CSKEY_HOME = _core.CSKEY_HOME
CSKEY_END = _core.CSKEY_END
CSKEY_INS = _core.CSKEY_INS
CSKEY_DEL = _core.CSKEY_DEL
CSKEY_CONTEXT = _core.CSKEY_CONTEXT
CSKEY_PRINTSCREEN = _core.CSKEY_PRINTSCREEN
CSKEY_PAUSE = _core.CSKEY_PAUSE
CSKEY_F1 = _core.CSKEY_F1
CSKEY_F2 = _core.CSKEY_F2
CSKEY_F3 = _core.CSKEY_F3
CSKEY_F4 = _core.CSKEY_F4
CSKEY_F5 = _core.CSKEY_F5
CSKEY_F6 = _core.CSKEY_F6
CSKEY_F7 = _core.CSKEY_F7
CSKEY_F8 = _core.CSKEY_F8
CSKEY_F9 = _core.CSKEY_F9
CSKEY_F10 = _core.CSKEY_F10
CSKEY_F11 = _core.CSKEY_F11
CSKEY_F12 = _core.CSKEY_F12
CSKEY_MODIFIER_FIRST = _core.CSKEY_MODIFIER_FIRST
CSKEY_MODIFIER_LAST = _core.CSKEY_MODIFIER_LAST
CSKEY_MODIFIERTYPE_SHIFT = _core.CSKEY_MODIFIERTYPE_SHIFT
CSKEY_PAD_FLAG = _core.CSKEY_PAD_FLAG
csKeyCharTypeNormal = _core.csKeyCharTypeNormal
csKeyCharTypeDead = _core.csKeyCharTypeDead
CSEVTYPE_Keyboard = _core.CSEVTYPE_Keyboard
CSEVTYPE_Mouse = _core.CSEVTYPE_Mouse
CSEVTYPE_Joystick = _core.CSEVTYPE_Joystick
class iEventQueue(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Process(*args): return _core.iEventQueue_Process(*args)
    def Dispatch(*args): return _core.iEventQueue_Dispatch(*args)
    def Subscribe(*args): return _core.iEventQueue_Subscribe(*args)
    def Unsubscribe(*args): return _core.iEventQueue_Unsubscribe(*args)
    def RegisterListener(*args): return _core.iEventQueue_RegisterListener(*args)
    def RemoveListener(*args): return _core.iEventQueue_RemoveListener(*args)
    def CreateEventOutlet(*args): return _core.iEventQueue_CreateEventOutlet(*args)
    def GetEventOutlet(*args): return _core.iEventQueue_GetEventOutlet(*args)
    def GetEventCord(*args): return _core.iEventQueue_GetEventCord(*args)
    def CreateEvent(*args): return _core.iEventQueue_CreateEvent(*args)
    def CreateBroadcastEvent(*args): return _core.iEventQueue_CreateBroadcastEvent(*args)
    def Post(*args): return _core.iEventQueue_Post(*args)
    def Get(*args): return _core.iEventQueue_Get(*args)
    def Clear(*args): return _core.iEventQueue_Clear(*args)
    def IsEmpty(*args): return _core.iEventQueue_IsEmpty(*args)
    def RemoveAllListeners(*args): return _core.iEventQueue_RemoveAllListeners(*args)
    scfGetVersion = staticmethod(_core.iEventQueue_scfGetVersion)
    __swig_destroy__ = _core.delete_iEventQueue
    __del__ = lambda self : None;
iEventQueue_swigregister = _core.iEventQueue_swigregister
iEventQueue_swigregister(iEventQueue)
iEventQueue_scfGetVersion = _core.iEventQueue_scfGetVersion

class iEventNameRegistry(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetID(*args): return _core.iEventNameRegistry_GetID(*args)
    def GetString(*args): return _core.iEventNameRegistry_GetString(*args)
    def GetParentID(*args): return _core.iEventNameRegistry_GetParentID(*args)
    def IsImmediateChildOf(*args): return _core.iEventNameRegistry_IsImmediateChildOf(*args)
    def IsKindOf(*args): return _core.iEventNameRegistry_IsKindOf(*args)
    scfGetVersion = staticmethod(_core.iEventNameRegistry_scfGetVersion)
    __swig_destroy__ = _core.delete_iEventNameRegistry
    __del__ = lambda self : None;
iEventNameRegistry_swigregister = _core.iEventNameRegistry_swigregister
iEventNameRegistry_swigregister(iEventNameRegistry)
iEventNameRegistry_scfGetVersion = _core.iEventNameRegistry_scfGetVersion

class csEventNameRegistry(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_csEventNameRegistry
    __del__ = lambda self : None;
    GetString = staticmethod(_core.csEventNameRegistry_GetString)
    def GetParentID(*args): return _core.csEventNameRegistry_GetParentID(*args)
    def IsImmediateChildOf(*args): return _core.csEventNameRegistry_IsImmediateChildOf(*args)
    GetRegistry = staticmethod(_core.csEventNameRegistry_GetRegistry)
    GetID = staticmethod(_core.csEventNameRegistry_GetID)
    IsKindOf = staticmethod(_core.csEventNameRegistry_IsKindOf)
csEventNameRegistry_swigregister = _core.csEventNameRegistry_swigregister
csEventNameRegistry_swigregister(csEventNameRegistry)
csEventNameRegistry_GetString = _core.csEventNameRegistry_GetString
csEventNameRegistry_GetRegistry = _core.csEventNameRegistry_GetRegistry
csEventNameRegistry_GetID = _core.csEventNameRegistry_GetID
csEventNameRegistry_IsKindOf = _core.csEventNameRegistry_IsKindOf

class iEventHandler(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HandleEvent(*args): return _core.iEventHandler_HandleEvent(*args)
    def GenericName(*args): return _core.iEventHandler_GenericName(*args)
    def GenericID(*args): return _core.iEventHandler_GenericID(*args)
    def GenericPrec(*args): return _core.iEventHandler_GenericPrec(*args)
    def GenericSucc(*args): return _core.iEventHandler_GenericSucc(*args)
    def InstancePrec(*args): return _core.iEventHandler_InstancePrec(*args)
    def InstanceSucc(*args): return _core.iEventHandler_InstanceSucc(*args)
    scfGetVersion = staticmethod(_core.iEventHandler_scfGetVersion)
    __swig_destroy__ = _core.delete_iEventHandler
    __del__ = lambda self : None;
iEventHandler_swigregister = _core.iEventHandler_swigregister
iEventHandler_swigregister(iEventHandler)
csevMouse = _core.csevMouse
csevMouseOp = _core.csevMouseOp
csevJoystick = _core.csevJoystick
csevJoystickOp = _core.csevJoystickOp
csevCanvasOp = _core.csevCanvasOp
iEventHandler_scfGetVersion = _core.iEventHandler_scfGetVersion

class iPluginIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _core.iPluginIterator_HasNext(*args)
    def Next(*args): return _core.iPluginIterator_Next(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    scfGetVersion = staticmethod(_core.iPluginIterator_scfGetVersion)
    __swig_destroy__ = _core.delete_iPluginIterator
    __del__ = lambda self : None;
iPluginIterator_swigregister = _core.iPluginIterator_swigregister
iPluginIterator_swigregister(iPluginIterator)
iPluginIterator_scfGetVersion = _core.iPluginIterator_scfGetVersion

class iPluginManager(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    lpiInitialize = _core.iPluginManager_lpiInitialize
    lpiReportErrors = _core.iPluginManager_lpiReportErrors
    lpiLoadDependencies = _core.iPluginManager_lpiLoadDependencies
    lpiReturnLoadedInstance = _core.iPluginManager_lpiReturnLoadedInstance
    def LoadPluginInstance(*args): return _core.iPluginManager_LoadPluginInstance(*args)
    def LoadPluginAlways(*args): return _core.iPluginManager_LoadPluginAlways(*args)
    def QueryPluginInstance(*args): return _core.iPluginManager_QueryPluginInstance(*args)
    def UnloadPluginInstance(*args): return _core.iPluginManager_UnloadPluginInstance(*args)
    def UnloadPlugin(*args): return _core.iPluginManager_UnloadPlugin(*args)
    def RegisterPluginInstance(*args): return _core.iPluginManager_RegisterPluginInstance(*args)
    def RegisterPlugin(*args): return _core.iPluginManager_RegisterPlugin(*args)
    def GetPluginInstances(*args): return _core.iPluginManager_GetPluginInstances(*args)
    def GetPlugins(*args): return _core.iPluginManager_GetPlugins(*args)
    def Clear(*args): return _core.iPluginManager_Clear(*args)
    def QueryOptions(*args): return _core.iPluginManager_QueryOptions(*args)
    def SetTagClassIDMapping(*args): return _core.iPluginManager_SetTagClassIDMapping(*args)
    def UnsetTagClassIDMapping(*args): return _core.iPluginManager_UnsetTagClassIDMapping(*args)
    def GetTagClassIDMapping(*args): return _core.iPluginManager_GetTagClassIDMapping(*args)
    def GetClassIDTags(*args): return _core.iPluginManager_GetClassIDTags(*args)
    def LoadTagPluginInstance(*args): return _core.iPluginManager_LoadTagPluginInstance(*args)
    def QueryTagPluginInstance(*args): return _core.iPluginManager_QueryTagPluginInstance(*args)
    def LoadPlugin(*args): return _core.iPluginManager_LoadPlugin(*args)
    scfGetVersion = staticmethod(_core.iPluginManager_scfGetVersion)
    __swig_destroy__ = _core.delete_iPluginManager
    __del__ = lambda self : None;
iPluginManager_swigregister = _core.iPluginManager_swigregister
iPluginManager_swigregister(iPluginManager)
iPluginManager_scfGetVersion = _core.iPluginManager_scfGetVersion

class scfObject(iObject):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def IncRef(*args): return _core.scfObject_IncRef(*args)
    def DecRef(*args): return _core.scfObject_DecRef(*args)
    def GetRefCount(*args): return _core.scfObject_GetRefCount(*args)
    def QueryInterface(*args): return _core.scfObject_QueryInterface(*args)
    def AddRefOwner(*args): return _core.scfObject_AddRefOwner(*args)
    def RemoveRefOwner(*args): return _core.scfObject_RemoveRefOwner(*args)
    def GetInterfaceMetadata(*args): return _core.scfObject_GetInterfaceMetadata(*args)
scfObject_swigregister = _core.scfObject_swigregister
scfObject_swigregister(scfObject)
csLoadPluginAlways = _core.csLoadPluginAlways

class csObject(scfObject,InternalRefCount):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csObject(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csObject
    __del__ = lambda self : None;
    def SetName(*args): return _core.csObject_SetName(*args)
    def GetName(*args): return _core.csObject_GetName(*args)
    def GetID(*args): return _core.csObject_GetID(*args)
    def SetObjectParent(*args): return _core.csObject_SetObjectParent(*args)
    def GetObjectParent(*args): return _core.csObject_GetObjectParent(*args)
    def ObjAdd(*args): return _core.csObject_ObjAdd(*args)
    def ObjRemove(*args): return _core.csObject_ObjRemove(*args)
    def ObjRemoveAll(*args): return _core.csObject_ObjRemoveAll(*args)
    def ObjAddChildren(*args): return _core.csObject_ObjAddChildren(*args)
    def GetChildByName(*args): return _core.csObject_GetChildByName(*args)
    def GetIterator(*args): return _core.csObject_GetIterator(*args)
    def AddNameChangeListener(*args): return _core.csObject_AddNameChangeListener(*args)
    def RemoveNameChangeListener(*args): return _core.csObject_RemoveNameChangeListener(*args)
    def ObjReleaseOld(*args): return _core.csObject_ObjReleaseOld(*args)
csObject_swigregister = _core.csObject_swigregister
csObject_swigregister(csObject)

MAX_OUTPUT_VERTICES = _core.MAX_OUTPUT_VERTICES
CS_CLIP_OUTSIDE = _core.CS_CLIP_OUTSIDE
CS_CLIP_CLIPPED = _core.CS_CLIP_CLIPPED
CS_CLIP_INSIDE = _core.CS_CLIP_INSIDE
class csVertexStatus(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Type = _swig_property(_core.csVertexStatus_Type_get, _core.csVertexStatus_Type_set)
    Vertex = _swig_property(_core.csVertexStatus_Vertex_get, _core.csVertexStatus_Vertex_set)
    Pos = _swig_property(_core.csVertexStatus_Pos_get, _core.csVertexStatus_Pos_set)
    def __init__(self, *args): 
        this = _core.new_csVertexStatus(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csVertexStatus
    __del__ = lambda self : None;
csVertexStatus_swigregister = _core.csVertexStatus_swigregister
csVertexStatus_swigregister(csVertexStatus)

CS_VERTEX_ORIGINAL = _core.CS_VERTEX_ORIGINAL
CS_VERTEX_ONEDGE = _core.CS_VERTEX_ONEDGE
CS_VERTEX_INSIDE = _core.CS_VERTEX_INSIDE
class iClipper2D(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Clip(*args): return _core.iClipper2D_Clip(*args)
    def ClipInPlace(*args): return _core.iClipper2D_ClipInPlace(*args)
    def ClassifyBox(*args): return _core.iClipper2D_ClassifyBox(*args)
    def IsInside(*args): return _core.iClipper2D_IsInside(*args)
    def GetVertexCount(*args): return _core.iClipper2D_GetVertexCount(*args)
    def GetClipPoly(*args): return _core.iClipper2D_GetClipPoly(*args)
    clipperPoly = _core.iClipper2D_clipperPoly
    clipperBox = _core.iClipper2D_clipperBox
    def GetClipperType(*args): return _core.iClipper2D_GetClipperType(*args)
    __swig_destroy__ = _core.delete_iClipper2D
    __del__ = lambda self : None;
iClipper2D_swigregister = _core.iClipper2D_swigregister
iClipper2D_swigregister(iClipper2D)

class iPath(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Length(*args): return _core.iPath_Length(*args)
    def CalculateAtTime(*args): return _core.iPath_CalculateAtTime(*args)
    def GetCurrentIndex(*args): return _core.iPath_GetCurrentIndex(*args)
    def SetPositionVectors(*args): return _core.iPath_SetPositionVectors(*args)
    def SetUpVectors(*args): return _core.iPath_SetUpVectors(*args)
    def SetForwardVectors(*args): return _core.iPath_SetForwardVectors(*args)
    def SetPositionVector(*args): return _core.iPath_SetPositionVector(*args)
    def SetUpVector(*args): return _core.iPath_SetUpVector(*args)
    def SetForwardVector(*args): return _core.iPath_SetForwardVector(*args)
    def GetPositionVector(*args): return _core.iPath_GetPositionVector(*args)
    def GetUpVector(*args): return _core.iPath_GetUpVector(*args)
    def GetForwardVector(*args): return _core.iPath_GetForwardVector(*args)
    def GetTime(*args): return _core.iPath_GetTime(*args)
    def SetTime(*args): return _core.iPath_SetTime(*args)
    def GetInterpolatedPosition(*args): return _core.iPath_GetInterpolatedPosition(*args)
    def GetInterpolatedUp(*args): return _core.iPath_GetInterpolatedUp(*args)
    def GetInterpolatedForward(*args): return _core.iPath_GetInterpolatedForward(*args)
    def QueryObject(*args): return _core.iPath_QueryObject(*args)
    scfGetVersion = staticmethod(_core.iPath_scfGetVersion)
    __swig_destroy__ = _core.delete_iPath
    __del__ = lambda self : None;
iPath_swigregister = _core.iPath_swigregister
iPath_swigregister(iPath)
iPath_scfGetVersion = _core.iPath_scfGetVersion

class scfPath(csObject,iPath):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def IncRef(*args): return _core.scfPath_IncRef(*args)
    def DecRef(*args): return _core.scfPath_DecRef(*args)
    def GetRefCount(*args): return _core.scfPath_GetRefCount(*args)
    def QueryInterface(*args): return _core.scfPath_QueryInterface(*args)
    def AddRefOwner(*args): return _core.scfPath_AddRefOwner(*args)
    def RemoveRefOwner(*args): return _core.scfPath_RemoveRefOwner(*args)
    def GetInterfaceMetadata(*args): return _core.scfPath_GetInterfaceMetadata(*args)
scfPath_swigregister = _core.scfPath_swigregister
scfPath_swigregister(scfPath)

CS_TRIMESH_CLOSED = _core.CS_TRIMESH_CLOSED
CS_TRIMESH_NOTCLOSED = _core.CS_TRIMESH_NOTCLOSED
CS_TRIMESH_CONVEX = _core.CS_TRIMESH_CONVEX
CS_TRIMESH_NOTCONVEX = _core.CS_TRIMESH_NOTCONVEX
CS_TRIMESH_DEFORMABLE = _core.CS_TRIMESH_DEFORMABLE
class iTriangleMesh(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetVertexCount(*args): return _core.iTriangleMesh_GetVertexCount(*args)
    def GetVertices(self):
      return CSMutableArrayHelper(self.GetVertexByIndex, self.GetVertexCount)


    def GetTriangleCount(*args): return _core.iTriangleMesh_GetTriangleCount(*args)
    def GetTriangles(self):
      return CSMutableArrayHelper(self.GetTriangleByIndex, self.GetTriangleCount)


    def Lock(*args): return _core.iTriangleMesh_Lock(*args)
    def Unlock(*args): return _core.iTriangleMesh_Unlock(*args)
    def GetFlags(*args): return _core.iTriangleMesh_GetFlags(*args)
    def GetChangeNumber(*args): return _core.iTriangleMesh_GetChangeNumber(*args)
    def GetVertexByIndex(*args): return _core.iTriangleMesh_GetVertexByIndex(*args)
    def GetTriangleByIndex(*args): return _core.iTriangleMesh_GetTriangleByIndex(*args)
    scfGetVersion = staticmethod(_core.iTriangleMesh_scfGetVersion)
    __swig_destroy__ = _core.delete_iTriangleMesh
    __del__ = lambda self : None;
iTriangleMesh_swigregister = _core.iTriangleMesh_swigregister
iTriangleMesh_swigregister(iTriangleMesh)
iTriangleMesh_scfGetVersion = _core.iTriangleMesh_scfGetVersion

csComposeNoChar = _core.csComposeNoChar
csComposeNormalChar = _core.csComposeNormalChar
csComposeComposedChar = _core.csComposeComposedChar
csComposeUncomposeable = _core.csComposeUncomposeable
class iKeyComposer(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HandleKey(*args): return _core.iKeyComposer_HandleKey(*args)
    def ResetState(*args): return _core.iKeyComposer_ResetState(*args)
    __swig_destroy__ = _core.delete_iKeyComposer
    __del__ = lambda self : None;
iKeyComposer_swigregister = _core.iKeyComposer_swigregister
iKeyComposer_swigregister(iKeyComposer)

class iKeyboardDriver(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Reset(*args): return _core.iKeyboardDriver_Reset(*args)
    def DoKey(*args): return _core.iKeyboardDriver_DoKey(*args)
    def GetModifierState(*args): return _core.iKeyboardDriver_GetModifierState(*args)
    def CreateKeyComposer(*args): return _core.iKeyboardDriver_CreateKeyComposer(*args)
    def SynthesizeCooked(*args): return _core.iKeyboardDriver_SynthesizeCooked(*args)
    def GetModifiersState(*args): return _core.iKeyboardDriver_GetModifiersState(*args)
    def GetKeyState(*args): return _core.iKeyboardDriver_GetKeyState(*args)
    scfGetVersion = staticmethod(_core.iKeyboardDriver_scfGetVersion)
    __swig_destroy__ = _core.delete_iKeyboardDriver
    __del__ = lambda self : None;
iKeyboardDriver_swigregister = _core.iKeyboardDriver_swigregister
iKeyboardDriver_swigregister(iKeyboardDriver)
iKeyboardDriver_scfGetVersion = _core.iKeyboardDriver_scfGetVersion

class iMouseDriver(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def SetDoubleClickTime(*args): return _core.iMouseDriver_SetDoubleClickTime(*args)
    def Reset(*args): return _core.iMouseDriver_Reset(*args)
    def GetLastX(*args): return _core.iMouseDriver_GetLastX(*args)
    def GetLastY(*args): return _core.iMouseDriver_GetLastY(*args)
    def GetLast(*args): return _core.iMouseDriver_GetLast(*args)
    def GetLastButton(*args): return _core.iMouseDriver_GetLastButton(*args)
    def DoButton(*args): return _core.iMouseDriver_DoButton(*args)
    def DoMotion(*args): return _core.iMouseDriver_DoMotion(*args)
    scfGetVersion = staticmethod(_core.iMouseDriver_scfGetVersion)
    __swig_destroy__ = _core.delete_iMouseDriver
    __del__ = lambda self : None;
iMouseDriver_swigregister = _core.iMouseDriver_swigregister
iMouseDriver_swigregister(iMouseDriver)
iMouseDriver_scfGetVersion = _core.iMouseDriver_scfGetVersion

class iJoystickDriver(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Reset(*args): return _core.iJoystickDriver_Reset(*args)
    def GetLast(*args): return _core.iJoystickDriver_GetLast(*args)
    def GetLastButton(*args): return _core.iJoystickDriver_GetLastButton(*args)
    def DoButton(*args): return _core.iJoystickDriver_DoButton(*args)
    def DoMotion(*args): return _core.iJoystickDriver_DoMotion(*args)
    scfGetVersion = staticmethod(_core.iJoystickDriver_scfGetVersion)
    __swig_destroy__ = _core.delete_iJoystickDriver
    __del__ = lambda self : None;
iJoystickDriver_swigregister = _core.iJoystickDriver_swigregister
iJoystickDriver_swigregister(iJoystickDriver)
iJoystickDriver_scfGetVersion = _core.iJoystickDriver_scfGetVersion

class iConfigFile(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetFileName(*args): return _core.iConfigFile_GetFileName(*args)
    def GetVFS(*args): return _core.iConfigFile_GetVFS(*args)
    def SetFileName(*args): return _core.iConfigFile_SetFileName(*args)
    def Load(*args): return _core.iConfigFile_Load(*args)
    def Save(*args): return _core.iConfigFile_Save(*args)
    def Clear(*args): return _core.iConfigFile_Clear(*args)
    def Enumerate(*args): return _core.iConfigFile_Enumerate(*args)
    def KeyExists(*args): return _core.iConfigFile_KeyExists(*args)
    def SubsectionExists(*args): return _core.iConfigFile_SubsectionExists(*args)
    def GetInt(*args): return _core.iConfigFile_GetInt(*args)
    def GetFloat(*args): return _core.iConfigFile_GetFloat(*args)
    def GetStr(*args): return _core.iConfigFile_GetStr(*args)
    def GetBool(*args): return _core.iConfigFile_GetBool(*args)
    def GetTuple(*args): return _core.iConfigFile_GetTuple(*args)
    def GetComment(*args): return _core.iConfigFile_GetComment(*args)
    def SetStr(*args): return _core.iConfigFile_SetStr(*args)
    def SetInt(*args): return _core.iConfigFile_SetInt(*args)
    def SetFloat(*args): return _core.iConfigFile_SetFloat(*args)
    def SetBool(*args): return _core.iConfigFile_SetBool(*args)
    def SetTuple(*args): return _core.iConfigFile_SetTuple(*args)
    def SetComment(*args): return _core.iConfigFile_SetComment(*args)
    def DeleteKey(*args): return _core.iConfigFile_DeleteKey(*args)
    def GetEOFComment(*args): return _core.iConfigFile_GetEOFComment(*args)
    def SetEOFComment(*args): return _core.iConfigFile_SetEOFComment(*args)
    scfGetVersion = staticmethod(_core.iConfigFile_scfGetVersion)
    __swig_destroy__ = _core.delete_iConfigFile
    __del__ = lambda self : None;
iConfigFile_swigregister = _core.iConfigFile_swigregister
iConfigFile_swigregister(iConfigFile)
iConfigFile_scfGetVersion = _core.iConfigFile_scfGetVersion

class iConfigIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetConfigFile(*args): return _core.iConfigIterator_GetConfigFile(*args)
    def GetSubsection(*args): return _core.iConfigIterator_GetSubsection(*args)
    def Rewind(*args): return _core.iConfigIterator_Rewind(*args)
    def Next(*args): return _core.iConfigIterator_Next(*args)
    def HasNext(*args): return _core.iConfigIterator_HasNext(*args)
    def GetKey(*args): return _core.iConfigIterator_GetKey(*args)
    def GetInt(*args): return _core.iConfigIterator_GetInt(*args)
    def GetFloat(*args): return _core.iConfigIterator_GetFloat(*args)
    def GetStr(*args): return _core.iConfigIterator_GetStr(*args)
    def GetBool(*args): return _core.iConfigIterator_GetBool(*args)
    def GetTuple(*args): return _core.iConfigIterator_GetTuple(*args)
    def GetComment(*args): return _core.iConfigIterator_GetComment(*args)
    scfGetVersion = staticmethod(_core.iConfigIterator_scfGetVersion)
    __swig_destroy__ = _core.delete_iConfigIterator
    __del__ = lambda self : None;
iConfigIterator_swigregister = _core.iConfigIterator_swigregister
iConfigIterator_swigregister(iConfigIterator)
iConfigIterator_scfGetVersion = _core.iConfigIterator_scfGetVersion

class iConfigManager(iConfigFile):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    PriorityMin = _core.iConfigManager_PriorityMin
    PriorityVeryLow = _core.iConfigManager_PriorityVeryLow
    PriorityLow = _core.iConfigManager_PriorityLow
    PriorityMedium = _core.iConfigManager_PriorityMedium
    PriorityHigh = _core.iConfigManager_PriorityHigh
    PriorityVeryHigh = _core.iConfigManager_PriorityVeryHigh
    PriorityMax = _core.iConfigManager_PriorityMax
    ConfigPriorityPlugin = _core.iConfigManager_ConfigPriorityPlugin
    ConfigPriorityApplication = _core.iConfigManager_ConfigPriorityApplication
    ConfigPriorityUserGlobal = _core.iConfigManager_ConfigPriorityUserGlobal
    ConfigPriorityUserApp = _core.iConfigManager_ConfigPriorityUserApp
    ConfigPriorityCmdLine = _core.iConfigManager_ConfigPriorityCmdLine
    def AddDomain(*args): return _core.iConfigManager_AddDomain(*args)
    def RemoveDomain(*args): return _core.iConfigManager_RemoveDomain(*args)
    def LookupDomain(*args): return _core.iConfigManager_LookupDomain(*args)
    def SetDomainPriority(*args): return _core.iConfigManager_SetDomainPriority(*args)
    def GetDomainPriority(*args): return _core.iConfigManager_GetDomainPriority(*args)
    def SetDynamicDomain(*args): return _core.iConfigManager_SetDynamicDomain(*args)
    def GetDynamicDomain(*args): return _core.iConfigManager_GetDynamicDomain(*args)
    def SetDynamicDomainPriority(*args): return _core.iConfigManager_SetDynamicDomainPriority(*args)
    def GetDynamicDomainPriority(*args): return _core.iConfigManager_GetDynamicDomainPriority(*args)
    def FlushRemoved(*args): return _core.iConfigManager_FlushRemoved(*args)
    scfGetVersion = staticmethod(_core.iConfigManager_scfGetVersion)
    __swig_destroy__ = _core.delete_iConfigManager
    __del__ = lambda self : None;
iConfigManager_swigregister = _core.iConfigManager_swigregister
iConfigManager_swigregister(iConfigManager)
iConfigManager_scfGetVersion = _core.iConfigManager_scfGetVersion

class iStringArray(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSize(*args): return _core.iStringArray_GetSize(*args)
    def Push(*args): return _core.iStringArray_Push(*args)
    def Pop(*args): return _core.iStringArray_Pop(*args)
    def Get(*args): return _core.iStringArray_Get(*args)
    def Find(*args): return _core.iStringArray_Find(*args)
    def FindCaseInsensitive(*args): return _core.iStringArray_FindCaseInsensitive(*args)
    def FindSortedKey(*args): return _core.iStringArray_FindSortedKey(*args)
    def Contains(*args): return _core.iStringArray_Contains(*args)
    def Sort(*args): return _core.iStringArray_Sort(*args)
    def DeleteIndex(*args): return _core.iStringArray_DeleteIndex(*args)
    def Insert(*args): return _core.iStringArray_Insert(*args)
    def Empty(*args): return _core.iStringArray_Empty(*args)
    def IsEmpty(*args): return _core.iStringArray_IsEmpty(*args)
    def Length (*args):
        print "iStringArray.Length() is deprecated, use iStringArray.GetSize() instead"
        return self.GetSize(*args)

    def DeleteAll (*args):
        print "iStringArray.DeleteAll() is deprecated, use iStringArray.Empty() instead"
        return self.Empty(*args)

    def __getitem__(*args): return _core.iStringArray___getitem__(*args)
    def __contains__(*args): return _core.iStringArray___contains__(*args)
    def __delitem__(*args): return _core.iStringArray___delitem__(*args)
    def __len__(*args): return _core.iStringArray___len__(*args)
    def append(*args): return _core.iStringArray_append(*args)
    def content_iterator(self):
            for idx in xrange(len(self)):
                    yield self.__getitem__(idx)
    def __iter__(self): return self.content_iterator()  
    scfGetVersion = staticmethod(_core.iStringArray_scfGetVersion)
    __swig_destroy__ = _core.delete_iStringArray
    __del__ = lambda self : None;
iStringArray_swigregister = _core.iStringArray_swigregister
iStringArray_swigregister(iStringArray)
iStringArray_scfGetVersion = _core.iStringArray_scfGetVersion

CS_NODE_DOCUMENT = _core.CS_NODE_DOCUMENT
CS_NODE_ELEMENT = _core.CS_NODE_ELEMENT
CS_NODE_COMMENT = _core.CS_NODE_COMMENT
CS_NODE_UNKNOWN = _core.CS_NODE_UNKNOWN
CS_NODE_TEXT = _core.CS_NODE_TEXT
CS_NODE_DECLARATION = _core.CS_NODE_DECLARATION
CS_CHANGEABLE_NEVER = _core.CS_CHANGEABLE_NEVER
CS_CHANGEABLE_NEWROOT = _core.CS_CHANGEABLE_NEWROOT
CS_CHANGEABLE_YES = _core.CS_CHANGEABLE_YES
class iDocumentAttributeIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _core.iDocumentAttributeIterator_HasNext(*args)
    def Next(*args): return _core.iDocumentAttributeIterator_Next(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    scfGetVersion = staticmethod(_core.iDocumentAttributeIterator_scfGetVersion)
    __swig_destroy__ = _core.delete_iDocumentAttributeIterator
    __del__ = lambda self : None;
iDocumentAttributeIterator_swigregister = _core.iDocumentAttributeIterator_swigregister
iDocumentAttributeIterator_swigregister(iDocumentAttributeIterator)
iDocumentAttributeIterator_scfGetVersion = _core.iDocumentAttributeIterator_scfGetVersion

class iDocumentAttribute(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetName(*args): return _core.iDocumentAttribute_GetName(*args)
    def GetValue(*args): return _core.iDocumentAttribute_GetValue(*args)
    def GetValueAsInt(*args): return _core.iDocumentAttribute_GetValueAsInt(*args)
    def GetValueAsFloat(*args): return _core.iDocumentAttribute_GetValueAsFloat(*args)
    def GetValueAsBool(*args): return _core.iDocumentAttribute_GetValueAsBool(*args)
    def SetName(*args): return _core.iDocumentAttribute_SetName(*args)
    def SetValue(*args): return _core.iDocumentAttribute_SetValue(*args)
    def SetValueAsInt(*args): return _core.iDocumentAttribute_SetValueAsInt(*args)
    def SetValueAsFloat(*args): return _core.iDocumentAttribute_SetValueAsFloat(*args)
    scfGetVersion = staticmethod(_core.iDocumentAttribute_scfGetVersion)
    __swig_destroy__ = _core.delete_iDocumentAttribute
    __del__ = lambda self : None;
iDocumentAttribute_swigregister = _core.iDocumentAttribute_swigregister
iDocumentAttribute_swigregister(iDocumentAttribute)
iDocumentAttribute_scfGetVersion = _core.iDocumentAttribute_scfGetVersion

class iDocumentNodeIterator(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def HasNext(*args): return _core.iDocumentNodeIterator_HasNext(*args)
    def Next(*args): return _core.iDocumentNodeIterator_Next(*args)
    def GetNextPosition(*args): return _core.iDocumentNodeIterator_GetNextPosition(*args)
    def GetEndPosition(*args): return _core.iDocumentNodeIterator_GetEndPosition(*args)
    def __iter__(self):
        while self.HasNext():
            yield self.Next() 
    scfGetVersion = staticmethod(_core.iDocumentNodeIterator_scfGetVersion)
    __swig_destroy__ = _core.delete_iDocumentNodeIterator
    __del__ = lambda self : None;
iDocumentNodeIterator_swigregister = _core.iDocumentNodeIterator_swigregister
iDocumentNodeIterator_swigregister(iDocumentNodeIterator)
iDocumentNodeIterator_scfGetVersion = _core.iDocumentNodeIterator_scfGetVersion

class iDocumentNode(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetType(*args): return _core.iDocumentNode_GetType(*args)
    def Equals(*args): return _core.iDocumentNode_Equals(*args)
    def GetValue(*args): return _core.iDocumentNode_GetValue(*args)
    def SetValue(*args): return _core.iDocumentNode_SetValue(*args)
    def SetValueAsInt(*args): return _core.iDocumentNode_SetValueAsInt(*args)
    def SetValueAsFloat(*args): return _core.iDocumentNode_SetValueAsFloat(*args)
    def GetParent(*args): return _core.iDocumentNode_GetParent(*args)
    def GetNodes(*args): return _core.iDocumentNode_GetNodes(*args)
    def GetNode(*args): return _core.iDocumentNode_GetNode(*args)
    def RemoveNode(*args): return _core.iDocumentNode_RemoveNode(*args)
    def RemoveNodes(*args): return _core.iDocumentNode_RemoveNodes(*args)
    def CreateNodeBefore(*args): return _core.iDocumentNode_CreateNodeBefore(*args)
    def GetContentsValue(*args): return _core.iDocumentNode_GetContentsValue(*args)
    def GetContentsValueAsInt(*args): return _core.iDocumentNode_GetContentsValueAsInt(*args)
    def GetContentsValueAsFloat(*args): return _core.iDocumentNode_GetContentsValueAsFloat(*args)
    def GetAttributes(*args): return _core.iDocumentNode_GetAttributes(*args)
    def GetAttribute(*args): return _core.iDocumentNode_GetAttribute(*args)
    def GetAttributeValue(*args): return _core.iDocumentNode_GetAttributeValue(*args)
    def GetAttributeValueAsInt(*args): return _core.iDocumentNode_GetAttributeValueAsInt(*args)
    def GetAttributeValueAsFloat(*args): return _core.iDocumentNode_GetAttributeValueAsFloat(*args)
    def GetAttributeValueAsBool(*args): return _core.iDocumentNode_GetAttributeValueAsBool(*args)
    def RemoveAttribute(*args): return _core.iDocumentNode_RemoveAttribute(*args)
    def RemoveAttributes(*args): return _core.iDocumentNode_RemoveAttributes(*args)
    def SetAttribute(*args): return _core.iDocumentNode_SetAttribute(*args)
    def SetAttributeAsInt(*args): return _core.iDocumentNode_SetAttributeAsInt(*args)
    def SetAttributeAsFloat(*args): return _core.iDocumentNode_SetAttributeAsFloat(*args)
    scfGetVersion = staticmethod(_core.iDocumentNode_scfGetVersion)
    __swig_destroy__ = _core.delete_iDocumentNode
    __del__ = lambda self : None;
iDocumentNode_swigregister = _core.iDocumentNode_swigregister
iDocumentNode_swigregister(iDocumentNode)
iDocumentNode_scfGetVersion = _core.iDocumentNode_scfGetVersion

class iDocument(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def Clear(*args): return _core.iDocument_Clear(*args)
    def CreateRoot(*args): return _core.iDocument_CreateRoot(*args)
    def GetRoot(*args): return _core.iDocument_GetRoot(*args)
    def Parse(*args): return _core.iDocument_Parse(*args)
    def Changeable(*args): return _core.iDocument_Changeable(*args)
    def Write(*args): return _core.iDocument_Write(*args)
    scfGetVersion = staticmethod(_core.iDocument_scfGetVersion)
    __swig_destroy__ = _core.delete_iDocument
    __del__ = lambda self : None;
iDocument_swigregister = _core.iDocument_swigregister
iDocument_swigregister(iDocument)
iDocument_scfGetVersion = _core.iDocument_scfGetVersion

class iDocumentSystem(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def CreateDocument(*args): return _core.iDocumentSystem_CreateDocument(*args)
    scfGetVersion = staticmethod(_core.iDocumentSystem_scfGetVersion)
    __swig_destroy__ = _core.delete_iDocumentSystem
    __del__ = lambda self : None;
iDocumentSystem_swigregister = _core.iDocumentSystem_swigregister
iDocumentSystem_swigregister(iDocumentSystem)
iDocumentSystem_scfGetVersion = _core.iDocumentSystem_scfGetVersion

class scfConfigFile(iConfigFile):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def IncRef(*args): return _core.scfConfigFile_IncRef(*args)
    def DecRef(*args): return _core.scfConfigFile_DecRef(*args)
    def GetRefCount(*args): return _core.scfConfigFile_GetRefCount(*args)
    def QueryInterface(*args): return _core.scfConfigFile_QueryInterface(*args)
    def AddRefOwner(*args): return _core.scfConfigFile_AddRefOwner(*args)
    def RemoveRefOwner(*args): return _core.scfConfigFile_RemoveRefOwner(*args)
    def GetInterfaceMetadata(*args): return _core.scfConfigFile_GetInterfaceMetadata(*args)
scfConfigFile_swigregister = _core.scfConfigFile_swigregister
scfConfigFile_swigregister(scfConfigFile)

class csConfigFile(scfConfigFile):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_csConfigFile
    __del__ = lambda self : None;
    def IsEmpty(*args): return _core.csConfigFile_IsEmpty(*args)
    def GetFileName(*args): return _core.csConfigFile_GetFileName(*args)
    def GetVFS(*args): return _core.csConfigFile_GetVFS(*args)
    def SetFileName(*args): return _core.csConfigFile_SetFileName(*args)
    def Load(*args): return _core.csConfigFile_Load(*args)
    def LoadFromBuffer(*args): return _core.csConfigFile_LoadFromBuffer(*args)
    def Save(*args): return _core.csConfigFile_Save(*args)
    def Clear(*args): return _core.csConfigFile_Clear(*args)
    def Enumerate(*args): return _core.csConfigFile_Enumerate(*args)
    def KeyExists(*args): return _core.csConfigFile_KeyExists(*args)
    def SubsectionExists(*args): return _core.csConfigFile_SubsectionExists(*args)
    def GetInt(*args): return _core.csConfigFile_GetInt(*args)
    def GetFloat(*args): return _core.csConfigFile_GetFloat(*args)
    def GetStr(*args): return _core.csConfigFile_GetStr(*args)
    def GetBool(*args): return _core.csConfigFile_GetBool(*args)
    def GetTuple(*args): return _core.csConfigFile_GetTuple(*args)
    def GetComment(*args): return _core.csConfigFile_GetComment(*args)
    def SetStr(*args): return _core.csConfigFile_SetStr(*args)
    def SetInt(*args): return _core.csConfigFile_SetInt(*args)
    def SetFloat(*args): return _core.csConfigFile_SetFloat(*args)
    def SetBool(*args): return _core.csConfigFile_SetBool(*args)
    def SetTuple(*args): return _core.csConfigFile_SetTuple(*args)
    def SetComment(*args): return _core.csConfigFile_SetComment(*args)
    def DeleteKey(*args): return _core.csConfigFile_DeleteKey(*args)
    def SetEOFComment(*args): return _core.csConfigFile_SetEOFComment(*args)
    def GetEOFComment(*args): return _core.csConfigFile_GetEOFComment(*args)
    def ParseCommandLine(*args): return _core.csConfigFile_ParseCommandLine(*args)
csConfigFile_swigregister = _core.csConfigFile_swigregister
csConfigFile_swigregister(csConfigFile)

class csRadixSorter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csRadixSorter(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csRadixSorter
    __del__ = lambda self : None;
    def Sort(*args): return _core.csRadixSorter_Sort(*args)
    def GetRanks(*args): return _core.csRadixSorter_GetRanks(*args)
csRadixSorter_swigregister = _core.csRadixSorter_swigregister
csRadixSorter_swigregister(csRadixSorter)

class csTinyDocumentSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csTinyDocumentSystem(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csTinyDocumentSystem
    __del__ = lambda self : None;
    def CreateDocument(*args): return _core.csTinyDocumentSystem_CreateDocument(*args)
csTinyDocumentSystem_swigregister = _core.csTinyDocumentSystem_swigregister
csTinyDocumentSystem_swigregister(csTinyDocumentSystem)

class iDataBuffer(iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def GetSize(*args): return _core.iDataBuffer_GetSize(*args)
    def GetData(*args): return _core.iDataBuffer_GetData(*args)
    def asString(*args): return _core.iDataBuffer_asString(*args)
    def GetUint8(*args): return _core.iDataBuffer_GetUint8(*args)
    def AsBuffer(*args): return _core.iDataBuffer_AsBuffer(*args)
    scfGetVersion = staticmethod(_core.iDataBuffer_scfGetVersion)
    __swig_destroy__ = _core.delete_iDataBuffer
    __del__ = lambda self : None;
iDataBuffer_swigregister = _core.iDataBuffer_swigregister
iDataBuffer_swigregister(iDataBuffer)
iDataBuffer_scfGetVersion = _core.iDataBuffer_scfGetVersion

CSKEY_SHIFT_NUM = _core.CSKEY_SHIFT_NUM
CSKEY_CTRL_NUM = _core.CSKEY_CTRL_NUM
CSKEY_ALT_NUM = _core.CSKEY_ALT_NUM
CSKEY_SPECIAL = _core.CSKEY_SPECIAL
CSKEY_SPECIAL_NUM = _core.CSKEY_SPECIAL_NUM
CSKEY_MODIFIER = _core.CSKEY_MODIFIER
CS_IS_KEYBOARD_EVENT = _core.CS_IS_KEYBOARD_EVENT
CS_IS_MOUSE_EVENT = _core.CS_IS_MOUSE_EVENT
CS_IS_JOYSTICK_EVENT = _core.CS_IS_JOYSTICK_EVENT
CS_IS_INPUT_EVENT = _core.CS_IS_INPUT_EVENT
csevAllEvents = _core.csevAllEvents
csevFrame = _core.csevFrame
csevInput = _core.csevInput
csevQuit = _core.csevQuit
csevCanvasClose = _core.csevCanvasClose
csevCanvasExposed = _core.csevCanvasExposed
csevCanvasHidden = _core.csevCanvasHidden
csevCanvasResize = _core.csevCanvasResize
csevFocusChanged = _core.csevFocusChanged
csevFocusGained = _core.csevFocusGained
csevFocusLost = _core.csevFocusLost
csevKeyboardEvent = _core.csevKeyboardEvent
csevKeyboardDown = _core.csevKeyboardDown
csevKeyboardUp = _core.csevKeyboardUp
csevMouseEvent = _core.csevMouseEvent
csevMouseButton = _core.csevMouseButton
csevMouseUp = _core.csevMouseUp
csevMouseDown = _core.csevMouseDown
csevMouseClick = _core.csevMouseClick
csevMouseDoubleClick = _core.csevMouseDoubleClick
csevMouseMove = _core.csevMouseMove
csevJoystickEvent = _core.csevJoystickEvent
class csEventHandlerRegistry(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csEventHandlerRegistry(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csEventHandlerRegistry
    __del__ = lambda self : None;
    GetGenericID = staticmethod(_core.csEventHandlerRegistry_GetGenericID)
    GetGenericPreBoundID = staticmethod(_core.csEventHandlerRegistry_GetGenericPreBoundID)
    GetGenericPostBoundID = staticmethod(_core.csEventHandlerRegistry_GetGenericPostBoundID)
    RegisterID = staticmethod(_core.csEventHandlerRegistry_RegisterID)
    GetID = staticmethod(_core.csEventHandlerRegistry_GetID)
    ReleaseID = staticmethod(_core.csEventHandlerRegistry_ReleaseID)
    GetHandler = staticmethod(_core.csEventHandlerRegistry_GetHandler)
    IsInstanceOf = staticmethod(_core.csEventHandlerRegistry_IsInstanceOf)
    IsInstance = staticmethod(_core.csEventHandlerRegistry_IsInstance)
    GetGeneric = staticmethod(_core.csEventHandlerRegistry_GetGeneric)
    GetString = staticmethod(_core.csEventHandlerRegistry_GetString)
    GetRegistry = staticmethod(_core.csEventHandlerRegistry_GetRegistry)
csEventHandlerRegistry_swigregister = _core.csEventHandlerRegistry_swigregister
csEventHandlerRegistry_swigregister(csEventHandlerRegistry)
csEventHandlerRegistry_GetGenericID = _core.csEventHandlerRegistry_GetGenericID
csEventHandlerRegistry_GetGenericPreBoundID = _core.csEventHandlerRegistry_GetGenericPreBoundID
csEventHandlerRegistry_GetGenericPostBoundID = _core.csEventHandlerRegistry_GetGenericPostBoundID
csEventHandlerRegistry_RegisterID = _core.csEventHandlerRegistry_RegisterID
csEventHandlerRegistry_GetID = _core.csEventHandlerRegistry_GetID
csEventHandlerRegistry_ReleaseID = _core.csEventHandlerRegistry_ReleaseID
csEventHandlerRegistry_GetHandler = _core.csEventHandlerRegistry_GetHandler
csEventHandlerRegistry_IsInstanceOf = _core.csEventHandlerRegistry_IsInstanceOf
csEventHandlerRegistry_IsInstance = _core.csEventHandlerRegistry_IsInstance
csEventHandlerRegistry_GetGeneric = _core.csEventHandlerRegistry_GetGeneric
csEventHandlerRegistry_GetString = _core.csEventHandlerRegistry_GetString
csEventHandlerRegistry_GetRegistry = _core.csEventHandlerRegistry_GetRegistry

class iFrameEventSignpost(iEventHandler):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _core.delete_iFrameEventSignpost
    __del__ = lambda self : None;
    def InstancePrec(*args): return _core.iFrameEventSignpost_InstancePrec(*args)
    def InstanceSucc(*args): return _core.iFrameEventSignpost_InstanceSucc(*args)
    def HandleEvent(*args): return _core.iFrameEventSignpost_HandleEvent(*args)
iFrameEventSignpost_swigregister = _core.iFrameEventSignpost_swigregister
iFrameEventSignpost_swigregister(iFrameEventSignpost)

class FrameSignpost_Logic3D(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    StaticHandlerName = staticmethod(_core.FrameSignpost_Logic3D_StaticHandlerName)
    StaticID = staticmethod(_core.FrameSignpost_Logic3D_StaticID)
    def GenericName(*args): return _core.FrameSignpost_Logic3D_GenericName(*args)
    def GenericID(*args): return _core.FrameSignpost_Logic3D_GenericID(*args)
    def GenericPrec(*args): return _core.FrameSignpost_Logic3D_GenericPrec(*args)
    def GenericSucc(*args): return _core.FrameSignpost_Logic3D_GenericSucc(*args)
    __swig_destroy__ = _core.delete_FrameSignpost_Logic3D
    __del__ = lambda self : None;
FrameSignpost_Logic3D_swigregister = _core.FrameSignpost_Logic3D_swigregister
FrameSignpost_Logic3D_swigregister(FrameSignpost_Logic3D)
FrameSignpost_Logic3D_StaticHandlerName = _core.FrameSignpost_Logic3D_StaticHandlerName
FrameSignpost_Logic3D_StaticID = _core.FrameSignpost_Logic3D_StaticID

class FrameSignpost_3D2D(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    StaticHandlerName = staticmethod(_core.FrameSignpost_3D2D_StaticHandlerName)
    StaticID = staticmethod(_core.FrameSignpost_3D2D_StaticID)
    def GenericName(*args): return _core.FrameSignpost_3D2D_GenericName(*args)
    def GenericID(*args): return _core.FrameSignpost_3D2D_GenericID(*args)
    def GenericPrec(*args): return _core.FrameSignpost_3D2D_GenericPrec(*args)
    def GenericSucc(*args): return _core.FrameSignpost_3D2D_GenericSucc(*args)
    __swig_destroy__ = _core.delete_FrameSignpost_3D2D
    __del__ = lambda self : None;
FrameSignpost_3D2D_swigregister = _core.FrameSignpost_3D2D_swigregister
FrameSignpost_3D2D_swigregister(FrameSignpost_3D2D)
FrameSignpost_3D2D_StaticHandlerName = _core.FrameSignpost_3D2D_StaticHandlerName
FrameSignpost_3D2D_StaticID = _core.FrameSignpost_3D2D_StaticID

class FrameSignpost_2DConsole(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    StaticHandlerName = staticmethod(_core.FrameSignpost_2DConsole_StaticHandlerName)
    StaticID = staticmethod(_core.FrameSignpost_2DConsole_StaticID)
    def GenericName(*args): return _core.FrameSignpost_2DConsole_GenericName(*args)
    def GenericID(*args): return _core.FrameSignpost_2DConsole_GenericID(*args)
    def GenericPrec(*args): return _core.FrameSignpost_2DConsole_GenericPrec(*args)
    def GenericSucc(*args): return _core.FrameSignpost_2DConsole_GenericSucc(*args)
    __swig_destroy__ = _core.delete_FrameSignpost_2DConsole
    __del__ = lambda self : None;
FrameSignpost_2DConsole_swigregister = _core.FrameSignpost_2DConsole_swigregister
FrameSignpost_2DConsole_swigregister(FrameSignpost_2DConsole)
FrameSignpost_2DConsole_StaticHandlerName = _core.FrameSignpost_2DConsole_StaticHandlerName
FrameSignpost_2DConsole_StaticID = _core.FrameSignpost_2DConsole_StaticID

class FrameSignpost_ConsoleDebug(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    StaticHandlerName = staticmethod(_core.FrameSignpost_ConsoleDebug_StaticHandlerName)
    StaticID = staticmethod(_core.FrameSignpost_ConsoleDebug_StaticID)
    def GenericName(*args): return _core.FrameSignpost_ConsoleDebug_GenericName(*args)
    def GenericID(*args): return _core.FrameSignpost_ConsoleDebug_GenericID(*args)
    def GenericPrec(*args): return _core.FrameSignpost_ConsoleDebug_GenericPrec(*args)
    def GenericSucc(*args): return _core.FrameSignpost_ConsoleDebug_GenericSucc(*args)
    __swig_destroy__ = _core.delete_FrameSignpost_ConsoleDebug
    __del__ = lambda self : None;
FrameSignpost_ConsoleDebug_swigregister = _core.FrameSignpost_ConsoleDebug_swigregister
FrameSignpost_ConsoleDebug_swigregister(FrameSignpost_ConsoleDebug)
FrameSignpost_ConsoleDebug_StaticHandlerName = _core.FrameSignpost_ConsoleDebug_StaticHandlerName
FrameSignpost_ConsoleDebug_StaticID = _core.FrameSignpost_ConsoleDebug_StaticID

class FrameSignpost_DebugFrame(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    StaticHandlerName = staticmethod(_core.FrameSignpost_DebugFrame_StaticHandlerName)
    StaticID = staticmethod(_core.FrameSignpost_DebugFrame_StaticID)
    def GenericName(*args): return _core.FrameSignpost_DebugFrame_GenericName(*args)
    def GenericID(*args): return _core.FrameSignpost_DebugFrame_GenericID(*args)
    def GenericPrec(*args): return _core.FrameSignpost_DebugFrame_GenericPrec(*args)
    def GenericSucc(*args): return _core.FrameSignpost_DebugFrame_GenericSucc(*args)
    __swig_destroy__ = _core.delete_FrameSignpost_DebugFrame
    __del__ = lambda self : None;
FrameSignpost_DebugFrame_swigregister = _core.FrameSignpost_DebugFrame_swigregister
FrameSignpost_DebugFrame_swigregister(FrameSignpost_DebugFrame)
FrameSignpost_DebugFrame_StaticHandlerName = _core.FrameSignpost_DebugFrame_StaticHandlerName
FrameSignpost_DebugFrame_StaticID = _core.FrameSignpost_DebugFrame_StaticID

class FrameBegin3DDraw(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_FrameBegin3DDraw(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_FrameBegin3DDraw
    __del__ = lambda self : None;
    def HandleEvent(*args): return _core.FrameBegin3DDraw_HandleEvent(*args)
    StaticHandlerName = staticmethod(_core.FrameBegin3DDraw_StaticHandlerName)
    StaticID = staticmethod(_core.FrameBegin3DDraw_StaticID)
    def GenericName(*args): return _core.FrameBegin3DDraw_GenericName(*args)
    def GenericID(*args): return _core.FrameBegin3DDraw_GenericID(*args)
    def InstancePrec(*args): return _core.FrameBegin3DDraw_InstancePrec(*args)
    def InstanceSucc(*args): return _core.FrameBegin3DDraw_InstanceSucc(*args)
    def GenericPrec(*args): return _core.FrameBegin3DDraw_GenericPrec(*args)
    def GenericSucc(*args): return _core.FrameBegin3DDraw_GenericSucc(*args)
FrameBegin3DDraw_swigregister = _core.FrameBegin3DDraw_swigregister
FrameBegin3DDraw_swigregister(FrameBegin3DDraw)
FrameBegin3DDraw_StaticHandlerName = _core.FrameBegin3DDraw_StaticHandlerName
FrameBegin3DDraw_StaticID = _core.FrameBegin3DDraw_StaticID

class FramePrinter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_FramePrinter(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_FramePrinter
    __del__ = lambda self : None;
    def HandleEvent(*args): return _core.FramePrinter_HandleEvent(*args)
    StaticHandlerName = staticmethod(_core.FramePrinter_StaticHandlerName)
    StaticID = staticmethod(_core.FramePrinter_StaticID)
    def GenericName(*args): return _core.FramePrinter_GenericName(*args)
    def GenericID(*args): return _core.FramePrinter_GenericID(*args)
    def InstancePrec(*args): return _core.FramePrinter_InstancePrec(*args)
    def InstanceSucc(*args): return _core.FramePrinter_InstanceSucc(*args)
    def GenericPrec(*args): return _core.FramePrinter_GenericPrec(*args)
    def GenericSucc(*args): return _core.FramePrinter_GenericSucc(*args)
FramePrinter_swigregister = _core.FramePrinter_swigregister
FramePrinter_swigregister(FramePrinter)
FramePrinter_StaticHandlerName = _core.FramePrinter_StaticHandlerName
FramePrinter_StaticID = _core.FramePrinter_StaticID

CS_LOAD_PLUGIN_ALWAYS = _core.CS_LOAD_PLUGIN_ALWAYS
CS_QUERY_REGISTRY = _core.CS_QUERY_REGISTRY
CS_QUERY_REGISTRY_TAG_INTERFACE = _core.CS_QUERY_REGISTRY_TAG_INTERFACE
SCF_QUERY_INTERFACE = _core.SCF_QUERY_INTERFACE
SCF_QUERY_INTERFACE_SAFE = _core.SCF_QUERY_INTERFACE_SAFE
CS_QUERY_PLUGIN_CLASS = _core.CS_QUERY_PLUGIN_CLASS
CS_LOAD_PLUGIN = _core.CS_LOAD_PLUGIN
CS_GET_CHILD_OBJECT = _core.CS_GET_CHILD_OBJECT
CS_GET_NAMED_CHILD_OBJECT = _core.CS_GET_NAMED_CHILD_OBJECT
CS_GET_FIRST_NAMED_CHILD_OBJECT = _core.CS_GET_FIRST_NAMED_CHILD_OBJECT
class csPyEventPlugParent(iEventPlug):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def IncRef(*args): return _core.csPyEventPlugParent_IncRef(*args)
    def DecRef(*args): return _core.csPyEventPlugParent_DecRef(*args)
    def GetRefCount(*args): return _core.csPyEventPlugParent_GetRefCount(*args)
    def QueryInterface(*args): return _core.csPyEventPlugParent_QueryInterface(*args)
    def AddRefOwner(*args): return _core.csPyEventPlugParent_AddRefOwner(*args)
    def RemoveRefOwner(*args): return _core.csPyEventPlugParent_RemoveRefOwner(*args)
    def GetInterfaceMetadata(*args): return _core.csPyEventPlugParent_GetInterfaceMetadata(*args)
csPyEventPlugParent_swigregister = _core.csPyEventPlugParent_swigregister
csPyEventPlugParent_swigregister(csPyEventPlugParent)

class csPyEventPlug(csPyEventPlugParent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new_csPyEventPlug(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete_csPyEventPlug
    __del__ = lambda self : None;
    def GetPotentiallyConflictingEvents(*args): return _core.csPyEventPlug_GetPotentiallyConflictingEvents(*args)
    def QueryEventPriority(*args): return _core.csPyEventPlug_QueryEventPriority(*args)
csPyEventPlug_swigregister = _core.csPyEventPlug_swigregister
csPyEventPlug_swigregister(csPyEventPlug)

class csPyEventHandlerParent(iEventHandler):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def IncRef(*args): return _core.csPyEventHandlerParent_IncRef(*args)
    def DecRef(*args): return _core.csPyEventHandlerParent_DecRef(*args)
    def GetRefCount(*args): return _core.csPyEventHandlerParent_GetRefCount(*args)
    def QueryInterface(*args): return _core.csPyEventHandlerParent_QueryInterface(*args)
    def AddRefOwner(*args): return _core.csPyEventHandlerParent_AddRefOwner(*args)
    def RemoveRefOwner(*args): return _core.csPyEventHandlerParent_RemoveRefOwner(*args)
    def GetInterfaceMetadata(*args): return _core.csPyEventHandlerParent_GetInterfaceMetadata(*args)
csPyEventHandlerParent_swigregister = _core.csPyEventHandlerParent_swigregister
csPyEventHandlerParent_swigregister(csPyEventHandlerParent)

class _csPyEventHandler(csPyEventHandlerParent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _core.new__csPyEventHandler(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _core.delete__csPyEventHandler
    __del__ = lambda self : None;
    def HandleEvent(*args): return _core._csPyEventHandler_HandleEvent(*args)
    StaticHandlerName = staticmethod(_core._csPyEventHandler_StaticHandlerName)
    StaticID = staticmethod(_core._csPyEventHandler_StaticID)
    def GenericName(*args): return _core._csPyEventHandler_GenericName(*args)
    def GenericID(*args): return _core._csPyEventHandler_GenericID(*args)
    def GenericPrec(*args): return _core._csPyEventHandler_GenericPrec(*args)
    def GenericSucc(*args): return _core._csPyEventHandler_GenericSucc(*args)
    def InstancePrec(*args): return _core._csPyEventHandler_InstancePrec(*args)
    def InstanceSucc(*args): return _core._csPyEventHandler_InstanceSucc(*args)
_csPyEventHandler_swigregister = _core._csPyEventHandler_swigregister
_csPyEventHandler_swigregister(_csPyEventHandler)
_csPyEventHandler_StaticHandlerName = _core._csPyEventHandler_StaticHandlerName
_csPyEventHandler_StaticID = _core._csPyEventHandler_StaticID

class csPyEventHandler (_csPyEventHandler):
  """Python version of iEventHandler implementation.
     This class can be used as base class for event handlers in Python.
     Call csPyEventHandler.__init__(self) in __init__ of derived class.
  """
  def __init__ (self):
    _csPyEventHandler.__init__(self, self)

class _EventHandlerFuncWrapper (csPyEventHandler):
  def __init__ (self, func):
    csPyEventHandler.__init__(self)
    self._func = func
    # Make sure a reference keeps to this wrapper instance.
    self._func._cs_event_handler_wrapper = self
  def HandleEvent (self, event):
    return self._func(event)
def _csInitializer_SetupEventHandler (reg, obj,
    eventids=None):
  """Replacement of C++ versions."""
  if callable(obj):
    # obj is a function
    hdlr = _EventHandlerFuncWrapper(obj)
    hdlr.thisown = 1
  else:
    # assume it is a iEventHandler
    hdlr = obj
  if eventids==None:
    eventids=[csevFrame(reg), csevInput(reg), csevKeyboardEvent(reg), \
              csevMouseEvent(reg), csevQuit(reg), CS_EVENTLIST_END]
  return csInitializer._SetupEventHandler(reg, hdlr, eventids)

csInitializer.SetupEventHandler = \
  staticmethod(_csInitializer_SetupEventHandler)

def csevCommandLineHelp(reg):
  csEventNameRegistry.GetID(reg, "crystalspace.application.commandlinehelp")

csInvalidStringID = ~0 # we want stringids as unsigned long
CS_EVENTLIST_END = csInvalidStringID

def _csInitializer_RequestPlugins (reg, plugins):
  """Replacement of C++ version."""
  def _get_tuple (x):
    if callable(x):
      return tuple(x())
    else:
      return tuple(x)
  requests = csPluginRequestArray()
  for cls, intf, ident, ver in map(
      lambda x: _get_tuple(x), plugins):
    requests.Push(csPluginRequest(
      cls, intf, ident, ver))
  return csInitializer._RequestPlugins(reg, requests)

csInitializer.RequestPlugins = staticmethod(_csInitializer_RequestPlugins)

def _csInitializer_CreateEnvironment (*args):
  oreg = csInitializer._CreateEnvironment(*args)
  SyncSCFPointers()
  return oreg
csInitializer.CreateEnvironment = staticmethod(_csInitializer_CreateEnvironment)

def _csInitializer_InitializeSCF (*args):
  res = _core.csInitializer__InitializeSCF(*args)
  SyncSCFPointers()
  return res
csInitializer.InitializeSCF = staticmethod(_csInitializer_CreateEnvironment)


corecvar = cvar
def CS_REQUEST_PLUGIN (name, intf):
  return (name, intf.__name__, 
     corecvar.iSCF_SCF.GetInterfaceID(intf.__name__),intf.scfGetVersion())
def CS_REQUEST_PLUGIN_TAG (name, intf, tag):
  return (name+":"+tag, intf.__name__, 
     corecvar.iSCF_SCF.GetInterfaceID(intf.__name__),intf.scfGetVersion())
def CS_REQUEST_VFS ():
  return CS_REQUEST_PLUGIN("crystalspace.kernel.vfs", iVFS)
def CS_REQUEST_LEVELSAVER ():
  return CS_REQUEST_PLUGIN("crystalspace.level.saver", iSaver)
def CS_REQUEST_REPORTER ():
  return CS_REQUEST_PLUGIN("crystalspace.utilities.reporter", iReporter)

class CSMutableArrayHelper:
  def __init__(self, getFunc, lenFunc):
    self.getFunc = getFunc
    self.lenFunc = lenFunc

  def __len__(self):
    return self.lenFunc()

  def __getitem__(self, key):
    if type(key) != type(0):
      raise TypeError()
    arrlen = self.lenFunc()
    if key < 0 or key >= arrlen:
      raise IndexError('Length is ' + str(arrlen) + ', you asked for ' +
        str(key))
    return self.getFunc(key)
  def content_iterator(self):
    for idx in xrange(len(self)):
      yield self.__getitem__(idx)
  def __iter__(self): return self.content_iterator() 
  # We do not implement __setitem__ because the only legal action is to
  #  overwrite the object at the given location.  (The contents of the
  #  array are mutable, but the array is a single allocation of a single
  #  type.)  Callers should be using the contained objects' own
  #  __setitem__ or mutation methods.

  # We do not implement __delitem__ because we cannot delete items.

csReport = csReporterHelper.Report
_csmodules = []
def AddSCFLink(csmodule):
    """Add a callback to set SCF pointer from a module"""
    _csmodules.append(csmodule)
    csmodule(corecvar.iSCF_SCF)
def SyncSCFPointers():
    """Sync the SCF pointers for all registered modules"""
    for csmodule in _csmodules:
        csmodule(corecvar.iSCF_SCF)
def SetSCFPointer(scf_pointer):
    """Set SCF Pointer to all CrystalSpace modules"""
    SetCoreSCFPointer(scf_pointer)
    SyncSCFPointers()
def GetSCFPointer():
    """Get SCF Pointer"""
    return corecvar.iSCF_SCF



