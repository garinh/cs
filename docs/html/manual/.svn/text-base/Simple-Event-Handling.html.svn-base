<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html401/loose.dtd">
<html>
<!-- Created by texi2html 1.76 -->
<!--
Written by: Lionel Cons <Lionel.Cons@cern.ch> (original author)
            Karl Berry  <karl@freefriends.org>
            Olaf Bachmann <obachman@mathematik.uni-kl.de>
            and many others.
Maintained by: Many creative people <dev@texi2html.cvshome.org>
Send bugs and suggestions to <users@texi2html.cvshome.org>

-->
<head>
<title>Crystal Space 1.9.0: 4.2.1.2 Event Handling</title>

<meta name="description" content="Crystal Space 1.9.0: 4.2.1.2 Event Handling">
<meta name="keywords" content="Crystal Space 1.9.0: 4.2.1.2 Event Handling">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="texi2html 1.76">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
pre.display {font-family: serif}
pre.format {font-family: serif}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: serif; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: serif; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.sansserif {font-family:sans-serif; font-weight:normal;}
ul.toc {list-style: none}
-->
</style>


</head>

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">

<a name="Simple-Event-Handling"></a>
<a name="0"></a>
<table cellpadding="1" cellspacing="1" border="0">
<tr><td valign="middle" align="left">[<a href="Simple-Header-File.html#0" title="Previous section in reading order"> &lt; </a>]</td>
<td valign="middle" align="left">[<a href="Simple-World.html#0" title="Next section in reading order"> &gt; </a>]</td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left">[<a href="Using-Crystal-Space.html#0" title="Beginning of this chapter or previous chapter"> &lt;&lt; </a>]</td>
<td valign="middle" align="left">[<a href="Tutorial-Simple.html#0" title="Up section"> Up </a>]</td>
<td valign="middle" align="left">[<a href="Working-with-Engine-Content.html#0" title="Next chapter"> &gt;&gt; </a>]</td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left">[<a href="index.html#SEC_Top" title="Cover (top) of document">Top</a>]</td>
<td valign="middle" align="left">[<a href="cs_toc.html#SEC_Contents" title="Table of contents">Contents</a>]</td>
<td valign="middle" align="left">[<a href="cs_Index.html#0" title="Index">Index</a>]</td>
<td valign="middle" align="left">[<a href="cs_abt.html#SEC_About" title="About (help)"> ? </a>]</td>
</tr></table>
<hr size="1">
<h4 class="subsubsection"> 4.2.1.2 Event Handling </h4>

<p>To make the testing somewhat easier we will add a way to terminate the
application by responding to the <kbd>ESC</kbd> key.  Add the following private
method to our class in <tt>&lsquo;simple.h&rsquo;</tt>:
</p>
<table><tr><td>&nbsp;</td><td><pre class="example">bool OnKeyboard (iEvent&amp;);
</pre></td></tr></table>
<p>The function <code>OnKeyboard()</code> will be called when an event arrives
Add the following code to <tt>&lsquo;simple.cpp&rsquo;</tt> just before
<code>Simple::OnInitialize()</code>:
</p>
<table><tr><td>&nbsp;</td><td><pre class="example">bool Simple::OnKeyboard(iEvent&amp; ev)
{
  csKeyEventType eventtype = csKeyEventHelper::GetEventType(&amp;ev);
  if (eventtype == csKeyEventTypeDown)
  {
    utf32_char code = csKeyEventHelper::GetCookedCode(&amp;ev);
    if (code == CSKEY_ESC)
    {
      csRef&lt;iEventQueue&gt; q =
        csQueryRegistry&lt;iEventQueue&gt; (GetObjectRegistry());
      if (q.IsValid()) q-&gt;GetEventOutlet()-&gt;Broadcast(csevQuit (
      	GetObjectRegistry ()));
    }
  }
  return false;
}
</pre></td></tr></table>
<p><code>OnKeyboard()</code> checks if the <kbd>ESC</kbd> key has been pressed. If so it
uses the object registry to find the global event queue object. Using
<code>Broadcast()</code> it then broadcasts the <samp>&lsquo;csevQuit&rsquo;</samp> message
to all interested parties. This will cause the application to quit by
terminating the run-loop.
</p>
<hr size="1">
<p>
 <font size="-1">
  This document was generated using <a href="http://texi2html.cvshome.org/"><em>texi2html 1.76</em></a>.
 </font>
 <br>

</p>
</body>
</html>
