<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html401/loose.dtd">
<html>
<!-- Created by texi2html 1.76 -->
<!--
Written by: Lionel Cons <Lionel.Cons@cern.ch> (original author)
            Karl Berry  <karl@freefriends.org>
            Olaf Bachmann <obachman@mathematik.uni-kl.de>
            and many others.
Maintained by: Many creative people <dev@texi2html.cvshome.org>
Send bugs and suggestions to <users@texi2html.cvshome.org>

-->
<head>
<title>Crystal Space 1.9.0: 4.20.3 Creating an External Application using KDevelop</title>

<meta name="description" content="Crystal Space 1.9.0: 4.20.3 Creating an External Application using KDevelop">
<meta name="keywords" content="Crystal Space 1.9.0: 4.20.3 Creating an External Application using KDevelop">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="texi2html 1.76">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
pre.display {font-family: serif}
pre.format {font-family: serif}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: serif; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: serif; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.sansserif {font-family:sans-serif; font-weight:normal;}
ul.toc {list-style: none}
-->
</style>


</head>

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">

<a name="HOWTO-Creating-External-Application-Using-KDevelop"></a>
<a name="0"></a>
<table cellpadding="1" cellspacing="1" border="0">
<tr><td valign="middle" align="left">[<a href="HOWTO-Creating-External-MSVC-Application.html#0" title="Previous section in reading order"> &lt; </a>]</td>
<td valign="middle" align="left">[<a href="HOWTO-CS-Project-DevCPP.html#0" title="Next section in reading order"> &gt; </a>]</td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left">[<a href="Using-Crystal-Space.html#0" title="Beginning of this chapter or previous chapter"> &lt;&lt; </a>]</td>
<td valign="middle" align="left">[<a href="Making-Own-Projects.html#0" title="Up section"> Up </a>]</td>
<td valign="middle" align="left">[<a href="Working-with-Engine-Content.html#0" title="Next chapter"> &gt;&gt; </a>]</td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left">[<a href="index.html#SEC_Top" title="Cover (top) of document">Top</a>]</td>
<td valign="middle" align="left">[<a href="cs_toc.html#SEC_Contents" title="Table of contents">Contents</a>]</td>
<td valign="middle" align="left">[<a href="cs_Index.html#0" title="Index">Index</a>]</td>
<td valign="middle" align="left">[<a href="cs_abt.html#SEC_About" title="About (help)"> ? </a>]</td>
</tr></table>
<hr size="1">
<h3 class="subsection"> 4.20.3 Creating an External Application using KDevelop </h3>

<p><em>Written by Andreas Busch, <a href="mailto:nobita@t-online.de">nobita@t-online.de</a>.  Last updated
1 April 2004.</em>
</p>
<p>This <small>HOWTO</small> is a step by step guide for creating a Crystal Space
application using KDevelop as your integrated development environment outside
the Crystal Space source tree.
</p>
<a name="1"></a>
<h4 class="subsubheading"> KDevelop External Step 1 </h4>

<p>Open KDevelop and click on <em>New</em> from the <em>Project</em> menu.  The
KDevelop Application Wizard offers you special settings for the creation of
dedicated <small>GNOME</small> or <small>KDE</small>/Qt applications, but the selection
<em>Terminal-C++</em> is usually sufficient for creating a new Crystal Space
project (i.e. using OpenGL).
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap0.jpg" alt="usingcs/ownprojects/kdevproj/snap0">
</p>
<a name="2"></a>
<h4 class="subsubheading"> KDevelop External Step 2 </h4>

<p>In the <em>Generate settings</em> dialog enter the <em>Project name</em> as well as
the <em>Project directory</em> for your project files outside the Crystal Space
tree.  When you mark the checkbox <em>generate sources and headers</em> the Hello
World <tt>&lsquo;main.cpp&rsquo;</tt> and <tt>&lsquo;main.h&rsquo;</tt> files are generated which can be used
if you want to start from scratch.  If you want to import source files to start
with, leave it unchecked.  The <em><small>GNU</small>-Standard-Files</em> option copies the
General Public License file <tt>&lsquo;COPYING&rsquo;</tt> a dummy <tt>&lsquo;README&rsquo;</tt> and
<tt>&lsquo;INSTALL&rsquo;</tt> file into the project tree.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap1.jpg" alt="usingcs/ownprojects/kdevproj/snap1">
</p>
<p>Click <em>Next</em> and you will next be confronted with another dialog box.
</p>
<a name="3"></a>
<h4 class="subsubheading"> KDevelop External Step 3 </h4>

<p>If you want <em>Version Control Support</em> you can select <em><small>SVN</small></em> now
and fill the required fields according to your <small>SVN</small> environment, otherwise
leave it set to <em><small>NONE</small></em>.
</p>
<p>The <em>Next</em> two pages are header templates for header <tt>&lsquo;.h&rsquo;</tt> and source
<tt>&lsquo;.cpp&rsquo;</tt> files.  Click <em>Next</em> when you're done here.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap2.jpg" alt="usingcs/ownprojects/kdevproj/snap2">
</p>
<p>Now an almost empty window appears and you should click on <em>Create</em> to run
an automake.  After that you can click on <em>Exit</em> and do the relevant parts
for using KDevelop with Crystal Space.
</p>
<a name="4"></a>
<h4 class="subsubheading"> KDevelop External Step 4 </h4>

<p>Click on <em>Options</em> in the <em>Project</em> menu and select <em>Compiler
Options</em>.  <em>Add</em> a new <em>Configuration</em> and call it
<em>CrystalSpace</em>, then make sure to set the path back to the correct
<em>Build Directoy</em>.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap3.jpg" alt="usingcs/ownprojects/kdevproj/snap3">
</p>
<a name="5"></a>
<h4 class="subsubheading"> KDevelop External Step 5 </h4>

<p>When you installed Crystal Space, the script <tt>&lsquo;cs-config&rsquo;</tt> should have been
placed in the <tt>&lsquo;bin/&rsquo;</tt> installation directory, and this directory should be
mentioned by your <samp>&lsquo;PATH&rsquo;</samp> environment variable,so that you can invoke
<tt>&lsquo;cs-config&rsquo;</tt> as you would any other program simply by typing its name.  If
you did not install Crystal Space, then you may want to copy <tt>&lsquo;cs-config&rsquo;</tt>
into the top directory of your new project, or alter your <samp>&lsquo;PATH&rsquo;</samp> variable
so that it points at the directory containing <tt>&lsquo;cs-config&rsquo;</tt> (the Crystal
Space build directory, for instance).  In the examples below which invoke
<tt>&lsquo;cs-config&rsquo;</tt>, be sure to include the backticks in the fields
<em><small>CFLAGS</small></em> and <em><small>CXXFLAGS</small></em> in the <em>Flags and Warnings</em>
tab for the <tt>&lsquo;cs-config&rsquo;</tt> script to be executed properly, otherwise you will
get an error message that your C-compiler cannot create executables.  The
<em><small>CFLAGS</small></em> field should contain <samp>&lsquo;`./cs-config --cflags`&rsquo;</samp>, and
<em><small>CXXFLAGS</small></em> should contain <samp>&lsquo;`./cs-config --cxxflags`&rsquo;</samp>.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap4.jpg" alt="usingcs/ownprojects/kdevproj/snap4">
</p>
<a name="6"></a>
<h4 class="subsubheading"> KDevelop External Step 6 </h4>

<p>The same applies to the field <em>Additional flags</em> in the <em>Linker
Flags</em> tab.  After <samp>&lsquo;`cs-config --libs`&rsquo;</samp> you may add the Crystal Space
primary library <tt>&lsquo;crystalspace&rsquo;</tt>;
thus, the entire content of the <em>Additional flags</em> field might be
<samp>&lsquo;`./cs-config --libs crystalspace`&rsquo;</samp>.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap5.jpg" alt="usingcs/ownprojects/kdevproj/snap5">
</p>
<a name="7"></a>
<h4 class="subsubheading"> KDevelop External Step 7 </h4>

<p>Now over to the <em>Linker Options</em>.  Include your additional libraries here
as needed.  Many platforms will require <samp>&lsquo;-lpthread&rsquo;</samp> in this field.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap6.jpg" alt="usingcs/ownprojects/kdevproj/snap6">
</p>
<a name="8"></a>
<h4 class="subsubheading"> KDevelop External Step 8 </h4>

<p>In the <em>Make Options</em> dialog you need to set the include directory for
Crystal Space.  Don't forget the backticks for automatic execution upon build.
The <em>additional options</em> field should contain
<code>-I`./cs-config --includedir`</code>.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap7.jpg" alt="usingcs/ownprojects/kdevproj/snap7">
</p>
<p>Click on <em><small>OK</small></em> and the configure will re-run.
</p>
<p>In the <em>Compile Configuration</em> you can now change from <em>(Default)</em> to
<em>CrystalSpace</em> to set your compiler options.  If you want to compile for
different target platforms or optimized processor-types you can invoke
<em>Configure</em> in the <em>Build</em> menu with different arguments.  For
example, <samp>&lsquo;--host=i686-linux --build=i686-linux --target=i686-linux&rsquo;</samp>,
instead of the <samp>&lsquo;i386-linux&rsquo;</samp> default in KDevelop.  Of course, you can
choose other platforms as well.
</p>
<p><img src="usingcs/ownprojects/kdevproj/snap8.jpg" alt="usingcs/ownprojects/kdevproj/snap8">
</p>
<a name="9"></a>
<h4 class="subsubheading"> KDevelop External Step 9 </h4>

<p>In the <em>Project</em> menu you can now <em>Add existing File(s)</em> to your
project.  Select the <tt>&lsquo;simple1.cpp&rsquo;</tt> and <tt>&lsquo;simple1.h&rsquo;</tt> files from the
Crystal Space code tree and add them to your project destination directory.
You may want to uncheck the <code>insert templates</code> box to keep the files
unmodified.
</p>
<p>These files can be found within the Crystal Space source code tree at the
following location:
</p>

<p><tt>&lsquo;CS/apps/tutorial/simple1&rsquo;</tt>
</p>
<p>Alternately, you can type in your own Crystal Space program, but for the sake
of this tutorial, using the existing <tt>&lsquo;simple1&rsquo;</tt> application is easier.
</p>
<p>The resulting KDevelop project session file <tt>&lsquo;kdevelopcs.kdevses&rsquo;</tt> will look
like this.  (You do not need to edit this file by hand; it is shown here for
illustrative purposes only.)
</p>
<table><tr><td>&nbsp;</td><td><pre class="example">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE KDevPrjSession&gt;
&lt;KDevPrjSession&gt;
 &lt;CompileConfigs&gt;
  &lt;CrystalSpace&gt;
   &lt;Architecture&gt;i386&lt;/Architecture&gt;
   &lt;Platform&gt;linux&lt;/Platform&gt;
   &lt;VPATHSubdir&gt;/compile/kdevelopcs&lt;/VPATHSubdir&gt;
   &lt;CFLAGS&gt;`./cs-config --cflags`&lt;/CFLAGS&gt;
   &lt;CPPFLAGS&gt;&lt;/CPPFLAGS&gt;
   &lt;CXXFLAGS&gt;-O0 -g3 -Wall&lt;/CXXFLAGS&gt;
   &lt;AdditCXXFLAGS&gt;`./cs-config --cxxflags`&lt;/AdditCXXFLAGS&gt;
   &lt;LDFLAGS&gt;`./cs-config --libs crystalspace`&lt;/LDFLAGS&gt;
   &lt;ConfigureArgs&gt;--build=i386-linux --host=i386-linux \
    --target=i386-linux&lt;/ConfigureArgs&gt;
  &lt;/CrystalSpace&gt;
 &lt;/CompileConfigs&gt;
 &lt;LastCompileConfig&gt;CrystalSpace&lt;/LastCompileConfig&gt;
 &lt;Mainframe MaximizeMode=&quot;1&quot; /&gt;
 &lt;DocsAndViews NumberOfDocuments=&quot;1&quot; &gt;
  &lt;Doc0 CursorPosLine=&quot;0&quot; Type=&quot;KWriteDoc&quot; NumberOfViews=&quot;1&quot; \
   CursorPosCol=&quot;0&quot; FileName=&quot;/compile/kdevelopcs/kdevelopcs/main.cpp&quot; &gt;
   &lt;View0 Top=&quot;0&quot; Width=&quot;406&quot; Attach=&quot;1&quot; Height=&quot;328&quot; Left=&quot;0&quot; \
    Focus=&quot;1&quot; Type=&quot;KWriteView&quot; MinMaxMode=&quot;2&quot; /&gt;
  &lt;/Doc0&gt;
 &lt;/DocsAndViews&gt;
&lt;/KDevPrjSession&gt;
</pre></td></tr></table>
<p>The following is the content of the KDevelop project file
<tt>&lsquo;kdevelopcs.kdevprj&rsquo;</tt>.  (Keep in mind that this file is created and updated
automatically by KDevelop, so you do not need to manually change this file
either.)
</p>
<table><tr><td>&nbsp;</td><td><pre class="example">[AUTHORS]
dist=true
install=false
install_location=
type=DATA

[COPYING]
dist=true
install=false
install_location=
type=DATA

[ChangeLog]
dist=true
install=false
install_location=
type=DATA

[Config for BinMakefileAm]
bin_program=kdevelopcs
cxxflags=-O0 -g3 -Wall
ldadd=-lpthread
ldflags=

[General]
AMChanged=false
author=Some Body
configure_args=
email=some.body@some.where
execute_args=-video=opengl
kdevprj_version=1.3
lfv_open_groups=
make_options=-j1 -I/usr/local/include/crystalspace
makefiles=Makefile.am,kdevelopcs/Makefile.am, \
kdevelopcs/docs/Makefile.am,kdevelopcs/docs/en/Makefile.am
modifyMakefiles=true
project_name=KDevelopCS
project_type=normal_cpp
sgml_file=/compile/kdevelopcs/kdevelopcs/docs/en/index.sgml
short_info=
sub_dir=kdevelopcs/
version=0.1
version_control=None

[INSTALL]
dist=true
install=false
install_location=
type=DATA

[LFV Groups]
GNU=AUTHORS,COPYING,ChangeLog,INSTALL,README,TODO,NEWS
Headers=*.h,*.hh,*.hxx,*.hpp,*.H
Others=*
Sources=*.cpp,*.c,*.cc,*.C,*.cxx,*.ec,*.ecpp,*.lxx,*.l++,*.ll,*.l
groups=Headers,Sources,GNU,Others

[Makefile.am]
files=kdevelopcs.kdevprj,admin,AUTHORS,COPYING,ChangeLog, \
INSTALL,README,TODO,kdevelopcs.lsm
sub_dirs=kdevelopcs
type=normal

[README]
dist=true
install=false
install_location=
type=DATA

[TODO]
dist=true
install=false
install_location=
type=DATA

[admin]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs.kdevprj]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs.lsm]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/Makefile.am]
files=kdevelopcs/simple1.cpp,kdevelopcs/simple1.h
sub_dirs=docs
type=prog_main

[kdevelopcs/docs/Makefile.am]
sub_dirs=en
type=normal

[kdevelopcs/docs/en/Makefile.am]
files=kdevelopcs/docs/en/index.html,kdevelopcs/docs/en/index-1.html, \
 kdevelopcs/docs/en/index-2.html,kdevelopcs/docs/en/index-3.html, \
 kdevelopcs/docs/en/index-4.html,kdevelopcs/docs/en/index-5.html, \
 kdevelopcs/docs/en/index-6.html
sub_dirs=
type=normal

[kdevelopcs/docs/en/index-1.html]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/docs/en/index-2.html]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/docs/en/index-3.html]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/docs/en/index-4.html]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/docs/en/index-5.html]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/docs/en/index-6.html]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/docs/en/index.html]
dist=true
install=false
install_location=
type=DATA

[kdevelopcs/simple1.cpp]
dist=true
install=false
install_location=
type=SOURCE

[kdevelopcs/simple1.h]
dist=true
install=false
install_location=
type=HEADER
</pre></td></tr></table>
<p>That is all there is to it.  Select <em>Make</em> from the <em>Build</em> menu, see
your application correctly building, and do a test launch with <em>Execute</em>
or <em>Execute with arguments</em> if you want to add <code>-video=opengl</code> for
OpenGL rendering.
</p>
<hr size="1">
<table cellpadding="1" cellspacing="1" border="0">
<tr><td valign="middle" align="left">[<a href="HOWTO-Creating-External-MSVC-Application.html#0" title="Previous section in reading order"> &lt; </a>]</td>
<td valign="middle" align="left">[<a href="HOWTO-CS-Project-DevCPP.html#0" title="Next section in reading order"> &gt; </a>]</td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left">[<a href="Using-Crystal-Space.html#0" title="Beginning of this chapter or previous chapter"> &lt;&lt; </a>]</td>
<td valign="middle" align="left">[<a href="Making-Own-Projects.html#0" title="Up section"> Up </a>]</td>
<td valign="middle" align="left">[<a href="Working-with-Engine-Content.html#0" title="Next chapter"> &gt;&gt; </a>]</td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left"> &nbsp; </td>
<td valign="middle" align="left">[<a href="index.html#SEC_Top" title="Cover (top) of document">Top</a>]</td>
<td valign="middle" align="left">[<a href="cs_toc.html#SEC_Contents" title="Table of contents">Contents</a>]</td>
<td valign="middle" align="left">[<a href="cs_Index.html#0" title="Index">Index</a>]</td>
<td valign="middle" align="left">[<a href="cs_abt.html#SEC_About" title="About (help)"> ? </a>]</td>
</tr></table>
<p>
 <font size="-1">
  This document was generated using <a href="http://texi2html.cvshome.org/"><em>texi2html 1.76</em></a>.
 </font>
 <br>

</p>
</body>
</html>
